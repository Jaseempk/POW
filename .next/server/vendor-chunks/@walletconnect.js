/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect";
exports.ids = ["vendor-chunks/@walletconnect"];
exports.modules = {

/***/ "(ssr)/./node_modules/@walletconnect/core/dist/index.es.js":
/*!***********************************************************!*\
  !*** ./node_modules/@walletconnect/core/dist/index.es.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CORE_CONTEXT: () => (/* binding */ ne),\n/* harmony export */   CORE_DEFAULT: () => (/* binding */ Xe),\n/* harmony export */   CORE_PROTOCOL: () => (/* binding */ be),\n/* harmony export */   CORE_STORAGE_OPTIONS: () => (/* binding */ Ze),\n/* harmony export */   CORE_STORAGE_PREFIX: () => (/* binding */ O),\n/* harmony export */   CORE_VERSION: () => (/* binding */ fe),\n/* harmony export */   CRYPTO_CLIENT_SEED: () => (/* binding */ _e),\n/* harmony export */   CRYPTO_CONTEXT: () => (/* binding */ Qe),\n/* harmony export */   CRYPTO_JWT_TTL: () => (/* binding */ et),\n/* harmony export */   Core: () => (/* binding */ On),\n/* harmony export */   Crypto: () => (/* binding */ Wt),\n/* harmony export */   ECHO_CONTEXT: () => (/* binding */ St),\n/* harmony export */   ECHO_URL: () => (/* binding */ Pt),\n/* harmony export */   EVENTS_CLIENT_API_URL: () => (/* binding */ At),\n/* harmony export */   EVENTS_STORAGE_CLEANUP_INTERVAL: () => (/* binding */ Ot),\n/* harmony export */   EVENTS_STORAGE_CONTEXT: () => (/* binding */ xt),\n/* harmony export */   EVENTS_STORAGE_VERSION: () => (/* binding */ Rt),\n/* harmony export */   EVENT_CLIENT_AUTHENTICATE_ERRORS: () => (/* binding */ Rs),\n/* harmony export */   EVENT_CLIENT_AUTHENTICATE_TRACES: () => (/* binding */ Ps),\n/* harmony export */   EVENT_CLIENT_CONTEXT: () => (/* binding */ Ts),\n/* harmony export */   EVENT_CLIENT_PAIRING_ERRORS: () => (/* binding */ M),\n/* harmony export */   EVENT_CLIENT_PAIRING_TRACES: () => (/* binding */ z),\n/* harmony export */   EVENT_CLIENT_SESSION_ERRORS: () => (/* binding */ Ss),\n/* harmony export */   EVENT_CLIENT_SESSION_TRACES: () => (/* binding */ Cs),\n/* harmony export */   EXPIRER_CONTEXT: () => (/* binding */ Et),\n/* harmony export */   EXPIRER_DEFAULT_TTL: () => (/* binding */ ws),\n/* harmony export */   EXPIRER_EVENTS: () => (/* binding */ R),\n/* harmony export */   EXPIRER_STORAGE_VERSION: () => (/* binding */ vt),\n/* harmony export */   EchoClient: () => (/* binding */ gi),\n/* harmony export */   EventClient: () => (/* binding */ Di),\n/* harmony export */   Expirer: () => (/* binding */ li),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ ft),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ P),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ _t),\n/* harmony export */   JsonRpcHistory: () => (/* binding */ hi),\n/* harmony export */   KEYCHAIN_CONTEXT: () => (/* binding */ tt),\n/* harmony export */   KEYCHAIN_STORAGE_VERSION: () => (/* binding */ it),\n/* harmony export */   KeyChain: () => (/* binding */ Jt),\n/* harmony export */   MESSAGES_CONTEXT: () => (/* binding */ st),\n/* harmony export */   MESSAGES_STORAGE_VERSION: () => (/* binding */ rt),\n/* harmony export */   MessageTracker: () => (/* binding */ Xt),\n/* harmony export */   PAIRING_CONTEXT: () => (/* binding */ mt),\n/* harmony export */   PAIRING_DEFAULT_TTL: () => (/* binding */ vs),\n/* harmony export */   PAIRING_EVENTS: () => (/* binding */ q),\n/* harmony export */   PAIRING_RPC_OPTS: () => (/* binding */ j),\n/* harmony export */   PAIRING_STORAGE_VERSION: () => (/* binding */ bt),\n/* harmony export */   PENDING_SUB_RESOLUTION_TIMEOUT: () => (/* binding */ Dt),\n/* harmony export */   PUBLISHER_CONTEXT: () => (/* binding */ ot),\n/* harmony export */   PUBLISHER_DEFAULT_TTL: () => (/* binding */ nt),\n/* harmony export */   Pairing: () => (/* binding */ ci),\n/* harmony export */   RELAYER_CONTEXT: () => (/* binding */ ht),\n/* harmony export */   RELAYER_DEFAULT_LOGGER: () => (/* binding */ ct),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ at),\n/* harmony export */   RELAYER_DEFAULT_RELAY_URL: () => (/* binding */ Ee),\n/* harmony export */   RELAYER_EVENTS: () => (/* binding */ w),\n/* harmony export */   RELAYER_PROVIDER_EVENTS: () => (/* binding */ T),\n/* harmony export */   RELAYER_RECONNECT_TIMEOUT: () => (/* binding */ ut),\n/* harmony export */   RELAYER_SDK_VERSION: () => (/* binding */ oe),\n/* harmony export */   RELAYER_STORAGE_OPTIONS: () => (/* binding */ fs),\n/* harmony export */   RELAYER_SUBSCRIBER_SUFFIX: () => (/* binding */ lt),\n/* harmony export */   RELAYER_TRANSPORT_CUTOFF: () => (/* binding */ _s),\n/* harmony export */   Relayer: () => (/* binding */ si),\n/* harmony export */   STORE_STORAGE_VERSION: () => (/* binding */ dt),\n/* harmony export */   SUBSCRIBER_CONTEXT: () => (/* binding */ pt),\n/* harmony export */   SUBSCRIBER_DEFAULT_TTL: () => (/* binding */ Es),\n/* harmony export */   SUBSCRIBER_EVENTS: () => (/* binding */ A),\n/* harmony export */   SUBSCRIBER_STORAGE_VERSION: () => (/* binding */ yt),\n/* harmony export */   Store: () => (/* binding */ ai),\n/* harmony export */   Subscriber: () => (/* binding */ ei),\n/* harmony export */   TRANSPORT_TYPES: () => (/* binding */ F),\n/* harmony export */   TRUSTED_VERIFY_URLS: () => (/* binding */ Ct),\n/* harmony export */   VERIFY_CONTEXT: () => (/* binding */ wt),\n/* harmony export */   VERIFY_SERVER: () => (/* binding */ Z),\n/* harmony export */   VERIFY_SERVER_V3: () => (/* binding */ Tt),\n/* harmony export */   Verify: () => (/* binding */ di),\n/* harmony export */   WALLETCONNECT_CLIENT_ID: () => (/* binding */ gt),\n/* harmony export */   WALLETCONNECT_LINK_MODE_APPS: () => (/* binding */ ve),\n/* harmony export */   \"default\": () => (/* binding */ ce)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/heartbeat */ \"(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js\");\n/* harmony import */ var _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/keyvaluestorage */ \"(ssr)/./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/jsonrpc-ws-connection */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash.isequal */ \"(ssr)/./node_modules/lodash.isequal/index.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_isequal__WEBPACK_IMPORTED_MODULE_11__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst be = \"wc\", fe = 2, ne = \"core\", O = `${be}@2:${ne}:`, Xe = {\n    name: ne,\n    logger: \"error\"\n}, Ze = {\n    database: \":memory:\"\n}, Qe = \"crypto\", _e = \"client_ed25519_seed\", et = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY, tt = \"keychain\", it = \"0.3\", st = \"messages\", rt = \"0.3\", nt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.SIX_HOURS, ot = \"publisher\", at = \"irn\", ct = \"error\", Ee = \"wss://relay.walletconnect.org\", ht = \"relayer\", w = {\n    message: \"relayer_message\",\n    message_ack: \"relayer_message_ack\",\n    connect: \"relayer_connect\",\n    disconnect: \"relayer_disconnect\",\n    error: \"relayer_error\",\n    connection_stalled: \"relayer_connection_stalled\",\n    transport_closed: \"relayer_transport_closed\",\n    publish: \"relayer_publish\"\n}, lt = \"_subscription\", T = {\n    payload: \"payload\",\n    connect: \"connect\",\n    disconnect: \"disconnect\",\n    error: \"error\"\n}, ut = .1, fs = {\n    database: \":memory:\"\n}, oe = \"2.17.0\", _s = 1e4, F = {\n    link_mode: \"link_mode\",\n    relay: \"relay\"\n}, dt = \"0.3\", gt = \"WALLETCONNECT_CLIENT_ID\", ve = \"WALLETCONNECT_LINK_MODE_APPS\", A = {\n    created: \"subscription_created\",\n    deleted: \"subscription_deleted\",\n    expired: \"subscription_expired\",\n    disabled: \"subscription_disabled\",\n    sync: \"subscription_sync\",\n    resubscribed: \"subscription_resubscribed\"\n}, Es = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS, pt = \"subscription\", yt = \"0.3\", Dt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_SECONDS * 1e3, mt = \"pairing\", bt = \"0.3\", vs = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS, j = {\n    wc_pairingDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 1e3\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 1001\n        }\n    },\n    wc_pairingPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1002\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1003\n        }\n    },\n    unregistered_method: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        }\n    }\n}, q = {\n    create: \"pairing_create\",\n    expire: \"pairing_expire\",\n    delete: \"pairing_delete\",\n    ping: \"pairing_ping\"\n}, P = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, ft = \"history\", _t = \"0.3\", Et = \"expirer\", R = {\n    created: \"expirer_created\",\n    deleted: \"expirer_deleted\",\n    expired: \"expirer_expired\",\n    sync: \"expirer_sync\"\n}, vt = \"0.3\", ws = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY, wt = \"verify-api\", Is = \"https://verify.walletconnect.com\", It = \"https://verify.walletconnect.org\", Z = It, Tt = `${Z}/v3`, Ct = [\n    Is,\n    It\n], St = \"echo\", Pt = \"https://echo.walletconnect.com\", Ts = \"event-client\", z = {\n    pairing_started: \"pairing_started\",\n    pairing_uri_validation_success: \"pairing_uri_validation_success\",\n    pairing_uri_not_expired: \"pairing_uri_not_expired\",\n    store_new_pairing: \"store_new_pairing\",\n    subscribing_pairing_topic: \"subscribing_pairing_topic\",\n    subscribe_pairing_topic_success: \"subscribe_pairing_topic_success\",\n    existing_pairing: \"existing_pairing\",\n    pairing_not_expired: \"pairing_not_expired\",\n    emit_inactive_pairing: \"emit_inactive_pairing\",\n    emit_session_proposal: \"emit_session_proposal\",\n    subscribing_to_pairing_topic: \"subscribing_to_pairing_topic\"\n}, M = {\n    no_wss_connection: \"no_wss_connection\",\n    no_internet_connection: \"no_internet_connection\",\n    malformed_pairing_uri: \"malformed_pairing_uri\",\n    active_pairing_already_exists: \"active_pairing_already_exists\",\n    subscribe_pairing_topic_failure: \"subscribe_pairing_topic_failure\",\n    pairing_expired: \"pairing_expired\",\n    proposal_expired: \"proposal_expired\",\n    proposal_listener_not_found: \"proposal_listener_not_found\"\n}, Cs = {\n    session_approve_started: \"session_approve_started\",\n    proposal_not_expired: \"proposal_not_expired\",\n    session_namespaces_validation_success: \"session_namespaces_validation_success\",\n    create_session_topic: \"create_session_topic\",\n    subscribing_session_topic: \"subscribing_session_topic\",\n    subscribe_session_topic_success: \"subscribe_session_topic_success\",\n    publishing_session_approve: \"publishing_session_approve\",\n    session_approve_publish_success: \"session_approve_publish_success\",\n    store_session: \"store_session\",\n    publishing_session_settle: \"publishing_session_settle\",\n    session_settle_publish_success: \"session_settle_publish_success\"\n}, Ss = {\n    no_internet_connection: \"no_internet_connection\",\n    no_wss_connection: \"no_wss_connection\",\n    proposal_expired: \"proposal_expired\",\n    subscribe_session_topic_failure: \"subscribe_session_topic_failure\",\n    session_approve_publish_failure: \"session_approve_publish_failure\",\n    session_settle_publish_failure: \"session_settle_publish_failure\",\n    session_approve_namespace_validation_failure: \"session_approve_namespace_validation_failure\",\n    proposal_not_found: \"proposal_not_found\"\n}, Ps = {\n    authenticated_session_approve_started: \"authenticated_session_approve_started\",\n    authenticated_session_not_expired: \"authenticated_session_not_expired\",\n    chains_caip2_compliant: \"chains_caip2_compliant\",\n    chains_evm_compliant: \"chains_evm_compliant\",\n    create_authenticated_session_topic: \"create_authenticated_session_topic\",\n    cacaos_verified: \"cacaos_verified\",\n    store_authenticated_session: \"store_authenticated_session\",\n    subscribing_authenticated_session_topic: \"subscribing_authenticated_session_topic\",\n    subscribe_authenticated_session_topic_success: \"subscribe_authenticated_session_topic_success\",\n    publishing_authenticated_session_approve: \"publishing_authenticated_session_approve\",\n    authenticated_session_approve_publish_success: \"authenticated_session_approve_publish_success\"\n}, Rs = {\n    no_internet_connection: \"no_internet_connection\",\n    no_wss_connection: \"no_wss_connection\",\n    missing_session_authenticate_request: \"missing_session_authenticate_request\",\n    session_authenticate_request_expired: \"session_authenticate_request_expired\",\n    chains_caip2_compliant_failure: \"chains_caip2_compliant_failure\",\n    chains_evm_compliant_failure: \"chains_evm_compliant_failure\",\n    invalid_cacao: \"invalid_cacao\",\n    subscribe_authenticated_session_topic_failure: \"subscribe_authenticated_session_topic_failure\",\n    authenticated_session_approve_publish_failure: \"authenticated_session_approve_publish_failure\",\n    authenticated_session_pending_request_not_found: \"authenticated_session_pending_request_not_found\"\n}, Rt = .1, xt = \"event-client\", Ot = 86400, At = \"https://pulse.walletconnect.org/batch\";\nfunction xs(o, e) {\n    if (o.length >= 255) throw new TypeError(\"Alphabet too long\");\n    for(var t = new Uint8Array(256), s = 0; s < t.length; s++)t[s] = 255;\n    for(var i = 0; i < o.length; i++){\n        var r = o.charAt(i), n = r.charCodeAt(0);\n        if (t[n] !== 255) throw new TypeError(r + \" is ambiguous\");\n        t[n] = i;\n    }\n    var a = o.length, c = o.charAt(0), h = Math.log(a) / Math.log(256), d = Math.log(256) / Math.log(a);\n    function g(l) {\n        if (l instanceof Uint8Array || (ArrayBuffer.isView(l) ? l = new Uint8Array(l.buffer, l.byteOffset, l.byteLength) : Array.isArray(l) && (l = Uint8Array.from(l))), !(l instanceof Uint8Array)) throw new TypeError(\"Expected Uint8Array\");\n        if (l.length === 0) return \"\";\n        for(var p = 0, E = 0, D = 0, f = l.length; D !== f && l[D] === 0;)D++, p++;\n        for(var N = (f - D) * d + 1 >>> 0, C = new Uint8Array(N); D !== f;){\n            for(var L = l[D], $ = 0, x = N - 1; (L !== 0 || $ < E) && x !== -1; x--, $++)L += 256 * C[x] >>> 0, C[x] = L % a >>> 0, L = L / a >>> 0;\n            if (L !== 0) throw new Error(\"Non-zero carry\");\n            E = $, D++;\n        }\n        for(var k = N - E; k !== N && C[k] === 0;)k++;\n        for(var ie = c.repeat(p); k < N; ++k)ie += o.charAt(C[k]);\n        return ie;\n    }\n    function m(l) {\n        if (typeof l != \"string\") throw new TypeError(\"Expected String\");\n        if (l.length === 0) return new Uint8Array;\n        var p = 0;\n        if (l[p] !== \" \") {\n            for(var E = 0, D = 0; l[p] === c;)E++, p++;\n            for(var f = (l.length - p) * h + 1 >>> 0, N = new Uint8Array(f); l[p];){\n                var C = t[l.charCodeAt(p)];\n                if (C === 255) return;\n                for(var L = 0, $ = f - 1; (C !== 0 || L < D) && $ !== -1; $--, L++)C += a * N[$] >>> 0, N[$] = C % 256 >>> 0, C = C / 256 >>> 0;\n                if (C !== 0) throw new Error(\"Non-zero carry\");\n                D = L, p++;\n            }\n            if (l[p] !== \" \") {\n                for(var x = f - D; x !== f && N[x] === 0;)x++;\n                for(var k = new Uint8Array(E + (f - x)), ie = E; x !== f;)k[ie++] = N[x++];\n                return k;\n            }\n        }\n    }\n    function b(l) {\n        var p = m(l);\n        if (p) return p;\n        throw new Error(`Non-${e} character`);\n    }\n    return {\n        encode: g,\n        decodeUnsafe: m,\n        decode: b\n    };\n}\nvar Os = xs, As = Os;\nconst Nt = (o)=>{\n    if (o instanceof Uint8Array && o.constructor.name === \"Uint8Array\") return o;\n    if (o instanceof ArrayBuffer) return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    throw new Error(\"Unknown type, must be binary type\");\n}, Ns = (o)=>new TextEncoder().encode(o), Ls = (o)=>new TextDecoder().decode(o);\nclass zs {\n    constructor(e, t, s){\n        this.name = e, this.prefix = t, this.baseEncode = s;\n    }\n    encode(e) {\n        if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;\n        throw Error(\"Unknown type, must be binary type\");\n    }\n}\nclass ks {\n    constructor(e, t, s){\n        if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0) throw new Error(\"Invalid prefix character\");\n        this.prefixCodePoint = t.codePointAt(0), this.baseDecode = s;\n    }\n    decode(e) {\n        if (typeof e == \"string\") {\n            if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            return this.baseDecode(e.slice(this.prefix.length));\n        } else throw Error(\"Can only multibase decode strings\");\n    }\n    or(e) {\n        return Lt(this, e);\n    }\n}\nclass Ms {\n    constructor(e){\n        this.decoders = e;\n    }\n    or(e) {\n        return Lt(this, e);\n    }\n    decode(e) {\n        const t = e[0], s = this.decoders[t];\n        if (s) return s.decode(e);\n        throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n    }\n}\nconst Lt = (o, e)=>new Ms({\n        ...o.decoders || {\n            [o.prefix]: o\n        },\n        ...e.decoders || {\n            [e.prefix]: e\n        }\n    });\nclass $s {\n    constructor(e, t, s, i){\n        this.name = e, this.prefix = t, this.baseEncode = s, this.baseDecode = i, this.encoder = new zs(e, t, s), this.decoder = new ks(e, t, i);\n    }\n    encode(e) {\n        return this.encoder.encode(e);\n    }\n    decode(e) {\n        return this.decoder.decode(e);\n    }\n}\nconst ae = ({ name: o, prefix: e, encode: t, decode: s })=>new $s(o, e, t, s), Q = ({ prefix: o, name: e, alphabet: t })=>{\n    const { encode: s, decode: i } = As(t, e);\n    return ae({\n        prefix: o,\n        name: e,\n        encode: s,\n        decode: (r)=>Nt(i(r))\n    });\n}, Fs = (o, e, t, s)=>{\n    const i = {};\n    for(let d = 0; d < e.length; ++d)i[e[d]] = d;\n    let r = o.length;\n    for(; o[r - 1] === \"=\";)--r;\n    const n = new Uint8Array(r * t / 8 | 0);\n    let a = 0, c = 0, h = 0;\n    for(let d = 0; d < r; ++d){\n        const g = i[o[d]];\n        if (g === void 0) throw new SyntaxError(`Non-${s} character`);\n        c = c << t | g, a += t, a >= 8 && (a -= 8, n[h++] = 255 & c >> a);\n    }\n    if (a >= t || 255 & c << 8 - a) throw new SyntaxError(\"Unexpected end of data\");\n    return n;\n}, Us = (o, e, t)=>{\n    const s = e[e.length - 1] === \"=\", i = (1 << t) - 1;\n    let r = \"\", n = 0, a = 0;\n    for(let c = 0; c < o.length; ++c)for(a = a << 8 | o[c], n += 8; n > t;)n -= t, r += e[i & a >> n];\n    if (n && (r += e[i & a << t - n]), s) for(; r.length * t & 7;)r += \"=\";\n    return r;\n}, _ = ({ name: o, prefix: e, bitsPerChar: t, alphabet: s })=>ae({\n        prefix: e,\n        name: o,\n        encode (i) {\n            return Us(i, s, t);\n        },\n        decode (i) {\n            return Fs(i, s, t, o);\n        }\n    }), Ks = ae({\n    prefix: \"\\x00\",\n    name: \"identity\",\n    encode: (o)=>Ls(o),\n    decode: (o)=>Ns(o)\n});\nvar Bs = Object.freeze({\n    __proto__: null,\n    identity: Ks\n});\nconst Vs = _({\n    prefix: \"0\",\n    name: \"base2\",\n    alphabet: \"01\",\n    bitsPerChar: 1\n});\nvar js = Object.freeze({\n    __proto__: null,\n    base2: Vs\n});\nconst qs = _({\n    prefix: \"7\",\n    name: \"base8\",\n    alphabet: \"01234567\",\n    bitsPerChar: 3\n});\nvar Gs = Object.freeze({\n    __proto__: null,\n    base8: qs\n});\nconst Hs = Q({\n    prefix: \"9\",\n    name: \"base10\",\n    alphabet: \"0123456789\"\n});\nvar Ys = Object.freeze({\n    __proto__: null,\n    base10: Hs\n});\nconst Js = _({\n    prefix: \"f\",\n    name: \"base16\",\n    alphabet: \"0123456789abcdef\",\n    bitsPerChar: 4\n}), Ws = _({\n    prefix: \"F\",\n    name: \"base16upper\",\n    alphabet: \"0123456789ABCDEF\",\n    bitsPerChar: 4\n});\nvar Xs = Object.freeze({\n    __proto__: null,\n    base16: Js,\n    base16upper: Ws\n});\nconst Zs = _({\n    prefix: \"b\",\n    name: \"base32\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n    bitsPerChar: 5\n}), Qs = _({\n    prefix: \"B\",\n    name: \"base32upper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n    bitsPerChar: 5\n}), er = _({\n    prefix: \"c\",\n    name: \"base32pad\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n    bitsPerChar: 5\n}), tr = _({\n    prefix: \"C\",\n    name: \"base32padupper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n    bitsPerChar: 5\n}), ir = _({\n    prefix: \"v\",\n    name: \"base32hex\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n    bitsPerChar: 5\n}), sr = _({\n    prefix: \"V\",\n    name: \"base32hexupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n    bitsPerChar: 5\n}), rr = _({\n    prefix: \"t\",\n    name: \"base32hexpad\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n    bitsPerChar: 5\n}), nr = _({\n    prefix: \"T\",\n    name: \"base32hexpadupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n    bitsPerChar: 5\n}), or = _({\n    prefix: \"h\",\n    name: \"base32z\",\n    alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n    bitsPerChar: 5\n});\nvar ar = Object.freeze({\n    __proto__: null,\n    base32: Zs,\n    base32upper: Qs,\n    base32pad: er,\n    base32padupper: tr,\n    base32hex: ir,\n    base32hexupper: sr,\n    base32hexpad: rr,\n    base32hexpadupper: nr,\n    base32z: or\n});\nconst cr = Q({\n    prefix: \"k\",\n    name: \"base36\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\"\n}), hr = Q({\n    prefix: \"K\",\n    name: \"base36upper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n});\nvar lr = Object.freeze({\n    __proto__: null,\n    base36: cr,\n    base36upper: hr\n});\nconst ur = Q({\n    name: \"base58btc\",\n    prefix: \"z\",\n    alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n}), dr = Q({\n    name: \"base58flickr\",\n    prefix: \"Z\",\n    alphabet: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n});\nvar gr = Object.freeze({\n    __proto__: null,\n    base58btc: ur,\n    base58flickr: dr\n});\nconst pr = _({\n    prefix: \"m\",\n    name: \"base64\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    bitsPerChar: 6\n}), yr = _({\n    prefix: \"M\",\n    name: \"base64pad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n    bitsPerChar: 6\n}), Dr = _({\n    prefix: \"u\",\n    name: \"base64url\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bitsPerChar: 6\n}), mr = _({\n    prefix: \"U\",\n    name: \"base64urlpad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n    bitsPerChar: 6\n});\nvar br = Object.freeze({\n    __proto__: null,\n    base64: pr,\n    base64pad: yr,\n    base64url: Dr,\n    base64urlpad: mr\n});\nconst zt = Array.from(\"\\uD83D\\uDE80\\uD83E\\uDE90☄\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09☀\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02❤\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09☺\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E✌✨\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D❣\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33✋\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13⭐✅\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6✔\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90☹\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20☝\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B⚽\\uD83E\\uDD19☕\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81⚡\\uD83C\\uDF1E\\uD83C\\uDF88❌✊\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C✈\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74▶➡❓\\uD83D\\uDC8E\\uD83D\\uDCB8⬇\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A⚠\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37☎\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51❄\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42\"), fr = zt.reduce((o, e, t)=>(o[t] = e, o), []), _r = zt.reduce((o, e, t)=>(o[e.codePointAt(0)] = t, o), []);\nfunction Er(o) {\n    return o.reduce((e, t)=>(e += fr[t], e), \"\");\n}\nfunction vr(o) {\n    const e = [];\n    for (const t of o){\n        const s = _r[t.codePointAt(0)];\n        if (s === void 0) throw new Error(`Non-base256emoji character: ${t}`);\n        e.push(s);\n    }\n    return new Uint8Array(e);\n}\nconst wr = ae({\n    prefix: \"\\uD83D\\uDE80\",\n    name: \"base256emoji\",\n    encode: Er,\n    decode: vr\n});\nvar Ir = Object.freeze({\n    __proto__: null,\n    base256emoji: wr\n}), Tr = Mt, kt = 128, Cr = 127, Sr = ~Cr, Pr = Math.pow(2, 31);\nfunction Mt(o, e, t) {\n    e = e || [], t = t || 0;\n    for(var s = t; o >= Pr;)e[t++] = o & 255 | kt, o /= 128;\n    for(; o & Sr;)e[t++] = o & 255 | kt, o >>>= 7;\n    return e[t] = o | 0, Mt.bytes = t - s + 1, e;\n}\nvar Rr = we, xr = 128, $t = 127;\nfunction we(o, s) {\n    var t = 0, s = s || 0, i = 0, r = s, n, a = o.length;\n    do {\n        if (r >= a) throw we.bytes = 0, new RangeError(\"Could not decode varint\");\n        n = o[r++], t += i < 28 ? (n & $t) << i : (n & $t) * Math.pow(2, i), i += 7;\n    }while (n >= xr);\n    return we.bytes = r - s, t;\n}\nvar Or = Math.pow(2, 7), Ar = Math.pow(2, 14), Nr = Math.pow(2, 21), Lr = Math.pow(2, 28), zr = Math.pow(2, 35), kr = Math.pow(2, 42), Mr = Math.pow(2, 49), $r = Math.pow(2, 56), Fr = Math.pow(2, 63), Ur = function(o) {\n    return o < Or ? 1 : o < Ar ? 2 : o < Nr ? 3 : o < Lr ? 4 : o < zr ? 5 : o < kr ? 6 : o < Mr ? 7 : o < $r ? 8 : o < Fr ? 9 : 10;\n}, Kr = {\n    encode: Tr,\n    decode: Rr,\n    encodingLength: Ur\n}, Ft = Kr;\nconst Ut = (o, e, t = 0)=>(Ft.encode(o, e, t), e), Kt = (o)=>Ft.encodingLength(o), Ie = (o, e)=>{\n    const t = e.byteLength, s = Kt(o), i = s + Kt(t), r = new Uint8Array(i + t);\n    return Ut(o, r, 0), Ut(t, r, s), r.set(e, i), new Br(o, t, e, r);\n};\nclass Br {\n    constructor(e, t, s, i){\n        this.code = e, this.size = t, this.digest = s, this.bytes = i;\n    }\n}\nconst Bt = ({ name: o, code: e, encode: t })=>new Vr(o, e, t);\nclass Vr {\n    constructor(e, t, s){\n        this.name = e, this.code = t, this.encode = s;\n    }\n    digest(e) {\n        if (e instanceof Uint8Array) {\n            const t = this.encode(e);\n            return t instanceof Uint8Array ? Ie(this.code, t) : t.then((s)=>Ie(this.code, s));\n        } else throw Error(\"Unknown type, must be binary type\");\n    }\n}\nconst Vt = (o)=>async (e)=>new Uint8Array(await crypto.subtle.digest(o, e)), jr = Bt({\n    name: \"sha2-256\",\n    code: 18,\n    encode: Vt(\"SHA-256\")\n}), qr = Bt({\n    name: \"sha2-512\",\n    code: 19,\n    encode: Vt(\"SHA-512\")\n});\nvar Gr = Object.freeze({\n    __proto__: null,\n    sha256: jr,\n    sha512: qr\n});\nconst jt = 0, Hr = \"identity\", qt = Nt, Yr = (o)=>Ie(jt, qt(o)), Jr = {\n    code: jt,\n    name: Hr,\n    encode: qt,\n    digest: Yr\n};\nvar Wr = Object.freeze({\n    __proto__: null,\n    identity: Jr\n});\nnew TextEncoder, new TextDecoder;\nconst Gt = {\n    ...Bs,\n    ...js,\n    ...Gs,\n    ...Ys,\n    ...Xs,\n    ...ar,\n    ...lr,\n    ...gr,\n    ...br,\n    ...Ir\n};\n({\n    ...Gr,\n    ...Wr\n});\nfunction Xr(o = 0) {\n    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(o) : new Uint8Array(o);\n}\nfunction Ht(o, e, t, s) {\n    return {\n        name: o,\n        prefix: e,\n        encoder: {\n            name: o,\n            prefix: e,\n            encode: t\n        },\n        decoder: {\n            decode: s\n        }\n    };\n}\nconst Yt = Ht(\"utf8\", \"u\", (o)=>\"u\" + new TextDecoder(\"utf8\").decode(o), (o)=>new TextEncoder().encode(o.substring(1))), Te = Ht(\"ascii\", \"a\", (o)=>{\n    let e = \"a\";\n    for(let t = 0; t < o.length; t++)e += String.fromCharCode(o[t]);\n    return e;\n}, (o)=>{\n    o = o.substring(1);\n    const e = Xr(o.length);\n    for(let t = 0; t < o.length; t++)e[t] = o.charCodeAt(t);\n    return e;\n}), Zr = {\n    utf8: Yt,\n    \"utf-8\": Yt,\n    hex: Gt.base16,\n    latin1: Te,\n    ascii: Te,\n    binary: Te,\n    ...Gt\n};\nfunction Qr(o, e = \"utf8\") {\n    const t = Zr[e];\n    if (!t) throw new Error(`Unsupported encoding \"${e}\"`);\n    return (e === \"utf8\" || e === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(o, \"utf8\") : t.decoder.decode(`${t.prefix}${o}`);\n}\nclass Jt {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.keychain = new Map, this.name = tt, this.version = it, this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            if (!this.initialized) {\n                const s = await this.getKeyChain();\n                typeof s < \"u\" && (this.keychain = s), this.initialized = !0;\n            }\n        }, this.has = (s)=>(this.isInitialized(), this.keychain.has(s)), this.set = async (s, i)=>{\n            this.isInitialized(), this.keychain.set(s, i), await this.persist();\n        }, this.get = (s)=>{\n            this.isInitialized();\n            const i = this.keychain.get(s);\n            if (typeof i > \"u\") {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${s}`);\n                throw new Error(r);\n            }\n            return i;\n        }, this.del = async (s)=>{\n            this.isInitialized(), this.keychain.delete(s), await this.persist();\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setKeyChain(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.mapToObj)(e));\n    }\n    async getKeyChain() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setKeyChain(this.keychain);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Wt {\n    constructor(e, t, s){\n        this.core = e, this.logger = t, this.name = Qe, this.randomSessionIdentifier = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateRandomBytes32)(), this.initialized = !1, this.init = async ()=>{\n            this.initialized || (await this.keychain.init(), this.initialized = !0);\n        }, this.hasKeys = (i)=>(this.isInitialized(), this.keychain.has(i)), this.getClientId = async ()=>{\n            this.isInitialized();\n            const i = await this.getClientSeed(), r = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.generateKeyPair(i);\n            return _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.encodeIss(r.publicKey);\n        }, this.generateKeyPair = ()=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateKeyPair)();\n            return this.setPrivateKey(i.publicKey, i.privateKey);\n        }, this.signJWT = async (i)=>{\n            this.isInitialized();\n            const r = await this.getClientSeed(), n = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.generateKeyPair(r), a = this.randomSessionIdentifier, c = et;\n            return await _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.signJWT(a, i, c, n);\n        }, this.generateSharedKey = (i, r, n)=>{\n            this.isInitialized();\n            const a = this.getPrivateKey(i), c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.deriveSymKey)(a, r);\n            return this.setSymKey(c, n);\n        }, this.setSymKey = async (i, r)=>{\n            this.isInitialized();\n            const n = r || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashKey)(i);\n            return await this.keychain.set(n, i), n;\n        }, this.deleteKeyPair = async (i)=>{\n            this.isInitialized(), await this.keychain.del(i);\n        }, this.deleteSymKey = async (i)=>{\n            this.isInitialized(), await this.keychain.del(i);\n        }, this.encode = async (i, r, n)=>{\n            this.isInitialized();\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.validateEncoding)(n), c = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__.safeJsonStringify)(r);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTypeTwoEnvelope)(a)) return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.encodeTypeTwoEnvelope)(c, n?.encoding);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTypeOneEnvelope)(a)) {\n                const m = a.senderPublicKey, b = a.receiverPublicKey;\n                i = await this.generateSharedKey(m, b);\n            }\n            const h = this.getSymKey(i), { type: d, senderPublicKey: g } = a;\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.encrypt)({\n                type: d,\n                symKey: h,\n                message: c,\n                senderPublicKey: g,\n                encoding: n?.encoding\n            });\n        }, this.decode = async (i, r, n)=>{\n            this.isInitialized();\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.validateDecoding)(r, n);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTypeTwoEnvelope)(a)) {\n                const c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.decodeTypeTwoEnvelope)(r, n?.encoding);\n                return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__.safeJsonParse)(c);\n            }\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTypeOneEnvelope)(a)) {\n                const c = a.receiverPublicKey, h = a.senderPublicKey;\n                i = await this.generateSharedKey(c, h);\n            }\n            try {\n                const c = this.getSymKey(i), h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.decrypt)({\n                    symKey: c,\n                    encoded: r,\n                    encoding: n?.encoding\n                });\n                return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__.safeJsonParse)(h);\n            } catch (c) {\n                this.logger.error(`Failed to decode message from topic: '${i}', clientId: '${await this.getClientId()}'`), this.logger.error(c);\n            }\n        }, this.getPayloadType = (i, r = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.BASE64)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.deserialize)({\n                encoded: i,\n                encoding: r\n            });\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.decodeTypeByte)(n.type);\n        }, this.getPayloadSenderPublicKey = (i, r = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.BASE64)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.deserialize)({\n                encoded: i,\n                encoding: r\n            });\n            return n.senderPublicKey ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_7__.toString)(n.senderPublicKey, _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.BASE16) : void 0;\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.keychain = s || new Jt(this.core, this.logger);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async setPrivateKey(e, t) {\n        return await this.keychain.set(e, t), e;\n    }\n    getPrivateKey(e) {\n        return this.keychain.get(e);\n    }\n    async getClientSeed() {\n        let e = \"\";\n        try {\n            e = this.keychain.get(_e);\n        } catch  {\n            e = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateRandomBytes32)(), await this.keychain.set(_e, e);\n        }\n        return Qr(e, \"base16\");\n    }\n    getSymKey(e) {\n        return this.keychain.get(e);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Xt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IMessageTracker {\n    constructor(e, t){\n        super(e, t), this.logger = e, this.core = t, this.messages = new Map, this.name = st, this.version = rt, this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            if (!this.initialized) {\n                this.logger.trace(\"Initialized\");\n                try {\n                    const s = await this.getRelayerMessages();\n                    typeof s < \"u\" && (this.messages = s), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                        type: \"method\",\n                        method: \"restore\",\n                        size: this.messages.size\n                    });\n                } catch (s) {\n                    this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(s);\n                } finally{\n                    this.initialized = !0;\n                }\n            }\n        }, this.set = async (s, i)=>{\n            this.isInitialized();\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashMessage)(i);\n            let n = this.messages.get(s);\n            return typeof n > \"u\" && (n = {}), typeof n[r] < \"u\" || (n[r] = i, this.messages.set(s, n), await this.persist()), r;\n        }, this.get = (s)=>{\n            this.isInitialized();\n            let i = this.messages.get(s);\n            return typeof i > \"u\" && (i = {}), i;\n        }, this.has = (s, i)=>{\n            this.isInitialized();\n            const r = this.get(s), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashMessage)(i);\n            return typeof r[n] < \"u\";\n        }, this.del = async (s)=>{\n            this.isInitialized(), this.messages.delete(s), await this.persist();\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e, this.name), this.core = t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setRelayerMessages(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.mapToObj)(e));\n    }\n    async getRelayerMessages() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setRelayerMessages(this.messages);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass en extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IPublisher {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ot, this.queue = new Map, this.publishTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_MINUTE), this.failedPublishTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND), this.needsTransportRestart = !1, this.publish = async (s, i, r)=>{\n            var n;\n            this.logger.debug(\"Publishing Payload\"), this.logger.trace({\n                type: \"method\",\n                method: \"publish\",\n                params: {\n                    topic: s,\n                    message: i,\n                    opts: r\n                }\n            });\n            const a = r?.ttl || nt, c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolName)(r), h = r?.prompt || !1, d = r?.tag || 0, g = r?.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.getBigIntRpcId)().toString(), m = {\n                topic: s,\n                message: i,\n                opts: {\n                    ttl: a,\n                    relay: c,\n                    prompt: h,\n                    tag: d,\n                    id: g,\n                    attestation: r?.attestation\n                }\n            }, b = `Failed to publish payload, please try again. id:${g} tag:${d}`, l = Date.now();\n            let p, E = 1;\n            try {\n                for(; p === void 0;){\n                    if (Date.now() - l > this.publishTimeout) throw new Error(b);\n                    this.logger.trace({\n                        id: g,\n                        attempts: E\n                    }, `publisher.publish - attempt ${E}`), p = await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.rpcPublish(s, i, a, c, h, d, g, r?.attestation).catch((D)=>this.logger.warn(D)), this.publishTimeout, b), E++, p || await new Promise((D)=>setTimeout(D, this.failedPublishTimeout));\n                }\n                this.relayer.events.emit(w.publish, m), this.logger.debug(\"Successfully Published Payload\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"publish\",\n                    params: {\n                        id: g,\n                        topic: s,\n                        message: i,\n                        opts: r\n                    }\n                });\n            } catch (D) {\n                if (this.logger.debug(\"Failed to Publish Payload\"), this.logger.error(D), (n = r?.internal) != null && n.throwOnFailedPublish) throw D;\n                this.queue.set(g, m);\n            }\n        }, this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.registerEventListeners();\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    rpcPublish(e, t, s, i, r, n, a, c) {\n        var h, d, g, m;\n        const b = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(i.protocol).publish,\n            params: {\n                topic: e,\n                message: t,\n                ttl: s,\n                prompt: r,\n                tag: n,\n                attestation: c\n            },\n            id: a\n        };\n        return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isUndefined)((h = b.params) == null ? void 0 : h.prompt) && ((d = b.params) == null || delete d.prompt), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isUndefined)((g = b.params) == null ? void 0 : g.tag) && ((m = b.params) == null || delete m.tag), this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"message\",\n            direction: \"outgoing\",\n            request: b\n        }), this.relayer.request(b);\n    }\n    removeRequestFromQueue(e) {\n        this.queue.delete(e);\n    }\n    checkQueue() {\n        this.queue.forEach(async (e)=>{\n            const { topic: t, message: s, opts: i } = e;\n            await this.publish(t, s, i);\n        });\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, ()=>{\n            if (this.needsTransportRestart) {\n                this.needsTransportRestart = !1, this.relayer.events.emit(w.connection_stalled);\n                return;\n            }\n            this.checkQueue();\n        }), this.relayer.on(w.message_ack, (e)=>{\n            this.removeRequestFromQueue(e.id.toString());\n        });\n    }\n}\nclass tn {\n    constructor(){\n        this.map = new Map, this.set = (e, t)=>{\n            const s = this.get(e);\n            this.exists(e, t) || this.map.set(e, [\n                ...s,\n                t\n            ]);\n        }, this.get = (e)=>this.map.get(e) || [], this.exists = (e, t)=>this.get(e).includes(t), this.delete = (e, t)=>{\n            if (typeof t > \"u\") {\n                this.map.delete(e);\n                return;\n            }\n            if (!this.map.has(e)) return;\n            const s = this.get(e);\n            if (!this.exists(e, t)) return;\n            const i = s.filter((r)=>r !== t);\n            if (!i.length) {\n                this.map.delete(e);\n                return;\n            }\n            this.map.set(e, i);\n        }, this.clear = ()=>{\n            this.map.clear();\n        };\n    }\n    get topics() {\n        return Array.from(this.map.keys());\n    }\n}\nvar sn = Object.defineProperty, rn = Object.defineProperties, nn = Object.getOwnPropertyDescriptors, Zt = Object.getOwnPropertySymbols, on = Object.prototype.hasOwnProperty, an = Object.prototype.propertyIsEnumerable, Qt = (o, e, t)=>e in o ? sn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, ee = (o, e)=>{\n    for(var t in e || (e = {}))on.call(e, t) && Qt(o, t, e[t]);\n    if (Zt) for (var t of Zt(e))an.call(e, t) && Qt(o, t, e[t]);\n    return o;\n}, Ce = (o, e)=>rn(o, nn(e));\nclass ei extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.ISubscriber {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.subscriptions = new Map, this.topicMap = new tn, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = pt, this.version = yt, this.pending = new Map, this.cached = [], this.initialized = !1, this.pendingSubscriptionWatchLabel = \"pending_sub_watch_label\", this.pollingInterval = 20, this.storagePrefix = O, this.subscribeTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_MINUTE), this.restartInProgress = !1, this.batchSubscribeTopicsLimit = 500, this.pendingBatchMessages = [], this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId(), await this.restore()), this.initialized = !0;\n        }, this.subscribe = async (s, i)=>{\n            this.isInitialized(), this.logger.debug(\"Subscribing Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"subscribe\",\n                params: {\n                    topic: s,\n                    opts: i\n                }\n            });\n            try {\n                const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolName)(i), n = {\n                    topic: s,\n                    relay: r,\n                    transportType: i?.transportType\n                };\n                this.pending.set(s, n);\n                const a = await this.rpcSubscribe(s, r, i?.transportType);\n                return typeof a == \"string\" && (this.onSubscribe(a, n), this.logger.debug(\"Successfully Subscribed Topic\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"subscribe\",\n                    params: {\n                        topic: s,\n                        opts: i\n                    }\n                })), a;\n            } catch (r) {\n                throw this.logger.debug(\"Failed to Subscribe Topic\"), this.logger.error(r), r;\n            }\n        }, this.unsubscribe = async (s, i)=>{\n            await this.restartToComplete(), this.isInitialized(), typeof i?.id < \"u\" ? await this.unsubscribeById(s, i.id, i) : await this.unsubscribeByTopic(s, i);\n        }, this.isSubscribed = async (s)=>{\n            if (this.topics.includes(s)) return !0;\n            const i = `${this.pendingSubscriptionWatchLabel}_${s}`;\n            return await new Promise((r, n)=>{\n                const a = new _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.Watch;\n                a.start(i);\n                const c = setInterval(()=>{\n                    !this.pending.has(s) && this.topics.includes(s) && (clearInterval(c), a.stop(i), r(!0)), a.elapsed(i) >= Dt && (clearInterval(c), a.stop(i), n(new Error(\"Subscription resolution timeout\")));\n                }, this.pollingInterval);\n            }).catch(()=>!1);\n        }, this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.start = async ()=>{\n            await this.onConnect();\n        }, this.stop = async ()=>{\n            await this.onDisconnect();\n        }, this.restart = async ()=>{\n            this.restartInProgress = !0, await this.restore(), await this.reset(), this.restartInProgress = !1;\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.clientId = \"\";\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.subscriptions.size;\n    }\n    get ids() {\n        return Array.from(this.subscriptions.keys());\n    }\n    get values() {\n        return Array.from(this.subscriptions.values());\n    }\n    get topics() {\n        return this.topicMap.topics;\n    }\n    hasSubscription(e, t) {\n        let s = !1;\n        try {\n            s = this.getSubscription(e).topic === t;\n        } catch  {}\n        return s;\n    }\n    onEnable() {\n        this.cached = [], this.initialized = !0;\n    }\n    onDisable() {\n        this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();\n    }\n    async unsubscribeByTopic(e, t) {\n        const s = this.topicMap.get(e);\n        await Promise.all(s.map(async (i)=>await this.unsubscribeById(e, i, t)));\n    }\n    async unsubscribeById(e, t, s) {\n        this.logger.debug(\"Unsubscribing Topic\"), this.logger.trace({\n            type: \"method\",\n            method: \"unsubscribe\",\n            params: {\n                topic: e,\n                id: t,\n                opts: s\n            }\n        });\n        try {\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolName)(s);\n            await this.rpcUnsubscribe(e, t, i);\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"USER_DISCONNECTED\", `${this.name}, ${e}`);\n            await this.onUnsubscribe(e, t, r), this.logger.debug(\"Successfully Unsubscribed Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"unsubscribe\",\n                params: {\n                    topic: e,\n                    id: t,\n                    opts: s\n                }\n            });\n        } catch (i) {\n            throw this.logger.debug(\"Failed to Unsubscribe Topic\"), this.logger.error(i), i;\n        }\n    }\n    async rpcSubscribe(e, t, s = F.relay) {\n        s === F.relay && await this.restartToComplete();\n        const i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(t.protocol).subscribe,\n            params: {\n                topic: e\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        });\n        try {\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashMessage)(e + this.clientId);\n            return s === F.link_mode ? (setTimeout(()=>{\n                (this.relayer.connected || this.relayer.connecting) && this.relayer.request(i).catch((n)=>this.logger.warn(n));\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND)), r) : await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.relayer.request(i).catch((n)=>this.logger.warn(n)), this.subscribeTimeout) ? r : null;\n        } catch  {\n            this.logger.debug(\"Outgoing Relay Subscribe Payload stalled\"), this.relayer.events.emit(w.connection_stalled);\n        }\n        return null;\n    }\n    async rpcBatchSubscribe(e) {\n        if (!e.length) return;\n        const t = e[0].relay, s = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(t.protocol).batchSubscribe,\n            params: {\n                topics: e.map((i)=>i.topic)\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: s\n        });\n        try {\n            return await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.relayer.request(s).catch((i)=>this.logger.warn(i)), this.subscribeTimeout);\n        } catch  {\n            this.relayer.events.emit(w.connection_stalled);\n        }\n    }\n    async rpcBatchFetchMessages(e) {\n        if (!e.length) return;\n        const t = e[0].relay, s = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(t.protocol).batchFetchMessages,\n            params: {\n                topics: e.map((r)=>r.topic)\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: s\n        });\n        let i;\n        try {\n            i = await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.relayer.request(s).catch((r)=>this.logger.warn(r)), this.subscribeTimeout);\n        } catch  {\n            this.relayer.events.emit(w.connection_stalled);\n        }\n        return i;\n    }\n    rpcUnsubscribe(e, t, s) {\n        const i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(s.protocol).unsubscribe,\n            params: {\n                topic: e,\n                id: t\n            }\n        };\n        return this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        }), this.relayer.request(i);\n    }\n    onSubscribe(e, t) {\n        this.setSubscription(e, Ce(ee({}, t), {\n            id: e\n        })), this.pending.delete(t.topic);\n    }\n    onBatchSubscribe(e) {\n        e.length && e.forEach((t)=>{\n            this.setSubscription(t.id, ee({}, t)), this.pending.delete(t.topic);\n        });\n    }\n    async onUnsubscribe(e, t, s) {\n        this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, s), await this.relayer.messages.del(e);\n    }\n    async setRelayerSubscriptions(e) {\n        await this.relayer.core.storage.setItem(this.storageKey, e);\n    }\n    async getRelayerSubscriptions() {\n        return await this.relayer.core.storage.getItem(this.storageKey);\n    }\n    setSubscription(e, t) {\n        this.logger.debug(\"Setting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"setSubscription\",\n            id: e,\n            subscription: t\n        }), this.addSubscription(e, t);\n    }\n    addSubscription(e, t) {\n        this.subscriptions.set(e, ee({}, t)), this.topicMap.set(t.topic, e), this.events.emit(A.created, t);\n    }\n    getSubscription(e) {\n        this.logger.debug(\"Getting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"getSubscription\",\n            id: e\n        });\n        const t = this.subscriptions.get(e);\n        if (!t) {\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(s);\n        }\n        return t;\n    }\n    deleteSubscription(e, t) {\n        this.logger.debug(\"Deleting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"deleteSubscription\",\n            id: e,\n            reason: t\n        });\n        const s = this.getSubscription(e);\n        this.subscriptions.delete(e), this.topicMap.delete(s.topic, e), this.events.emit(A.deleted, Ce(ee({}, s), {\n            reason: t\n        }));\n    }\n    async persist() {\n        await this.setRelayerSubscriptions(this.values), this.events.emit(A.sync);\n    }\n    async reset() {\n        if (this.cached.length) {\n            const e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);\n            for(let t = 0; t < e; t++){\n                const s = this.cached.splice(0, this.batchSubscribeTopicsLimit);\n                await this.batchFetchMessages(s), await this.batchSubscribe(s);\n            }\n        }\n        this.events.emit(A.resubscribed);\n    }\n    async restore() {\n        try {\n            const e = await this.getRelayerSubscriptions();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.subscriptions.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                subscriptions: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);\n        }\n    }\n    async batchSubscribe(e) {\n        if (!e.length) return;\n        const t = await this.rpcBatchSubscribe(e);\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidArray)(t) && this.onBatchSubscribe(t.map((s, i)=>Ce(ee({}, e[i]), {\n                id: s\n            })));\n    }\n    async batchFetchMessages(e) {\n        if (!e.length) return;\n        this.logger.trace(`Fetching batch messages for ${e.length} subscriptions`);\n        const t = await this.rpcBatchFetchMessages(e);\n        t && t.messages && (this.pendingBatchMessages = this.pendingBatchMessages.concat(t.messages));\n    }\n    async onConnect() {\n        await this.restart(), this.onEnable();\n    }\n    onDisconnect() {\n        this.onDisable();\n    }\n    async checkPending() {\n        if (!this.initialized || !this.relayer.connected) return;\n        const e = [];\n        this.pending.forEach((t)=>{\n            e.push(t);\n        }), await this.batchSubscribe(e), this.pendingBatchMessages.length && (await this.relayer.handleBatchMessageEvents(this.pendingBatchMessages), this.pendingBatchMessages = []);\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, async ()=>{\n            await this.checkPending();\n        }), this.events.on(A.created, async (e)=>{\n            const t = A.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), await this.persist();\n        }), this.events.on(A.deleted, async (e)=>{\n            const t = A.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), await this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async restartToComplete() {\n        !this.relayer.connected && !this.relayer.connecting && await this.relayer.transportOpen(), this.restartInProgress && await new Promise((e)=>{\n            const t = setInterval(()=>{\n                this.restartInProgress || (clearInterval(t), e());\n            }, this.pollingInterval);\n        });\n    }\n}\nvar cn = Object.defineProperty, ti = Object.getOwnPropertySymbols, hn = Object.prototype.hasOwnProperty, ln = Object.prototype.propertyIsEnumerable, ii = (o, e, t)=>e in o ? cn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, un = (o, e)=>{\n    for(var t in e || (e = {}))hn.call(e, t) && ii(o, t, e[t]);\n    if (ti) for (var t of ti(e))ln.call(e, t) && ii(o, t, e[t]);\n    return o;\n};\nclass si extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IRelayer {\n    constructor(e){\n        super(e), this.protocol = \"wc\", this.version = 2, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ht, this.transportExplicitlyClosed = !1, this.initialized = !1, this.connectionAttemptInProgress = !1, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = [\n            \"socket hang up\",\n            \"stalled\",\n            \"interrupted\"\n        ], this.hasExperiencedNetworkDisruption = !1, this.requestsInFlight = new Map, this.heartBeatTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_SECONDS + _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND), this.request = async (t)=>{\n            var s, i;\n            this.logger.debug(\"Publishing Request Payload\");\n            const r = t.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.getBigIntRpcId)().toString();\n            await this.toEstablishConnection();\n            try {\n                const n = this.provider.request(t);\n                this.requestsInFlight.set(r, {\n                    promise: n,\n                    request: t\n                }), this.logger.trace({\n                    id: r,\n                    method: t.method,\n                    topic: (s = t.params) == null ? void 0 : s.topic\n                }, \"relayer.request - attempt to publish...\");\n                const a = await new Promise(async (c, h)=>{\n                    const d = ()=>{\n                        h(new Error(`relayer.request - publish interrupted, id: ${r}`));\n                    };\n                    this.provider.on(T.disconnect, d);\n                    const g = await n;\n                    this.provider.off(T.disconnect, d), c(g);\n                });\n                return this.logger.trace({\n                    id: r,\n                    method: t.method,\n                    topic: (i = t.params) == null ? void 0 : i.topic\n                }, \"relayer.request - published\"), a;\n            } catch (n) {\n                throw this.logger.debug(`Failed to Publish Request: ${r}`), n;\n            } finally{\n                this.requestsInFlight.delete(r);\n            }\n        }, this.resetPingTimeout = ()=>{\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isNode)()) try {\n                clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(()=>{\n                    var t, s, i;\n                    (i = (s = (t = this.provider) == null ? void 0 : t.connection) == null ? void 0 : s.socket) == null || i.terminate();\n                }, this.heartBeatTimeout);\n            } catch (t) {\n                this.logger.warn(t);\n            }\n        }, this.onPayloadHandler = (t)=>{\n            this.onProviderPayload(t), this.resetPingTimeout();\n        }, this.onConnectHandler = ()=>{\n            this.logger.trace(\"relayer connected\"), this.startPingTimeout(), this.events.emit(w.connect);\n        }, this.onDisconnectHandler = ()=>{\n            this.logger.trace(\"relayer disconnected\"), this.onProviderDisconnect();\n        }, this.onProviderErrorHandler = (t)=>{\n            this.logger.error(t), this.events.emit(w.error, t), this.logger.info(\"Fatal socket error received, closing transport\"), this.transportClose();\n        }, this.registerProviderListeners = ()=>{\n            this.provider.on(T.payload, this.onPayloadHandler), this.provider.on(T.connect, this.onConnectHandler), this.provider.on(T.disconnect, this.onDisconnectHandler), this.provider.on(T.error, this.onProviderErrorHandler);\n        }, this.core = e.core, this.logger = typeof e.logger < \"u\" && typeof e.logger != \"string\" ? (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e.logger, this.name) : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: e.logger || ct\n        })), this.messages = new Xt(this.logger, e.core), this.subscriber = new ei(this, this.logger), this.publisher = new en(this, this.logger), this.relayUrl = e?.relayUrl || Ee, this.projectId = e.projectId, this.bundleId = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getBundleId)(), this.provider = {};\n    }\n    async init() {\n        if (this.logger.trace(\"Initialized\"), this.registerEventListeners(), await Promise.all([\n            this.messages.init(),\n            this.subscriber.init()\n        ]), this.initialized = !0, this.subscriber.cached.length > 0) try {\n            await this.transportOpen();\n        } catch (e) {\n            this.logger.warn(e);\n        }\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get connected() {\n        var e, t, s;\n        return ((s = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : s.readyState) === 1;\n    }\n    get connecting() {\n        var e, t, s;\n        return ((s = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : s.readyState) === 0;\n    }\n    async publish(e, t, s) {\n        this.isInitialized(), await this.publisher.publish(e, t, s), await this.recordMessageEvent({\n            topic: e,\n            message: t,\n            publishedAt: Date.now(),\n            transportType: F.relay\n        });\n    }\n    async subscribe(e, t) {\n        var s;\n        this.isInitialized(), t?.transportType === \"relay\" && await this.toEstablishConnection();\n        let i = ((s = this.subscriber.topicMap.get(e)) == null ? void 0 : s[0]) || \"\", r;\n        const n = (a)=>{\n            a.topic === e && (this.subscriber.off(A.created, n), r());\n        };\n        return await Promise.all([\n            new Promise((a)=>{\n                r = a, this.subscriber.on(A.created, n);\n            }),\n            new Promise(async (a)=>{\n                i = await this.subscriber.subscribe(e, t) || i, a();\n            })\n        ]), i;\n    }\n    async unsubscribe(e, t) {\n        this.isInitialized(), await this.subscriber.unsubscribe(e, t);\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async transportDisconnect() {\n        if (!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0) try {\n            await Promise.all(Array.from(this.requestsInFlight.values()).map((e)=>e.promise));\n        } catch (e) {\n            this.logger.warn(e);\n        }\n        this.hasExperiencedNetworkDisruption || this.connected ? await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.provider.disconnect(), 2e3, \"provider.disconnect()\").catch(()=>this.onProviderDisconnect()) : this.onProviderDisconnect();\n    }\n    async transportClose() {\n        this.transportExplicitlyClosed = !0, await this.transportDisconnect();\n    }\n    async transportOpen(e) {\n        await this.confirmOnlineStateOrThrow(), e && e !== this.relayUrl && (this.relayUrl = e, await this.transportDisconnect()), await this.createProvider(), this.connectionAttemptInProgress = !0, this.transportExplicitlyClosed = !1;\n        try {\n            await new Promise(async (t, s)=>{\n                const i = ()=>{\n                    this.provider.off(T.disconnect, i), s(new Error(\"Connection interrupted while trying to subscribe\"));\n                };\n                this.provider.on(T.disconnect, i), await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.provider.connect(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_MINUTE), `Socket stalled when trying to connect to ${this.relayUrl}`).catch((r)=>{\n                    s(r);\n                }).finally(()=>{\n                    clearTimeout(this.reconnectTimeout), this.reconnectTimeout = void 0;\n                }), this.subscriber.start().catch((r)=>{\n                    this.logger.error(r), this.onDisconnectHandler();\n                }), this.hasExperiencedNetworkDisruption = !1, t();\n            });\n        } catch (t) {\n            this.logger.error(t);\n            const s = t;\n            if (this.hasExperiencedNetworkDisruption = !0, !this.isConnectionStalled(s.message)) throw t;\n        } finally{\n            this.connectionAttemptInProgress = !1;\n        }\n    }\n    async restartTransport(e) {\n        this.connectionAttemptInProgress || (this.relayUrl = e || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());\n    }\n    async confirmOnlineStateOrThrow() {\n        if (!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isOnline)()) throw new Error(\"No internet connection detected. Please restart your network and try again.\");\n    }\n    async handleBatchMessageEvents(e) {\n        if (e?.length === 0) {\n            this.logger.trace(\"Batch message events is empty. Ignoring...\");\n            return;\n        }\n        const t = e.sort((s, i)=>s.publishedAt - i.publishedAt);\n        this.logger.trace(`Batch of ${t.length} message events sorted`);\n        for (const s of t)try {\n            await this.onMessageEvent(s);\n        } catch (i) {\n            this.logger.warn(i);\n        }\n        this.logger.trace(`Batch of ${t.length} message events processed`);\n    }\n    async onLinkMessageEvent(e, t) {\n        const { topic: s } = e;\n        if (!t.sessionExists) {\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_MINUTES), r = {\n                topic: s,\n                expiry: i,\n                relay: {\n                    protocol: \"irn\"\n                },\n                active: !1\n            };\n            await this.core.pairing.pairings.set(s, r);\n        }\n        this.events.emit(w.message, e), await this.recordMessageEvent(e);\n    }\n    startPingTimeout() {\n        var e, t, s, i, r;\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isNode)()) try {\n            (t = (e = this.provider) == null ? void 0 : e.connection) != null && t.socket && ((r = (i = (s = this.provider) == null ? void 0 : s.connection) == null ? void 0 : i.socket) == null || r.once(\"ping\", ()=>{\n                this.resetPingTimeout();\n            })), this.resetPingTimeout();\n        } catch (n) {\n            this.logger.warn(n);\n        }\n    }\n    isConnectionStalled(e) {\n        return this.staleConnectionErrors.some((t)=>e.includes(t));\n    }\n    async createProvider() {\n        this.provider.connection && this.unregisterProviderListeners();\n        const e = await this.core.crypto.signJWT(this.relayUrl);\n        this.provider = new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__.JsonRpcProvider(new _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatRelayRpcUrl)({\n            sdkVersion: oe,\n            protocol: this.protocol,\n            version: this.version,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId,\n            auth: e,\n            useOnCloseEvent: !0,\n            bundleId: this.bundleId\n        }))), this.registerProviderListeners();\n    }\n    async recordMessageEvent(e) {\n        const { topic: t, message: s } = e;\n        await this.messages.set(t, s);\n    }\n    async shouldIgnoreMessageEvent(e) {\n        const { topic: t, message: s } = e;\n        if (!s || s.length === 0) return this.logger.debug(`Ignoring invalid/empty message: ${s}`), !0;\n        if (!await this.subscriber.isSubscribed(t)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t}`), !0;\n        const i = this.messages.has(t, s);\n        return i && this.logger.debug(`Ignoring duplicate message: ${s}`), i;\n    }\n    async onProviderPayload(e) {\n        if (this.logger.debug(\"Incoming Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"incoming\",\n            payload: e\n        }), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(e)) {\n            if (!e.method.endsWith(lt)) return;\n            const t = e.params, { topic: s, message: i, publishedAt: r, attestation: n } = t.data, a = {\n                topic: s,\n                message: i,\n                publishedAt: r,\n                transportType: F.relay,\n                attestation: n\n            };\n            this.logger.debug(\"Emitting Relayer Payload\"), this.logger.trace(un({\n                type: \"event\",\n                event: t.id\n            }, a)), this.events.emit(t.id, a), await this.acknowledgePayload(e), await this.onMessageEvent(a);\n        } else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(e) && this.events.emit(w.message_ack, e);\n    }\n    async onMessageEvent(e) {\n        await this.shouldIgnoreMessageEvent(e) || (this.events.emit(w.message, e), await this.recordMessageEvent(e));\n    }\n    async acknowledgePayload(e) {\n        const t = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(e.id, !0);\n        await this.provider.connection.send(t);\n    }\n    unregisterProviderListeners() {\n        this.provider.off(T.payload, this.onPayloadHandler), this.provider.off(T.connect, this.onConnectHandler), this.provider.off(T.disconnect, this.onDisconnectHandler), this.provider.off(T.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);\n    }\n    async registerEventListeners() {\n        let e = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isOnline)();\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.subscribeToNetworkChange)(async (t)=>{\n            e !== t && (e = t, t ? await this.restartTransport().catch((s)=>this.logger.error(s)) : (this.hasExperiencedNetworkDisruption = !0, await this.transportDisconnect(), this.transportExplicitlyClosed = !1));\n        });\n    }\n    async onProviderDisconnect() {\n        await this.subscriber.stop(), this.requestsInFlight.clear(), clearTimeout(this.pingTimeout), this.events.emit(w.disconnect), this.connectionAttemptInProgress = !1, !this.transportExplicitlyClosed && (this.reconnectTimeout || (this.reconnectTimeout = setTimeout(async ()=>{\n            await this.transportOpen().catch((e)=>this.logger.error(e));\n        }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(ut))));\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async toEstablishConnection() {\n        await this.confirmOnlineStateOrThrow(), !this.connected && (this.connectionAttemptInProgress && await new Promise((e)=>{\n            const t = setInterval(()=>{\n                this.connected && (clearInterval(t), e());\n            }, this.connectionStatusPollingInterval);\n        }), await this.transportOpen());\n    }\n}\nvar dn = Object.defineProperty, ri = Object.getOwnPropertySymbols, gn = Object.prototype.hasOwnProperty, pn = Object.prototype.propertyIsEnumerable, ni = (o, e, t)=>e in o ? dn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, oi = (o, e)=>{\n    for(var t in e || (e = {}))gn.call(e, t) && ni(o, t, e[t]);\n    if (ri) for (var t of ri(e))pn.call(e, t) && ni(o, t, e[t]);\n    return o;\n};\nclass ai extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IStore {\n    constructor(e, t, s, i = O, r = void 0){\n        super(e, t, s, i), this.core = e, this.logger = t, this.name = s, this.map = new Map, this.version = dt, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.recentlyDeleted = [], this.recentlyDeletedLimit = 200, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((n)=>{\n                this.getKey && n !== null && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isUndefined)(n) ? this.map.set(this.getKey(n), n) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isProposalStruct)(n) ? this.map.set(n.id, n) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isSessionStruct)(n) && this.map.set(n.topic, n);\n            }), this.cached = [], this.initialized = !0);\n        }, this.set = async (n, a)=>{\n            this.isInitialized(), this.map.has(n) ? await this.update(n, a) : (this.logger.debug(\"Setting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                key: n,\n                value: a\n            }), this.map.set(n, a), await this.persist());\n        }, this.get = (n)=>(this.isInitialized(), this.logger.debug(\"Getting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                key: n\n            }), this.getData(n)), this.getAll = (n)=>(this.isInitialized(), n ? this.values.filter((a)=>Object.keys(n).every((c)=>lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default()(a[c], n[c]))) : this.values), this.update = async (n, a)=>{\n            this.isInitialized(), this.logger.debug(\"Updating value\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                key: n,\n                update: a\n            });\n            const c = oi(oi({}, this.getData(n)), a);\n            this.map.set(n, c), await this.persist();\n        }, this.delete = async (n, a)=>{\n            this.isInitialized(), this.map.has(n) && (this.logger.debug(\"Deleting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                key: n,\n                reason: a\n            }), this.map.delete(n), this.addToRecentlyDeleted(n), await this.persist());\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.storagePrefix = i, this.getKey = r;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.map.size;\n    }\n    get keys() {\n        return Array.from(this.map.keys());\n    }\n    get values() {\n        return Array.from(this.map.values());\n    }\n    addToRecentlyDeleted(e) {\n        this.recentlyDeleted.push(e), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);\n    }\n    async setDataStore(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getDataStore() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getData(e) {\n        const t = this.map.get(e);\n        if (!t) {\n            if (this.recentlyDeleted.includes(e)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `Record was recently deleted - ${this.name}: ${e}`);\n                throw this.logger.error(i), new Error(i);\n            }\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.error(s), new Error(s);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setDataStore(this.values);\n    }\n    async restore() {\n        try {\n            const e = await this.getDataStore();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.map.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                value: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass ci {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.name = mt, this.version = bt, this.events = new (events__WEBPACK_IMPORTED_MODULE_0___default()), this.initialized = !1, this.storagePrefix = O, this.ignoredPayloadTypes = [\n            _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.TYPE_1\n        ], this.registeredMethods = [], this.init = async ()=>{\n            this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = !0, this.logger.trace(\"Initialized\"));\n        }, this.register = ({ methods: s })=>{\n            this.isInitialized(), this.registeredMethods = [\n                ...new Set([\n                    ...this.registeredMethods,\n                    ...s\n                ])\n            ];\n        }, this.create = async (s)=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateRandomBytes32)(), r = await this.core.crypto.setSymKey(i), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_MINUTES), a = {\n                protocol: at\n            }, c = {\n                topic: r,\n                expiry: n,\n                relay: a,\n                active: !1,\n                methods: s?.methods\n            }, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatUri)({\n                protocol: this.core.protocol,\n                version: this.core.version,\n                topic: r,\n                symKey: i,\n                relay: a,\n                expiryTimestamp: n,\n                methods: s?.methods\n            });\n            return this.events.emit(q.create, c), this.core.expirer.set(r, n), await this.pairings.set(r, c), await this.core.relayer.subscribe(r, {\n                transportType: s?.transportType\n            }), {\n                topic: r,\n                uri: h\n            };\n        }, this.pair = async (s)=>{\n            this.isInitialized();\n            const i = this.core.eventClient.createEvent({\n                properties: {\n                    topic: s?.uri,\n                    trace: [\n                        z.pairing_started\n                    ]\n                }\n            });\n            this.isValidPair(s, i);\n            const { topic: r, symKey: n, relay: a, expiryTimestamp: c, methods: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.parseUri)(s.uri);\n            i.props.properties.topic = r, i.addTrace(z.pairing_uri_validation_success), i.addTrace(z.pairing_uri_not_expired);\n            let d;\n            if (this.pairings.keys.includes(r)) {\n                if (d = this.pairings.get(r), i.addTrace(z.existing_pairing), d.active) throw i.setError(M.active_pairing_already_exists), new Error(`Pairing already exists: ${r}. Please try again with a new connection URI.`);\n                i.addTrace(z.pairing_not_expired);\n            }\n            const g = c || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_MINUTES), m = {\n                topic: r,\n                relay: a,\n                expiry: g,\n                active: !1,\n                methods: h\n            };\n            this.core.expirer.set(r, g), await this.pairings.set(r, m), i.addTrace(z.store_new_pairing), s.activatePairing && await this.activate({\n                topic: r\n            }), this.events.emit(q.create, m), i.addTrace(z.emit_inactive_pairing), this.core.crypto.keychain.has(r) || await this.core.crypto.setSymKey(n, r), i.addTrace(z.subscribing_pairing_topic);\n            try {\n                await this.core.relayer.confirmOnlineStateOrThrow();\n            } catch  {\n                i.setError(M.no_internet_connection);\n            }\n            try {\n                await this.core.relayer.subscribe(r, {\n                    relay: a\n                });\n            } catch (b) {\n                throw i.setError(M.subscribe_pairing_topic_failure), b;\n            }\n            return i.addTrace(z.subscribe_pairing_topic_success), m;\n        }, this.activate = async ({ topic: s })=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS);\n            this.core.expirer.set(s, i), await this.pairings.update(s, {\n                active: !0,\n                expiry: i\n            });\n        }, this.ping = async (s)=>{\n            this.isInitialized(), await this.isValidPing(s);\n            const { topic: i } = s;\n            if (this.pairings.keys.includes(i)) {\n                const r = await this.sendRequest(i, \"wc_pairingPing\", {}), { done: n, resolve: a, reject: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.engineEvent)(\"pairing_ping\", r), ({ error: h })=>{\n                    h ? c(h) : a();\n                }), await n();\n            }\n        }, this.updateExpiry = async ({ topic: s, expiry: i })=>{\n            this.isInitialized(), await this.pairings.update(s, {\n                expiry: i\n            });\n        }, this.updateMetadata = async ({ topic: s, metadata: i })=>{\n            this.isInitialized(), await this.pairings.update(s, {\n                peerMetadata: i\n            });\n        }, this.getPairings = ()=>(this.isInitialized(), this.pairings.values), this.disconnect = async (s)=>{\n            this.isInitialized(), await this.isValidDisconnect(s);\n            const { topic: i } = s;\n            this.pairings.keys.includes(i) && (await this.sendRequest(i, \"wc_pairingDelete\", (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"USER_DISCONNECTED\")), await this.deletePairing(i));\n        }, this.formatUriFromPairing = (s)=>{\n            this.isInitialized();\n            const { topic: i, relay: r, expiry: n, methods: a } = s, c = this.core.crypto.keychain.get(i);\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatUri)({\n                protocol: this.core.protocol,\n                version: this.core.version,\n                topic: i,\n                symKey: c,\n                relay: r,\n                expiryTimestamp: n,\n                methods: a\n            });\n        }, this.sendRequest = async (s, i, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(i, r), a = await this.core.crypto.encode(s, n), c = j[i].req;\n            return this.core.history.set(s, n), this.core.relayer.publish(s, a, c), n.id;\n        }, this.sendResult = async (s, i, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(s, r), a = await this.core.crypto.encode(i, n), c = await this.core.history.get(i, s), h = j[c.request.method].res;\n            await this.core.relayer.publish(i, a, h), await this.core.history.resolve(n);\n        }, this.sendError = async (s, i, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcError)(s, r), a = await this.core.crypto.encode(i, n), c = await this.core.history.get(i, s), h = j[c.request.method] ? j[c.request.method].res : j.unregistered_method.res;\n            await this.core.relayer.publish(i, a, h), await this.core.history.resolve(n);\n        }, this.deletePairing = async (s, i)=>{\n            await this.core.relayer.unsubscribe(s), await Promise.all([\n                this.pairings.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"USER_DISCONNECTED\")),\n                this.core.crypto.deleteSymKey(s),\n                i ? Promise.resolve() : this.core.expirer.del(s)\n            ]);\n        }, this.cleanup = async ()=>{\n            const s = this.pairings.getAll().filter((i)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isExpired)(i.expiry));\n            await Promise.all(s.map((i)=>this.deletePairing(i.topic)));\n        }, this.onRelayEventRequest = (s)=>{\n            const { topic: i, payload: r } = s;\n            switch(r.method){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingRequest(i, r);\n                case \"wc_pairingDelete\":\n                    return this.onPairingDeleteRequest(i, r);\n                default:\n                    return this.onUnknownRpcMethodRequest(i, r);\n            }\n        }, this.onRelayEventResponse = async (s)=>{\n            const { topic: i, payload: r } = s, n = (await this.core.history.get(i, r.id)).request.method;\n            switch(n){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingResponse(i, r);\n                default:\n                    return this.onUnknownRpcMethodResponse(n);\n            }\n        }, this.onPairingPingRequest = async (s, i)=>{\n            const { id: r } = i;\n            try {\n                this.isValidPing({\n                    topic: s\n                }), await this.sendResult(r, s, !0), this.events.emit(q.ping, {\n                    id: r,\n                    topic: s\n                });\n            } catch (n) {\n                await this.sendError(r, s, n), this.logger.error(n);\n            }\n        }, this.onPairingPingResponse = (s, i)=>{\n            const { id: r } = i;\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResult)(i) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.engineEvent)(\"pairing_ping\", r), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(i) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.engineEvent)(\"pairing_ping\", r), {\n                    error: i.error\n                });\n            }, 500);\n        }, this.onPairingDeleteRequest = async (s, i)=>{\n            const { id: r } = i;\n            try {\n                this.isValidDisconnect({\n                    topic: s\n                }), await this.deletePairing(s), this.events.emit(q.delete, {\n                    id: r,\n                    topic: s\n                });\n            } catch (n) {\n                await this.sendError(r, s, n), this.logger.error(n);\n            }\n        }, this.onUnknownRpcMethodRequest = async (s, i)=>{\n            const { id: r, method: n } = i;\n            try {\n                if (this.registeredMethods.includes(n)) return;\n                const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", n);\n                await this.sendError(r, s, a), this.logger.error(a);\n            } catch (a) {\n                await this.sendError(r, s, a), this.logger.error(a);\n            }\n        }, this.onUnknownRpcMethodResponse = (s)=>{\n            this.registeredMethods.includes(s) || this.logger.error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", s));\n        }, this.isValidPair = (s, i)=>{\n            var r;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidParams)(s)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `pair() params: ${s}`);\n                throw i.setError(M.malformed_pairing_uri), new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidUrl)(s.uri)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `pair() uri: ${s.uri}`);\n                throw i.setError(M.malformed_pairing_uri), new Error(a);\n            }\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.parseUri)(s?.uri);\n            if (!((r = n?.relay) != null && r.protocol)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", \"pair() uri#relay-protocol\");\n                throw i.setError(M.malformed_pairing_uri), new Error(a);\n            }\n            if (!(n != null && n.symKey)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", \"pair() uri#symKey\");\n                throw i.setError(M.malformed_pairing_uri), new Error(a);\n            }\n            if (n != null && n.expiryTimestamp && (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(n?.expiryTimestamp) < Date.now()) {\n                i.setError(M.pairing_expired);\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"EXPIRED\", \"pair() URI has expired. Please try again with a new connection URI.\");\n                throw new Error(a);\n            }\n        }, this.isValidPing = async (s)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidParams)(s)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${s}`);\n                throw new Error(r);\n            }\n            const { topic: i } = s;\n            await this.isValidPairingTopic(i);\n        }, this.isValidDisconnect = async (s)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidParams)(s)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${s}`);\n                throw new Error(r);\n            }\n            const { topic: i } = s;\n            await this.isValidPairingTopic(i);\n        }, this.isValidPairingTopic = async (s)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidString)(s, !1)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${s}`);\n                throw new Error(i);\n            }\n            if (!this.pairings.keys.includes(s)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${s}`);\n                throw new Error(i);\n            }\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isExpired)(this.pairings.get(s).expiry)) {\n                await this.deletePairing(s);\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"EXPIRED\", `pairing topic: ${s}`);\n                throw new Error(i);\n            }\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.pairings = new ai(this.core, this.logger, this.name, this.storagePrefix);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    registerRelayerEvents() {\n        this.core.relayer.on(w.message, async (e)=>{\n            const { topic: t, message: s, transportType: i } = e;\n            if (!this.pairings.keys.includes(t) || i === F.link_mode || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(s))) return;\n            const r = await this.core.crypto.decode(t, s);\n            try {\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(r) ? (this.core.history.set(t, r), this.onRelayEventRequest({\n                    topic: t,\n                    payload: r\n                })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(r) && (await this.core.history.resolve(r), await this.onRelayEventResponse({\n                    topic: t,\n                    payload: r\n                }), this.core.history.delete(t, r.id));\n            } catch (n) {\n                this.logger.error(n);\n            }\n        });\n    }\n    registerExpirerEvents() {\n        this.core.expirer.on(R.expired, async (e)=>{\n            const { topic: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.parseExpirerTarget)(e.target);\n            t && this.pairings.keys.includes(t) && (await this.deletePairing(t, !0), this.events.emit(q.expire, {\n                topic: t\n            }));\n        });\n    }\n}\nclass hi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IJsonRpcHistory {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.records = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ft, this.version = _t, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((s)=>this.records.set(s.id, s)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.set = (s, i, r)=>{\n            if (this.isInitialized(), this.logger.debug(\"Setting JSON-RPC request history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                topic: s,\n                request: i,\n                chainId: r\n            }), this.records.has(i.id)) return;\n            const n = {\n                id: i.id,\n                topic: s,\n                request: {\n                    method: i.method,\n                    params: i.params || null\n                },\n                chainId: r,\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS)\n            };\n            this.records.set(n.id, n), this.persist(), this.events.emit(P.created, n);\n        }, this.resolve = async (s)=>{\n            if (this.isInitialized(), this.logger.debug(\"Updating JSON-RPC response history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                response: s\n            }), !this.records.has(s.id)) return;\n            const i = await this.getRecord(s.id);\n            typeof i.response > \"u\" && (i.response = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(s) ? {\n                error: s.error\n            } : {\n                result: s.result\n            }, this.records.set(i.id, i), this.persist(), this.events.emit(P.updated, i));\n        }, this.get = async (s, i)=>(this.isInitialized(), this.logger.debug(\"Getting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                topic: s,\n                id: i\n            }), await this.getRecord(i)), this.delete = (s, i)=>{\n            this.isInitialized(), this.logger.debug(\"Deleting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                id: i\n            }), this.values.forEach((r)=>{\n                if (r.topic === s) {\n                    if (typeof i < \"u\" && r.id !== i) return;\n                    this.records.delete(r.id), this.events.emit(P.deleted, r);\n                }\n            }), this.persist();\n        }, this.exists = async (s, i)=>(this.isInitialized(), this.records.has(i) ? (await this.getRecord(i)).topic === s : !1), this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get size() {\n        return this.records.size;\n    }\n    get keys() {\n        return Array.from(this.records.keys());\n    }\n    get values() {\n        return Array.from(this.records.values());\n    }\n    get pending() {\n        const e = [];\n        return this.values.forEach((t)=>{\n            if (typeof t.response < \"u\") return;\n            const s = {\n                topic: t.topic,\n                request: (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(t.request.method, t.request.params, t.id),\n                chainId: t.chainId\n            };\n            return e.push(s);\n        }), e;\n    }\n    async setJsonRpcRecords(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getJsonRpcRecords() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getRecord(e) {\n        this.isInitialized();\n        const t = this.records.get(e);\n        if (!t) {\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(s);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setJsonRpcRecords(this.values), this.events.emit(P.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getJsonRpcRecords();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.records.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                records: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);\n        }\n    }\n    registerEventListeners() {\n        this.events.on(P.created, (e)=>{\n            const t = P.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.events.on(P.updated, (e)=>{\n            const t = P.updated;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.events.on(P.deleted, (e)=>{\n            const t = P.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, ()=>{\n            this.cleanup();\n        });\n    }\n    cleanup() {\n        try {\n            this.isInitialized();\n            let e = !1;\n            this.records.forEach((t)=>{\n                (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(t.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${t.id}`), this.records.delete(t.id), this.events.emit(P.deleted, t, !1), e = !0);\n            }), e && this.persist();\n        } catch (e) {\n            this.logger.warn(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass li extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IExpirer {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.expirations = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = Et, this.version = vt, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((s)=>this.expirations.set(s.target, s)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.has = (s)=>{\n            try {\n                const i = this.formatTarget(s);\n                return typeof this.getExpiration(i) < \"u\";\n            } catch  {\n                return !1;\n            }\n        }, this.set = (s, i)=>{\n            this.isInitialized();\n            const r = this.formatTarget(s), n = {\n                target: r,\n                expiry: i\n            };\n            this.expirations.set(r, n), this.checkExpiry(r, n), this.events.emit(R.created, {\n                target: r,\n                expiration: n\n            });\n        }, this.get = (s)=>{\n            this.isInitialized();\n            const i = this.formatTarget(s);\n            return this.getExpiration(i);\n        }, this.del = (s)=>{\n            if (this.isInitialized(), this.has(s)) {\n                const i = this.formatTarget(s), r = this.getExpiration(i);\n                this.expirations.delete(i), this.events.emit(R.deleted, {\n                    target: i,\n                    expiration: r\n                });\n            }\n        }, this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.expirations.size;\n    }\n    get keys() {\n        return Array.from(this.expirations.keys());\n    }\n    get values() {\n        return Array.from(this.expirations.values());\n    }\n    formatTarget(e) {\n        if (typeof e == \"string\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatTopicTarget)(e);\n        if (typeof e == \"number\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatIdTarget)(e);\n        const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"UNKNOWN_TYPE\", `Target type: ${typeof e}`);\n        throw new Error(t);\n    }\n    async setExpirations(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getExpirations() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    async persist() {\n        await this.setExpirations(this.values), this.events.emit(R.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getExpirations();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.expirations.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                expirations: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);\n        }\n    }\n    getExpiration(e) {\n        const t = this.expirations.get(e);\n        if (!t) {\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.warn(s), new Error(s);\n        }\n        return t;\n    }\n    checkExpiry(e, t) {\n        const { expiry: s } = t;\n        (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(s) - Date.now() <= 0 && this.expire(e, t);\n    }\n    expire(e, t) {\n        this.expirations.delete(e), this.events.emit(R.expired, {\n            target: e,\n            expiration: t\n        });\n    }\n    checkExpirations() {\n        this.core.relayer.connected && this.expirations.forEach((e, t)=>this.checkExpiry(t, e));\n    }\n    registerEventListeners() {\n        this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, ()=>this.checkExpirations()), this.events.on(R.created, (e)=>{\n            const t = R.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(R.expired, (e)=>{\n            const t = R.expired;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(R.deleted, (e)=>{\n            const t = R.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nvar y = {};\nObject.defineProperty(y, \"__esModule\", {\n    value: !0\n}), y.getLocalStorage = y.getLocalStorageOrThrow = y.getCrypto = y.getCryptoOrThrow = y.getLocation = y.getLocationOrThrow = y.getNavigator = y.getNavigatorOrThrow = ui = y.getDocument = y.getDocumentOrThrow = y.getFromWindowOrThrow = y.getFromWindow = void 0;\nfunction U(o) {\n    let e;\n    return  false && (0), e;\n}\ny.getFromWindow = U;\nfunction G(o) {\n    const e = U(o);\n    if (!e) throw new Error(`${o} is not defined in Window`);\n    return e;\n}\ny.getFromWindowOrThrow = G;\nfunction yn() {\n    return G(\"document\");\n}\ny.getDocumentOrThrow = yn;\nfunction Dn() {\n    return U(\"document\");\n}\nvar ui = y.getDocument = Dn;\nfunction mn() {\n    return G(\"navigator\");\n}\ny.getNavigatorOrThrow = mn;\nfunction bn() {\n    return U(\"navigator\");\n}\ny.getNavigator = bn;\nfunction fn() {\n    return G(\"location\");\n}\ny.getLocationOrThrow = fn;\nfunction _n() {\n    return U(\"location\");\n}\ny.getLocation = _n;\nfunction En() {\n    return G(\"crypto\");\n}\ny.getCryptoOrThrow = En;\nfunction vn() {\n    return U(\"crypto\");\n}\ny.getCrypto = vn;\nfunction wn() {\n    return G(\"localStorage\");\n}\ny.getLocalStorageOrThrow = wn;\nfunction In() {\n    return U(\"localStorage\");\n}\ny.getLocalStorage = In;\nclass di extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IVerify {\n    constructor(e, t, s){\n        super(e, t, s), this.core = e, this.logger = t, this.store = s, this.name = wt, this.verifyUrlV3 = Tt, this.storagePrefix = O, this.version = fe, this.init = async ()=>{\n            var i;\n            this.isDevEnv || (this.publicKey = await this.store.getItem(this.storeKey), this.publicKey && (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)((i = this.publicKey) == null ? void 0 : i.expiresAt) < Date.now() && (this.logger.debug(\"verify v2 public key expired\"), await this.removePublicKey()));\n        }, this.register = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isBrowser)() || this.isDevEnv) return;\n            const r = window.location.origin, { id: n, decryptedId: a } = i, c = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${r}&id=${n}&decryptedId=${a}`;\n            try {\n                const h = ui(), d = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND * 5), g = await new Promise((m, b)=>{\n                    const l = ()=>{\n                        window.removeEventListener(\"message\", E), h.body.removeChild(p), b(\"attestation aborted\");\n                    };\n                    this.abortController.signal.addEventListener(\"abort\", l);\n                    const p = h.createElement(\"iframe\");\n                    p.src = c, p.style.display = \"none\", p.addEventListener(\"error\", l, {\n                        signal: this.abortController.signal\n                    });\n                    const E = (D)=>{\n                        if (D.data && typeof D.data == \"string\") try {\n                            const f = JSON.parse(D.data);\n                            if (f.type === \"verify_attestation\") {\n                                if ((0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.decodeJWT)(f.attestation).payload.id !== n) return;\n                                clearInterval(d), h.body.removeChild(p), this.abortController.signal.removeEventListener(\"abort\", l), window.removeEventListener(\"message\", E), m(f.attestation === null ? \"\" : f.attestation);\n                            }\n                        } catch (f) {\n                            this.logger.warn(f);\n                        }\n                    };\n                    h.body.appendChild(p), window.addEventListener(\"message\", E, {\n                        signal: this.abortController.signal\n                    });\n                });\n                return this.logger.debug(\"jwt attestation\", g), g;\n            } catch (h) {\n                this.logger.warn(h);\n            }\n            return \"\";\n        }, this.resolve = async (i)=>{\n            if (this.isDevEnv) return \"\";\n            const { attestationId: r, hash: n, encryptedId: a } = i;\n            if (r === \"\") {\n                this.logger.debug(\"resolve: attestationId is empty, skipping\");\n                return;\n            }\n            if (r) {\n                if ((0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.decodeJWT)(r).payload.id !== a) return;\n                const h = await this.isValidJwtAttestation(r);\n                if (h) {\n                    if (!h.isVerified) {\n                        this.logger.warn(\"resolve: jwt attestation: origin url not verified\");\n                        return;\n                    }\n                    return h;\n                }\n            }\n            if (!n) return;\n            const c = this.getVerifyUrl(i?.verifyUrl);\n            return this.fetchAttestation(n, c);\n        }, this.fetchAttestation = async (i, r)=>{\n            this.logger.debug(`resolving attestation: ${i} from url: ${r}`);\n            const n = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND * 5), a = await fetch(`${r}/attestation/${i}?v2Supported=true`, {\n                signal: this.abortController.signal\n            });\n            return clearTimeout(n), a.status === 200 ? await a.json() : void 0;\n        }, this.getVerifyUrl = (i)=>{\n            let r = i || Z;\n            return Ct.includes(r) || (this.logger.info(`verify url: ${r}, not included in trusted list, assigning default: ${Z}`), r = Z), r;\n        }, this.fetchPublicKey = async ()=>{\n            try {\n                this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);\n                const i = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_SECONDS), r = await fetch(`${this.verifyUrlV3}/public-key`, {\n                    signal: this.abortController.signal\n                });\n                return clearTimeout(i), await r.json();\n            } catch (i) {\n                this.logger.warn(i);\n            }\n        }, this.persistPublicKey = async (i)=>{\n            this.logger.debug(\"persisting public key to local storage\", i), await this.store.setItem(this.storeKey, i), this.publicKey = i;\n        }, this.removePublicKey = async ()=>{\n            this.logger.debug(\"removing verify v2 public key from storage\"), await this.store.removeItem(this.storeKey), this.publicKey = void 0;\n        }, this.isValidJwtAttestation = async (i)=>{\n            const r = await this.getPublicKey();\n            try {\n                if (r) return this.validateAttestation(i, r);\n            } catch (a) {\n                this.logger.error(a), this.logger.warn(\"error validating attestation\");\n            }\n            const n = await this.fetchAndPersistPublicKey();\n            try {\n                if (n) return this.validateAttestation(i, n);\n            } catch (a) {\n                this.logger.error(a), this.logger.warn(\"error validating attestation\");\n            }\n        }, this.getPublicKey = async ()=>this.publicKey ? this.publicKey : await this.fetchAndPersistPublicKey(), this.fetchAndPersistPublicKey = async ()=>{\n            if (this.fetchPromise) return await this.fetchPromise, this.publicKey;\n            this.fetchPromise = new Promise(async (r)=>{\n                const n = await this.fetchPublicKey();\n                n && (await this.persistPublicKey(n), r(n));\n            });\n            const i = await this.fetchPromise;\n            return this.fetchPromise = void 0, i;\n        }, this.validateAttestation = (i, r)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.verifyP256Jwt)(i, r.publicKey), a = {\n                hasExpired: (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(n.exp) < Date.now(),\n                payload: n\n            };\n            if (a.hasExpired) throw this.logger.warn(\"resolve: jwt attestation expired\"), new Error(\"JWT attestation expired\");\n            return {\n                origin: a.payload.origin,\n                isScam: a.payload.isScam,\n                isVerified: a.payload.isVerified\n            };\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.abortController = new AbortController, this.isDevEnv = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTestRun)(), this.init();\n    }\n    get storeKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//verify:public:key\";\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    startAbortTimer(e) {\n        return this.abortController = new AbortController, setTimeout(()=>this.abortController.abort(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(e));\n    }\n}\nclass gi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IEchoClient {\n    constructor(e, t){\n        super(e, t), this.projectId = e, this.logger = t, this.context = St, this.registerDeviceToken = async (s)=>{\n            const { clientId: i, token: r, notificationType: n, enableEncrypted: a = !1 } = s, c = `${Pt}/${this.projectId}/clients`;\n            await fetch(c, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    client_id: i,\n                    type: n,\n                    token: r,\n                    always_raw: a\n                })\n            });\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.context);\n    }\n}\nvar Tn = Object.defineProperty, pi = Object.getOwnPropertySymbols, Cn = Object.prototype.hasOwnProperty, Sn = Object.prototype.propertyIsEnumerable, yi = (o, e, t)=>e in o ? Tn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, te = (o, e)=>{\n    for(var t in e || (e = {}))Cn.call(e, t) && yi(o, t, e[t]);\n    if (pi) for (var t of pi(e))Sn.call(e, t) && yi(o, t, e[t]);\n    return o;\n};\nclass Di extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IEventClient {\n    constructor(e, t, s = !0){\n        super(e, t, s), this.core = e, this.logger = t, this.context = xt, this.storagePrefix = O, this.storageVersion = Rt, this.events = new Map, this.shouldPersist = !1, this.init = async ()=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTestRun)()) try {\n                const i = {\n                    eventId: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.uuidv4)(),\n                    timestamp: Date.now(),\n                    domain: this.getAppDomain(),\n                    props: {\n                        event: \"INIT\",\n                        type: \"\",\n                        properties: {\n                            client_id: await this.core.crypto.getClientId(),\n                            user_agent: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatUA)(this.core.relayer.protocol, this.core.relayer.version, oe)\n                        }\n                    }\n                };\n                await this.sendEvent([\n                    i\n                ]);\n            } catch (i) {\n                this.logger.warn(i);\n            }\n        }, this.createEvent = (i)=>{\n            const { event: r = \"ERROR\", type: n = \"\", properties: { topic: a, trace: c } } = i, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.uuidv4)(), d = this.core.projectId || \"\", g = Date.now(), m = te({\n                eventId: h,\n                timestamp: g,\n                props: {\n                    event: r,\n                    type: n,\n                    properties: {\n                        topic: a,\n                        trace: c\n                    }\n                },\n                bundleId: d,\n                domain: this.getAppDomain()\n            }, this.setMethods(h));\n            return this.telemetryEnabled && (this.events.set(h, m), this.shouldPersist = !0), m;\n        }, this.getEvent = (i)=>{\n            const { eventId: r, topic: n } = i;\n            if (r) return this.events.get(r);\n            const a = Array.from(this.events.values()).find((c)=>c.props.properties.topic === n);\n            if (a) return te(te({}, a), this.setMethods(a.eventId));\n        }, this.deleteEvent = (i)=>{\n            const { eventId: r } = i;\n            this.events.delete(r), this.shouldPersist = !0;\n        }, this.setEventListeners = ()=>{\n            this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, async ()=>{\n                this.shouldPersist && await this.persist(), this.events.forEach((i)=>{\n                    (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.fromMiliseconds)(Date.now()) - (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.fromMiliseconds)(i.timestamp) > Ot && (this.events.delete(i.eventId), this.shouldPersist = !0);\n                });\n            });\n        }, this.setMethods = (i)=>({\n                addTrace: (r)=>this.addTrace(i, r),\n                setError: (r)=>this.setError(i, r)\n            }), this.addTrace = (i, r)=>{\n            const n = this.events.get(i);\n            n && (n.props.properties.trace.push(r), this.events.set(i, n), this.shouldPersist = !0);\n        }, this.setError = (i, r)=>{\n            const n = this.events.get(i);\n            n && (n.props.type = r, n.timestamp = Date.now(), this.events.set(i, n), this.shouldPersist = !0);\n        }, this.persist = async ()=>{\n            await this.core.storage.setItem(this.storageKey, Array.from(this.events.values())), this.shouldPersist = !1;\n        }, this.restore = async ()=>{\n            try {\n                const i = await this.core.storage.getItem(this.storageKey) || [];\n                if (!i.length) return;\n                i.forEach((r)=>{\n                    this.events.set(r.eventId, te(te({}, r), this.setMethods(r.eventId)));\n                });\n            } catch (i) {\n                this.logger.warn(i);\n            }\n        }, this.submit = async ()=>{\n            if (!this.telemetryEnabled || this.events.size === 0) return;\n            const i = [];\n            for (const [r, n] of this.events)n.props.type && i.push(n);\n            if (i.length !== 0) try {\n                if ((await this.sendEvent(i)).ok) for (const r of i)this.events.delete(r.eventId), this.shouldPersist = !0;\n            } catch (r) {\n                this.logger.warn(r);\n            }\n        }, this.sendEvent = async (i)=>{\n            const r = this.getAppDomain() ? \"\" : \"&sp=desktop\";\n            return await fetch(`${At}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${oe}${r}`, {\n                method: \"POST\",\n                body: JSON.stringify(i)\n            });\n        }, this.getAppDomain = ()=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getAppMetadata)().url, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.context), this.telemetryEnabled = s, s ? this.restore().then(async ()=>{\n            await this.submit(), this.setEventListeners();\n        }) : this.persist();\n    }\n    get storageKey() {\n        return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + \"//\" + this.context;\n    }\n}\nvar Pn = Object.defineProperty, mi = Object.getOwnPropertySymbols, Rn = Object.prototype.hasOwnProperty, xn = Object.prototype.propertyIsEnumerable, bi = (o, e, t)=>e in o ? Pn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, fi = (o, e)=>{\n    for(var t in e || (e = {}))Rn.call(e, t) && bi(o, t, e[t]);\n    if (mi) for (var t of mi(e))xn.call(e, t) && bi(o, t, e[t]);\n    return o;\n};\nclass ce extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.ICore {\n    constructor(e){\n        var t;\n        super(e), this.protocol = be, this.version = fe, this.name = ne, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.initialized = !1, this.on = (n, a)=>this.events.on(n, a), this.once = (n, a)=>this.events.once(n, a), this.off = (n, a)=>this.events.off(n, a), this.removeListener = (n, a)=>this.events.removeListener(n, a), this.dispatchEnvelope = ({ topic: n, message: a, sessionExists: c })=>{\n            if (!n || !a) return;\n            const h = {\n                topic: n,\n                message: a,\n                publishedAt: Date.now(),\n                transportType: F.link_mode\n            };\n            this.relayer.onLinkMessageEvent(h, {\n                sessionExists: c\n            });\n        }, this.projectId = e?.projectId, this.relayUrl = e?.relayUrl || Ee, this.customStoragePrefix = e != null && e.customStoragePrefix ? `:${e.customStoragePrefix}` : \"\";\n        const s = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: typeof e?.logger == \"string\" && e.logger ? e.logger : Xe.logger\n        }), { logger: i, chunkLoggerController: r } = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generatePlatformLogger)({\n            opts: s,\n            maxSizeInBytes: e?.maxLogBlobSizeInBytes,\n            loggerOverride: e?.logger\n        });\n        this.logChunkController = r, (t = this.logChunkController) != null && t.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async ()=>{\n            var n, a;\n            (n = this.logChunkController) != null && n.downloadLogsBlobInBrowser && ((a = this.logChunkController) == null || a.downloadLogsBlobInBrowser({\n                clientId: await this.crypto.getClientId()\n            }));\n        }), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(i, this.name), this.heartbeat = new _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HeartBeat, this.crypto = new Wt(this, this.logger, e?.keychain), this.history = new hi(this, this.logger), this.expirer = new li(this, this.logger), this.storage = e != null && e.storage ? e.storage : new _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_2__[\"default\"](fi(fi({}, Ze), e?.storageOptions)), this.relayer = new si({\n            core: this,\n            logger: this.logger,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId\n        }), this.pairing = new ci(this, this.logger), this.verify = new di(this, this.logger, this.storage), this.echoClient = new gi(this.projectId || \"\", this.logger), this.linkModeSupportedApps = [], this.eventClient = new Di(this, this.logger, e?.telemetryEnabled);\n    }\n    static async init(e) {\n        const t = new ce(e);\n        await t.initialize();\n        const s = await t.crypto.getClientId();\n        return await t.storage.setItem(gt, s), t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async start() {\n        this.initialized || await this.initialize();\n    }\n    async getLogsBlob() {\n        var e;\n        return (e = this.logChunkController) == null ? void 0 : e.logsToBlob({\n            clientId: await this.crypto.getClientId()\n        });\n    }\n    async addLinkModeSupportedApp(e) {\n        this.linkModeSupportedApps.includes(e) || (this.linkModeSupportedApps.push(e), await this.storage.setItem(ve, this.linkModeSupportedApps));\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.eventClient.init(), this.linkModeSupportedApps = await this.storage.getItem(ve) || [], this.initialized = !0, this.logger.info(\"Core Initialization Success\");\n        } catch (e) {\n            throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;\n        }\n    }\n}\nconst On = ce;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/crypto.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;\nfunction getBrowerCrypto() {\n    return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};\n}\nexports.getBrowerCrypto = getBrowerCrypto;\nfunction getSubtleCrypto() {\n    const browserCrypto = getBrowerCrypto();\n    return browserCrypto.subtle || browserCrypto.webkitSubtle;\n}\nexports.getSubtleCrypto = getSubtleCrypto;\nfunction isBrowserCryptoAvailable() {\n    return !!getBrowerCrypto() && !!getSubtleCrypto();\n}\nexports.isBrowserCryptoAvailable = isBrowserCryptoAvailable; //# sourceMappingURL=crypto.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvY3J5cHRvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsdUJBQXVCLEdBQUdBLHVCQUF1QixHQUFHLEtBQUs7QUFDNUYsU0FBU0k7SUFDTCxPQUFPLENBQUNDLFdBQVcsUUFBUUEsV0FBVyxLQUFLLElBQUksS0FBSyxJQUFJQSxPQUFPQyxNQUFNLEtBQU1ELENBQUFBLFdBQVcsUUFBUUEsV0FBVyxLQUFLLElBQUksS0FBSyxJQUFJQSxPQUFPRSxRQUFRLEtBQUssQ0FBQztBQUNwSjtBQUNBUCx1QkFBdUIsR0FBR0k7QUFDMUIsU0FBU0Q7SUFDTCxNQUFNSyxnQkFBZ0JKO0lBQ3RCLE9BQU9JLGNBQWNDLE1BQU0sSUFBSUQsY0FBY0UsWUFBWTtBQUM3RDtBQUNBVix1QkFBdUIsR0FBR0c7QUFDMUIsU0FBU0Q7SUFDTCxPQUFPLENBQUMsQ0FBQ0UscUJBQXFCLENBQUMsQ0FBQ0Q7QUFDcEM7QUFDQUgsZ0NBQWdDLEdBQUdFLDBCQUNuQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2NyeXB0by5qcz82ZGQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGUgPSBleHBvcnRzLmdldFN1YnRsZUNyeXB0byA9IGV4cG9ydHMuZ2V0QnJvd2VyQ3J5cHRvID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0QnJvd2VyQ3J5cHRvKCkge1xuICAgIHJldHVybiAoZ2xvYmFsID09PSBudWxsIHx8IGdsb2JhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ2xvYmFsLmNyeXB0bykgfHwgKGdsb2JhbCA9PT0gbnVsbCB8fCBnbG9iYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGdsb2JhbC5tc0NyeXB0bykgfHwge307XG59XG5leHBvcnRzLmdldEJyb3dlckNyeXB0byA9IGdldEJyb3dlckNyeXB0bztcbmZ1bmN0aW9uIGdldFN1YnRsZUNyeXB0bygpIHtcbiAgICBjb25zdCBicm93c2VyQ3J5cHRvID0gZ2V0QnJvd2VyQ3J5cHRvKCk7XG4gICAgcmV0dXJuIGJyb3dzZXJDcnlwdG8uc3VidGxlIHx8IGJyb3dzZXJDcnlwdG8ud2Via2l0U3VidGxlO1xufVxuZXhwb3J0cy5nZXRTdWJ0bGVDcnlwdG8gPSBnZXRTdWJ0bGVDcnlwdG87XG5mdW5jdGlvbiBpc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGUoKSB7XG4gICAgcmV0dXJuICEhZ2V0QnJvd2VyQ3J5cHRvKCkgJiYgISFnZXRTdWJ0bGVDcnlwdG8oKTtcbn1cbmV4cG9ydHMuaXNCcm93c2VyQ3J5cHRvQXZhaWxhYmxlID0gaXNCcm93c2VyQ3J5cHRvQXZhaWxhYmxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3J5cHRvLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzQnJvd3NlckNyeXB0b0F2YWlsYWJsZSIsImdldFN1YnRsZUNyeXB0byIsImdldEJyb3dlckNyeXB0byIsImdsb2JhbCIsImNyeXB0byIsIm1zQ3J5cHRvIiwiYnJvd3NlckNyeXB0byIsInN1YnRsZSIsIndlYmtpdFN1YnRsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/env.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowser = exports.isNode = exports.isReactNative = void 0;\nfunction isReactNative() {\n    return typeof document === \"undefined\" && typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\n}\nexports.isReactNative = isReactNative;\nfunction isNode() {\n    return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\";\n}\nexports.isNode = isNode;\nfunction isBrowser() {\n    return !isReactNative() && !isNode();\n}\nexports.isBrowser = isBrowser; //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvZW52LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBR0EsY0FBYyxHQUFHQSxxQkFBcUIsR0FBRyxLQUFLO0FBQ2xFLFNBQVNJO0lBQ0wsT0FBUSxPQUFPQyxhQUFhLGVBQ3hCLE9BQU9DLGNBQWMsZUFDckJBLFVBQVVDLE9BQU8sS0FBSztBQUM5QjtBQUNBUCxxQkFBcUIsR0FBR0k7QUFDeEIsU0FBU0Q7SUFDTCxPQUFRLE9BQU9LLFlBQVksZUFDdkIsT0FBT0EsUUFBUUMsUUFBUSxLQUFLLGVBQzVCLE9BQU9ELFFBQVFDLFFBQVEsQ0FBQ0MsSUFBSSxLQUFLO0FBQ3pDO0FBQ0FWLGNBQWMsR0FBR0c7QUFDakIsU0FBU0Q7SUFDTCxPQUFPLENBQUNFLG1CQUFtQixDQUFDRDtBQUNoQztBQUNBSCxpQkFBaUIsR0FBR0UsV0FDcEIsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9lbnZpcm9ubWVudC9kaXN0L2Nqcy9lbnYuanM/NDM4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNCcm93c2VyID0gZXhwb3J0cy5pc05vZGUgPSBleHBvcnRzLmlzUmVhY3ROYXRpdmUgPSB2b2lkIDA7XG5mdW5jdGlvbiBpc1JlYWN0TmF0aXZlKCkge1xuICAgIHJldHVybiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgIHR5cGVvZiBuYXZpZ2F0b3IgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09IFwiUmVhY3ROYXRpdmVcIik7XG59XG5leHBvcnRzLmlzUmVhY3ROYXRpdmUgPSBpc1JlYWN0TmF0aXZlO1xuZnVuY3Rpb24gaXNOb2RlKCkge1xuICAgIHJldHVybiAodHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdHlwZW9mIHByb2Nlc3MudmVyc2lvbnMgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdHlwZW9mIHByb2Nlc3MudmVyc2lvbnMubm9kZSAhPT0gXCJ1bmRlZmluZWRcIik7XG59XG5leHBvcnRzLmlzTm9kZSA9IGlzTm9kZTtcbmZ1bmN0aW9uIGlzQnJvd3NlcigpIHtcbiAgICByZXR1cm4gIWlzUmVhY3ROYXRpdmUoKSAmJiAhaXNOb2RlKCk7XG59XG5leHBvcnRzLmlzQnJvd3NlciA9IGlzQnJvd3Nlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpc0Jyb3dzZXIiLCJpc05vZGUiLCJpc1JlYWN0TmF0aXZlIiwiZG9jdW1lbnQiLCJuYXZpZ2F0b3IiLCJwcm9kdWN0IiwicHJvY2VzcyIsInZlcnNpb25zIiwibm9kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./crypto */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./env */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsOEZBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsb0ZBQVUsR0FBR0g7QUFDMUNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsOEVBQU8sR0FBR0gsVUFDdkMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9lbnZpcm9ubWVudC9kaXN0L2Nqcy9pbmRleC5qcz81YzI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyeXB0b1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lbnZcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nfunction __createBinding(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}\nfunction __exportStar(m, exports) {\n    for(var p in m)if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n;\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js":
/*!************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/dist/index.es.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthereumProvider: () => (/* binding */ x),\n/* harmony export */   OPTIONAL_EVENTS: () => (/* binding */ b),\n/* harmony export */   OPTIONAL_METHODS: () => (/* binding */ y),\n/* harmony export */   REQUIRED_EVENTS: () => (/* binding */ g),\n/* harmony export */   REQUIRED_METHODS: () => (/* binding */ u),\n/* harmony export */   \"default\": () => (/* binding */ C)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/universal-provider */ \"(ssr)/./node_modules/@walletconnect/universal-provider/dist/index.es.js\");\n\n\n\nconst R = \"wc\", T = \"ethereum_provider\", $ = `${R}@2:${T}:`, j = \"https://rpc.walletconnect.org/v1/\", u = [\n    \"eth_sendTransaction\",\n    \"personal_sign\"\n], y = [\n    \"eth_accounts\",\n    \"eth_requestAccounts\",\n    \"eth_sendRawTransaction\",\n    \"eth_sign\",\n    \"eth_signTransaction\",\n    \"eth_signTypedData\",\n    \"eth_signTypedData_v3\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"personal_sign\",\n    \"wallet_switchEthereumChain\",\n    \"wallet_addEthereumChain\",\n    \"wallet_getPermissions\",\n    \"wallet_requestPermissions\",\n    \"wallet_registerOnboarding\",\n    \"wallet_watchAsset\",\n    \"wallet_scanQRCode\",\n    \"wallet_sendCalls\",\n    \"wallet_getCapabilities\",\n    \"wallet_getCallsStatus\",\n    \"wallet_showCallsStatus\"\n], g = [\n    \"chainChanged\",\n    \"accountsChanged\"\n], b = [\n    \"chainChanged\",\n    \"accountsChanged\",\n    \"message\",\n    \"disconnect\",\n    \"connect\"\n];\nvar q = Object.defineProperty, N = Object.defineProperties, D = Object.getOwnPropertyDescriptors, M = Object.getOwnPropertySymbols, U = Object.prototype.hasOwnProperty, Q = Object.prototype.propertyIsEnumerable, O = (r, t, s)=>t in r ? q(r, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : r[t] = s, p = (r, t)=>{\n    for(var s in t || (t = {}))U.call(t, s) && O(r, s, t[s]);\n    if (M) for (var s of M(t))Q.call(t, s) && O(r, s, t[s]);\n    return r;\n}, E = (r, t)=>N(r, D(t));\nfunction m(r) {\n    return Number(r[0].split(\":\")[1]);\n}\nfunction v(r) {\n    return `0x${r.toString(16)}`;\n}\nfunction L(r) {\n    const { chains: t, optionalChains: s, methods: i, optionalMethods: e, events: n, optionalEvents: o, rpcMap: c } = r;\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(t)) throw new Error(\"Invalid chains\");\n    const a = {\n        chains: t,\n        methods: i || u,\n        events: n || g,\n        rpcMap: p({}, t.length ? {\n            [m(t)]: c[m(t)]\n        } : {})\n    }, h = n?.filter((l)=>!g.includes(l)), d = i?.filter((l)=>!u.includes(l));\n    if (!s && !o && !e && !(h != null && h.length) && !(d != null && d.length)) return {\n        required: t.length ? a : void 0\n    };\n    const w = h?.length && d?.length || !s, I = {\n        chains: [\n            ...new Set(w ? a.chains.concat(s || []) : s)\n        ],\n        methods: [\n            ...new Set(a.methods.concat(e != null && e.length ? e : y))\n        ],\n        events: [\n            ...new Set(a.events.concat(o != null && o.length ? o : b))\n        ],\n        rpcMap: c\n    };\n    return {\n        required: t.length ? a : void 0,\n        optional: s.length ? I : void 0\n    };\n}\nclass C {\n    constructor(){\n        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.namespace = \"eip155\", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = $, this.on = (t, s)=>(this.events.on(t, s), this), this.once = (t, s)=>(this.events.once(t, s), this), this.removeListener = (t, s)=>(this.events.removeListener(t, s), this), this.off = (t, s)=>(this.events.off(t, s), this), this.parseAccount = (t)=>this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {};\n    }\n    static async init(t) {\n        const s = new C;\n        return await s.initialize(t), s;\n    }\n    async request(t, s) {\n        return await this.signer.request(t, this.formatChainId(this.chainId), s);\n    }\n    sendAsync(t, s, i) {\n        this.signer.sendAsync(t, s, this.formatChainId(this.chainId), i);\n    }\n    get connected() {\n        return this.signer.client ? this.signer.client.core.relayer.connected : !1;\n    }\n    get connecting() {\n        return this.signer.client ? this.signer.client.core.relayer.connecting : !1;\n    }\n    async enable() {\n        return this.session || await this.connect(), await this.request({\n            method: \"eth_requestAccounts\"\n        });\n    }\n    async connect(t) {\n        if (!this.signer.client) throw new Error(\"Provider not initialized. Call init() first\");\n        this.loadConnectOpts(t);\n        const { required: s, optional: i } = L(this.rpc);\n        try {\n            const e = await new Promise(async (o, c)=>{\n                var a;\n                this.rpc.showQrModal && ((a = this.modal) == null || a.subscribeModal((h)=>{\n                    !h.open && !this.signer.session && (this.signer.abortPairingAttempt(), c(new Error(\"Connection request reset. Please try again.\")));\n                })), await this.signer.connect(E(p({\n                    namespaces: p({}, s && {\n                        [this.namespace]: s\n                    })\n                }, i && {\n                    optionalNamespaces: {\n                        [this.namespace]: i\n                    }\n                }), {\n                    pairingTopic: t?.pairingTopic\n                })).then((h)=>{\n                    o(h);\n                }).catch((h)=>{\n                    c(new Error(h.message));\n                });\n            });\n            if (!e) return;\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getAccountsFromNamespaces)(e.namespaces, [\n                this.namespace\n            ]);\n            this.setChainIds(this.rpc.chains.length ? this.rpc.chains : n), this.setAccounts(n), this.events.emit(\"connect\", {\n                chainId: v(this.chainId)\n            });\n        } catch (e) {\n            throw this.signer.logger.error(e), e;\n        } finally{\n            this.modal && this.modal.closeModal();\n        }\n    }\n    async authenticate(t, s) {\n        if (!this.signer.client) throw new Error(\"Provider not initialized. Call init() first\");\n        this.loadConnectOpts({\n            chains: t?.chains\n        });\n        try {\n            const i = await new Promise(async (n, o)=>{\n                var c;\n                this.rpc.showQrModal && ((c = this.modal) == null || c.subscribeModal((a)=>{\n                    !a.open && !this.signer.session && (this.signer.abortPairingAttempt(), o(new Error(\"Connection request reset. Please try again.\")));\n                })), await this.signer.authenticate(E(p({}, t), {\n                    chains: this.rpc.chains\n                }), s).then((a)=>{\n                    n(a);\n                }).catch((a)=>{\n                    o(new Error(a.message));\n                });\n            }), e = i.session;\n            if (e) {\n                const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getAccountsFromNamespaces)(e.namespaces, [\n                    this.namespace\n                ]);\n                this.setChainIds(this.rpc.chains.length ? this.rpc.chains : n), this.setAccounts(n), this.events.emit(\"connect\", {\n                    chainId: v(this.chainId)\n                });\n            }\n            return i;\n        } catch (i) {\n            throw this.signer.logger.error(i), i;\n        } finally{\n            this.modal && this.modal.closeModal();\n        }\n    }\n    async disconnect() {\n        this.session && await this.signer.disconnect(), this.reset();\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    get session() {\n        return this.signer.session;\n    }\n    registerEventListeners() {\n        this.signer.on(\"session_event\", (t)=>{\n            const { params: s } = t, { event: i } = s;\n            i.name === \"accountsChanged\" ? (this.accounts = this.parseAccounts(i.data), this.events.emit(\"accountsChanged\", this.accounts)) : i.name === \"chainChanged\" ? this.setChainId(this.formatChainId(i.data)) : this.events.emit(i.name, i.data), this.events.emit(\"session_event\", t);\n        }), this.signer.on(\"chainChanged\", (t)=>{\n            const s = parseInt(t);\n            this.chainId = s, this.events.emit(\"chainChanged\", v(this.chainId)), this.persist();\n        }), this.signer.on(\"session_update\", (t)=>{\n            this.events.emit(\"session_update\", t);\n        }), this.signer.on(\"session_delete\", (t)=>{\n            this.reset(), this.events.emit(\"session_delete\", t), this.events.emit(\"disconnect\", E(p({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: t.topic,\n                name: \"USER_DISCONNECTED\"\n            }));\n        }), this.signer.on(\"display_uri\", (t)=>{\n            var s, i;\n            this.rpc.showQrModal && ((s = this.modal) == null || s.closeModal(), (i = this.modal) == null || i.openModal({\n                uri: t\n            })), this.events.emit(\"display_uri\", t);\n        });\n    }\n    switchEthereumChain(t) {\n        this.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: t.toString(16)\n                }\n            ]\n        });\n    }\n    isCompatibleChainId(t) {\n        return typeof t == \"string\" ? t.startsWith(`${this.namespace}:`) : !1;\n    }\n    formatChainId(t) {\n        return `${this.namespace}:${t}`;\n    }\n    parseChainId(t) {\n        return Number(t.split(\":\")[1]);\n    }\n    setChainIds(t) {\n        const s = t.filter((i)=>this.isCompatibleChainId(i)).map((i)=>this.parseChainId(i));\n        s.length && (this.chainId = s[0], this.events.emit(\"chainChanged\", v(this.chainId)), this.persist());\n    }\n    setChainId(t) {\n        if (this.isCompatibleChainId(t)) {\n            const s = this.parseChainId(t);\n            this.chainId = s, this.switchEthereumChain(s);\n        }\n    }\n    parseAccountId(t) {\n        const [s, i, e] = t.split(\":\");\n        return {\n            chainId: `${s}:${i}`,\n            address: e\n        };\n    }\n    setAccounts(t) {\n        this.accounts = t.filter((s)=>this.parseChainId(this.parseAccountId(s).chainId) === this.chainId).map((s)=>this.parseAccountId(s).address), this.events.emit(\"accountsChanged\", this.accounts);\n    }\n    getRpcConfig(t) {\n        var s, i;\n        const e = (s = t?.chains) != null ? s : [], n = (i = t?.optionalChains) != null ? i : [], o = e.concat(n);\n        if (!o.length) throw new Error(\"No chains specified in either `chains` or `optionalChains`\");\n        const c = e.length ? t?.methods || u : [], a = e.length ? t?.events || g : [], h = t?.optionalMethods || [], d = t?.optionalEvents || [], w = t?.rpcMap || this.buildRpcMap(o, t.projectId), I = t?.qrModalOptions || void 0;\n        return {\n            chains: e?.map((l)=>this.formatChainId(l)),\n            optionalChains: n.map((l)=>this.formatChainId(l)),\n            methods: c,\n            events: a,\n            optionalMethods: h,\n            optionalEvents: d,\n            rpcMap: w,\n            showQrModal: !!(t != null && t.showQrModal),\n            qrModalOptions: I,\n            projectId: t.projectId,\n            metadata: t.metadata\n        };\n    }\n    buildRpcMap(t, s) {\n        const i = {};\n        return t.forEach((e)=>{\n            i[e] = this.getRpcUrl(e, s);\n        }), i;\n    }\n    async initialize(t) {\n        if (this.rpc = this.getRpcConfig(t), this.chainId = this.rpc.chains.length ? m(this.rpc.chains) : m(this.rpc.optionalChains), this.signer = await _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_1__.UniversalProvider.init({\n            projectId: this.rpc.projectId,\n            metadata: this.rpc.metadata,\n            disableProviderPing: t.disableProviderPing,\n            relayUrl: t.relayUrl,\n            storageOptions: t.storageOptions,\n            customStoragePrefix: t.customStoragePrefix,\n            telemetryEnabled: t.telemetryEnabled\n        }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {\n            let s;\n            try {\n                const { WalletConnectModal: i } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@walletconnect\"), __webpack_require__.e(\"vendor-chunks/valtio\"), __webpack_require__.e(\"vendor-chunks/proxy-compare\")]).then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/modal */ \"(ssr)/./node_modules/@walletconnect/modal/dist/index.js\"));\n                s = i;\n            } catch  {\n                throw new Error(\"To use QR modal, please install @walletconnect/modal package\");\n            }\n            if (s) try {\n                this.modal = new s(p({\n                    projectId: this.rpc.projectId\n                }, this.rpc.qrModalOptions));\n            } catch (i) {\n                throw this.signer.logger.error(i), new Error(\"Could not generate WalletConnectModal Instance\");\n            }\n        }\n    }\n    loadConnectOpts(t) {\n        if (!t) return;\n        const { chains: s, optionalChains: i, rpcMap: e } = t;\n        s && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(s) && (this.rpc.chains = s.map((n)=>this.formatChainId(n)), s.forEach((n)=>{\n            this.rpc.rpcMap[n] = e?.[n] || this.getRpcUrl(n);\n        })), i && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(i) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i?.map((n)=>this.formatChainId(n)), i.forEach((n)=>{\n            this.rpc.rpcMap[n] = e?.[n] || this.getRpcUrl(n);\n        }));\n    }\n    getRpcUrl(t, s) {\n        var i;\n        return ((i = this.rpc.rpcMap) == null ? void 0 : i[t]) || `${j}?chainId=eip155:${t}&projectId=${s || this.rpc.projectId}`;\n    }\n    async loadPersistedSession() {\n        if (this.session) try {\n            const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`), s = this.session.namespaces[`${this.namespace}:${t}`] ? this.session.namespaces[`${this.namespace}:${t}`] : this.session.namespaces[this.namespace];\n            this.setChainIds(t ? [\n                this.formatChainId(t)\n            ] : s?.accounts), this.setAccounts(s?.accounts);\n        } catch (t) {\n            this.signer.logger.error(\"Failed to load persisted session, clearing state...\"), this.signer.logger.error(t), await this.disconnect().catch((s)=>this.signer.logger.warn(s));\n        }\n    }\n    reset() {\n        this.chainId = 1, this.accounts = [];\n    }\n    persist() {\n        this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);\n    }\n    parseAccounts(t) {\n        return typeof t == \"string\" || t instanceof String ? [\n            this.parseAccount(t)\n        ] : t.map((s)=>this.parseAccount(s));\n    }\n}\nconst x = C;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXRoZXJldW0tcHJvdmlkZXIvZGlzdC9pbmRleC5lcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXNDO0FBQW9HO0FBQXNFO0FBQUEsTUFBTVUsSUFBRSxNQUFLQyxJQUFFLHFCQUFvQkMsSUFBRSxDQUFDLEVBQUVGLEVBQUUsR0FBRyxFQUFFQyxFQUFFLENBQUMsQ0FBQyxFQUFDRSxJQUFFLHFDQUFvQ0MsSUFBRTtJQUFDO0lBQXNCO0NBQWdCLEVBQUNDLElBQUU7SUFBQztJQUFlO0lBQXNCO0lBQXlCO0lBQVc7SUFBc0I7SUFBb0I7SUFBdUI7SUFBdUI7SUFBc0I7SUFBZ0I7SUFBNkI7SUFBMEI7SUFBd0I7SUFBNEI7SUFBNEI7SUFBb0I7SUFBb0I7SUFBbUI7SUFBeUI7SUFBd0I7Q0FBeUIsRUFBQ0MsSUFBRTtJQUFDO0lBQWU7Q0FBa0IsRUFBQ0MsSUFBRTtJQUFDO0lBQWU7SUFBa0I7SUFBVTtJQUFhO0NBQVU7QUFBQyxJQUFJQyxJQUFFQyxPQUFPQyxjQUFjLEVBQUNDLElBQUVGLE9BQU9HLGdCQUFnQixFQUFDQyxJQUFFSixPQUFPSyx5QkFBeUIsRUFBQ0MsSUFBRU4sT0FBT08scUJBQXFCLEVBQUNDLElBQUVSLE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxFQUFDQyxJQUFFWCxPQUFPUyxTQUFTLENBQUNHLG9CQUFvQixFQUFDQyxJQUFFLENBQUNDLEdBQUVDLEdBQUVDLElBQUlELEtBQUtELElBQUVmLEVBQUVlLEdBQUVDLEdBQUU7UUFBQ0UsWUFBVyxDQUFDO1FBQUVDLGNBQWEsQ0FBQztRQUFFQyxVQUFTLENBQUM7UUFBRUMsT0FBTUo7SUFBQyxLQUFHRixDQUFDLENBQUNDLEVBQUUsR0FBQ0MsR0FBRUssSUFBRSxDQUFDUCxHQUFFQztJQUFLLElBQUksSUFBSUMsS0FBS0QsS0FBSUEsQ0FBQUEsSUFBRSxDQUFDLEdBQUdQLEVBQUVjLElBQUksQ0FBQ1AsR0FBRUMsTUFBSUgsRUFBRUMsR0FBRUUsR0FBRUQsQ0FBQyxDQUFDQyxFQUFFO0lBQUUsSUFBR1YsR0FBRSxLQUFJLElBQUlVLEtBQUtWLEVBQUVTLEdBQUdKLEVBQUVXLElBQUksQ0FBQ1AsR0FBRUMsTUFBSUgsRUFBRUMsR0FBRUUsR0FBRUQsQ0FBQyxDQUFDQyxFQUFFO0lBQUUsT0FBT0Y7QUFBQyxHQUFFUyxJQUFFLENBQUNULEdBQUVDLElBQUliLEVBQUVZLEdBQUVWLEVBQUVXO0FBQUksU0FBU1MsRUFBRVYsQ0FBQztJQUFFLE9BQU9XLE9BQU9YLENBQUMsQ0FBQyxFQUFFLENBQUNZLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtBQUFDO0FBQUMsU0FBU0MsRUFBRWIsQ0FBQztJQUFFLE9BQU0sQ0FBQyxFQUFFLEVBQUVBLEVBQUVjLFFBQVEsQ0FBQyxJQUFJLENBQUM7QUFBQTtBQUFDLFNBQVNDLEVBQUVmLENBQUM7SUFBRSxNQUFLLEVBQUNnQixRQUFPZixDQUFDLEVBQUNnQixnQkFBZWYsQ0FBQyxFQUFDZ0IsU0FBUUMsQ0FBQyxFQUFDQyxpQkFBZ0JDLENBQUMsRUFBQ0MsUUFBT0MsQ0FBQyxFQUFDQyxnQkFBZUMsQ0FBQyxFQUFDQyxRQUFPQyxDQUFDLEVBQUMsR0FBQzNCO0lBQUUsSUFBRyxDQUFDMUIsa0VBQUNBLENBQUMyQixJQUFHLE1BQU0sSUFBSTJCLE1BQU07SUFBa0IsTUFBTUMsSUFBRTtRQUFDYixRQUFPZjtRQUFFaUIsU0FBUUMsS0FBR3RDO1FBQUV5QyxRQUFPQyxLQUFHeEM7UUFBRTJDLFFBQU9uQixFQUFFLENBQUMsR0FBRU4sRUFBRTZCLE1BQU0sR0FBQztZQUFDLENBQUNwQixFQUFFVCxHQUFHLEVBQUMwQixDQUFDLENBQUNqQixFQUFFVCxHQUFHO1FBQUEsSUFBRSxDQUFDO0lBQUUsR0FBRThCLElBQUVSLEdBQUdTLE9BQU9DLENBQUFBLElBQUcsQ0FBQ2xELEVBQUVtRCxRQUFRLENBQUNELEtBQUlFLElBQUVoQixHQUFHYSxPQUFPQyxDQUFBQSxJQUFHLENBQUNwRCxFQUFFcUQsUUFBUSxDQUFDRDtJQUFJLElBQUcsQ0FBQy9CLEtBQUcsQ0FBQ3VCLEtBQUcsQ0FBQ0osS0FBRyxDQUFFVSxDQUFBQSxLQUFHLFFBQU1BLEVBQUVELE1BQU0sS0FBRyxDQUFFSyxDQUFBQSxLQUFHLFFBQU1BLEVBQUVMLE1BQU0sR0FBRSxPQUFNO1FBQUNNLFVBQVNuQyxFQUFFNkIsTUFBTSxHQUFDRCxJQUFFLEtBQUs7SUFBQztJQUFFLE1BQU1RLElBQUVOLEdBQUdELFVBQVFLLEdBQUdMLFVBQVEsQ0FBQzVCLEdBQUVvQyxJQUFFO1FBQUN0QixRQUFPO2VBQUksSUFBSXVCLElBQUlGLElBQUVSLEVBQUViLE1BQU0sQ0FBQ3dCLE1BQU0sQ0FBQ3RDLEtBQUcsRUFBRSxJQUFFQTtTQUFHO1FBQUNnQixTQUFRO2VBQUksSUFBSXFCLElBQUlWLEVBQUVYLE9BQU8sQ0FBQ3NCLE1BQU0sQ0FBQ25CLEtBQUcsUUFBTUEsRUFBRVMsTUFBTSxHQUFDVCxJQUFFdkM7U0FBSTtRQUFDd0MsUUFBTztlQUFJLElBQUlpQixJQUFJVixFQUFFUCxNQUFNLENBQUNrQixNQUFNLENBQUNmLEtBQUcsUUFBTUEsRUFBRUssTUFBTSxHQUFDTCxJQUFFekM7U0FBSTtRQUFDMEMsUUFBT0M7SUFBQztJQUFFLE9BQU07UUFBQ1MsVUFBU25DLEVBQUU2QixNQUFNLEdBQUNELElBQUUsS0FBSztRQUFFWSxVQUFTdkMsRUFBRTRCLE1BQU0sR0FBQ1EsSUFBRSxLQUFLO0lBQUM7QUFBQztBQUFDLE1BQU1JO0lBQUVDLGFBQWE7UUFBQyxJQUFJLENBQUNyQixNQUFNLEdBQUMsSUFBSXRELGdEQUFDQSxFQUFDLElBQUksQ0FBQzRFLFNBQVMsR0FBQyxVQUFTLElBQUksQ0FBQ0MsUUFBUSxHQUFDLEVBQUUsRUFBQyxJQUFJLENBQUNDLE9BQU8sR0FBQyxHQUFFLElBQUksQ0FBQ0MsV0FBVyxHQUFDcEUsR0FBRSxJQUFJLENBQUNxRSxFQUFFLEdBQUMsQ0FBQy9DLEdBQUVDLElBQUssS0FBSSxDQUFDb0IsTUFBTSxDQUFDMEIsRUFBRSxDQUFDL0MsR0FBRUMsSUFBRyxJQUFJLEdBQUUsSUFBSSxDQUFDK0MsSUFBSSxHQUFDLENBQUNoRCxHQUFFQyxJQUFLLEtBQUksQ0FBQ29CLE1BQU0sQ0FBQzJCLElBQUksQ0FBQ2hELEdBQUVDLElBQUcsSUFBSSxHQUFFLElBQUksQ0FBQ2dELGNBQWMsR0FBQyxDQUFDakQsR0FBRUMsSUFBSyxLQUFJLENBQUNvQixNQUFNLENBQUM0QixjQUFjLENBQUNqRCxHQUFFQyxJQUFHLElBQUksR0FBRSxJQUFJLENBQUNpRCxHQUFHLEdBQUMsQ0FBQ2xELEdBQUVDLElBQUssS0FBSSxDQUFDb0IsTUFBTSxDQUFDNkIsR0FBRyxDQUFDbEQsR0FBRUMsSUFBRyxJQUFJLEdBQUUsSUFBSSxDQUFDa0QsWUFBWSxHQUFDbkQsQ0FBQUEsSUFBRyxJQUFJLENBQUNvRCxtQkFBbUIsQ0FBQ3BELEtBQUcsSUFBSSxDQUFDcUQsY0FBYyxDQUFDckQsR0FBR3NELE9BQU8sR0FBQ3RELEdBQUUsSUFBSSxDQUFDdUQsTUFBTSxHQUFDLENBQUMsR0FBRSxJQUFJLENBQUNDLEdBQUcsR0FBQyxDQUFDO0lBQUM7SUFBQyxhQUFhQyxLQUFLekQsQ0FBQyxFQUFDO1FBQUMsTUFBTUMsSUFBRSxJQUFJd0M7UUFBRSxPQUFPLE1BQU14QyxFQUFFeUQsVUFBVSxDQUFDMUQsSUFBR0M7SUFBQztJQUFDLE1BQU0wRCxRQUFRM0QsQ0FBQyxFQUFDQyxDQUFDLEVBQUM7UUFBQyxPQUFPLE1BQU0sSUFBSSxDQUFDc0QsTUFBTSxDQUFDSSxPQUFPLENBQUMzRCxHQUFFLElBQUksQ0FBQzRELGFBQWEsQ0FBQyxJQUFJLENBQUNmLE9BQU8sR0FBRTVDO0lBQUU7SUFBQzRELFVBQVU3RCxDQUFDLEVBQUNDLENBQUMsRUFBQ2lCLENBQUMsRUFBQztRQUFDLElBQUksQ0FBQ3FDLE1BQU0sQ0FBQ00sU0FBUyxDQUFDN0QsR0FBRUMsR0FBRSxJQUFJLENBQUMyRCxhQUFhLENBQUMsSUFBSSxDQUFDZixPQUFPLEdBQUUzQjtJQUFFO0lBQUMsSUFBSTRDLFlBQVc7UUFBQyxPQUFPLElBQUksQ0FBQ1AsTUFBTSxDQUFDUSxNQUFNLEdBQUMsSUFBSSxDQUFDUixNQUFNLENBQUNRLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDQyxPQUFPLENBQUNILFNBQVMsR0FBQyxDQUFDO0lBQUM7SUFBQyxJQUFJSSxhQUFZO1FBQUMsT0FBTyxJQUFJLENBQUNYLE1BQU0sQ0FBQ1EsTUFBTSxHQUFDLElBQUksQ0FBQ1IsTUFBTSxDQUFDUSxNQUFNLENBQUNDLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxVQUFVLEdBQUMsQ0FBQztJQUFDO0lBQUMsTUFBTUMsU0FBUTtRQUFDLE9BQU8sSUFBSSxDQUFDQyxPQUFPLElBQUUsTUFBTSxJQUFJLENBQUNDLE9BQU8sSUFBRyxNQUFNLElBQUksQ0FBQ1YsT0FBTyxDQUFDO1lBQUNXLFFBQU87UUFBcUI7SUFBRTtJQUFDLE1BQU1ELFFBQVFyRSxDQUFDLEVBQUM7UUFBQyxJQUFHLENBQUMsSUFBSSxDQUFDdUQsTUFBTSxDQUFDUSxNQUFNLEVBQUMsTUFBTSxJQUFJcEMsTUFBTTtRQUErQyxJQUFJLENBQUM0QyxlQUFlLENBQUN2RTtRQUFHLE1BQUssRUFBQ21DLFVBQVNsQyxDQUFDLEVBQUN1QyxVQUFTdEIsQ0FBQyxFQUFDLEdBQUNKLEVBQUUsSUFBSSxDQUFDMEMsR0FBRztRQUFFLElBQUc7WUFBQyxNQUFNcEMsSUFBRSxNQUFNLElBQUlvRCxRQUFRLE9BQU1oRCxHQUFFRTtnQkFBSyxJQUFJRTtnQkFBRSxJQUFJLENBQUM0QixHQUFHLENBQUNpQixXQUFXLElBQUcsRUFBQzdDLElBQUUsSUFBSSxDQUFDOEMsS0FBSyxLQUFHLFFBQU05QyxFQUFFK0MsY0FBYyxDQUFDN0MsQ0FBQUE7b0JBQUksQ0FBQ0EsRUFBRThDLElBQUksSUFBRSxDQUFDLElBQUksQ0FBQ3JCLE1BQU0sQ0FBQ2EsT0FBTyxJQUFHLEtBQUksQ0FBQ2IsTUFBTSxDQUFDc0IsbUJBQW1CLElBQUduRCxFQUFFLElBQUlDLE1BQU0sK0NBQThDO2dCQUFFLEVBQUMsR0FBRyxNQUFNLElBQUksQ0FBQzRCLE1BQU0sQ0FBQ2MsT0FBTyxDQUFDN0QsRUFBRUYsRUFBRTtvQkFBQ3dFLFlBQVd4RSxFQUFFLENBQUMsR0FBRUwsS0FBRzt3QkFBQyxDQUFDLElBQUksQ0FBQzBDLFNBQVMsQ0FBQyxFQUFDMUM7b0JBQUM7Z0JBQUUsR0FBRWlCLEtBQUc7b0JBQUM2RCxvQkFBbUI7d0JBQUMsQ0FBQyxJQUFJLENBQUNwQyxTQUFTLENBQUMsRUFBQ3pCO29CQUFDO2dCQUFDLElBQUc7b0JBQUM4RCxjQUFhaEYsR0FBR2dGO2dCQUFZLElBQUlDLElBQUksQ0FBQ25ELENBQUFBO29CQUFJTixFQUFFTTtnQkFBRSxHQUFHb0QsS0FBSyxDQUFDcEQsQ0FBQUE7b0JBQUlKLEVBQUUsSUFBSUMsTUFBTUcsRUFBRXFELE9BQU87Z0JBQUU7WUFBRTtZQUFHLElBQUcsQ0FBQy9ELEdBQUU7WUFBTyxNQUFNRSxJQUFFckQsK0VBQUNBLENBQUNtRCxFQUFFMEQsVUFBVSxFQUFDO2dCQUFDLElBQUksQ0FBQ25DLFNBQVM7YUFBQztZQUFFLElBQUksQ0FBQ3lDLFdBQVcsQ0FBQyxJQUFJLENBQUM1QixHQUFHLENBQUN6QyxNQUFNLENBQUNjLE1BQU0sR0FBQyxJQUFJLENBQUMyQixHQUFHLENBQUN6QyxNQUFNLEdBQUNPLElBQUcsSUFBSSxDQUFDK0QsV0FBVyxDQUFDL0QsSUFBRyxJQUFJLENBQUNELE1BQU0sQ0FBQ2lFLElBQUksQ0FBQyxXQUFVO2dCQUFDekMsU0FBUWpDLEVBQUUsSUFBSSxDQUFDaUMsT0FBTztZQUFDO1FBQUUsRUFBQyxPQUFNekIsR0FBRTtZQUFDLE1BQU0sSUFBSSxDQUFDbUMsTUFBTSxDQUFDZ0MsTUFBTSxDQUFDQyxLQUFLLENBQUNwRSxJQUFHQTtRQUFDLFNBQVE7WUFBQyxJQUFJLENBQUNzRCxLQUFLLElBQUUsSUFBSSxDQUFDQSxLQUFLLENBQUNlLFVBQVU7UUFBRTtJQUFDO0lBQUMsTUFBTUMsYUFBYTFGLENBQUMsRUFBQ0MsQ0FBQyxFQUFDO1FBQUMsSUFBRyxDQUFDLElBQUksQ0FBQ3NELE1BQU0sQ0FBQ1EsTUFBTSxFQUFDLE1BQU0sSUFBSXBDLE1BQU07UUFBK0MsSUFBSSxDQUFDNEMsZUFBZSxDQUFDO1lBQUN4RCxRQUFPZixHQUFHZTtRQUFNO1FBQUcsSUFBRztZQUFDLE1BQU1HLElBQUUsTUFBTSxJQUFJc0QsUUFBUSxPQUFNbEQsR0FBRUU7Z0JBQUssSUFBSUU7Z0JBQUUsSUFBSSxDQUFDOEIsR0FBRyxDQUFDaUIsV0FBVyxJQUFHLEVBQUMvQyxJQUFFLElBQUksQ0FBQ2dELEtBQUssS0FBRyxRQUFNaEQsRUFBRWlELGNBQWMsQ0FBQy9DLENBQUFBO29CQUFJLENBQUNBLEVBQUVnRCxJQUFJLElBQUUsQ0FBQyxJQUFJLENBQUNyQixNQUFNLENBQUNhLE9BQU8sSUFBRyxLQUFJLENBQUNiLE1BQU0sQ0FBQ3NCLG1CQUFtQixJQUFHckQsRUFBRSxJQUFJRyxNQUFNLCtDQUE4QztnQkFBRSxFQUFDLEdBQUcsTUFBTSxJQUFJLENBQUM0QixNQUFNLENBQUNtQyxZQUFZLENBQUNsRixFQUFFRixFQUFFLENBQUMsR0FBRU4sSUFBRztvQkFBQ2UsUUFBTyxJQUFJLENBQUN5QyxHQUFHLENBQUN6QyxNQUFNO2dCQUFBLElBQUdkLEdBQUdnRixJQUFJLENBQUNyRCxDQUFBQTtvQkFBSU4sRUFBRU07Z0JBQUUsR0FBR3NELEtBQUssQ0FBQ3RELENBQUFBO29CQUFJSixFQUFFLElBQUlHLE1BQU1DLEVBQUV1RCxPQUFPO2dCQUFFO1lBQUUsSUFBRy9ELElBQUVGLEVBQUVrRCxPQUFPO1lBQUMsSUFBR2hELEdBQUU7Z0JBQUMsTUFBTUUsSUFBRXJELCtFQUFDQSxDQUFDbUQsRUFBRTBELFVBQVUsRUFBQztvQkFBQyxJQUFJLENBQUNuQyxTQUFTO2lCQUFDO2dCQUFFLElBQUksQ0FBQ3lDLFdBQVcsQ0FBQyxJQUFJLENBQUM1QixHQUFHLENBQUN6QyxNQUFNLENBQUNjLE1BQU0sR0FBQyxJQUFJLENBQUMyQixHQUFHLENBQUN6QyxNQUFNLEdBQUNPLElBQUcsSUFBSSxDQUFDK0QsV0FBVyxDQUFDL0QsSUFBRyxJQUFJLENBQUNELE1BQU0sQ0FBQ2lFLElBQUksQ0FBQyxXQUFVO29CQUFDekMsU0FBUWpDLEVBQUUsSUFBSSxDQUFDaUMsT0FBTztnQkFBQztZQUFFO1lBQUMsT0FBTzNCO1FBQUMsRUFBQyxPQUFNQSxHQUFFO1lBQUMsTUFBTSxJQUFJLENBQUNxQyxNQUFNLENBQUNnQyxNQUFNLENBQUNDLEtBQUssQ0FBQ3RFLElBQUdBO1FBQUMsU0FBUTtZQUFDLElBQUksQ0FBQ3dELEtBQUssSUFBRSxJQUFJLENBQUNBLEtBQUssQ0FBQ2UsVUFBVTtRQUFFO0lBQUM7SUFBQyxNQUFNRSxhQUFZO1FBQUMsSUFBSSxDQUFDdkIsT0FBTyxJQUFFLE1BQU0sSUFBSSxDQUFDYixNQUFNLENBQUNvQyxVQUFVLElBQUcsSUFBSSxDQUFDQyxLQUFLO0lBQUU7SUFBQyxJQUFJQyxrQkFBaUI7UUFBQyxPQUFNLENBQUM7SUFBQztJQUFDLElBQUl6QixVQUFTO1FBQUMsT0FBTyxJQUFJLENBQUNiLE1BQU0sQ0FBQ2EsT0FBTztJQUFBO0lBQUMwQix5QkFBd0I7UUFBQyxJQUFJLENBQUN2QyxNQUFNLENBQUNSLEVBQUUsQ0FBQyxpQkFBZ0IvQyxDQUFBQTtZQUFJLE1BQUssRUFBQytGLFFBQU85RixDQUFDLEVBQUMsR0FBQ0QsR0FBRSxFQUFDZ0csT0FBTTlFLENBQUMsRUFBQyxHQUFDakI7WUFBRWlCLEVBQUUrRSxJQUFJLEtBQUcsb0JBQW1CLEtBQUksQ0FBQ3JELFFBQVEsR0FBQyxJQUFJLENBQUNzRCxhQUFhLENBQUNoRixFQUFFaUYsSUFBSSxHQUFFLElBQUksQ0FBQzlFLE1BQU0sQ0FBQ2lFLElBQUksQ0FBQyxtQkFBa0IsSUFBSSxDQUFDMUMsUUFBUSxLQUFHMUIsRUFBRStFLElBQUksS0FBRyxpQkFBZSxJQUFJLENBQUNHLFVBQVUsQ0FBQyxJQUFJLENBQUN4QyxhQUFhLENBQUMxQyxFQUFFaUYsSUFBSSxLQUFHLElBQUksQ0FBQzlFLE1BQU0sQ0FBQ2lFLElBQUksQ0FBQ3BFLEVBQUUrRSxJQUFJLEVBQUMvRSxFQUFFaUYsSUFBSSxHQUFFLElBQUksQ0FBQzlFLE1BQU0sQ0FBQ2lFLElBQUksQ0FBQyxpQkFBZ0J0RjtRQUFFLElBQUcsSUFBSSxDQUFDdUQsTUFBTSxDQUFDUixFQUFFLENBQUMsZ0JBQWUvQyxDQUFBQTtZQUFJLE1BQU1DLElBQUVvRyxTQUFTckc7WUFBRyxJQUFJLENBQUM2QyxPQUFPLEdBQUM1QyxHQUFFLElBQUksQ0FBQ29CLE1BQU0sQ0FBQ2lFLElBQUksQ0FBQyxnQkFBZTFFLEVBQUUsSUFBSSxDQUFDaUMsT0FBTyxJQUFHLElBQUksQ0FBQ3lELE9BQU87UUFBRSxJQUFHLElBQUksQ0FBQy9DLE1BQU0sQ0FBQ1IsRUFBRSxDQUFDLGtCQUFpQi9DLENBQUFBO1lBQUksSUFBSSxDQUFDcUIsTUFBTSxDQUFDaUUsSUFBSSxDQUFDLGtCQUFpQnRGO1FBQUUsSUFBRyxJQUFJLENBQUN1RCxNQUFNLENBQUNSLEVBQUUsQ0FBQyxrQkFBaUIvQyxDQUFBQTtZQUFJLElBQUksQ0FBQzRGLEtBQUssSUFBRyxJQUFJLENBQUN2RSxNQUFNLENBQUNpRSxJQUFJLENBQUMsa0JBQWlCdEYsSUFBRyxJQUFJLENBQUNxQixNQUFNLENBQUNpRSxJQUFJLENBQUMsY0FBYTlFLEVBQUVGLEVBQUUsQ0FBQyxHQUFFbkMsaUVBQUNBLENBQUMsdUJBQXNCO2dCQUFDZ0ksTUFBS25HLEVBQUV1RyxLQUFLO2dCQUFDTixNQUFLO1lBQW1CO1FBQUcsSUFBRyxJQUFJLENBQUMxQyxNQUFNLENBQUNSLEVBQUUsQ0FBQyxlQUFjL0MsQ0FBQUE7WUFBSSxJQUFJQyxHQUFFaUI7WUFBRSxJQUFJLENBQUNzQyxHQUFHLENBQUNpQixXQUFXLElBQUcsRUFBQ3hFLElBQUUsSUFBSSxDQUFDeUUsS0FBSyxLQUFHLFFBQU16RSxFQUFFd0YsVUFBVSxJQUFHLENBQUN2RSxJQUFFLElBQUksQ0FBQ3dELEtBQUssS0FBRyxRQUFNeEQsRUFBRXNGLFNBQVMsQ0FBQztnQkFBQ0MsS0FBSXpHO1lBQUMsRUFBQyxHQUFHLElBQUksQ0FBQ3FCLE1BQU0sQ0FBQ2lFLElBQUksQ0FBQyxlQUFjdEY7UUFBRTtJQUFFO0lBQUMwRyxvQkFBb0IxRyxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUMyRCxPQUFPLENBQUM7WUFBQ1csUUFBTztZQUE2QnlCLFFBQU87Z0JBQUM7b0JBQUNsRCxTQUFRN0MsRUFBRWEsUUFBUSxDQUFDO2dCQUFHO2FBQUU7UUFBQTtJQUFFO0lBQUN1QyxvQkFBb0JwRCxDQUFDLEVBQUM7UUFBQyxPQUFPLE9BQU9BLEtBQUcsV0FBU0EsRUFBRTJHLFVBQVUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDaEUsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUM7SUFBQztJQUFDaUIsY0FBYzVELENBQUMsRUFBQztRQUFDLE9BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQzJDLFNBQVMsQ0FBQyxDQUFDLEVBQUUzQyxFQUFFLENBQUM7SUFBQTtJQUFDNEcsYUFBYTVHLENBQUMsRUFBQztRQUFDLE9BQU9VLE9BQU9WLEVBQUVXLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUFDO0lBQUN5RSxZQUFZcEYsQ0FBQyxFQUFDO1FBQUMsTUFBTUMsSUFBRUQsRUFBRStCLE1BQU0sQ0FBQ2IsQ0FBQUEsSUFBRyxJQUFJLENBQUNrQyxtQkFBbUIsQ0FBQ2xDLElBQUkyRixHQUFHLENBQUMzRixDQUFBQSxJQUFHLElBQUksQ0FBQzBGLFlBQVksQ0FBQzFGO1FBQUlqQixFQUFFNEIsTUFBTSxJQUFHLEtBQUksQ0FBQ2dCLE9BQU8sR0FBQzVDLENBQUMsQ0FBQyxFQUFFLEVBQUMsSUFBSSxDQUFDb0IsTUFBTSxDQUFDaUUsSUFBSSxDQUFDLGdCQUFlMUUsRUFBRSxJQUFJLENBQUNpQyxPQUFPLElBQUcsSUFBSSxDQUFDeUQsT0FBTyxFQUFDO0lBQUU7SUFBQ0YsV0FBV3BHLENBQUMsRUFBQztRQUFDLElBQUcsSUFBSSxDQUFDb0QsbUJBQW1CLENBQUNwRCxJQUFHO1lBQUMsTUFBTUMsSUFBRSxJQUFJLENBQUMyRyxZQUFZLENBQUM1RztZQUFHLElBQUksQ0FBQzZDLE9BQU8sR0FBQzVDLEdBQUUsSUFBSSxDQUFDeUcsbUJBQW1CLENBQUN6RztRQUFFO0lBQUM7SUFBQ29ELGVBQWVyRCxDQUFDLEVBQUM7UUFBQyxNQUFLLENBQUNDLEdBQUVpQixHQUFFRSxFQUFFLEdBQUNwQixFQUFFVyxLQUFLLENBQUM7UUFBSyxPQUFNO1lBQUNrQyxTQUFRLENBQUMsRUFBRTVDLEVBQUUsQ0FBQyxFQUFFaUIsRUFBRSxDQUFDO1lBQUNvQyxTQUFRbEM7UUFBQztJQUFDO0lBQUNpRSxZQUFZckYsQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDNEMsUUFBUSxHQUFDNUMsRUFBRStCLE1BQU0sQ0FBQzlCLENBQUFBLElBQUcsSUFBSSxDQUFDMkcsWUFBWSxDQUFDLElBQUksQ0FBQ3ZELGNBQWMsQ0FBQ3BELEdBQUc0QyxPQUFPLE1BQUksSUFBSSxDQUFDQSxPQUFPLEVBQUVnRSxHQUFHLENBQUM1RyxDQUFBQSxJQUFHLElBQUksQ0FBQ29ELGNBQWMsQ0FBQ3BELEdBQUdxRCxPQUFPLEdBQUUsSUFBSSxDQUFDakMsTUFBTSxDQUFDaUUsSUFBSSxDQUFDLG1CQUFrQixJQUFJLENBQUMxQyxRQUFRO0lBQUM7SUFBQ2tFLGFBQWE5RyxDQUFDLEVBQUM7UUFBQyxJQUFJQyxHQUFFaUI7UUFBRSxNQUFNRSxJQUFFLENBQUNuQixJQUFFRCxHQUFHZSxNQUFLLEtBQUksT0FBS2QsSUFBRSxFQUFFLEVBQUNxQixJQUFFLENBQUNKLElBQUVsQixHQUFHZ0IsY0FBYSxLQUFJLE9BQUtFLElBQUUsRUFBRSxFQUFDTSxJQUFFSixFQUFFbUIsTUFBTSxDQUFDakI7UUFBRyxJQUFHLENBQUNFLEVBQUVLLE1BQU0sRUFBQyxNQUFNLElBQUlGLE1BQU07UUFBOEQsTUFBTUQsSUFBRU4sRUFBRVMsTUFBTSxHQUFDN0IsR0FBR2lCLFdBQVNyQyxJQUFFLEVBQUUsRUFBQ2dELElBQUVSLEVBQUVTLE1BQU0sR0FBQzdCLEdBQUdxQixVQUFRdkMsSUFBRSxFQUFFLEVBQUNnRCxJQUFFOUIsR0FBR21CLG1CQUFpQixFQUFFLEVBQUNlLElBQUVsQyxHQUFHdUIsa0JBQWdCLEVBQUUsRUFBQ2EsSUFBRXBDLEdBQUd5QixVQUFRLElBQUksQ0FBQ3NGLFdBQVcsQ0FBQ3ZGLEdBQUV4QixFQUFFZ0gsU0FBUyxHQUFFM0UsSUFBRXJDLEdBQUdpSCxrQkFBZ0IsS0FBSztRQUFFLE9BQU07WUFBQ2xHLFFBQU9LLEdBQUd5RixJQUFJN0UsQ0FBQUEsSUFBRyxJQUFJLENBQUM0QixhQUFhLENBQUM1QjtZQUFJaEIsZ0JBQWVNLEVBQUV1RixHQUFHLENBQUM3RSxDQUFBQSxJQUFHLElBQUksQ0FBQzRCLGFBQWEsQ0FBQzVCO1lBQUlmLFNBQVFTO1lBQUVMLFFBQU9PO1lBQUVULGlCQUFnQlc7WUFBRVAsZ0JBQWVXO1lBQUVULFFBQU9XO1lBQUVxQyxhQUFZLENBQUMsQ0FBRXpFLENBQUFBLEtBQUcsUUFBTUEsRUFBRXlFLFdBQVc7WUFBRXdDLGdCQUFlNUU7WUFBRTJFLFdBQVVoSCxFQUFFZ0gsU0FBUztZQUFDRSxVQUFTbEgsRUFBRWtILFFBQVE7UUFBQTtJQUFDO0lBQUNILFlBQVkvRyxDQUFDLEVBQUNDLENBQUMsRUFBQztRQUFDLE1BQU1pQixJQUFFLENBQUM7UUFBRSxPQUFPbEIsRUFBRW1ILE9BQU8sQ0FBQy9GLENBQUFBO1lBQUlGLENBQUMsQ0FBQ0UsRUFBRSxHQUFDLElBQUksQ0FBQ2dHLFNBQVMsQ0FBQ2hHLEdBQUVuQjtRQUFFLElBQUdpQjtJQUFDO0lBQUMsTUFBTXdDLFdBQVcxRCxDQUFDLEVBQUM7UUFBQyxJQUFHLElBQUksQ0FBQ3dELEdBQUcsR0FBQyxJQUFJLENBQUNzRCxZQUFZLENBQUM5RyxJQUFHLElBQUksQ0FBQzZDLE9BQU8sR0FBQyxJQUFJLENBQUNXLEdBQUcsQ0FBQ3pDLE1BQU0sQ0FBQ2MsTUFBTSxHQUFDcEIsRUFBRSxJQUFJLENBQUMrQyxHQUFHLENBQUN6QyxNQUFNLElBQUVOLEVBQUUsSUFBSSxDQUFDK0MsR0FBRyxDQUFDeEMsY0FBYyxHQUFFLElBQUksQ0FBQ3VDLE1BQU0sR0FBQyxNQUFNaEYsZ0ZBQUNBLENBQUNrRixJQUFJLENBQUM7WUFBQ3VELFdBQVUsSUFBSSxDQUFDeEQsR0FBRyxDQUFDd0QsU0FBUztZQUFDRSxVQUFTLElBQUksQ0FBQzFELEdBQUcsQ0FBQzBELFFBQVE7WUFBQ0cscUJBQW9CckgsRUFBRXFILG1CQUFtQjtZQUFDQyxVQUFTdEgsRUFBRXNILFFBQVE7WUFBQ0MsZ0JBQWV2SCxFQUFFdUgsY0FBYztZQUFDQyxxQkFBb0J4SCxFQUFFd0gsbUJBQW1CO1lBQUNDLGtCQUFpQnpILEVBQUV5SCxnQkFBZ0I7UUFBQSxJQUFHLElBQUksQ0FBQzNCLHNCQUFzQixJQUFHLE1BQU0sSUFBSSxDQUFDNEIsb0JBQW9CLElBQUcsSUFBSSxDQUFDbEUsR0FBRyxDQUFDaUIsV0FBVyxFQUFDO1lBQUMsSUFBSXhFO1lBQUUsSUFBRztnQkFBQyxNQUFLLEVBQUMwSCxvQkFBbUJ6RyxDQUFDLEVBQUMsR0FBQyxNQUFNLG1VQUE4QjtnQkFBQ2pCLElBQUVpQjtZQUFDLEVBQUMsT0FBSztnQkFBQyxNQUFNLElBQUlTLE1BQU07WUFBK0Q7WUFBQyxJQUFHMUIsR0FBRSxJQUFHO2dCQUFDLElBQUksQ0FBQ3lFLEtBQUssR0FBQyxJQUFJekUsRUFBRUssRUFBRTtvQkFBQzBHLFdBQVUsSUFBSSxDQUFDeEQsR0FBRyxDQUFDd0QsU0FBUztnQkFBQSxHQUFFLElBQUksQ0FBQ3hELEdBQUcsQ0FBQ3lELGNBQWM7WUFBRSxFQUFDLE9BQU0vRixHQUFFO2dCQUFDLE1BQU0sSUFBSSxDQUFDcUMsTUFBTSxDQUFDZ0MsTUFBTSxDQUFDQyxLQUFLLENBQUN0RSxJQUFHLElBQUlTLE1BQU07WUFBaUQ7UUFBQztJQUFDO0lBQUM0QyxnQkFBZ0J2RSxDQUFDLEVBQUM7UUFBQyxJQUFHLENBQUNBLEdBQUU7UUFBTyxNQUFLLEVBQUNlLFFBQU9kLENBQUMsRUFBQ2UsZ0JBQWVFLENBQUMsRUFBQ08sUUFBT0wsQ0FBQyxFQUFDLEdBQUNwQjtRQUFFQyxLQUFHNUIsa0VBQUNBLENBQUM0QixNQUFLLEtBQUksQ0FBQ3VELEdBQUcsQ0FBQ3pDLE1BQU0sR0FBQ2QsRUFBRTRHLEdBQUcsQ0FBQ3ZGLENBQUFBLElBQUcsSUFBSSxDQUFDc0MsYUFBYSxDQUFDdEMsS0FBSXJCLEVBQUVrSCxPQUFPLENBQUM3RixDQUFBQTtZQUFJLElBQUksQ0FBQ2tDLEdBQUcsQ0FBQy9CLE1BQU0sQ0FBQ0gsRUFBRSxHQUFDRixHQUFHLENBQUNFLEVBQUUsSUFBRSxJQUFJLENBQUM4RixTQUFTLENBQUM5RjtRQUFFLEVBQUMsR0FBR0osS0FBRzdDLGtFQUFDQSxDQUFDNkMsTUFBSyxLQUFJLENBQUNzQyxHQUFHLENBQUN4QyxjQUFjLEdBQUMsRUFBRSxFQUFDLElBQUksQ0FBQ3dDLEdBQUcsQ0FBQ3hDLGNBQWMsR0FBQ0UsR0FBRzJGLElBQUl2RixDQUFBQSxJQUFHLElBQUksQ0FBQ3NDLGFBQWEsQ0FBQ3RDLEtBQUlKLEVBQUVpRyxPQUFPLENBQUM3RixDQUFBQTtZQUFJLElBQUksQ0FBQ2tDLEdBQUcsQ0FBQy9CLE1BQU0sQ0FBQ0gsRUFBRSxHQUFDRixHQUFHLENBQUNFLEVBQUUsSUFBRSxJQUFJLENBQUM4RixTQUFTLENBQUM5RjtRQUFFLEVBQUM7SUFBRTtJQUFDOEYsVUFBVXBILENBQUMsRUFBQ0MsQ0FBQyxFQUFDO1FBQUMsSUFBSWlCO1FBQUUsT0FBTSxDQUFDLENBQUNBLElBQUUsSUFBSSxDQUFDc0MsR0FBRyxDQUFDL0IsTUFBTSxLQUFHLE9BQUssS0FBSyxJQUFFUCxDQUFDLENBQUNsQixFQUFFLEtBQUcsQ0FBQyxFQUFFckIsRUFBRSxnQkFBZ0IsRUFBRXFCLEVBQUUsV0FBVyxFQUFFQyxLQUFHLElBQUksQ0FBQ3VELEdBQUcsQ0FBQ3dELFNBQVMsQ0FBQyxDQUFDO0lBQUE7SUFBQyxNQUFNVSx1QkFBc0I7UUFBQyxJQUFHLElBQUksQ0FBQ3RELE9BQU8sRUFBQyxJQUFHO1lBQUMsTUFBTXBFLElBQUUsTUFBTSxJQUFJLENBQUN1RCxNQUFNLENBQUNRLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDNEQsT0FBTyxDQUFDQyxPQUFPLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQy9FLFdBQVcsQ0FBQyxRQUFRLENBQUMsR0FBRTdDLElBQUUsSUFBSSxDQUFDbUUsT0FBTyxDQUFDVSxVQUFVLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQ25DLFNBQVMsQ0FBQyxDQUFDLEVBQUUzQyxFQUFFLENBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQ29FLE9BQU8sQ0FBQ1UsVUFBVSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNuQyxTQUFTLENBQUMsQ0FBQyxFQUFFM0MsRUFBRSxDQUFDLENBQUMsR0FBQyxJQUFJLENBQUNvRSxPQUFPLENBQUNVLFVBQVUsQ0FBQyxJQUFJLENBQUNuQyxTQUFTLENBQUM7WUFBQyxJQUFJLENBQUN5QyxXQUFXLENBQUNwRixJQUFFO2dCQUFDLElBQUksQ0FBQzRELGFBQWEsQ0FBQzVEO2FBQUcsR0FBQ0MsR0FBRzJDLFdBQVUsSUFBSSxDQUFDeUMsV0FBVyxDQUFDcEYsR0FBRzJDO1FBQVMsRUFBQyxPQUFNNUMsR0FBRTtZQUFDLElBQUksQ0FBQ3VELE1BQU0sQ0FBQ2dDLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLHdEQUF1RCxJQUFJLENBQUNqQyxNQUFNLENBQUNnQyxNQUFNLENBQUNDLEtBQUssQ0FBQ3hGLElBQUcsTUFBTSxJQUFJLENBQUMyRixVQUFVLEdBQUdULEtBQUssQ0FBQ2pGLENBQUFBLElBQUcsSUFBSSxDQUFDc0QsTUFBTSxDQUFDZ0MsTUFBTSxDQUFDdUMsSUFBSSxDQUFDN0g7UUFBRztJQUFDO0lBQUMyRixRQUFPO1FBQUMsSUFBSSxDQUFDL0MsT0FBTyxHQUFDLEdBQUUsSUFBSSxDQUFDRCxRQUFRLEdBQUMsRUFBRTtJQUFBO0lBQUMwRCxVQUFTO1FBQUMsSUFBSSxDQUFDbEMsT0FBTyxJQUFFLElBQUksQ0FBQ2IsTUFBTSxDQUFDUSxNQUFNLENBQUNDLElBQUksQ0FBQzRELE9BQU8sQ0FBQ0csT0FBTyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNqRixXQUFXLENBQUMsUUFBUSxDQUFDLEVBQUMsSUFBSSxDQUFDRCxPQUFPO0lBQUM7SUFBQ3FELGNBQWNsRyxDQUFDLEVBQUM7UUFBQyxPQUFPLE9BQU9BLEtBQUcsWUFBVUEsYUFBYWdJLFNBQU87WUFBQyxJQUFJLENBQUM3RSxZQUFZLENBQUNuRDtTQUFHLEdBQUNBLEVBQUU2RyxHQUFHLENBQUM1RyxDQUFBQSxJQUFHLElBQUksQ0FBQ2tELFlBQVksQ0FBQ2xEO0lBQUc7QUFBQztBQUFDLE1BQU1nSSxJQUFFeEY7QUFBbUksQ0FDeDhTLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXRoZXJldW0tcHJvdmlkZXIvZGlzdC9pbmRleC5lcy5qcz9mMzY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydHtFdmVudEVtaXR0ZXIgYXMgUH1mcm9tXCJldmVudHNcIjtpbXBvcnR7Z2V0QWNjb3VudHNGcm9tTmFtZXNwYWNlcyBhcyBfLGdldFNka0Vycm9yIGFzIEEsaXNWYWxpZEFycmF5IGFzIGZ9ZnJvbVwiQHdhbGxldGNvbm5lY3QvdXRpbHNcIjtpbXBvcnR7VW5pdmVyc2FsUHJvdmlkZXIgYXMgU31mcm9tXCJAd2FsbGV0Y29ubmVjdC91bml2ZXJzYWwtcHJvdmlkZXJcIjtjb25zdCBSPVwid2NcIixUPVwiZXRoZXJldW1fcHJvdmlkZXJcIiwkPWAke1J9QDI6JHtUfTpgLGo9XCJodHRwczovL3JwYy53YWxsZXRjb25uZWN0Lm9yZy92MS9cIix1PVtcImV0aF9zZW5kVHJhbnNhY3Rpb25cIixcInBlcnNvbmFsX3NpZ25cIl0seT1bXCJldGhfYWNjb3VudHNcIixcImV0aF9yZXF1ZXN0QWNjb3VudHNcIixcImV0aF9zZW5kUmF3VHJhbnNhY3Rpb25cIixcImV0aF9zaWduXCIsXCJldGhfc2lnblRyYW5zYWN0aW9uXCIsXCJldGhfc2lnblR5cGVkRGF0YVwiLFwiZXRoX3NpZ25UeXBlZERhdGFfdjNcIixcImV0aF9zaWduVHlwZWREYXRhX3Y0XCIsXCJldGhfc2VuZFRyYW5zYWN0aW9uXCIsXCJwZXJzb25hbF9zaWduXCIsXCJ3YWxsZXRfc3dpdGNoRXRoZXJldW1DaGFpblwiLFwid2FsbGV0X2FkZEV0aGVyZXVtQ2hhaW5cIixcIndhbGxldF9nZXRQZXJtaXNzaW9uc1wiLFwid2FsbGV0X3JlcXVlc3RQZXJtaXNzaW9uc1wiLFwid2FsbGV0X3JlZ2lzdGVyT25ib2FyZGluZ1wiLFwid2FsbGV0X3dhdGNoQXNzZXRcIixcIndhbGxldF9zY2FuUVJDb2RlXCIsXCJ3YWxsZXRfc2VuZENhbGxzXCIsXCJ3YWxsZXRfZ2V0Q2FwYWJpbGl0aWVzXCIsXCJ3YWxsZXRfZ2V0Q2FsbHNTdGF0dXNcIixcIndhbGxldF9zaG93Q2FsbHNTdGF0dXNcIl0sZz1bXCJjaGFpbkNoYW5nZWRcIixcImFjY291bnRzQ2hhbmdlZFwiXSxiPVtcImNoYWluQ2hhbmdlZFwiLFwiYWNjb3VudHNDaGFuZ2VkXCIsXCJtZXNzYWdlXCIsXCJkaXNjb25uZWN0XCIsXCJjb25uZWN0XCJdO3ZhciBxPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxOPU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzLEQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMsTT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLFU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxRPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsTz0ocix0LHMpPT50IGluIHI/cShyLHQse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnN9KTpyW3RdPXMscD0ocix0KT0+e2Zvcih2YXIgcyBpbiB0fHwodD17fSkpVS5jYWxsKHQscykmJk8ocixzLHRbc10pO2lmKE0pZm9yKHZhciBzIG9mIE0odCkpUS5jYWxsKHQscykmJk8ocixzLHRbc10pO3JldHVybiByfSxFPShyLHQpPT5OKHIsRCh0KSk7ZnVuY3Rpb24gbShyKXtyZXR1cm4gTnVtYmVyKHJbMF0uc3BsaXQoXCI6XCIpWzFdKX1mdW5jdGlvbiB2KHIpe3JldHVybmAweCR7ci50b1N0cmluZygxNil9YH1mdW5jdGlvbiBMKHIpe2NvbnN0e2NoYWluczp0LG9wdGlvbmFsQ2hhaW5zOnMsbWV0aG9kczppLG9wdGlvbmFsTWV0aG9kczplLGV2ZW50czpuLG9wdGlvbmFsRXZlbnRzOm8scnBjTWFwOmN9PXI7aWYoIWYodCkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjaGFpbnNcIik7Y29uc3QgYT17Y2hhaW5zOnQsbWV0aG9kczppfHx1LGV2ZW50czpufHxnLHJwY01hcDpwKHt9LHQubGVuZ3RoP3tbbSh0KV06Y1ttKHQpXX06e30pfSxoPW4/LmZpbHRlcihsPT4hZy5pbmNsdWRlcyhsKSksZD1pPy5maWx0ZXIobD0+IXUuaW5jbHVkZXMobCkpO2lmKCFzJiYhbyYmIWUmJiEoaCE9bnVsbCYmaC5sZW5ndGgpJiYhKGQhPW51bGwmJmQubGVuZ3RoKSlyZXR1cm57cmVxdWlyZWQ6dC5sZW5ndGg/YTp2b2lkIDB9O2NvbnN0IHc9aD8ubGVuZ3RoJiZkPy5sZW5ndGh8fCFzLEk9e2NoYWluczpbLi4ubmV3IFNldCh3P2EuY2hhaW5zLmNvbmNhdChzfHxbXSk6cyldLG1ldGhvZHM6Wy4uLm5ldyBTZXQoYS5tZXRob2RzLmNvbmNhdChlIT1udWxsJiZlLmxlbmd0aD9lOnkpKV0sZXZlbnRzOlsuLi5uZXcgU2V0KGEuZXZlbnRzLmNvbmNhdChvIT1udWxsJiZvLmxlbmd0aD9vOmIpKV0scnBjTWFwOmN9O3JldHVybntyZXF1aXJlZDp0Lmxlbmd0aD9hOnZvaWQgMCxvcHRpb25hbDpzLmxlbmd0aD9JOnZvaWQgMH19Y2xhc3MgQ3tjb25zdHJ1Y3Rvcigpe3RoaXMuZXZlbnRzPW5ldyBQLHRoaXMubmFtZXNwYWNlPVwiZWlwMTU1XCIsdGhpcy5hY2NvdW50cz1bXSx0aGlzLmNoYWluSWQ9MSx0aGlzLlNUT1JBR0VfS0VZPSQsdGhpcy5vbj0odCxzKT0+KHRoaXMuZXZlbnRzLm9uKHQscyksdGhpcyksdGhpcy5vbmNlPSh0LHMpPT4odGhpcy5ldmVudHMub25jZSh0LHMpLHRoaXMpLHRoaXMucmVtb3ZlTGlzdGVuZXI9KHQscyk9Pih0aGlzLmV2ZW50cy5yZW1vdmVMaXN0ZW5lcih0LHMpLHRoaXMpLHRoaXMub2ZmPSh0LHMpPT4odGhpcy5ldmVudHMub2ZmKHQscyksdGhpcyksdGhpcy5wYXJzZUFjY291bnQ9dD0+dGhpcy5pc0NvbXBhdGlibGVDaGFpbklkKHQpP3RoaXMucGFyc2VBY2NvdW50SWQodCkuYWRkcmVzczp0LHRoaXMuc2lnbmVyPXt9LHRoaXMucnBjPXt9fXN0YXRpYyBhc3luYyBpbml0KHQpe2NvbnN0IHM9bmV3IEM7cmV0dXJuIGF3YWl0IHMuaW5pdGlhbGl6ZSh0KSxzfWFzeW5jIHJlcXVlc3QodCxzKXtyZXR1cm4gYXdhaXQgdGhpcy5zaWduZXIucmVxdWVzdCh0LHRoaXMuZm9ybWF0Q2hhaW5JZCh0aGlzLmNoYWluSWQpLHMpfXNlbmRBc3luYyh0LHMsaSl7dGhpcy5zaWduZXIuc2VuZEFzeW5jKHQscyx0aGlzLmZvcm1hdENoYWluSWQodGhpcy5jaGFpbklkKSxpKX1nZXQgY29ubmVjdGVkKCl7cmV0dXJuIHRoaXMuc2lnbmVyLmNsaWVudD90aGlzLnNpZ25lci5jbGllbnQuY29yZS5yZWxheWVyLmNvbm5lY3RlZDohMX1nZXQgY29ubmVjdGluZygpe3JldHVybiB0aGlzLnNpZ25lci5jbGllbnQ/dGhpcy5zaWduZXIuY2xpZW50LmNvcmUucmVsYXllci5jb25uZWN0aW5nOiExfWFzeW5jIGVuYWJsZSgpe3JldHVybiB0aGlzLnNlc3Npb258fGF3YWl0IHRoaXMuY29ubmVjdCgpLGF3YWl0IHRoaXMucmVxdWVzdCh7bWV0aG9kOlwiZXRoX3JlcXVlc3RBY2NvdW50c1wifSl9YXN5bmMgY29ubmVjdCh0KXtpZighdGhpcy5zaWduZXIuY2xpZW50KXRocm93IG5ldyBFcnJvcihcIlByb3ZpZGVyIG5vdCBpbml0aWFsaXplZC4gQ2FsbCBpbml0KCkgZmlyc3RcIik7dGhpcy5sb2FkQ29ubmVjdE9wdHModCk7Y29uc3R7cmVxdWlyZWQ6cyxvcHRpb25hbDppfT1MKHRoaXMucnBjKTt0cnl7Y29uc3QgZT1hd2FpdCBuZXcgUHJvbWlzZShhc3luYyhvLGMpPT57dmFyIGE7dGhpcy5ycGMuc2hvd1FyTW9kYWwmJigoYT10aGlzLm1vZGFsKT09bnVsbHx8YS5zdWJzY3JpYmVNb2RhbChoPT57IWgub3BlbiYmIXRoaXMuc2lnbmVyLnNlc3Npb24mJih0aGlzLnNpZ25lci5hYm9ydFBhaXJpbmdBdHRlbXB0KCksYyhuZXcgRXJyb3IoXCJDb25uZWN0aW9uIHJlcXVlc3QgcmVzZXQuIFBsZWFzZSB0cnkgYWdhaW4uXCIpKSl9KSksYXdhaXQgdGhpcy5zaWduZXIuY29ubmVjdChFKHAoe25hbWVzcGFjZXM6cCh7fSxzJiZ7W3RoaXMubmFtZXNwYWNlXTpzfSl9LGkmJntvcHRpb25hbE5hbWVzcGFjZXM6e1t0aGlzLm5hbWVzcGFjZV06aX19KSx7cGFpcmluZ1RvcGljOnQ/LnBhaXJpbmdUb3BpY30pKS50aGVuKGg9PntvKGgpfSkuY2F0Y2goaD0+e2MobmV3IEVycm9yKGgubWVzc2FnZSkpfSl9KTtpZighZSlyZXR1cm47Y29uc3Qgbj1fKGUubmFtZXNwYWNlcyxbdGhpcy5uYW1lc3BhY2VdKTt0aGlzLnNldENoYWluSWRzKHRoaXMucnBjLmNoYWlucy5sZW5ndGg/dGhpcy5ycGMuY2hhaW5zOm4pLHRoaXMuc2V0QWNjb3VudHMobiksdGhpcy5ldmVudHMuZW1pdChcImNvbm5lY3RcIix7Y2hhaW5JZDp2KHRoaXMuY2hhaW5JZCl9KX1jYXRjaChlKXt0aHJvdyB0aGlzLnNpZ25lci5sb2dnZXIuZXJyb3IoZSksZX1maW5hbGx5e3RoaXMubW9kYWwmJnRoaXMubW9kYWwuY2xvc2VNb2RhbCgpfX1hc3luYyBhdXRoZW50aWNhdGUodCxzKXtpZighdGhpcy5zaWduZXIuY2xpZW50KXRocm93IG5ldyBFcnJvcihcIlByb3ZpZGVyIG5vdCBpbml0aWFsaXplZC4gQ2FsbCBpbml0KCkgZmlyc3RcIik7dGhpcy5sb2FkQ29ubmVjdE9wdHMoe2NoYWluczp0Py5jaGFpbnN9KTt0cnl7Y29uc3QgaT1hd2FpdCBuZXcgUHJvbWlzZShhc3luYyhuLG8pPT57dmFyIGM7dGhpcy5ycGMuc2hvd1FyTW9kYWwmJigoYz10aGlzLm1vZGFsKT09bnVsbHx8Yy5zdWJzY3JpYmVNb2RhbChhPT57IWEub3BlbiYmIXRoaXMuc2lnbmVyLnNlc3Npb24mJih0aGlzLnNpZ25lci5hYm9ydFBhaXJpbmdBdHRlbXB0KCksbyhuZXcgRXJyb3IoXCJDb25uZWN0aW9uIHJlcXVlc3QgcmVzZXQuIFBsZWFzZSB0cnkgYWdhaW4uXCIpKSl9KSksYXdhaXQgdGhpcy5zaWduZXIuYXV0aGVudGljYXRlKEUocCh7fSx0KSx7Y2hhaW5zOnRoaXMucnBjLmNoYWluc30pLHMpLnRoZW4oYT0+e24oYSl9KS5jYXRjaChhPT57byhuZXcgRXJyb3IoYS5tZXNzYWdlKSl9KX0pLGU9aS5zZXNzaW9uO2lmKGUpe2NvbnN0IG49XyhlLm5hbWVzcGFjZXMsW3RoaXMubmFtZXNwYWNlXSk7dGhpcy5zZXRDaGFpbklkcyh0aGlzLnJwYy5jaGFpbnMubGVuZ3RoP3RoaXMucnBjLmNoYWluczpuKSx0aGlzLnNldEFjY291bnRzKG4pLHRoaXMuZXZlbnRzLmVtaXQoXCJjb25uZWN0XCIse2NoYWluSWQ6dih0aGlzLmNoYWluSWQpfSl9cmV0dXJuIGl9Y2F0Y2goaSl7dGhyb3cgdGhpcy5zaWduZXIubG9nZ2VyLmVycm9yKGkpLGl9ZmluYWxseXt0aGlzLm1vZGFsJiZ0aGlzLm1vZGFsLmNsb3NlTW9kYWwoKX19YXN5bmMgZGlzY29ubmVjdCgpe3RoaXMuc2Vzc2lvbiYmYXdhaXQgdGhpcy5zaWduZXIuZGlzY29ubmVjdCgpLHRoaXMucmVzZXQoKX1nZXQgaXNXYWxsZXRDb25uZWN0KCl7cmV0dXJuITB9Z2V0IHNlc3Npb24oKXtyZXR1cm4gdGhpcy5zaWduZXIuc2Vzc2lvbn1yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCl7dGhpcy5zaWduZXIub24oXCJzZXNzaW9uX2V2ZW50XCIsdD0+e2NvbnN0e3BhcmFtczpzfT10LHtldmVudDppfT1zO2kubmFtZT09PVwiYWNjb3VudHNDaGFuZ2VkXCI/KHRoaXMuYWNjb3VudHM9dGhpcy5wYXJzZUFjY291bnRzKGkuZGF0YSksdGhpcy5ldmVudHMuZW1pdChcImFjY291bnRzQ2hhbmdlZFwiLHRoaXMuYWNjb3VudHMpKTppLm5hbWU9PT1cImNoYWluQ2hhbmdlZFwiP3RoaXMuc2V0Q2hhaW5JZCh0aGlzLmZvcm1hdENoYWluSWQoaS5kYXRhKSk6dGhpcy5ldmVudHMuZW1pdChpLm5hbWUsaS5kYXRhKSx0aGlzLmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9ldmVudFwiLHQpfSksdGhpcy5zaWduZXIub24oXCJjaGFpbkNoYW5nZWRcIix0PT57Y29uc3Qgcz1wYXJzZUludCh0KTt0aGlzLmNoYWluSWQ9cyx0aGlzLmV2ZW50cy5lbWl0KFwiY2hhaW5DaGFuZ2VkXCIsdih0aGlzLmNoYWluSWQpKSx0aGlzLnBlcnNpc3QoKX0pLHRoaXMuc2lnbmVyLm9uKFwic2Vzc2lvbl91cGRhdGVcIix0PT57dGhpcy5ldmVudHMuZW1pdChcInNlc3Npb25fdXBkYXRlXCIsdCl9KSx0aGlzLnNpZ25lci5vbihcInNlc3Npb25fZGVsZXRlXCIsdD0+e3RoaXMucmVzZXQoKSx0aGlzLmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9kZWxldGVcIix0KSx0aGlzLmV2ZW50cy5lbWl0KFwiZGlzY29ubmVjdFwiLEUocCh7fSxBKFwiVVNFUl9ESVNDT05ORUNURURcIikpLHtkYXRhOnQudG9waWMsbmFtZTpcIlVTRVJfRElTQ09OTkVDVEVEXCJ9KSl9KSx0aGlzLnNpZ25lci5vbihcImRpc3BsYXlfdXJpXCIsdD0+e3ZhciBzLGk7dGhpcy5ycGMuc2hvd1FyTW9kYWwmJigocz10aGlzLm1vZGFsKT09bnVsbHx8cy5jbG9zZU1vZGFsKCksKGk9dGhpcy5tb2RhbCk9PW51bGx8fGkub3Blbk1vZGFsKHt1cmk6dH0pKSx0aGlzLmV2ZW50cy5lbWl0KFwiZGlzcGxheV91cmlcIix0KX0pfXN3aXRjaEV0aGVyZXVtQ2hhaW4odCl7dGhpcy5yZXF1ZXN0KHttZXRob2Q6XCJ3YWxsZXRfc3dpdGNoRXRoZXJldW1DaGFpblwiLHBhcmFtczpbe2NoYWluSWQ6dC50b1N0cmluZygxNil9XX0pfWlzQ29tcGF0aWJsZUNoYWluSWQodCl7cmV0dXJuIHR5cGVvZiB0PT1cInN0cmluZ1wiP3Quc3RhcnRzV2l0aChgJHt0aGlzLm5hbWVzcGFjZX06YCk6ITF9Zm9ybWF0Q2hhaW5JZCh0KXtyZXR1cm5gJHt0aGlzLm5hbWVzcGFjZX06JHt0fWB9cGFyc2VDaGFpbklkKHQpe3JldHVybiBOdW1iZXIodC5zcGxpdChcIjpcIilbMV0pfXNldENoYWluSWRzKHQpe2NvbnN0IHM9dC5maWx0ZXIoaT0+dGhpcy5pc0NvbXBhdGlibGVDaGFpbklkKGkpKS5tYXAoaT0+dGhpcy5wYXJzZUNoYWluSWQoaSkpO3MubGVuZ3RoJiYodGhpcy5jaGFpbklkPXNbMF0sdGhpcy5ldmVudHMuZW1pdChcImNoYWluQ2hhbmdlZFwiLHYodGhpcy5jaGFpbklkKSksdGhpcy5wZXJzaXN0KCkpfXNldENoYWluSWQodCl7aWYodGhpcy5pc0NvbXBhdGlibGVDaGFpbklkKHQpKXtjb25zdCBzPXRoaXMucGFyc2VDaGFpbklkKHQpO3RoaXMuY2hhaW5JZD1zLHRoaXMuc3dpdGNoRXRoZXJldW1DaGFpbihzKX19cGFyc2VBY2NvdW50SWQodCl7Y29uc3RbcyxpLGVdPXQuc3BsaXQoXCI6XCIpO3JldHVybntjaGFpbklkOmAke3N9OiR7aX1gLGFkZHJlc3M6ZX19c2V0QWNjb3VudHModCl7dGhpcy5hY2NvdW50cz10LmZpbHRlcihzPT50aGlzLnBhcnNlQ2hhaW5JZCh0aGlzLnBhcnNlQWNjb3VudElkKHMpLmNoYWluSWQpPT09dGhpcy5jaGFpbklkKS5tYXAocz0+dGhpcy5wYXJzZUFjY291bnRJZChzKS5hZGRyZXNzKSx0aGlzLmV2ZW50cy5lbWl0KFwiYWNjb3VudHNDaGFuZ2VkXCIsdGhpcy5hY2NvdW50cyl9Z2V0UnBjQ29uZmlnKHQpe3ZhciBzLGk7Y29uc3QgZT0ocz10Py5jaGFpbnMpIT1udWxsP3M6W10sbj0oaT10Py5vcHRpb25hbENoYWlucykhPW51bGw/aTpbXSxvPWUuY29uY2F0KG4pO2lmKCFvLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJObyBjaGFpbnMgc3BlY2lmaWVkIGluIGVpdGhlciBgY2hhaW5zYCBvciBgb3B0aW9uYWxDaGFpbnNgXCIpO2NvbnN0IGM9ZS5sZW5ndGg/dD8ubWV0aG9kc3x8dTpbXSxhPWUubGVuZ3RoP3Q/LmV2ZW50c3x8ZzpbXSxoPXQ/Lm9wdGlvbmFsTWV0aG9kc3x8W10sZD10Py5vcHRpb25hbEV2ZW50c3x8W10sdz10Py5ycGNNYXB8fHRoaXMuYnVpbGRScGNNYXAobyx0LnByb2plY3RJZCksST10Py5xck1vZGFsT3B0aW9uc3x8dm9pZCAwO3JldHVybntjaGFpbnM6ZT8ubWFwKGw9PnRoaXMuZm9ybWF0Q2hhaW5JZChsKSksb3B0aW9uYWxDaGFpbnM6bi5tYXAobD0+dGhpcy5mb3JtYXRDaGFpbklkKGwpKSxtZXRob2RzOmMsZXZlbnRzOmEsb3B0aW9uYWxNZXRob2RzOmgsb3B0aW9uYWxFdmVudHM6ZCxycGNNYXA6dyxzaG93UXJNb2RhbDohISh0IT1udWxsJiZ0LnNob3dRck1vZGFsKSxxck1vZGFsT3B0aW9uczpJLHByb2plY3RJZDp0LnByb2plY3RJZCxtZXRhZGF0YTp0Lm1ldGFkYXRhfX1idWlsZFJwY01hcCh0LHMpe2NvbnN0IGk9e307cmV0dXJuIHQuZm9yRWFjaChlPT57aVtlXT10aGlzLmdldFJwY1VybChlLHMpfSksaX1hc3luYyBpbml0aWFsaXplKHQpe2lmKHRoaXMucnBjPXRoaXMuZ2V0UnBjQ29uZmlnKHQpLHRoaXMuY2hhaW5JZD10aGlzLnJwYy5jaGFpbnMubGVuZ3RoP20odGhpcy5ycGMuY2hhaW5zKTptKHRoaXMucnBjLm9wdGlvbmFsQ2hhaW5zKSx0aGlzLnNpZ25lcj1hd2FpdCBTLmluaXQoe3Byb2plY3RJZDp0aGlzLnJwYy5wcm9qZWN0SWQsbWV0YWRhdGE6dGhpcy5ycGMubWV0YWRhdGEsZGlzYWJsZVByb3ZpZGVyUGluZzp0LmRpc2FibGVQcm92aWRlclBpbmcscmVsYXlVcmw6dC5yZWxheVVybCxzdG9yYWdlT3B0aW9uczp0LnN0b3JhZ2VPcHRpb25zLGN1c3RvbVN0b3JhZ2VQcmVmaXg6dC5jdXN0b21TdG9yYWdlUHJlZml4LHRlbGVtZXRyeUVuYWJsZWQ6dC50ZWxlbWV0cnlFbmFibGVkfSksdGhpcy5yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCksYXdhaXQgdGhpcy5sb2FkUGVyc2lzdGVkU2Vzc2lvbigpLHRoaXMucnBjLnNob3dRck1vZGFsKXtsZXQgczt0cnl7Y29uc3R7V2FsbGV0Q29ubmVjdE1vZGFsOml9PWF3YWl0IGltcG9ydChcIkB3YWxsZXRjb25uZWN0L21vZGFsXCIpO3M9aX1jYXRjaHt0aHJvdyBuZXcgRXJyb3IoXCJUbyB1c2UgUVIgbW9kYWwsIHBsZWFzZSBpbnN0YWxsIEB3YWxsZXRjb25uZWN0L21vZGFsIHBhY2thZ2VcIil9aWYocyl0cnl7dGhpcy5tb2RhbD1uZXcgcyhwKHtwcm9qZWN0SWQ6dGhpcy5ycGMucHJvamVjdElkfSx0aGlzLnJwYy5xck1vZGFsT3B0aW9ucykpfWNhdGNoKGkpe3Rocm93IHRoaXMuc2lnbmVyLmxvZ2dlci5lcnJvcihpKSxuZXcgRXJyb3IoXCJDb3VsZCBub3QgZ2VuZXJhdGUgV2FsbGV0Q29ubmVjdE1vZGFsIEluc3RhbmNlXCIpfX19bG9hZENvbm5lY3RPcHRzKHQpe2lmKCF0KXJldHVybjtjb25zdHtjaGFpbnM6cyxvcHRpb25hbENoYWluczppLHJwY01hcDplfT10O3MmJmYocykmJih0aGlzLnJwYy5jaGFpbnM9cy5tYXAobj0+dGhpcy5mb3JtYXRDaGFpbklkKG4pKSxzLmZvckVhY2gobj0+e3RoaXMucnBjLnJwY01hcFtuXT1lPy5bbl18fHRoaXMuZ2V0UnBjVXJsKG4pfSkpLGkmJmYoaSkmJih0aGlzLnJwYy5vcHRpb25hbENoYWlucz1bXSx0aGlzLnJwYy5vcHRpb25hbENoYWlucz1pPy5tYXAobj0+dGhpcy5mb3JtYXRDaGFpbklkKG4pKSxpLmZvckVhY2gobj0+e3RoaXMucnBjLnJwY01hcFtuXT1lPy5bbl18fHRoaXMuZ2V0UnBjVXJsKG4pfSkpfWdldFJwY1VybCh0LHMpe3ZhciBpO3JldHVybigoaT10aGlzLnJwYy5ycGNNYXApPT1udWxsP3ZvaWQgMDppW3RdKXx8YCR7an0/Y2hhaW5JZD1laXAxNTU6JHt0fSZwcm9qZWN0SWQ9JHtzfHx0aGlzLnJwYy5wcm9qZWN0SWR9YH1hc3luYyBsb2FkUGVyc2lzdGVkU2Vzc2lvbigpe2lmKHRoaXMuc2Vzc2lvbil0cnl7Y29uc3QgdD1hd2FpdCB0aGlzLnNpZ25lci5jbGllbnQuY29yZS5zdG9yYWdlLmdldEl0ZW0oYCR7dGhpcy5TVE9SQUdFX0tFWX0vY2hhaW5JZGApLHM9dGhpcy5zZXNzaW9uLm5hbWVzcGFjZXNbYCR7dGhpcy5uYW1lc3BhY2V9OiR7dH1gXT90aGlzLnNlc3Npb24ubmFtZXNwYWNlc1tgJHt0aGlzLm5hbWVzcGFjZX06JHt0fWBdOnRoaXMuc2Vzc2lvbi5uYW1lc3BhY2VzW3RoaXMubmFtZXNwYWNlXTt0aGlzLnNldENoYWluSWRzKHQ/W3RoaXMuZm9ybWF0Q2hhaW5JZCh0KV06cz8uYWNjb3VudHMpLHRoaXMuc2V0QWNjb3VudHMocz8uYWNjb3VudHMpfWNhdGNoKHQpe3RoaXMuc2lnbmVyLmxvZ2dlci5lcnJvcihcIkZhaWxlZCB0byBsb2FkIHBlcnNpc3RlZCBzZXNzaW9uLCBjbGVhcmluZyBzdGF0ZS4uLlwiKSx0aGlzLnNpZ25lci5sb2dnZXIuZXJyb3IodCksYXdhaXQgdGhpcy5kaXNjb25uZWN0KCkuY2F0Y2gocz0+dGhpcy5zaWduZXIubG9nZ2VyLndhcm4ocykpfX1yZXNldCgpe3RoaXMuY2hhaW5JZD0xLHRoaXMuYWNjb3VudHM9W119cGVyc2lzdCgpe3RoaXMuc2Vzc2lvbiYmdGhpcy5zaWduZXIuY2xpZW50LmNvcmUuc3RvcmFnZS5zZXRJdGVtKGAke3RoaXMuU1RPUkFHRV9LRVl9L2NoYWluSWRgLHRoaXMuY2hhaW5JZCl9cGFyc2VBY2NvdW50cyh0KXtyZXR1cm4gdHlwZW9mIHQ9PVwic3RyaW5nXCJ8fHQgaW5zdGFuY2VvZiBTdHJpbmc/W3RoaXMucGFyc2VBY2NvdW50KHQpXTp0Lm1hcChzPT50aGlzLnBhcnNlQWNjb3VudChzKSl9fWNvbnN0IHg9QztleHBvcnR7eCBhcyBFdGhlcmV1bVByb3ZpZGVyLGIgYXMgT1BUSU9OQUxfRVZFTlRTLHkgYXMgT1BUSU9OQUxfTUVUSE9EUyxnIGFzIFJFUVVJUkVEX0VWRU5UUyx1IGFzIFJFUVVJUkVEX01FVEhPRFMsQyBhcyBkZWZhdWx0fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbIkV2ZW50RW1pdHRlciIsIlAiLCJnZXRBY2NvdW50c0Zyb21OYW1lc3BhY2VzIiwiXyIsImdldFNka0Vycm9yIiwiQSIsImlzVmFsaWRBcnJheSIsImYiLCJVbml2ZXJzYWxQcm92aWRlciIsIlMiLCJSIiwiVCIsIiQiLCJqIiwidSIsInkiLCJnIiwiYiIsInEiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsIk4iLCJkZWZpbmVQcm9wZXJ0aWVzIiwiRCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJNIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiVSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiUSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiTyIsInIiLCJ0IiwicyIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInZhbHVlIiwicCIsImNhbGwiLCJFIiwibSIsIk51bWJlciIsInNwbGl0IiwidiIsInRvU3RyaW5nIiwiTCIsImNoYWlucyIsIm9wdGlvbmFsQ2hhaW5zIiwibWV0aG9kcyIsImkiLCJvcHRpb25hbE1ldGhvZHMiLCJlIiwiZXZlbnRzIiwibiIsIm9wdGlvbmFsRXZlbnRzIiwibyIsInJwY01hcCIsImMiLCJFcnJvciIsImEiLCJsZW5ndGgiLCJoIiwiZmlsdGVyIiwibCIsImluY2x1ZGVzIiwiZCIsInJlcXVpcmVkIiwidyIsIkkiLCJTZXQiLCJjb25jYXQiLCJvcHRpb25hbCIsIkMiLCJjb25zdHJ1Y3RvciIsIm5hbWVzcGFjZSIsImFjY291bnRzIiwiY2hhaW5JZCIsIlNUT1JBR0VfS0VZIiwib24iLCJvbmNlIiwicmVtb3ZlTGlzdGVuZXIiLCJvZmYiLCJwYXJzZUFjY291bnQiLCJpc0NvbXBhdGlibGVDaGFpbklkIiwicGFyc2VBY2NvdW50SWQiLCJhZGRyZXNzIiwic2lnbmVyIiwicnBjIiwiaW5pdCIsImluaXRpYWxpemUiLCJyZXF1ZXN0IiwiZm9ybWF0Q2hhaW5JZCIsInNlbmRBc3luYyIsImNvbm5lY3RlZCIsImNsaWVudCIsImNvcmUiLCJyZWxheWVyIiwiY29ubmVjdGluZyIsImVuYWJsZSIsInNlc3Npb24iLCJjb25uZWN0IiwibWV0aG9kIiwibG9hZENvbm5lY3RPcHRzIiwiUHJvbWlzZSIsInNob3dRck1vZGFsIiwibW9kYWwiLCJzdWJzY3JpYmVNb2RhbCIsIm9wZW4iLCJhYm9ydFBhaXJpbmdBdHRlbXB0IiwibmFtZXNwYWNlcyIsIm9wdGlvbmFsTmFtZXNwYWNlcyIsInBhaXJpbmdUb3BpYyIsInRoZW4iLCJjYXRjaCIsIm1lc3NhZ2UiLCJzZXRDaGFpbklkcyIsInNldEFjY291bnRzIiwiZW1pdCIsImxvZ2dlciIsImVycm9yIiwiY2xvc2VNb2RhbCIsImF1dGhlbnRpY2F0ZSIsImRpc2Nvbm5lY3QiLCJyZXNldCIsImlzV2FsbGV0Q29ubmVjdCIsInJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMiLCJwYXJhbXMiLCJldmVudCIsIm5hbWUiLCJwYXJzZUFjY291bnRzIiwiZGF0YSIsInNldENoYWluSWQiLCJwYXJzZUludCIsInBlcnNpc3QiLCJ0b3BpYyIsIm9wZW5Nb2RhbCIsInVyaSIsInN3aXRjaEV0aGVyZXVtQ2hhaW4iLCJzdGFydHNXaXRoIiwicGFyc2VDaGFpbklkIiwibWFwIiwiZ2V0UnBjQ29uZmlnIiwiYnVpbGRScGNNYXAiLCJwcm9qZWN0SWQiLCJxck1vZGFsT3B0aW9ucyIsIm1ldGFkYXRhIiwiZm9yRWFjaCIsImdldFJwY1VybCIsImRpc2FibGVQcm92aWRlclBpbmciLCJyZWxheVVybCIsInN0b3JhZ2VPcHRpb25zIiwiY3VzdG9tU3RvcmFnZVByZWZpeCIsInRlbGVtZXRyeUVuYWJsZWQiLCJsb2FkUGVyc2lzdGVkU2Vzc2lvbiIsIldhbGxldENvbm5lY3RNb2RhbCIsInN0b3JhZ2UiLCJnZXRJdGVtIiwid2FybiIsInNldEl0ZW0iLCJTdHJpbmciLCJ4IiwiRXRoZXJldW1Qcm92aWRlciIsIk9QVElPTkFMX0VWRU5UUyIsIk9QVElPTkFMX01FVEhPRFMiLCJSRVFVSVJFRF9FVkVOVFMiLCJSRVFVSVJFRF9NRVRIT0RTIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js":
/*!***************************************************************!*\
  !*** ./node_modules/@walletconnect/events/dist/esm/events.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* binding */ IEvents)\n/* harmony export */ });\nclass IEvents {\n} //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2V2ZW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7QUFDYixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2V2ZW50cy5qcz8xMDU2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBJRXZlbnRzIHtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50cy5qcy5tYXAiXSwibmFtZXMiOlsiSUV2ZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@walletconnect/events/dist/esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* reexport safe */ _events__WEBPACK_IMPORTED_MODULE_0__.IEvents)\n/* harmony export */ });\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js\");\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlCLENBQ3pCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2luZGV4LmpzP2QzMGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vZXZlbnRzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/heartbeat/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HEARTBEAT_EVENTS: () => (/* binding */ r),\n/* harmony export */   HEARTBEAT_INTERVAL: () => (/* binding */ s),\n/* harmony export */   HeartBeat: () => (/* binding */ i),\n/* harmony export */   IHeartBeat: () => (/* binding */ n)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\");\n\n\n\nclass n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_2__.IEvents {\n    constructor(e){\n        super();\n    }\n}\nconst s = _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_SECONDS, r = {\n    pulse: \"heartbeat_pulse\"\n};\nclass i extends n {\n    constructor(e){\n        super(e), this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.interval = s, this.interval = e?.interval || s;\n    }\n    static async init(e) {\n        const t = new i(e);\n        return await t.init(), t;\n    }\n    async init() {\n        await this.initialize();\n    }\n    stop() {\n        clearInterval(this.intervalRef);\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async initialize() {\n        this.intervalRef = setInterval(()=>this.pulse(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(this.interval));\n    }\n    pulse() {\n        this.events.emit(r.pulse);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvaGVhcnRiZWF0L2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXNDO0FBQXNFO0FBQWdEO0FBQUEsTUFBTVEsVUFBVUQsMERBQUNBO0lBQUNFLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUs7SUFBRTtBQUFDO0FBQUMsTUFBTUMsSUFBRVIsNkRBQUNBLEVBQUNTLElBQUU7SUFBQ0MsT0FBTTtBQUFpQjtBQUFFLE1BQU1DLFVBQVVOO0lBQUVDLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssQ0FBQ0EsSUFBRyxJQUFJLENBQUNLLE1BQU0sR0FBQyxJQUFJZCxnREFBQ0EsRUFBQyxJQUFJLENBQUNlLFFBQVEsR0FBQ0wsR0FBRSxJQUFJLENBQUNLLFFBQVEsR0FBQ04sR0FBR00sWUFBVUw7SUFBQztJQUFDLGFBQWFNLEtBQUtQLENBQUMsRUFBQztRQUFDLE1BQU1RLElBQUUsSUFBSUosRUFBRUo7UUFBRyxPQUFPLE1BQU1RLEVBQUVELElBQUksSUFBR0M7SUFBQztJQUFDLE1BQU1ELE9BQU07UUFBQyxNQUFNLElBQUksQ0FBQ0UsVUFBVTtJQUFFO0lBQUNDLE9BQU07UUFBQ0MsY0FBYyxJQUFJLENBQUNDLFdBQVc7SUFBQztJQUFDQyxHQUFHYixDQUFDLEVBQUNRLENBQUMsRUFBQztRQUFDLElBQUksQ0FBQ0gsTUFBTSxDQUFDUSxFQUFFLENBQUNiLEdBQUVRO0lBQUU7SUFBQ00sS0FBS2QsQ0FBQyxFQUFDUSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNILE1BQU0sQ0FBQ1MsSUFBSSxDQUFDZCxHQUFFUTtJQUFFO0lBQUNPLElBQUlmLENBQUMsRUFBQ1EsQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDSCxNQUFNLENBQUNVLEdBQUcsQ0FBQ2YsR0FBRVE7SUFBRTtJQUFDUSxlQUFlaEIsQ0FBQyxFQUFDUSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNILE1BQU0sQ0FBQ1csY0FBYyxDQUFDaEIsR0FBRVE7SUFBRTtJQUFDLE1BQU1DLGFBQVk7UUFBQyxJQUFJLENBQUNHLFdBQVcsR0FBQ0ssWUFBWSxJQUFJLElBQUksQ0FBQ2QsS0FBSyxJQUFHUixrRUFBQ0EsQ0FBQyxJQUFJLENBQUNXLFFBQVE7SUFBRTtJQUFDSCxRQUFPO1FBQUMsSUFBSSxDQUFDRSxNQUFNLENBQUNhLElBQUksQ0FBQ2hCLEVBQUVDLEtBQUs7SUFBQztBQUFDO0FBQXNGLENBQ3h6QixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2luZGV4LmVzLmpzP2QzMDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0e0V2ZW50RW1pdHRlciBhcyBhfWZyb21cImV2ZW50c1wiO2ltcG9ydHtGSVZFX1NFQ09ORFMgYXMgbyx0b01pbGlzZWNvbmRzIGFzIGx9ZnJvbVwiQHdhbGxldGNvbm5lY3QvdGltZVwiO2ltcG9ydHtJRXZlbnRzIGFzIHZ9ZnJvbVwiQHdhbGxldGNvbm5lY3QvZXZlbnRzXCI7Y2xhc3MgbiBleHRlbmRzIHZ7Y29uc3RydWN0b3IoZSl7c3VwZXIoKX19Y29uc3Qgcz1vLHI9e3B1bHNlOlwiaGVhcnRiZWF0X3B1bHNlXCJ9O2NsYXNzIGkgZXh0ZW5kcyBue2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpLHRoaXMuZXZlbnRzPW5ldyBhLHRoaXMuaW50ZXJ2YWw9cyx0aGlzLmludGVydmFsPWU/LmludGVydmFsfHxzfXN0YXRpYyBhc3luYyBpbml0KGUpe2NvbnN0IHQ9bmV3IGkoZSk7cmV0dXJuIGF3YWl0IHQuaW5pdCgpLHR9YXN5bmMgaW5pdCgpe2F3YWl0IHRoaXMuaW5pdGlhbGl6ZSgpfXN0b3AoKXtjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWxSZWYpfW9uKGUsdCl7dGhpcy5ldmVudHMub24oZSx0KX1vbmNlKGUsdCl7dGhpcy5ldmVudHMub25jZShlLHQpfW9mZihlLHQpe3RoaXMuZXZlbnRzLm9mZihlLHQpfXJlbW92ZUxpc3RlbmVyKGUsdCl7dGhpcy5ldmVudHMucmVtb3ZlTGlzdGVuZXIoZSx0KX1hc3luYyBpbml0aWFsaXplKCl7dGhpcy5pbnRlcnZhbFJlZj1zZXRJbnRlcnZhbCgoKT0+dGhpcy5wdWxzZSgpLGwodGhpcy5pbnRlcnZhbCkpfXB1bHNlKCl7dGhpcy5ldmVudHMuZW1pdChyLnB1bHNlKX19ZXhwb3J0e3IgYXMgSEVBUlRCRUFUX0VWRU5UUyxzIGFzIEhFQVJUQkVBVF9JTlRFUlZBTCxpIGFzIEhlYXJ0QmVhdCxuIGFzIElIZWFydEJlYXR9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXMuanMubWFwXG4iXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwiYSIsIkZJVkVfU0VDT05EUyIsIm8iLCJ0b01pbGlzZWNvbmRzIiwibCIsIklFdmVudHMiLCJ2IiwibiIsImNvbnN0cnVjdG9yIiwiZSIsInMiLCJyIiwicHVsc2UiLCJpIiwiZXZlbnRzIiwiaW50ZXJ2YWwiLCJpbml0IiwidCIsImluaXRpYWxpemUiLCJzdG9wIiwiY2xlYXJJbnRlcnZhbCIsImludGVydmFsUmVmIiwib24iLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJzZXRJbnRlcnZhbCIsImVtaXQiLCJIRUFSVEJFQVRfRVZFTlRTIiwiSEVBUlRCRUFUX0lOVEVSVkFMIiwiSGVhcnRCZWF0IiwiSUhlYXJ0QmVhdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpConnection: () => (/* binding */ f),\n/* harmony export */   \"default\": () => (/* binding */ f)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cross-fetch */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\nvar P = Object.defineProperty, w = Object.defineProperties, E = Object.getOwnPropertyDescriptors, c = Object.getOwnPropertySymbols, L = Object.prototype.hasOwnProperty, O = Object.prototype.propertyIsEnumerable, l = (r, t, e)=>t in r ? P(r, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : r[t] = e, p = (r, t)=>{\n    for(var e in t || (t = {}))L.call(t, e) && l(r, e, t[e]);\n    if (c) for (var e of c(t))O.call(t, e) && l(r, e, t[e]);\n    return r;\n}, v = (r, t)=>w(r, E(t));\nconst j = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n}, T = \"POST\", d = {\n    headers: j,\n    method: T\n}, g = 10;\nclass f {\n    constructor(t, e = !1){\n        if (this.url = t, this.disableProviderPing = e, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.isAvailable = !1, this.registering = !1, !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);\n        this.url = t, this.disableProviderPing = e;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(t, e) {\n        this.events.on(t, e);\n    }\n    once(t, e) {\n        this.events.once(t, e);\n    }\n    off(t, e) {\n        this.events.off(t, e);\n    }\n    removeListener(t, e) {\n        this.events.removeListener(t, e);\n    }\n    async open(t = this.url) {\n        await this.register(t);\n    }\n    async close() {\n        if (!this.isAvailable) throw new Error(\"Connection already closed\");\n        this.onClose();\n    }\n    async send(t) {\n        this.isAvailable || await this.register();\n        try {\n            const e = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)(t), s = await (await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(this.url, v(p({}, d), {\n                body: e\n            }))).json();\n            this.onPayload({\n                data: s\n            });\n        } catch (e) {\n            this.onError(t.id, e);\n        }\n    }\n    async register(t = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);\n        if (this.registering) {\n            const e = this.events.getMaxListeners();\n            return (this.events.listenerCount(\"register_error\") >= e || this.events.listenerCount(\"open\") >= e) && this.events.setMaxListeners(e + 1), new Promise((s, i)=>{\n                this.events.once(\"register_error\", (n)=>{\n                    this.resetMaxListeners(), i(n);\n                }), this.events.once(\"open\", ()=>{\n                    if (this.resetMaxListeners(), typeof this.isAvailable > \"u\") return i(new Error(\"HTTP connection is missing or invalid\"));\n                    s();\n                });\n            });\n        }\n        this.url = t, this.registering = !0;\n        try {\n            if (!this.disableProviderPing) {\n                const e = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)({\n                    id: 1,\n                    jsonrpc: \"2.0\",\n                    method: \"test\",\n                    params: []\n                });\n                await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(t, v(p({}, d), {\n                    body: e\n                }));\n            }\n            this.onOpen();\n        } catch (e) {\n            const s = this.parseError(e);\n            throw this.events.emit(\"register_error\", s), this.onClose(), s;\n        }\n    }\n    onOpen() {\n        this.isAvailable = !0, this.registering = !1, this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = !1, this.registering = !1, this.events.emit(\"close\");\n    }\n    onPayload(t) {\n        if (typeof t.data > \"u\") return;\n        const e = typeof t.data == \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(t.data) : t.data;\n        this.events.emit(\"payload\", e);\n    }\n    onError(t, e) {\n        const s = this.parseError(e), i = s.message || s.toString(), n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(t, i);\n        this.events.emit(\"payload\", n);\n    }\n    parseError(t, e = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.parseConnectionError)(t, e, \"HTTP\");\n    }\n    resetMaxListeners() {\n        this.events.getMaxListeners() > g && this.events.setMaxListeners(g);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/node_modules/cross-fetch/dist/node-ponyfill.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-http-connection/node_modules/cross-fetch/dist/node-ponyfill.js ***!
  \************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nconst nodeFetch = __webpack_require__(/*! node-fetch */ \"(ssr)/./node_modules/node-fetch/lib/index.mjs\");\nconst realFetch = nodeFetch.default || nodeFetch;\nconst fetch = function(url, options) {\n    // Support schemaless URIs on the server for parity with the browser.\n    // Ex: //github.com/ -> https://github.com/\n    if (/^\\/\\//.test(url)) {\n        url = \"https:\" + url;\n    }\n    return realFetch.call(this, url, options);\n};\nfetch.ponyfill = true;\nmodule.exports = exports = fetch;\nexports.fetch = fetch;\nexports.Headers = nodeFetch.Headers;\nexports.Request = nodeFetch.Request;\nexports.Response = nodeFetch.Response;\n// Needed for TypeScript consumers without esModuleInterop.\nexports[\"default\"] = fetch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy1odHRwLWNvbm5lY3Rpb24vbm9kZV9tb2R1bGVzL2Nyb3NzLWZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsWUFBWUMsbUJBQU9BLENBQUM7QUFDMUIsTUFBTUMsWUFBWUYsVUFBVUcsT0FBTyxJQUFJSDtBQUV2QyxNQUFNSSxRQUFRLFNBQVVDLEdBQUcsRUFBRUMsT0FBTztJQUNsQyxxRUFBcUU7SUFDckUsMkNBQTJDO0lBQzNDLElBQUksUUFBUUMsSUFBSSxDQUFDRixNQUFNO1FBQ3JCQSxNQUFNLFdBQVdBO0lBQ25CO0lBQ0EsT0FBT0gsVUFBVU0sSUFBSSxDQUFDLElBQUksRUFBRUgsS0FBS0M7QUFDbkM7QUFFQUYsTUFBTUssUUFBUSxHQUFHO0FBRWpCQyxPQUFPQyxPQUFPLEdBQUdBLFVBQVVQO0FBQzNCTyxhQUFhLEdBQUdQO0FBQ2hCTyxlQUFlLEdBQUdYLFVBQVVZLE9BQU87QUFDbkNELGVBQWUsR0FBR1gsVUFBVWEsT0FBTztBQUNuQ0YsZ0JBQWdCLEdBQUdYLFVBQVVjLFFBQVE7QUFFckMsMkRBQTJEO0FBQzNESCxrQkFBZSxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy1odHRwLWNvbm5lY3Rpb24vbm9kZV9tb2R1bGVzL2Nyb3NzLWZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcz9iNjkwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG5vZGVGZXRjaCA9IHJlcXVpcmUoJ25vZGUtZmV0Y2gnKVxuY29uc3QgcmVhbEZldGNoID0gbm9kZUZldGNoLmRlZmF1bHQgfHwgbm9kZUZldGNoXG5cbmNvbnN0IGZldGNoID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICAvLyBTdXBwb3J0IHNjaGVtYWxlc3MgVVJJcyBvbiB0aGUgc2VydmVyIGZvciBwYXJpdHkgd2l0aCB0aGUgYnJvd3Nlci5cbiAgLy8gRXg6IC8vZ2l0aHViLmNvbS8gLT4gaHR0cHM6Ly9naXRodWIuY29tL1xuICBpZiAoL15cXC9cXC8vLnRlc3QodXJsKSkge1xuICAgIHVybCA9ICdodHRwczonICsgdXJsXG4gIH1cbiAgcmV0dXJuIHJlYWxGZXRjaC5jYWxsKHRoaXMsIHVybCwgb3B0aW9ucylcbn1cblxuZmV0Y2gucG9ueWZpbGwgPSB0cnVlXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cyA9IGZldGNoXG5leHBvcnRzLmZldGNoID0gZmV0Y2hcbmV4cG9ydHMuSGVhZGVycyA9IG5vZGVGZXRjaC5IZWFkZXJzXG5leHBvcnRzLlJlcXVlc3QgPSBub2RlRmV0Y2guUmVxdWVzdFxuZXhwb3J0cy5SZXNwb25zZSA9IG5vZGVGZXRjaC5SZXNwb25zZVxuXG4vLyBOZWVkZWQgZm9yIFR5cGVTY3JpcHQgY29uc3VtZXJzIHdpdGhvdXQgZXNNb2R1bGVJbnRlcm9wLlxuZXhwb3J0cy5kZWZhdWx0ID0gZmV0Y2hcbiJdLCJuYW1lcyI6WyJub2RlRmV0Y2giLCJyZXF1aXJlIiwicmVhbEZldGNoIiwiZGVmYXVsdCIsImZldGNoIiwidXJsIiwib3B0aW9ucyIsInRlc3QiLCJjYWxsIiwicG9ueWZpbGwiLCJtb2R1bGUiLCJleHBvcnRzIiwiSGVhZGVycyIsIlJlcXVlc3QiLCJSZXNwb25zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/node_modules/cross-fetch/dist/node-ponyfill.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonRpcProvider: () => (/* binding */ o),\n/* harmony export */   \"default\": () => (/* binding */ o)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\nclass o extends _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.IJsonRpcProvider {\n    constructor(t){\n        super(t), this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.hasRegisteredEventListeners = !1, this.connection = this.setConnection(t), this.connection.connected && this.registerEventListeners();\n    }\n    async connect(t = this.connection) {\n        await this.open(t);\n    }\n    async disconnect() {\n        await this.close();\n    }\n    on(t, e) {\n        this.events.on(t, e);\n    }\n    once(t, e) {\n        this.events.once(t, e);\n    }\n    off(t, e) {\n        this.events.off(t, e);\n    }\n    removeListener(t, e) {\n        this.events.removeListener(t, e);\n    }\n    async request(t, e) {\n        return this.requestStrict((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.formatJsonRpcRequest)(t.method, t.params || [], t.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.getBigIntRpcId)().toString()), e);\n    }\n    async requestStrict(t, e) {\n        return new Promise(async (i, s)=>{\n            if (!this.connection.connected) try {\n                await this.open();\n            } catch (n) {\n                s(n);\n            }\n            this.events.on(`${t.id}`, (n)=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcError)(n) ? s(n.error) : i(n.result);\n            });\n            try {\n                await this.connection.send(t, e);\n            } catch (n) {\n                s(n);\n            }\n        });\n    }\n    setConnection(t = this.connection) {\n        return t;\n    }\n    onPayload(t) {\n        this.events.emit(\"payload\", t), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcResponse)(t) ? this.events.emit(`${t.id}`, t) : this.events.emit(\"message\", {\n            type: t.method,\n            data: t.params\n        });\n    }\n    onClose(t) {\n        t && t.code === 3e3 && this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${t.code} ${t.reason ? `(${t.reason})` : \"\"}`)), this.events.emit(\"disconnect\");\n    }\n    async open(t = this.connection) {\n        this.connection === t && this.connection.connected || (this.connection.connected && this.close(), typeof t == \"string\" && (await this.connection.open(t), t = this.connection), this.connection = this.setConnection(t), await this.connection.open(), this.registerEventListeners(), this.events.emit(\"connect\"));\n    }\n    async close() {\n        await this.connection.close();\n    }\n    registerEventListeners() {\n        this.hasRegisteredEventListeners || (this.connection.on(\"payload\", (t)=>this.onPayload(t)), this.connection.on(\"close\", (t)=>this.onClose(t)), this.connection.on(\"error\", (t)=>this.events.emit(\"error\", t)), this.connection.on(\"register_error\", (t)=>this.onClose()), this.hasRegisteredEventListeners = !0);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy1wcm92aWRlci9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNDO0FBQXlKO0FBQUEsTUFBTVksVUFBVVQsMEVBQUNBO0lBQUNVLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssQ0FBQ0EsSUFBRyxJQUFJLENBQUNDLE1BQU0sR0FBQyxJQUFJZCxnREFBQ0EsRUFBQyxJQUFJLENBQUNlLDJCQUEyQixHQUFDLENBQUMsR0FBRSxJQUFJLENBQUNDLFVBQVUsR0FBQyxJQUFJLENBQUNDLGFBQWEsQ0FBQ0osSUFBRyxJQUFJLENBQUNHLFVBQVUsQ0FBQ0UsU0FBUyxJQUFFLElBQUksQ0FBQ0Msc0JBQXNCO0lBQUU7SUFBQyxNQUFNQyxRQUFRUCxJQUFFLElBQUksQ0FBQ0csVUFBVSxFQUFDO1FBQUMsTUFBTSxJQUFJLENBQUNLLElBQUksQ0FBQ1I7SUFBRTtJQUFDLE1BQU1TLGFBQVk7UUFBQyxNQUFNLElBQUksQ0FBQ0MsS0FBSztJQUFFO0lBQUNDLEdBQUdYLENBQUMsRUFBQ1ksQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDWCxNQUFNLENBQUNVLEVBQUUsQ0FBQ1gsR0FBRVk7SUFBRTtJQUFDQyxLQUFLYixDQUFDLEVBQUNZLENBQUMsRUFBQztRQUFDLElBQUksQ0FBQ1gsTUFBTSxDQUFDWSxJQUFJLENBQUNiLEdBQUVZO0lBQUU7SUFBQ0UsSUFBSWQsQ0FBQyxFQUFDWSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNYLE1BQU0sQ0FBQ2EsR0FBRyxDQUFDZCxHQUFFWTtJQUFFO0lBQUNHLGVBQWVmLENBQUMsRUFBQ1ksQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDWCxNQUFNLENBQUNjLGNBQWMsQ0FBQ2YsR0FBRVk7SUFBRTtJQUFDLE1BQU1JLFFBQVFoQixDQUFDLEVBQUNZLENBQUMsRUFBQztRQUFDLE9BQU8sSUFBSSxDQUFDSyxhQUFhLENBQUMxQixrRkFBQ0Es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T0FBTyxDQUFDakMsS0FBSSxJQUFJLENBQUNHLFVBQVUsQ0FBQ1EsRUFBRSxDQUFDLFNBQVFYLENBQUFBLElBQUcsSUFBSSxDQUFDQyxNQUFNLENBQUM2QixJQUFJLENBQUMsU0FBUTlCLEtBQUksSUFBSSxDQUFDRyxVQUFVLENBQUNRLEVBQUUsQ0FBQyxrQkFBaUJYLENBQUFBLElBQUcsSUFBSSxDQUFDaUMsT0FBTyxLQUFJLElBQUksQ0FBQy9CLDJCQUEyQixHQUFDLENBQUM7SUFBRTtBQUFDO0FBQTJDLENBQ3IrRCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtcHJvdmlkZXIvZGlzdC9pbmRleC5lcy5qcz83ZWU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydHtFdmVudEVtaXR0ZXIgYXMgY31mcm9tXCJldmVudHNcIjtpbXBvcnR7SUpzb25ScGNQcm92aWRlciBhcyByLGZvcm1hdEpzb25ScGNSZXF1ZXN0IGFzIGgsZ2V0QmlnSW50UnBjSWQgYXMgYSxpc0pzb25ScGNFcnJvciBhcyBkLGlzSnNvblJwY1Jlc3BvbnNlIGFzIHZ9ZnJvbVwiQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlsc1wiO2NsYXNzIG8gZXh0ZW5kcyBye2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMuZXZlbnRzPW5ldyBjLHRoaXMuaGFzUmVnaXN0ZXJlZEV2ZW50TGlzdGVuZXJzPSExLHRoaXMuY29ubmVjdGlvbj10aGlzLnNldENvbm5lY3Rpb24odCksdGhpcy5jb25uZWN0aW9uLmNvbm5lY3RlZCYmdGhpcy5yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCl9YXN5bmMgY29ubmVjdCh0PXRoaXMuY29ubmVjdGlvbil7YXdhaXQgdGhpcy5vcGVuKHQpfWFzeW5jIGRpc2Nvbm5lY3QoKXthd2FpdCB0aGlzLmNsb3NlKCl9b24odCxlKXt0aGlzLmV2ZW50cy5vbih0LGUpfW9uY2UodCxlKXt0aGlzLmV2ZW50cy5vbmNlKHQsZSl9b2ZmKHQsZSl7dGhpcy5ldmVudHMub2ZmKHQsZSl9cmVtb3ZlTGlzdGVuZXIodCxlKXt0aGlzLmV2ZW50cy5yZW1vdmVMaXN0ZW5lcih0LGUpfWFzeW5jIHJlcXVlc3QodCxlKXtyZXR1cm4gdGhpcy5yZXF1ZXN0U3RyaWN0KGgodC5tZXRob2QsdC5wYXJhbXN8fFtdLHQuaWR8fGEoKS50b1N0cmluZygpKSxlKX1hc3luYyByZXF1ZXN0U3RyaWN0KHQsZSl7cmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jKGkscyk9PntpZighdGhpcy5jb25uZWN0aW9uLmNvbm5lY3RlZCl0cnl7YXdhaXQgdGhpcy5vcGVuKCl9Y2F0Y2gobil7cyhuKX10aGlzLmV2ZW50cy5vbihgJHt0LmlkfWAsbj0+e2Qobik/cyhuLmVycm9yKTppKG4ucmVzdWx0KX0pO3RyeXthd2FpdCB0aGlzLmNvbm5lY3Rpb24uc2VuZCh0LGUpfWNhdGNoKG4pe3Mobil9fSl9c2V0Q29ubmVjdGlvbih0PXRoaXMuY29ubmVjdGlvbil7cmV0dXJuIHR9b25QYXlsb2FkKHQpe3RoaXMuZXZlbnRzLmVtaXQoXCJwYXlsb2FkXCIsdCksdih0KT90aGlzLmV2ZW50cy5lbWl0KGAke3QuaWR9YCx0KTp0aGlzLmV2ZW50cy5lbWl0KFwibWVzc2FnZVwiLHt0eXBlOnQubWV0aG9kLGRhdGE6dC5wYXJhbXN9KX1vbkNsb3NlKHQpe3QmJnQuY29kZT09PTNlMyYmdGhpcy5ldmVudHMuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKGBXZWJTb2NrZXQgY29ubmVjdGlvbiBjbG9zZWQgYWJub3JtYWxseSB3aXRoIGNvZGU6ICR7dC5jb2RlfSAke3QucmVhc29uP2AoJHt0LnJlYXNvbn0pYDpcIlwifWApKSx0aGlzLmV2ZW50cy5lbWl0KFwiZGlzY29ubmVjdFwiKX1hc3luYyBvcGVuKHQ9dGhpcy5jb25uZWN0aW9uKXt0aGlzLmNvbm5lY3Rpb249PT10JiZ0aGlzLmNvbm5lY3Rpb24uY29ubmVjdGVkfHwodGhpcy5jb25uZWN0aW9uLmNvbm5lY3RlZCYmdGhpcy5jbG9zZSgpLHR5cGVvZiB0PT1cInN0cmluZ1wiJiYoYXdhaXQgdGhpcy5jb25uZWN0aW9uLm9wZW4odCksdD10aGlzLmNvbm5lY3Rpb24pLHRoaXMuY29ubmVjdGlvbj10aGlzLnNldENvbm5lY3Rpb24odCksYXdhaXQgdGhpcy5jb25uZWN0aW9uLm9wZW4oKSx0aGlzLnJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKSx0aGlzLmV2ZW50cy5lbWl0KFwiY29ubmVjdFwiKSl9YXN5bmMgY2xvc2UoKXthd2FpdCB0aGlzLmNvbm5lY3Rpb24uY2xvc2UoKX1yZWdpc3RlckV2ZW50TGlzdGVuZXJzKCl7dGhpcy5oYXNSZWdpc3RlcmVkRXZlbnRMaXN0ZW5lcnN8fCh0aGlzLmNvbm5lY3Rpb24ub24oXCJwYXlsb2FkXCIsdD0+dGhpcy5vblBheWxvYWQodCkpLHRoaXMuY29ubmVjdGlvbi5vbihcImNsb3NlXCIsdD0+dGhpcy5vbkNsb3NlKHQpKSx0aGlzLmNvbm5lY3Rpb24ub24oXCJlcnJvclwiLHQ9PnRoaXMuZXZlbnRzLmVtaXQoXCJlcnJvclwiLHQpKSx0aGlzLmNvbm5lY3Rpb24ub24oXCJyZWdpc3Rlcl9lcnJvclwiLHQ9PnRoaXMub25DbG9zZSgpKSx0aGlzLmhhc1JlZ2lzdGVyZWRFdmVudExpc3RlbmVycz0hMCl9fWV4cG9ydHtvIGFzIEpzb25ScGNQcm92aWRlcixvIGFzIGRlZmF1bHR9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXMuanMubWFwXG4iXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwiYyIsIklKc29uUnBjUHJvdmlkZXIiLCJyIiwiZm9ybWF0SnNvblJwY1JlcXVlc3QiLCJoIiwiZ2V0QmlnSW50UnBjSWQiLCJhIiwiaXNKc29uUnBjRXJyb3IiLCJkIiwiaXNKc29uUnBjUmVzcG9uc2UiLCJ2IiwibyIsImNvbnN0cnVjdG9yIiwidCIsImV2ZW50cyIsImhhc1JlZ2lzdGVyZWRFdmVudExpc3RlbmVycyIsImNvbm5lY3Rpb24iLCJzZXRDb25uZWN0aW9uIiwiY29ubmVjdGVkIiwicmVnaXN0ZXJFdmVudExpc3RlbmVycyIsImNvbm5lY3QiLCJvcGVuIiwiZGlzY29ubmVjdCIsImNsb3NlIiwib24iLCJlIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwicmVxdWVzdCIsInJlcXVlc3RTdHJpY3QiLCJtZXRob2QiLCJwYXJhbXMiLCJpZCIsInRvU3RyaW5nIiwiUHJvbWlzZSIsImkiLCJzIiwibiIsImVycm9yIiwicmVzdWx0Iiwic2VuZCIsIm9uUGF5bG9hZCIsImVtaXQiLCJ0eXBlIiwiZGF0YSIsIm9uQ2xvc2UiLCJjb2RlIiwiRXJyb3IiLCJyZWFzb24iLCJKc29uUnBjUHJvdmlkZXIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* binding */ n),\n/* harmony export */   IEvents: () => (/* binding */ e),\n/* harmony export */   IJsonRpcConnection: () => (/* binding */ o),\n/* harmony export */   IJsonRpcProvider: () => (/* binding */ r)\n/* harmony export */ });\nclass e {\n}\nclass o extends e {\n    constructor(c){\n        super();\n    }\n}\nclass n extends e {\n    constructor(){\n        super();\n    }\n}\nclass r extends n {\n    constructor(c){\n        super();\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlcy9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxNQUFNQTtBQUFFO0FBQUMsTUFBTUMsVUFBVUQ7SUFBRUUsWUFBWUMsQ0FBQyxDQUFDO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNQyxVQUFVSjtJQUFFRSxhQUFhO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNRyxVQUFVRDtJQUFFRixZQUFZQyxDQUFDLENBQUM7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUE4RixDQUNuTyxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9pbmRleC5lcy5qcz9iMTI5Il0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIGV7fWNsYXNzIG8gZXh0ZW5kcyBle2NvbnN0cnVjdG9yKGMpe3N1cGVyKCl9fWNsYXNzIG4gZXh0ZW5kcyBle2NvbnN0cnVjdG9yKCl7c3VwZXIoKX19Y2xhc3MgciBleHRlbmRzIG57Y29uc3RydWN0b3IoYyl7c3VwZXIoKX19ZXhwb3J0e24gYXMgSUJhc2VKc29uUnBjUHJvdmlkZXIsZSBhcyBJRXZlbnRzLG8gYXMgSUpzb25ScGNDb25uZWN0aW9uLHIgYXMgSUpzb25ScGNQcm92aWRlcn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJlIiwibyIsImNvbnN0cnVjdG9yIiwiYyIsIm4iLCJyIiwiSUJhc2VKc29uUnBjUHJvdmlkZXIiLCJJRXZlbnRzIiwiSUpzb25ScGNDb25uZWN0aW9uIiwiSUpzb25ScGNQcm92aWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* binding */ DEFAULT_ERROR),\n/* harmony export */   INTERNAL_ERROR: () => (/* binding */ INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* binding */ INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* binding */ INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* binding */ METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* binding */ PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* binding */ RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* binding */ SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* binding */ SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* binding */ STANDARD_ERROR_MAP)\n/* harmony export */ });\nconst PARSE_ERROR = \"PARSE_ERROR\";\nconst INVALID_REQUEST = \"INVALID_REQUEST\";\nconst METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nconst INVALID_PARAMS = \"INVALID_PARAMS\";\nconst INTERNAL_ERROR = \"INTERNAL_ERROR\";\nconst SERVER_ERROR = \"SERVER_ERROR\";\nconst RESERVED_ERROR_CODES = [\n    -32700,\n    -32600,\n    -32601,\n    -32602,\n    -32603\n];\nconst SERVER_ERROR_CODE_RANGE = [\n    -32000,\n    -32099\n];\nconst STANDARD_ERROR_MAP = {\n    [PARSE_ERROR]: {\n        code: -32700,\n        message: \"Parse error\"\n    },\n    [INVALID_REQUEST]: {\n        code: -32600,\n        message: \"Invalid Request\"\n    },\n    [METHOD_NOT_FOUND]: {\n        code: -32601,\n        message: \"Method not found\"\n    },\n    [INVALID_PARAMS]: {\n        code: -32602,\n        message: \"Invalid params\"\n    },\n    [INTERNAL_ERROR]: {\n        code: -32603,\n        message: \"Internal error\"\n    },\n    [SERVER_ERROR]: {\n        code: -32000,\n        message: \"Server error\"\n    }\n};\nconst DEFAULT_ERROR = SERVER_ERROR; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFPLE1BQU1BLGNBQWMsY0FBYztBQUNsQyxNQUFNQyxrQkFBa0Isa0JBQWtCO0FBQzFDLE1BQU1DLG1CQUFtQixtQkFBbUI7QUFDNUMsTUFBTUMsaUJBQWlCLGlCQUFpQjtBQUN4QyxNQUFNQyxpQkFBaUIsaUJBQWlCO0FBQ3hDLE1BQU1DLGVBQWUsZUFBZTtBQUNwQyxNQUFNQyx1QkFBdUI7SUFBQyxDQUFDO0lBQU8sQ0FBQztJQUFPLENBQUM7SUFBTyxDQUFDO0lBQU8sQ0FBQztDQUFNLENBQUM7QUFDdEUsTUFBTUMsMEJBQTBCO0lBQUMsQ0FBQztJQUFPLENBQUM7Q0FBTSxDQUFDO0FBQ2pELE1BQU1DLHFCQUFxQjtJQUM5QixDQUFDUixZQUFZLEVBQUU7UUFBRVMsTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBYztJQUN0RCxDQUFDVCxnQkFBZ0IsRUFBRTtRQUFFUSxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFrQjtJQUM5RCxDQUFDUixpQkFBaUIsRUFBRTtRQUFFTyxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFtQjtJQUNoRSxDQUFDUCxlQUFlLEVBQUU7UUFBRU0sTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBaUI7SUFDNUQsQ0FBQ04sZUFBZSxFQUFFO1FBQUVLLE1BQU0sQ0FBQztRQUFPQyxTQUFTO0lBQWlCO0lBQzVELENBQUNMLGFBQWEsRUFBRTtRQUFFSSxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFlO0FBQzVELEVBQUU7QUFDSyxNQUFNQyxnQkFBZ0JOLGFBQWEsQ0FDMUMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL2NvbnN0YW50cy5qcz85YzA1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBQQVJTRV9FUlJPUiA9IFwiUEFSU0VfRVJST1JcIjtcbmV4cG9ydCBjb25zdCBJTlZBTElEX1JFUVVFU1QgPSBcIklOVkFMSURfUkVRVUVTVFwiO1xuZXhwb3J0IGNvbnN0IE1FVEhPRF9OT1RfRk9VTkQgPSBcIk1FVEhPRF9OT1RfRk9VTkRcIjtcbmV4cG9ydCBjb25zdCBJTlZBTElEX1BBUkFNUyA9IFwiSU5WQUxJRF9QQVJBTVNcIjtcbmV4cG9ydCBjb25zdCBJTlRFUk5BTF9FUlJPUiA9IFwiSU5URVJOQUxfRVJST1JcIjtcbmV4cG9ydCBjb25zdCBTRVJWRVJfRVJST1IgPSBcIlNFUlZFUl9FUlJPUlwiO1xuZXhwb3J0IGNvbnN0IFJFU0VSVkVEX0VSUk9SX0NPREVTID0gWy0zMjcwMCwgLTMyNjAwLCAtMzI2MDEsIC0zMjYwMiwgLTMyNjAzXTtcbmV4cG9ydCBjb25zdCBTRVJWRVJfRVJST1JfQ09ERV9SQU5HRSA9IFstMzIwMDAsIC0zMjA5OV07XG5leHBvcnQgY29uc3QgU1RBTkRBUkRfRVJST1JfTUFQID0ge1xuICAgIFtQQVJTRV9FUlJPUl06IHsgY29kZTogLTMyNzAwLCBtZXNzYWdlOiBcIlBhcnNlIGVycm9yXCIgfSxcbiAgICBbSU5WQUxJRF9SRVFVRVNUXTogeyBjb2RlOiAtMzI2MDAsIG1lc3NhZ2U6IFwiSW52YWxpZCBSZXF1ZXN0XCIgfSxcbiAgICBbTUVUSE9EX05PVF9GT1VORF06IHsgY29kZTogLTMyNjAxLCBtZXNzYWdlOiBcIk1ldGhvZCBub3QgZm91bmRcIiB9LFxuICAgIFtJTlZBTElEX1BBUkFNU106IHsgY29kZTogLTMyNjAyLCBtZXNzYWdlOiBcIkludmFsaWQgcGFyYW1zXCIgfSxcbiAgICBbSU5URVJOQUxfRVJST1JdOiB7IGNvZGU6IC0zMjYwMywgbWVzc2FnZTogXCJJbnRlcm5hbCBlcnJvclwiIH0sXG4gICAgW1NFUlZFUl9FUlJPUl06IHsgY29kZTogLTMyMDAwLCBtZXNzYWdlOiBcIlNlcnZlciBlcnJvclwiIH0sXG59O1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfRVJST1IgPSBTRVJWRVJfRVJST1I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbIlBBUlNFX0VSUk9SIiwiSU5WQUxJRF9SRVFVRVNUIiwiTUVUSE9EX05PVF9GT1VORCIsIklOVkFMSURfUEFSQU1TIiwiSU5URVJOQUxfRVJST1IiLCJTRVJWRVJfRVJST1IiLCJSRVNFUlZFRF9FUlJPUl9DT0RFUyIsIlNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFIiwiU1RBTkRBUkRfRVJST1JfTUFQIiwiY29kZSIsIm1lc3NhZ2UiLCJERUZBVUxUX0VSUk9SIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNodeJs: () => (/* binding */ isNodeJs)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/environment */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"isNodeJs\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\nconst isNodeJs = _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__.isNode;\n //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lbnYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9EO0FBQzdDLE1BQU1DLFdBQVdELDhEQUFNQSxDQUFDO0FBQ1ksQ0FDM0MsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL2Vudi5qcz82ODRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTm9kZSB9IGZyb20gXCJAd2FsbGV0Y29ubmVjdC9lbnZpcm9ubWVudFwiO1xuZXhwb3J0IGNvbnN0IGlzTm9kZUpzID0gaXNOb2RlO1xuZXhwb3J0ICogZnJvbSBcIkB3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnYuanMubWFwIl0sIm5hbWVzIjpbImlzTm9kZSIsImlzTm9kZUpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getError: () => (/* binding */ getError),\n/* harmony export */   getErrorByCode: () => (/* binding */ getErrorByCode),\n/* harmony export */   isReservedErrorCode: () => (/* binding */ isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* binding */ isServerErrorCode),\n/* harmony export */   isValidErrorCode: () => (/* binding */ isValidErrorCode),\n/* harmony export */   parseConnectionError: () => (/* binding */ parseConnectionError),\n/* harmony export */   validateJsonRpcError: () => (/* binding */ validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\nfunction isServerErrorCode(code) {\n    return code <= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[0] && code >= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[1];\n}\nfunction isReservedErrorCode(code) {\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES.includes(code);\n}\nfunction isValidErrorCode(code) {\n    return typeof code === \"number\";\n}\nfunction getError(type) {\n    if (!Object.keys(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).includes(type)) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).find((e)=>e.code === code);\n    if (!match) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction validateJsonRpcError(response) {\n    if (typeof response.error.code === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing code for JSON-RPC error\"\n        };\n    }\n    if (typeof response.error.message === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing message for JSON-RPC error\"\n        };\n    }\n    if (!isValidErrorCode(response.error.code)) {\n        return {\n            valid: false,\n            error: `Invalid error code type for JSON-RPC: ${response.error.code}`\n        };\n    }\n    if (isReservedErrorCode(response.error.code)) {\n        const error = getErrorByCode(response.error.code);\n        if (error.message !== _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR].message && response.error.message === error.message) {\n            return {\n                valid: false,\n                error: `Invalid error code message for JSON-RPC: ${response.error.code}`\n            };\n        }\n    }\n    return {\n        valid: true\n    };\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e;\n} //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFnSDtBQUN6RyxTQUFTSSxrQkFBa0JDLElBQUk7SUFDbEMsT0FBT0EsUUFBUUwsK0RBQXVCLENBQUMsRUFBRSxJQUFJSyxRQUFRTCwrREFBdUIsQ0FBQyxFQUFFO0FBQ25GO0FBQ08sU0FBU00sb0JBQW9CRCxJQUFJO0lBQ3BDLE9BQU9KLDREQUFvQkEsQ0FBQ00sUUFBUSxDQUFDRjtBQUN6QztBQUNPLFNBQVNHLGlCQUFpQkgsSUFBSTtJQUNqQyxPQUFPLE9BQU9BLFNBQVM7QUFDM0I7QUFDTyxTQUFTSSxTQUFTQyxJQUFJO0lBQ3pCLElBQUksQ0FBQ0MsT0FBT0MsSUFBSSxDQUFDViwwREFBa0JBLEVBQUVLLFFBQVEsQ0FBQ0csT0FBTztRQUNqRCxPQUFPUiwwREFBa0IsQ0FBQ0MscURBQWFBLENBQUM7SUFDNUM7SUFDQSxPQUFPRCwwREFBa0IsQ0FBQ1EsS0FBSztBQUNuQztBQUNPLFNBQVNHLGVBQWVSLElBQUk7SUFDL0IsTUFBTVMsUUFBUUgsT0FBT0ksTUFBTSxDQUFDYiwwREFBa0JBLEVBQUVjLElBQUksQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRVosSUFBSSxLQUFLQTtJQUNyRSxJQUFJLENBQUNTLE9BQU87UUFDUixPQUFPWiwwREFBa0IsQ0FBQ0MscURBQWFBLENBQUM7SUFDNUM7SUFDQSxPQUFPVztBQUNYO0FBQ08sU0FBU0kscUJBQXFCQyxRQUFRO0lBQ3pDLElBQUksT0FBT0EsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEtBQUssYUFBYTtRQUM1QyxPQUFPO1lBQUVnQixPQUFPO1lBQU9ELE9BQU87UUFBa0M7SUFDcEU7SUFDQSxJQUFJLE9BQU9ELFNBQVNDLEtBQUssQ0FBQ0UsT0FBTyxLQUFLLGFBQWE7UUFDL0MsT0FBTztZQUFFRCxPQUFPO1lBQU9ELE9BQU87UUFBcUM7SUFDdkU7SUFDQSxJQUFJLENBQUNaLGlCQUFpQlcsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEdBQUc7UUFDeEMsT0FBTztZQUNIZ0IsT0FBTztZQUNQRCxPQUFPLENBQUMsc0NBQXNDLEVBQUVELFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxDQUFDLENBQUM7UUFDekU7SUFDSjtJQUNBLElBQUlDLG9CQUFvQmEsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEdBQUc7UUFDMUMsTUFBTWUsUUFBUVAsZUFBZU0sU0FBU0MsS0FBSyxDQUFDZixJQUFJO1FBQ2hELElBQUllLE1BQU1FLE9BQU8sS0FBS3BCLDBEQUFrQixDQUFDQyxxREFBYUEsQ0FBQyxDQUFDbUIsT0FBTyxJQUMzREgsU0FBU0MsS0FBSyxDQUFDRSxPQUFPLEtBQUtGLE1BQU1FLE9BQU8sRUFBRTtZQUMxQyxPQUFPO2dCQUNIRCxPQUFPO2dCQUNQRCxPQUFPLENBQUMseUNBQXlDLEVBQUVELFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxDQUFDLENBQUM7WUFDNUU7UUFDSjtJQUNKO0lBQ0EsT0FBTztRQUFFZ0IsT0FBTztJQUFLO0FBQ3pCO0FBQ08sU0FBU0UscUJBQXFCTixDQUFDLEVBQUVPLEdBQUcsRUFBRWQsSUFBSTtJQUM3QyxPQUFPTyxFQUFFSyxPQUFPLENBQUNmLFFBQVEsQ0FBQyw0QkFBNEJVLEVBQUVLLE9BQU8sQ0FBQ2YsUUFBUSxDQUFDLDBCQUNuRSxJQUFJa0IsTUFBTSxDQUFDLFlBQVksRUFBRWYsS0FBSyxZQUFZLEVBQUVjLElBQUksQ0FBQyxJQUNqRFA7QUFDVixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lcnJvci5qcz81OTU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFLCBSRVNFUlZFRF9FUlJPUl9DT0RFUywgU1RBTkRBUkRfRVJST1JfTUFQLCBERUZBVUxUX0VSUk9SLCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGlzU2VydmVyRXJyb3JDb2RlKGNvZGUpIHtcbiAgICByZXR1cm4gY29kZSA8PSBTRVJWRVJfRVJST1JfQ09ERV9SQU5HRVswXSAmJiBjb2RlID49IFNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFWzFdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVzZXJ2ZWRFcnJvckNvZGUoY29kZSkge1xuICAgIHJldHVybiBSRVNFUlZFRF9FUlJPUl9DT0RFUy5pbmNsdWRlcyhjb2RlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkRXJyb3JDb2RlKGNvZGUpIHtcbiAgICByZXR1cm4gdHlwZW9mIGNvZGUgPT09IFwibnVtYmVyXCI7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RXJyb3IodHlwZSkge1xuICAgIGlmICghT2JqZWN0LmtleXMoU1RBTkRBUkRfRVJST1JfTUFQKS5pbmNsdWRlcyh0eXBlKSkge1xuICAgICAgICByZXR1cm4gU1RBTkRBUkRfRVJST1JfTUFQW0RFRkFVTFRfRVJST1JdO1xuICAgIH1cbiAgICByZXR1cm4gU1RBTkRBUkRfRVJST1JfTUFQW3R5cGVdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEVycm9yQnlDb2RlKGNvZGUpIHtcbiAgICBjb25zdCBtYXRjaCA9IE9iamVjdC52YWx1ZXMoU1RBTkRBUkRfRVJST1JfTUFQKS5maW5kKGUgPT4gZS5jb2RlID09PSBjb2RlKTtcbiAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgIHJldHVybiBTVEFOREFSRF9FUlJPUl9NQVBbREVGQVVMVF9FUlJPUl07XG4gICAgfVxuICAgIHJldHVybiBtYXRjaDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUpzb25ScGNFcnJvcihyZXNwb25zZSkge1xuICAgIGlmICh0eXBlb2YgcmVzcG9uc2UuZXJyb3IuY29kZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm4geyB2YWxpZDogZmFsc2UsIGVycm9yOiBcIk1pc3NpbmcgY29kZSBmb3IgSlNPTi1SUEMgZXJyb3JcIiB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlc3BvbnNlLmVycm9yLm1lc3NhZ2UgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBlcnJvcjogXCJNaXNzaW5nIG1lc3NhZ2UgZm9yIEpTT04tUlBDIGVycm9yXCIgfTtcbiAgICB9XG4gICAgaWYgKCFpc1ZhbGlkRXJyb3JDb2RlKHJlc3BvbnNlLmVycm9yLmNvZGUpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWxpZDogZmFsc2UsXG4gICAgICAgICAgICBlcnJvcjogYEludmFsaWQgZXJyb3IgY29kZSB0eXBlIGZvciBKU09OLVJQQzogJHtyZXNwb25zZS5lcnJvci5jb2RlfWAsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChpc1Jlc2VydmVkRXJyb3JDb2RlKHJlc3BvbnNlLmVycm9yLmNvZGUpKSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gZ2V0RXJyb3JCeUNvZGUocmVzcG9uc2UuZXJyb3IuY29kZSk7XG4gICAgICAgIGlmIChlcnJvci5tZXNzYWdlICE9PSBTVEFOREFSRF9FUlJPUl9NQVBbREVGQVVMVF9FUlJPUl0ubWVzc2FnZSAmJlxuICAgICAgICAgICAgcmVzcG9uc2UuZXJyb3IubWVzc2FnZSA9PT0gZXJyb3IubWVzc2FnZSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB2YWxpZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgZXJyb3I6IGBJbnZhbGlkIGVycm9yIGNvZGUgbWVzc2FnZSBmb3IgSlNPTi1SUEM6ICR7cmVzcG9uc2UuZXJyb3IuY29kZX1gLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyB2YWxpZDogdHJ1ZSB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ29ubmVjdGlvbkVycm9yKGUsIHVybCwgdHlwZSkge1xuICAgIHJldHVybiBlLm1lc3NhZ2UuaW5jbHVkZXMoXCJnZXRhZGRyaW5mbyBFTk9URk9VTkRcIikgfHwgZS5tZXNzYWdlLmluY2x1ZGVzKFwiY29ubmVjdCBFQ09OTlJFRlVTRURcIilcbiAgICAgICAgPyBuZXcgRXJyb3IoYFVuYXZhaWxhYmxlICR7dHlwZX0gUlBDIHVybCBhdCAke3VybH1gKVxuICAgICAgICA6IGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5qcy5tYXAiXSwibmFtZXMiOlsiU0VSVkVSX0VSUk9SX0NPREVfUkFOR0UiLCJSRVNFUlZFRF9FUlJPUl9DT0RFUyIsIlNUQU5EQVJEX0VSUk9SX01BUCIsIkRFRkFVTFRfRVJST1IiLCJpc1NlcnZlckVycm9yQ29kZSIsImNvZGUiLCJpc1Jlc2VydmVkRXJyb3JDb2RlIiwiaW5jbHVkZXMiLCJpc1ZhbGlkRXJyb3JDb2RlIiwiZ2V0RXJyb3IiLCJ0eXBlIiwiT2JqZWN0Iiwia2V5cyIsImdldEVycm9yQnlDb2RlIiwibWF0Y2giLCJ2YWx1ZXMiLCJmaW5kIiwiZSIsInZhbGlkYXRlSnNvblJwY0Vycm9yIiwicmVzcG9uc2UiLCJlcnJvciIsInZhbGlkIiwibWVzc2FnZSIsInBhcnNlQ29ubmVjdGlvbkVycm9yIiwidXJsIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatErrorMessage: () => (/* binding */ formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* binding */ formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* binding */ formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* binding */ formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* binding */ getBigIntRpcId),\n/* harmony export */   payloadId: () => (/* binding */ payloadId)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\n\nfunction payloadId(entropy = 3) {\n    const date = Date.now() * Math.pow(10, entropy);\n    const extra = Math.floor(Math.random() * Math.pow(10, entropy));\n    return date + extra;\n}\nfunction getBigIntRpcId(entropy = 6) {\n    return BigInt(payloadId(entropy));\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data)\n    };\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.SERVER_ERROR)), {\n            message: error\n        });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if ((0,_error__WEBPACK_IMPORTED_MODULE_0__.isReservedErrorCode)(error.code)) {\n        error = (0,_error__WEBPACK_IMPORTED_MODULE_0__.getErrorByCode)(error.code);\n    }\n    return error;\n} //# sourceMappingURL=format.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9mb3JtYXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBd0U7QUFDYjtBQUNwRCxTQUFTSyxVQUFVQyxVQUFVLENBQUM7SUFDakMsTUFBTUMsT0FBT0MsS0FBS0MsR0FBRyxLQUFLQyxLQUFLQyxHQUFHLENBQUMsSUFBSUw7SUFDdkMsTUFBTU0sUUFBUUYsS0FBS0csS0FBSyxDQUFDSCxLQUFLSSxNQUFNLEtBQUtKLEtBQUtDLEdBQUcsQ0FBQyxJQUFJTDtJQUN0RCxPQUFPQyxPQUFPSztBQUNsQjtBQUNPLFNBQVNHLGVBQWVULFVBQVUsQ0FBQztJQUN0QyxPQUFPVSxPQUFPWCxVQUFVQztBQUM1QjtBQUNPLFNBQVNXLHFCQUFxQkMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLEVBQUU7SUFDbkQsT0FBTztRQUNIQSxJQUFJQSxNQUFNZjtRQUNWZ0IsU0FBUztRQUNUSDtRQUNBQztJQUNKO0FBQ0o7QUFDTyxTQUFTRyxvQkFBb0JGLEVBQUUsRUFBRUcsTUFBTTtJQUMxQyxPQUFPO1FBQ0hIO1FBQ0FDLFNBQVM7UUFDVEU7SUFDSjtBQUNKO0FBQ08sU0FBU0MsbUJBQW1CSixFQUFFLEVBQUVLLEtBQUssRUFBRUMsSUFBSTtJQUM5QyxPQUFPO1FBQ0hOO1FBQ0FDLFNBQVM7UUFDVEksT0FBT0UsbUJBQW1CRixPQUFPQztJQUNyQztBQUNKO0FBQ08sU0FBU0MsbUJBQW1CRixLQUFLLEVBQUVDLElBQUk7SUFDMUMsSUFBSSxPQUFPRCxVQUFVLGFBQWE7UUFDOUIsT0FBT3pCLGdEQUFRQSxDQUFDRyxzREFBY0E7SUFDbEM7SUFDQSxJQUFJLE9BQU9zQixVQUFVLFVBQVU7UUFDM0JBLFFBQVFHLE9BQU9DLE1BQU0sQ0FBQ0QsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBRzdCLGdEQUFRQSxDQUFDSSxvREFBWUEsSUFBSTtZQUFFMEIsU0FBU0w7UUFBTTtJQUN0RjtJQUNBLElBQUksT0FBT0MsU0FBUyxhQUFhO1FBQzdCRCxNQUFNQyxJQUFJLEdBQUdBO0lBQ2pCO0lBQ0EsSUFBSXhCLDJEQUFtQkEsQ0FBQ3VCLE1BQU1NLElBQUksR0FBRztRQUNqQ04sUUFBUXhCLHNEQUFjQSxDQUFDd0IsTUFBTU0sSUFBSTtJQUNyQztJQUNBLE9BQU9OO0FBQ1gsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZm9ybWF0LmpzPzI1MDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RXJyb3IsIGdldEVycm9yQnlDb2RlLCBpc1Jlc2VydmVkRXJyb3JDb2RlIH0gZnJvbSBcIi4vZXJyb3JcIjtcbmltcG9ydCB7IElOVEVSTkFMX0VSUk9SLCBTRVJWRVJfRVJST1IgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmV4cG9ydCBmdW5jdGlvbiBwYXlsb2FkSWQoZW50cm9weSA9IDMpIHtcbiAgICBjb25zdCBkYXRlID0gRGF0ZS5ub3coKSAqIE1hdGgucG93KDEwLCBlbnRyb3B5KTtcbiAgICBjb25zdCBleHRyYSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGgucG93KDEwLCBlbnRyb3B5KSk7XG4gICAgcmV0dXJuIGRhdGUgKyBleHRyYTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRCaWdJbnRScGNJZChlbnRyb3B5ID0gNikge1xuICAgIHJldHVybiBCaWdJbnQocGF5bG9hZElkKGVudHJvcHkpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRKc29uUnBjUmVxdWVzdChtZXRob2QsIHBhcmFtcywgaWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpZDogaWQgfHwgcGF5bG9hZElkKCksXG4gICAgICAgIGpzb25ycGM6IFwiMi4wXCIsXG4gICAgICAgIG1ldGhvZCxcbiAgICAgICAgcGFyYW1zLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0SnNvblJwY1Jlc3VsdChpZCwgcmVzdWx0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaWQsXG4gICAgICAgIGpzb25ycGM6IFwiMi4wXCIsXG4gICAgICAgIHJlc3VsdCxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEpzb25ScGNFcnJvcihpZCwgZXJyb3IsIGRhdGEpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpZCxcbiAgICAgICAganNvbnJwYzogXCIyLjBcIixcbiAgICAgICAgZXJyb3I6IGZvcm1hdEVycm9yTWVzc2FnZShlcnJvciwgZGF0YSksXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRFcnJvck1lc3NhZ2UoZXJyb3IsIGRhdGEpIHtcbiAgICBpZiAodHlwZW9mIGVycm9yID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiBnZXRFcnJvcihJTlRFUk5BTF9FUlJPUik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZXJyb3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgZXJyb3IgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGdldEVycm9yKFNFUlZFUl9FUlJPUikpLCB7IG1lc3NhZ2U6IGVycm9yIH0pO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRhdGEgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgZXJyb3IuZGF0YSA9IGRhdGE7XG4gICAgfVxuICAgIGlmIChpc1Jlc2VydmVkRXJyb3JDb2RlKGVycm9yLmNvZGUpKSB7XG4gICAgICAgIGVycm9yID0gZ2V0RXJyb3JCeUNvZGUoZXJyb3IuY29kZSk7XG4gICAgfVxuICAgIHJldHVybiBlcnJvcjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcm1hdC5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0RXJyb3IiLCJnZXRFcnJvckJ5Q29kZSIsImlzUmVzZXJ2ZWRFcnJvckNvZGUiLCJJTlRFUk5BTF9FUlJPUiIsIlNFUlZFUl9FUlJPUiIsInBheWxvYWRJZCIsImVudHJvcHkiLCJkYXRlIiwiRGF0ZSIsIm5vdyIsIk1hdGgiLCJwb3ciLCJleHRyYSIsImZsb29yIiwicmFuZG9tIiwiZ2V0QmlnSW50UnBjSWQiLCJCaWdJbnQiLCJmb3JtYXRKc29uUnBjUmVxdWVzdCIsIm1ldGhvZCIsInBhcmFtcyIsImlkIiwianNvbnJwYyIsImZvcm1hdEpzb25ScGNSZXN1bHQiLCJyZXN1bHQiLCJmb3JtYXRKc29uUnBjRXJyb3IiLCJlcnJvciIsImRhdGEiLCJmb3JtYXRFcnJvck1lc3NhZ2UiLCJPYmplY3QiLCJhc3NpZ24iLCJtZXNzYWdlIiwiY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR),\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcProvider),\n/* harmony export */   INTERNAL_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP),\n/* harmony export */   formatErrorMessage: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId),\n/* harmony export */   getError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getError),\n/* harmony export */   getErrorByCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getErrorByCode),\n/* harmony export */   isHttpUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isHttpUrl),\n/* harmony export */   isJsonRpcError: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcValidationInvalid),\n/* harmony export */   isLocalhostUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isLocalhostUrl),\n/* harmony export */   isReservedErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isServerErrorCode),\n/* harmony export */   isValidDefaultRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidDefaultRoute),\n/* harmony export */   isValidErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isValidErrorCode),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidWildcardRoute),\n/* harmony export */   isWsUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isWsUrl),\n/* harmony export */   parseConnectionError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.parseConnectionError),\n/* harmony export */   payloadId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.payloadId),\n/* harmony export */   validateJsonRpcError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./env */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _env__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"DEFAULT_ERROR\",\"INTERNAL_ERROR\",\"INVALID_PARAMS\",\"INVALID_REQUEST\",\"METHOD_NOT_FOUND\",\"PARSE_ERROR\",\"RESERVED_ERROR_CODES\",\"SERVER_ERROR\",\"SERVER_ERROR_CODE_RANGE\",\"STANDARD_ERROR_MAP\",\"getError\",\"getErrorByCode\",\"isReservedErrorCode\",\"isServerErrorCode\",\"isValidErrorCode\",\"parseConnectionError\",\"validateJsonRpcError\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _env__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\");\n/* harmony import */ var _routing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routing */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./url */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\");\n/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validators */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRCO0FBQ0o7QUFDRjtBQUNHO0FBQ0M7QUFDRjtBQUNGO0FBQ08sQ0FDN0IsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL2luZGV4LmpzPzY4MGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9lcnJvclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vZW52XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9mb3JtYXRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3JvdXRpbmdcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R5cGVzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91cmxcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3ZhbGlkYXRvcnNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidDefaultRoute: () => (/* binding */ isValidDefaultRoute),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* binding */ isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* binding */ isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* binding */ isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* binding */ isValidWildcardRoute)\n/* harmony export */ });\nfunction isValidRoute(route) {\n    if (route.includes(\"*\")) {\n        return isValidWildcardRoute(route);\n    }\n    if (/\\W/g.test(route)) {\n        return false;\n    }\n    return true;\n}\nfunction isValidDefaultRoute(route) {\n    return route === \"*\";\n}\nfunction isValidWildcardRoute(route) {\n    if (isValidDefaultRoute(route)) {\n        return true;\n    }\n    if (!route.includes(\"*\")) {\n        return false;\n    }\n    if (route.split(\"*\").length !== 2) {\n        return false;\n    }\n    if (route.split(\"*\").filter((x)=>x.trim() === \"\").length !== 1) {\n        return false;\n    }\n    return true;\n}\nfunction isValidLeadingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n}\nfunction isValidTrailingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n} //# sourceMappingURL=routing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9yb3V0aW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU8sU0FBU0EsYUFBYUMsS0FBSztJQUM5QixJQUFJQSxNQUFNQyxRQUFRLENBQUMsTUFBTTtRQUNyQixPQUFPQyxxQkFBcUJGO0lBQ2hDO0lBQ0EsSUFBSSxNQUFNRyxJQUFJLENBQUNILFFBQVE7UUFDbkIsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ08sU0FBU0ksb0JBQW9CSixLQUFLO0lBQ3JDLE9BQU9BLFVBQVU7QUFDckI7QUFDTyxTQUFTRSxxQkFBcUJGLEtBQUs7SUFDdEMsSUFBSUksb0JBQW9CSixRQUFRO1FBQzVCLE9BQU87SUFDWDtJQUNBLElBQUksQ0FBQ0EsTUFBTUMsUUFBUSxDQUFDLE1BQU07UUFDdEIsT0FBTztJQUNYO0lBQ0EsSUFBSUQsTUFBTUssS0FBSyxDQUFDLEtBQUtDLE1BQU0sS0FBSyxHQUFHO1FBQy9CLE9BQU87SUFDWDtJQUNBLElBQUlOLE1BQU1LLEtBQUssQ0FBQyxLQUFLRSxNQUFNLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLElBQUksT0FBTyxJQUFJSCxNQUFNLEtBQUssR0FBRztRQUM1RCxPQUFPO0lBQ1g7SUFDQSxPQUFPO0FBQ1g7QUFDTyxTQUFTSSw0QkFBNEJWLEtBQUs7SUFDN0MsT0FBTyxDQUFDSSxvQkFBb0JKLFVBQVVFLHFCQUFxQkYsVUFBVSxDQUFDQSxNQUFNSyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQ0ksSUFBSTtBQUNsRztBQUNPLFNBQVNFLDZCQUE2QlgsS0FBSztJQUM5QyxPQUFPLENBQUNJLG9CQUFvQkosVUFBVUUscUJBQXFCRixVQUFVLENBQUNBLE1BQU1LLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDSSxJQUFJO0FBQ2xHLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL3JvdXRpbmcuanM/OTYwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNWYWxpZFJvdXRlKHJvdXRlKSB7XG4gICAgaWYgKHJvdXRlLmluY2x1ZGVzKFwiKlwiKSkge1xuICAgICAgICByZXR1cm4gaXNWYWxpZFdpbGRjYXJkUm91dGUocm91dGUpO1xuICAgIH1cbiAgICBpZiAoL1xcVy9nLnRlc3Qocm91dGUpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZERlZmF1bHRSb3V0ZShyb3V0ZSkge1xuICAgIHJldHVybiByb3V0ZSA9PT0gXCIqXCI7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFdpbGRjYXJkUm91dGUocm91dGUpIHtcbiAgICBpZiAoaXNWYWxpZERlZmF1bHRSb3V0ZShyb3V0ZSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmICghcm91dGUuaW5jbHVkZXMoXCIqXCIpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHJvdXRlLnNwbGl0KFwiKlwiKS5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAocm91dGUuc3BsaXQoXCIqXCIpLmZpbHRlcih4ID0+IHgudHJpbSgpID09PSBcIlwiKS5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkTGVhZGluZ1dpbGRjYXJkUm91dGUocm91dGUpIHtcbiAgICByZXR1cm4gIWlzVmFsaWREZWZhdWx0Um91dGUocm91dGUpICYmIGlzVmFsaWRXaWxkY2FyZFJvdXRlKHJvdXRlKSAmJiAhcm91dGUuc3BsaXQoXCIqXCIpWzBdLnRyaW0oKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkVHJhaWxpbmdXaWxkY2FyZFJvdXRlKHJvdXRlKSB7XG4gICAgcmV0dXJuICFpc1ZhbGlkRGVmYXVsdFJvdXRlKHJvdXRlKSAmJiBpc1ZhbGlkV2lsZGNhcmRSb3V0ZShyb3V0ZSkgJiYgIXJvdXRlLnNwbGl0KFwiKlwiKVsxXS50cmltKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3V0aW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJpc1ZhbGlkUm91dGUiLCJyb3V0ZSIsImluY2x1ZGVzIiwiaXNWYWxpZFdpbGRjYXJkUm91dGUiLCJ0ZXN0IiwiaXNWYWxpZERlZmF1bHRSb3V0ZSIsInNwbGl0IiwibGVuZ3RoIiwiZmlsdGVyIiwieCIsInRyaW0iLCJpc1ZhbGlkTGVhZGluZ1dpbGRjYXJkUm91dGUiLCJpc1ZhbGlkVHJhaWxpbmdXaWxkY2FyZFJvdXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcProvider)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/jsonrpc-types */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js\");\n //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2QyxDQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdHlwZXMuanM/MjYyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpUrl: () => (/* binding */ isHttpUrl),\n/* harmony export */   isLocalhostUrl: () => (/* binding */ isLocalhostUrl),\n/* harmony export */   isWsUrl: () => (/* binding */ isWsUrl)\n/* harmony export */ });\nconst HTTP_REGEX = \"^https?:\";\nconst WS_REGEX = \"^wss?:\";\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length) return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\") return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, HTTP_REGEX);\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, WS_REGEX);\n}\nfunction isLocalhostUrl(url) {\n    return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n} //# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS91cmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsTUFBTUEsYUFBYTtBQUNuQixNQUFNQyxXQUFXO0FBQ2pCLFNBQVNDLGVBQWVDLEdBQUc7SUFDdkIsTUFBTUMsVUFBVUQsSUFBSUUsS0FBSyxDQUFDLElBQUlDLE9BQU8sU0FBUztJQUM5QyxJQUFJLENBQUNGLFdBQVcsQ0FBQ0EsUUFBUUcsTUFBTSxFQUMzQjtJQUNKLE9BQU9ILE9BQU8sQ0FBQyxFQUFFO0FBQ3JCO0FBQ0EsU0FBU0ksbUJBQW1CTCxHQUFHLEVBQUVNLEtBQUs7SUFDbEMsTUFBTUMsV0FBV1IsZUFBZUM7SUFDaEMsSUFBSSxPQUFPTyxhQUFhLGFBQ3BCLE9BQU87SUFDWCxPQUFPLElBQUlKLE9BQU9HLE9BQU9FLElBQUksQ0FBQ0Q7QUFDbEM7QUFDTyxTQUFTRSxVQUFVVCxHQUFHO0lBQ3pCLE9BQU9LLG1CQUFtQkwsS0FBS0g7QUFDbkM7QUFDTyxTQUFTYSxRQUFRVixHQUFHO0lBQ3ZCLE9BQU9LLG1CQUFtQkwsS0FBS0Y7QUFDbkM7QUFDTyxTQUFTYSxlQUFlWCxHQUFHO0lBQzlCLE9BQU8sSUFBSUcsT0FBTyw4QkFBOEJLLElBQUksQ0FBQ1I7QUFDekQsRUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdXJsLmpzPzgzMjgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSFRUUF9SRUdFWCA9IFwiXmh0dHBzPzpcIjtcbmNvbnN0IFdTX1JFR0VYID0gXCJed3NzPzpcIjtcbmZ1bmN0aW9uIGdldFVybFByb3RvY29sKHVybCkge1xuICAgIGNvbnN0IG1hdGNoZXMgPSB1cmwubWF0Y2gobmV3IFJlZ0V4cCgvXlxcdys6LywgXCJnaVwiKSk7XG4gICAgaWYgKCFtYXRjaGVzIHx8ICFtYXRjaGVzLmxlbmd0aClcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiBtYXRjaGVzWzBdO1xufVxuZnVuY3Rpb24gbWF0Y2hSZWdleFByb3RvY29sKHVybCwgcmVnZXgpIHtcbiAgICBjb25zdCBwcm90b2NvbCA9IGdldFVybFByb3RvY29sKHVybCk7XG4gICAgaWYgKHR5cGVvZiBwcm90b2NvbCA9PT0gXCJ1bmRlZmluZWRcIilcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBuZXcgUmVnRXhwKHJlZ2V4KS50ZXN0KHByb3RvY29sKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0h0dHBVcmwodXJsKSB7XG4gICAgcmV0dXJuIG1hdGNoUmVnZXhQcm90b2NvbCh1cmwsIEhUVFBfUkVHRVgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzV3NVcmwodXJsKSB7XG4gICAgcmV0dXJuIG1hdGNoUmVnZXhQcm90b2NvbCh1cmwsIFdTX1JFR0VYKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0xvY2FsaG9zdFVybCh1cmwpIHtcbiAgICByZXR1cm4gbmV3IFJlZ0V4cChcIndzcz86Ly9sb2NhbGhvc3QoOmR7Miw1fSk/XCIpLnRlc3QodXJsKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC5qcy5tYXAiXSwibmFtZXMiOlsiSFRUUF9SRUdFWCIsIldTX1JFR0VYIiwiZ2V0VXJsUHJvdG9jb2wiLCJ1cmwiLCJtYXRjaGVzIiwibWF0Y2giLCJSZWdFeHAiLCJsZW5ndGgiLCJtYXRjaFJlZ2V4UHJvdG9jb2wiLCJyZWdleCIsInByb3RvY29sIiwidGVzdCIsImlzSHR0cFVybCIsImlzV3NVcmwiLCJpc0xvY2FsaG9zdFVybCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isJsonRpcError: () => (/* binding */ isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* binding */ isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* binding */ isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* binding */ isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* binding */ isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* binding */ isJsonRpcValidationInvalid)\n/* harmony export */ });\nfunction isJsonRpcPayload(payload) {\n    return typeof payload === \"object\" && \"id\" in payload && \"jsonrpc\" in payload && payload.jsonrpc === \"2.0\";\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nfunction isJsonRpcValidationInvalid(validation) {\n    return \"error\" in validation && validation.valid === false;\n} //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPLFNBQVNBLGlCQUFpQkMsT0FBTztJQUNwQyxPQUFRLE9BQU9BLFlBQVksWUFDdkIsUUFBUUEsV0FDUixhQUFhQSxXQUNiQSxRQUFRQyxPQUFPLEtBQUs7QUFDNUI7QUFDTyxTQUFTQyxpQkFBaUJGLE9BQU87SUFDcEMsT0FBT0QsaUJBQWlCQyxZQUFZLFlBQVlBO0FBQ3BEO0FBQ08sU0FBU0csa0JBQWtCSCxPQUFPO0lBQ3JDLE9BQU9ELGlCQUFpQkMsWUFBYUksQ0FBQUEsZ0JBQWdCSixZQUFZSyxlQUFlTCxRQUFPO0FBQzNGO0FBQ08sU0FBU0ksZ0JBQWdCSixPQUFPO0lBQ25DLE9BQU8sWUFBWUE7QUFDdkI7QUFDTyxTQUFTSyxlQUFlTCxPQUFPO0lBQ2xDLE9BQU8sV0FBV0E7QUFDdEI7QUFDTyxTQUFTTSwyQkFBMkJDLFVBQVU7SUFDakQsT0FBTyxXQUFXQSxjQUFjQSxXQUFXQyxLQUFLLEtBQUs7QUFDekQsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdmFsaWRhdG9ycy5qcz80NzRiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNQYXlsb2FkKHBheWxvYWQpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBwYXlsb2FkID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgIFwiaWRcIiBpbiBwYXlsb2FkICYmXG4gICAgICAgIFwianNvbnJwY1wiIGluIHBheWxvYWQgJiZcbiAgICAgICAgcGF5bG9hZC5qc29ucnBjID09PSBcIjIuMFwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNSZXF1ZXN0KHBheWxvYWQpIHtcbiAgICByZXR1cm4gaXNKc29uUnBjUGF5bG9hZChwYXlsb2FkKSAmJiBcIm1ldGhvZFwiIGluIHBheWxvYWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjUmVzcG9uc2UocGF5bG9hZCkge1xuICAgIHJldHVybiBpc0pzb25ScGNQYXlsb2FkKHBheWxvYWQpICYmIChpc0pzb25ScGNSZXN1bHQocGF5bG9hZCkgfHwgaXNKc29uUnBjRXJyb3IocGF5bG9hZCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1Jlc3VsdChwYXlsb2FkKSB7XG4gICAgcmV0dXJuIFwicmVzdWx0XCIgaW4gcGF5bG9hZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNFcnJvcihwYXlsb2FkKSB7XG4gICAgcmV0dXJuIFwiZXJyb3JcIiBpbiBwYXlsb2FkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1ZhbGlkYXRpb25JbnZhbGlkKHZhbGlkYXRpb24pIHtcbiAgICByZXR1cm4gXCJlcnJvclwiIGluIHZhbGlkYXRpb24gJiYgdmFsaWRhdGlvbi52YWxpZCA9PT0gZmFsc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWxpZGF0b3JzLmpzLm1hcCJdLCJuYW1lcyI6WyJpc0pzb25ScGNQYXlsb2FkIiwicGF5bG9hZCIsImpzb25ycGMiLCJpc0pzb25ScGNSZXF1ZXN0IiwiaXNKc29uUnBjUmVzcG9uc2UiLCJpc0pzb25ScGNSZXN1bHQiLCJpc0pzb25ScGNFcnJvciIsImlzSnNvblJwY1ZhbGlkYXRpb25JbnZhbGlkIiwidmFsaWRhdGlvbiIsInZhbGlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WsConnection: () => (/* binding */ f),\n/* harmony export */   \"default\": () => (/* binding */ f)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\nconst w = ()=>typeof WebSocket < \"u\" ? WebSocket : typeof global < \"u\" && typeof global.WebSocket < \"u\" ? global.WebSocket :  false ? 0 : typeof self < \"u\" && typeof self.WebSocket < \"u\" ? self.WebSocket : __webpack_require__(/*! ws */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js\"), b = ()=>typeof WebSocket < \"u\" || typeof global < \"u\" && typeof global.WebSocket < \"u\" ||  false && 0 || typeof self < \"u\" && typeof self.WebSocket < \"u\", a = (c)=>c.split(\"?\")[0], h = 10, S = w();\nclass f {\n    constructor(e){\n        if (this.url = e, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.registering = !1, !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);\n        this.url = e;\n    }\n    get connected() {\n        return typeof this.socket < \"u\";\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async open(e = this.url) {\n        await this.register(e);\n    }\n    async close() {\n        return new Promise((e, t)=>{\n            if (typeof this.socket > \"u\") {\n                t(new Error(\"Connection already closed\"));\n                return;\n            }\n            this.socket.onclose = (n)=>{\n                this.onClose(n), e();\n            }, this.socket.close();\n        });\n    }\n    async send(e) {\n        typeof this.socket > \"u\" && (this.socket = await this.register());\n        try {\n            this.socket.send((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)(e));\n        } catch (t) {\n            this.onError(e.id, t);\n        }\n    }\n    register(e = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);\n        if (this.registering) {\n            const t = this.events.getMaxListeners();\n            return (this.events.listenerCount(\"register_error\") >= t || this.events.listenerCount(\"open\") >= t) && this.events.setMaxListeners(t + 1), new Promise((n, o)=>{\n                this.events.once(\"register_error\", (s)=>{\n                    this.resetMaxListeners(), o(s);\n                }), this.events.once(\"open\", ()=>{\n                    if (this.resetMaxListeners(), typeof this.socket > \"u\") return o(new Error(\"WebSocket connection is missing or invalid\"));\n                    n(this.socket);\n                });\n            });\n        }\n        return this.url = e, this.registering = !0, new Promise((t, n)=>{\n            const o = new URLSearchParams(e).get(\"origin\"), s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isReactNative)() ? {\n                headers: {\n                    origin: o\n                }\n            } : {\n                rejectUnauthorized: !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isLocalhostUrl)(e)\n            }, i = new S(e, [], s);\n            b() ? i.onerror = (r)=>{\n                const l = r;\n                n(this.emitError(l.error));\n            } : i.on(\"error\", (r)=>{\n                n(this.emitError(r));\n            }), i.onopen = ()=>{\n                this.onOpen(i), t(i);\n            };\n        });\n    }\n    onOpen(e) {\n        e.onmessage = (t)=>this.onPayload(t), e.onclose = (t)=>this.onClose(t), this.socket = e, this.registering = !1, this.events.emit(\"open\");\n    }\n    onClose(e) {\n        this.socket = void 0, this.registering = !1, this.events.emit(\"close\", e);\n    }\n    onPayload(e) {\n        if (typeof e.data > \"u\") return;\n        const t = typeof e.data == \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", t);\n    }\n    onError(e, t) {\n        const n = this.parseError(t), o = n.message || n.toString(), s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.formatJsonRpcError)(e, o);\n        this.events.emit(\"payload\", s);\n    }\n    parseError(e, t = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.parseConnectionError)(e, a(t), \"WS\");\n    }\n    resetMaxListeners() {\n        this.events.getMaxListeners() > h && this.events.setMaxListeners(h);\n    }\n    emitError(e) {\n        const t = this.parseError(new Error(e?.message || `WebSocket connection failed for host: ${a(this.url)}`));\n        return this.events.emit(\"register_error\", t), t;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst WebSocket = __webpack_require__(/*! ./lib/websocket */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js\");\nWebSocket.createWebSocketStream = __webpack_require__(/*! ./lib/stream */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js\");\nWebSocket.Server = __webpack_require__(/*! ./lib/websocket-server */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js\");\nWebSocket.Receiver = __webpack_require__(/*! ./lib/receiver */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js\");\nWebSocket.Sender = __webpack_require__(/*! ./lib/sender */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js\");\nmodule.exports = WebSocket;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLFlBQVlDLG1CQUFPQSxDQUFDO0FBRTFCRCxVQUFVRSxxQkFBcUIsR0FBR0QsbUJBQU9BLENBQUM7QUFDMUNELFVBQVVHLE1BQU0sR0FBR0YsbUJBQU9BLENBQUM7QUFDM0JELFVBQVVJLFFBQVEsR0FBR0gsbUJBQU9BLENBQUM7QUFDN0JELFVBQVVLLE1BQU0sR0FBR0osbUJBQU9BLENBQUM7QUFFM0JLLE9BQU9DLE9BQU8sR0FBR1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvaW5kZXguanM/ZTRiYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFdlYlNvY2tldCA9IHJlcXVpcmUoJy4vbGliL3dlYnNvY2tldCcpO1xuXG5XZWJTb2NrZXQuY3JlYXRlV2ViU29ja2V0U3RyZWFtID0gcmVxdWlyZSgnLi9saWIvc3RyZWFtJyk7XG5XZWJTb2NrZXQuU2VydmVyID0gcmVxdWlyZSgnLi9saWIvd2Vic29ja2V0LXNlcnZlcicpO1xuV2ViU29ja2V0LlJlY2VpdmVyID0gcmVxdWlyZSgnLi9saWIvcmVjZWl2ZXInKTtcbldlYlNvY2tldC5TZW5kZXIgPSByZXF1aXJlKCcuL2xpYi9zZW5kZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSBXZWJTb2NrZXQ7XG4iXSwibmFtZXMiOlsiV2ViU29ja2V0IiwicmVxdWlyZSIsImNyZWF0ZVdlYlNvY2tldFN0cmVhbSIsIlNlcnZlciIsIlJlY2VpdmVyIiwiU2VuZGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { EMPTY_BUFFER } = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */ function concat(list, totalLength) {\n    if (list.length === 0) return EMPTY_BUFFER;\n    if (list.length === 1) return list[0];\n    const target = Buffer.allocUnsafe(totalLength);\n    let offset = 0;\n    for(let i = 0; i < list.length; i++){\n        const buf = list[i];\n        target.set(buf, offset);\n        offset += buf.length;\n    }\n    if (offset < totalLength) return target.slice(0, offset);\n    return target;\n}\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */ function _mask(source, mask, output, offset, length) {\n    for(let i = 0; i < length; i++){\n        output[offset + i] = source[i] ^ mask[i & 3];\n    }\n}\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */ function _unmask(buffer, mask) {\n    // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n    const length = buffer.length;\n    for(let i = 0; i < length; i++){\n        buffer[i] ^= mask[i & 3];\n    }\n}\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */ function toArrayBuffer(buf) {\n    if (buf.byteLength === buf.buffer.byteLength) {\n        return buf.buffer;\n    }\n    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */ function toBuffer(data) {\n    toBuffer.readOnly = true;\n    if (Buffer.isBuffer(data)) return data;\n    let buf;\n    if (data instanceof ArrayBuffer) {\n        buf = Buffer.from(data);\n    } else if (ArrayBuffer.isView(data)) {\n        buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n    } else {\n        buf = Buffer.from(data);\n        toBuffer.readOnly = false;\n    }\n    return buf;\n}\ntry {\n    const bufferUtil = __webpack_require__(/*! bufferutil */ \"(ssr)/./node_modules/bufferutil/index.js\");\n    const bu = bufferUtil.BufferUtil || bufferUtil;\n    module.exports = {\n        concat,\n        mask (source, mask, output, offset, length) {\n            if (length < 48) _mask(source, mask, output, offset, length);\n            else bu.mask(source, mask, output, offset, length);\n        },\n        toArrayBuffer,\n        toBuffer,\n        unmask (buffer, mask) {\n            if (buffer.length < 32) _unmask(buffer, mask);\n            else bu.unmask(buffer, mask);\n        }\n    };\n} catch (e) /* istanbul ignore next */ {\n    module.exports = {\n        concat,\n        mask: _mask,\n        toArrayBuffer,\n        toBuffer,\n        unmask: _unmask\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvYnVmZmVyLXV0aWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNLEVBQUVBLFlBQVksRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQztBQUVqQzs7Ozs7OztDQU9DLEdBQ0QsU0FBU0MsT0FBT0MsSUFBSSxFQUFFQyxXQUFXO0lBQy9CLElBQUlELEtBQUtFLE1BQU0sS0FBSyxHQUFHLE9BQU9MO0lBQzlCLElBQUlHLEtBQUtFLE1BQU0sS0FBSyxHQUFHLE9BQU9GLElBQUksQ0FBQyxFQUFFO0lBRXJDLE1BQU1HLFNBQVNDLE9BQU9DLFdBQVcsQ0FBQ0o7SUFDbEMsSUFBSUssU0FBUztJQUViLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJUCxLQUFLRSxNQUFNLEVBQUVLLElBQUs7UUFDcEMsTUFBTUMsTUFBTVIsSUFBSSxDQUFDTyxFQUFFO1FBQ25CSixPQUFPTSxHQUFHLENBQUNELEtBQUtGO1FBQ2hCQSxVQUFVRSxJQUFJTixNQUFNO0lBQ3RCO0lBRUEsSUFBSUksU0FBU0wsYUFBYSxPQUFPRSxPQUFPTyxLQUFLLENBQUMsR0FBR0o7SUFFakQsT0FBT0g7QUFDVDtBQUVBOzs7Ozs7Ozs7Q0FTQyxHQUNELFNBQVNRLE1BQU1DLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVSLE1BQU0sRUFBRUosTUFBTTtJQUNqRCxJQUFLLElBQUlLLElBQUksR0FBR0EsSUFBSUwsUUFBUUssSUFBSztRQUMvQk8sTUFBTSxDQUFDUixTQUFTQyxFQUFFLEdBQUdLLE1BQU0sQ0FBQ0wsRUFBRSxHQUFHTSxJQUFJLENBQUNOLElBQUksRUFBRTtJQUM5QztBQUNGO0FBRUE7Ozs7OztDQU1DLEdBQ0QsU0FBU1EsUUFBUUMsTUFBTSxFQUFFSCxJQUFJO0lBQzNCLHlFQUF5RTtJQUN6RSxNQUFNWCxTQUFTYyxPQUFPZCxNQUFNO0lBQzVCLElBQUssSUFBSUssSUFBSSxHQUFHQSxJQUFJTCxRQUFRSyxJQUFLO1FBQy9CUyxNQUFNLENBQUNULEVBQUUsSUFBSU0sSUFBSSxDQUFDTixJQUFJLEVBQUU7SUFDMUI7QUFDRjtBQUVBOzs7Ozs7Q0FNQyxHQUNELFNBQVNVLGNBQWNULEdBQUc7SUFDeEIsSUFBSUEsSUFBSVUsVUFBVSxLQUFLVixJQUFJUSxNQUFNLENBQUNFLFVBQVUsRUFBRTtRQUM1QyxPQUFPVixJQUFJUSxNQUFNO0lBQ25CO0lBRUEsT0FBT1IsSUFBSVEsTUFBTSxDQUFDTixLQUFLLENBQUNGLElBQUlXLFVBQVUsRUFBRVgsSUFBSVcsVUFBVSxHQUFHWCxJQUFJVSxVQUFVO0FBQ3pFO0FBRUE7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNFLFNBQVNDLElBQUk7SUFDcEJELFNBQVNFLFFBQVEsR0FBRztJQUVwQixJQUFJbEIsT0FBT21CLFFBQVEsQ0FBQ0YsT0FBTyxPQUFPQTtJQUVsQyxJQUFJYjtJQUVKLElBQUlhLGdCQUFnQkcsYUFBYTtRQUMvQmhCLE1BQU1KLE9BQU9xQixJQUFJLENBQUNKO0lBQ3BCLE9BQU8sSUFBSUcsWUFBWUUsTUFBTSxDQUFDTCxPQUFPO1FBQ25DYixNQUFNSixPQUFPcUIsSUFBSSxDQUFDSixLQUFLTCxNQUFNLEVBQUVLLEtBQUtGLFVBQVUsRUFBRUUsS0FBS0gsVUFBVTtJQUNqRSxPQUFPO1FBQ0xWLE1BQU1KLE9BQU9xQixJQUFJLENBQUNKO1FBQ2xCRCxTQUFTRSxRQUFRLEdBQUc7SUFDdEI7SUFFQSxPQUFPZDtBQUNUO0FBRUEsSUFBSTtJQUNGLE1BQU1tQixhQUFhN0IsbUJBQU9BLENBQUM7SUFDM0IsTUFBTThCLEtBQUtELFdBQVdFLFVBQVUsSUFBSUY7SUFFcENHLE9BQU9DLE9BQU8sR0FBRztRQUNmaEM7UUFDQWMsTUFBS0QsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRVIsTUFBTSxFQUFFSixNQUFNO1lBQ3ZDLElBQUlBLFNBQVMsSUFBSVMsTUFBTUMsUUFBUUMsTUFBTUMsUUFBUVIsUUFBUUo7aUJBQ2hEMEIsR0FBR2YsSUFBSSxDQUFDRCxRQUFRQyxNQUFNQyxRQUFRUixRQUFRSjtRQUM3QztRQUNBZTtRQUNBRztRQUNBWSxRQUFPaEIsTUFBTSxFQUFFSCxJQUFJO1lBQ2pCLElBQUlHLE9BQU9kLE1BQU0sR0FBRyxJQUFJYSxRQUFRQyxRQUFRSDtpQkFDbkNlLEdBQUdJLE1BQU0sQ0FBQ2hCLFFBQVFIO1FBQ3pCO0lBQ0Y7QUFDRixFQUFFLE9BQU9vQixHQUFHLHdCQUF3QixHQUFHO0lBQ3JDSCxPQUFPQyxPQUFPLEdBQUc7UUFDZmhDO1FBQ0FjLE1BQU1GO1FBQ05NO1FBQ0FHO1FBQ0FZLFFBQVFqQjtJQUNWO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL2J1ZmZlci11dGlsLmpzPzU4ODEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB7IEVNUFRZX0JVRkZFUiB9ID0gcmVxdWlyZSgnLi9jb25zdGFudHMnKTtcblxuLyoqXG4gKiBNZXJnZXMgYW4gYXJyYXkgb2YgYnVmZmVycyBpbnRvIGEgbmV3IGJ1ZmZlci5cbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcltdfSBsaXN0IFRoZSBhcnJheSBvZiBidWZmZXJzIHRvIGNvbmNhdFxuICogQHBhcmFtIHtOdW1iZXJ9IHRvdGFsTGVuZ3RoIFRoZSB0b3RhbCBsZW5ndGggb2YgYnVmZmVycyBpbiB0aGUgbGlzdFxuICogQHJldHVybiB7QnVmZmVyfSBUaGUgcmVzdWx0aW5nIGJ1ZmZlclxuICogQHB1YmxpY1xuICovXG5mdW5jdGlvbiBjb25jYXQobGlzdCwgdG90YWxMZW5ndGgpIHtcbiAgaWYgKGxpc3QubGVuZ3RoID09PSAwKSByZXR1cm4gRU1QVFlfQlVGRkVSO1xuICBpZiAobGlzdC5sZW5ndGggPT09IDEpIHJldHVybiBsaXN0WzBdO1xuXG4gIGNvbnN0IHRhcmdldCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSh0b3RhbExlbmd0aCk7XG4gIGxldCBvZmZzZXQgPSAwO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGJ1ZiA9IGxpc3RbaV07XG4gICAgdGFyZ2V0LnNldChidWYsIG9mZnNldCk7XG4gICAgb2Zmc2V0ICs9IGJ1Zi5sZW5ndGg7XG4gIH1cblxuICBpZiAob2Zmc2V0IDwgdG90YWxMZW5ndGgpIHJldHVybiB0YXJnZXQuc2xpY2UoMCwgb2Zmc2V0KTtcblxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG4vKipcbiAqIE1hc2tzIGEgYnVmZmVyIHVzaW5nIHRoZSBnaXZlbiBtYXNrLlxuICpcbiAqIEBwYXJhbSB7QnVmZmVyfSBzb3VyY2UgVGhlIGJ1ZmZlciB0byBtYXNrXG4gKiBAcGFyYW0ge0J1ZmZlcn0gbWFzayBUaGUgbWFzayB0byB1c2VcbiAqIEBwYXJhbSB7QnVmZmVyfSBvdXRwdXQgVGhlIGJ1ZmZlciB3aGVyZSB0byBzdG9yZSB0aGUgcmVzdWx0XG4gKiBAcGFyYW0ge051bWJlcn0gb2Zmc2V0IFRoZSBvZmZzZXQgYXQgd2hpY2ggdG8gc3RhcnQgd3JpdGluZ1xuICogQHBhcmFtIHtOdW1iZXJ9IGxlbmd0aCBUaGUgbnVtYmVyIG9mIGJ5dGVzIHRvIG1hc2suXG4gKiBAcHVibGljXG4gKi9cbmZ1bmN0aW9uIF9tYXNrKHNvdXJjZSwgbWFzaywgb3V0cHV0LCBvZmZzZXQsIGxlbmd0aCkge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgb3V0cHV0W29mZnNldCArIGldID0gc291cmNlW2ldIF4gbWFza1tpICYgM107XG4gIH1cbn1cblxuLyoqXG4gKiBVbm1hc2tzIGEgYnVmZmVyIHVzaW5nIHRoZSBnaXZlbiBtYXNrLlxuICpcbiAqIEBwYXJhbSB7QnVmZmVyfSBidWZmZXIgVGhlIGJ1ZmZlciB0byB1bm1hc2tcbiAqIEBwYXJhbSB7QnVmZmVyfSBtYXNrIFRoZSBtYXNrIHRvIHVzZVxuICogQHB1YmxpY1xuICovXG5mdW5jdGlvbiBfdW5tYXNrKGJ1ZmZlciwgbWFzaykge1xuICAvLyBSZXF1aXJlZCB1bnRpbCBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvaXNzdWVzLzkwMDYgaXMgcmVzb2x2ZWQuXG4gIGNvbnN0IGxlbmd0aCA9IGJ1ZmZlci5sZW5ndGg7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICBidWZmZXJbaV0gXj0gbWFza1tpICYgM107XG4gIH1cbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBhIGJ1ZmZlciB0byBhbiBgQXJyYXlCdWZmZXJgLlxuICpcbiAqIEBwYXJhbSB7QnVmZmVyfSBidWYgVGhlIGJ1ZmZlciB0byBjb252ZXJ0XG4gKiBAcmV0dXJuIHtBcnJheUJ1ZmZlcn0gQ29udmVydGVkIGJ1ZmZlclxuICogQHB1YmxpY1xuICovXG5mdW5jdGlvbiB0b0FycmF5QnVmZmVyKGJ1Zikge1xuICBpZiAoYnVmLmJ5dGVMZW5ndGggPT09IGJ1Zi5idWZmZXIuYnl0ZUxlbmd0aCkge1xuICAgIHJldHVybiBidWYuYnVmZmVyO1xuICB9XG5cbiAgcmV0dXJuIGJ1Zi5idWZmZXIuc2xpY2UoYnVmLmJ5dGVPZmZzZXQsIGJ1Zi5ieXRlT2Zmc2V0ICsgYnVmLmJ5dGVMZW5ndGgpO1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGBkYXRhYCB0byBhIGBCdWZmZXJgLlxuICpcbiAqIEBwYXJhbSB7Kn0gZGF0YSBUaGUgZGF0YSB0byBjb252ZXJ0XG4gKiBAcmV0dXJuIHtCdWZmZXJ9IFRoZSBidWZmZXJcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn1cbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gdG9CdWZmZXIoZGF0YSkge1xuICB0b0J1ZmZlci5yZWFkT25seSA9IHRydWU7XG5cbiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihkYXRhKSkgcmV0dXJuIGRhdGE7XG5cbiAgbGV0IGJ1ZjtcblxuICBpZiAoZGF0YSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgYnVmID0gQnVmZmVyLmZyb20oZGF0YSk7XG4gIH0gZWxzZSBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KGRhdGEpKSB7XG4gICAgYnVmID0gQnVmZmVyLmZyb20oZGF0YS5idWZmZXIsIGRhdGEuYnl0ZU9mZnNldCwgZGF0YS5ieXRlTGVuZ3RoKTtcbiAgfSBlbHNlIHtcbiAgICBidWYgPSBCdWZmZXIuZnJvbShkYXRhKTtcbiAgICB0b0J1ZmZlci5yZWFkT25seSA9IGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGJ1Zjtcbn1cblxudHJ5IHtcbiAgY29uc3QgYnVmZmVyVXRpbCA9IHJlcXVpcmUoJ2J1ZmZlcnV0aWwnKTtcbiAgY29uc3QgYnUgPSBidWZmZXJVdGlsLkJ1ZmZlclV0aWwgfHwgYnVmZmVyVXRpbDtcblxuICBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBjb25jYXQsXG4gICAgbWFzayhzb3VyY2UsIG1hc2ssIG91dHB1dCwgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgIGlmIChsZW5ndGggPCA0OCkgX21hc2soc291cmNlLCBtYXNrLCBvdXRwdXQsIG9mZnNldCwgbGVuZ3RoKTtcbiAgICAgIGVsc2UgYnUubWFzayhzb3VyY2UsIG1hc2ssIG91dHB1dCwgb2Zmc2V0LCBsZW5ndGgpO1xuICAgIH0sXG4gICAgdG9BcnJheUJ1ZmZlcixcbiAgICB0b0J1ZmZlcixcbiAgICB1bm1hc2soYnVmZmVyLCBtYXNrKSB7XG4gICAgICBpZiAoYnVmZmVyLmxlbmd0aCA8IDMyKSBfdW5tYXNrKGJ1ZmZlciwgbWFzayk7XG4gICAgICBlbHNlIGJ1LnVubWFzayhidWZmZXIsIG1hc2spO1xuICAgIH1cbiAgfTtcbn0gY2F0Y2ggKGUpIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY29uY2F0LFxuICAgIG1hc2s6IF9tYXNrLFxuICAgIHRvQXJyYXlCdWZmZXIsXG4gICAgdG9CdWZmZXIsXG4gICAgdW5tYXNrOiBfdW5tYXNrXG4gIH07XG59XG4iXSwibmFtZXMiOlsiRU1QVFlfQlVGRkVSIiwicmVxdWlyZSIsImNvbmNhdCIsImxpc3QiLCJ0b3RhbExlbmd0aCIsImxlbmd0aCIsInRhcmdldCIsIkJ1ZmZlciIsImFsbG9jVW5zYWZlIiwib2Zmc2V0IiwiaSIsImJ1ZiIsInNldCIsInNsaWNlIiwiX21hc2siLCJzb3VyY2UiLCJtYXNrIiwib3V0cHV0IiwiX3VubWFzayIsImJ1ZmZlciIsInRvQXJyYXlCdWZmZXIiLCJieXRlTGVuZ3RoIiwiYnl0ZU9mZnNldCIsInRvQnVmZmVyIiwiZGF0YSIsInJlYWRPbmx5IiwiaXNCdWZmZXIiLCJBcnJheUJ1ZmZlciIsImZyb20iLCJpc1ZpZXciLCJidWZmZXJVdGlsIiwiYnUiLCJCdWZmZXJVdGlsIiwibW9kdWxlIiwiZXhwb3J0cyIsInVubWFzayIsImUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js ***!
  \********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = {\n    BINARY_TYPES: [\n        \"nodebuffer\",\n        \"arraybuffer\",\n        \"fragments\"\n    ],\n    GUID: \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\",\n    kStatusCode: Symbol(\"status-code\"),\n    kWebSocket: Symbol(\"websocket\"),\n    EMPTY_BUFFER: Buffer.alloc(0),\n    NOOP: ()=>{}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBRztJQUNmQyxjQUFjO1FBQUM7UUFBYztRQUFlO0tBQVk7SUFDeERDLE1BQU07SUFDTkMsYUFBYUMsT0FBTztJQUNwQkMsWUFBWUQsT0FBTztJQUNuQkUsY0FBY0MsT0FBT0MsS0FBSyxDQUFDO0lBQzNCQyxNQUFNLEtBQU87QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvY29uc3RhbnRzLmpzP2FhZDEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQklOQVJZX1RZUEVTOiBbJ25vZGVidWZmZXInLCAnYXJyYXlidWZmZXInLCAnZnJhZ21lbnRzJ10sXG4gIEdVSUQ6ICcyNThFQUZBNS1FOTE0LTQ3REEtOTVDQS1DNUFCMERDODVCMTEnLFxuICBrU3RhdHVzQ29kZTogU3ltYm9sKCdzdGF0dXMtY29kZScpLFxuICBrV2ViU29ja2V0OiBTeW1ib2woJ3dlYnNvY2tldCcpLFxuICBFTVBUWV9CVUZGRVI6IEJ1ZmZlci5hbGxvYygwKSxcbiAgTk9PUDogKCkgPT4ge31cbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIkJJTkFSWV9UWVBFUyIsIkdVSUQiLCJrU3RhdHVzQ29kZSIsIlN5bWJvbCIsImtXZWJTb2NrZXQiLCJFTVBUWV9CVUZGRVIiLCJCdWZmZXIiLCJhbGxvYyIsIk5PT1AiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js ***!
  \***********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n/**\n * Class representing an event.\n *\n * @private\n */ class Event {\n    /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(type, target){\n        this.target = target;\n        this.type = type;\n    }\n}\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */ class MessageEvent extends Event {\n    /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(data, target){\n        super(\"message\", target);\n        this.data = data;\n    }\n}\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */ class CloseEvent extends Event {\n    /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being\n   *     closed\n   * @param {String} reason A human-readable string explaining why the\n   *     connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(code, reason, target){\n        super(\"close\", target);\n        this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n        this.reason = reason;\n        this.code = code;\n    }\n}\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */ class OpenEvent extends Event {\n    /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(target){\n        super(\"open\", target);\n    }\n}\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */ class ErrorEvent extends Event {\n    /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(error, target){\n        super(\"error\", target);\n        this.message = error.message;\n        this.error = error;\n    }\n}\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */ const EventTarget = {\n    /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean`` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */ addEventListener (type, listener, options) {\n        if (typeof listener !== \"function\") return;\n        function onMessage(data) {\n            listener.call(this, new MessageEvent(data, this));\n        }\n        function onClose(code, message) {\n            listener.call(this, new CloseEvent(code, message, this));\n        }\n        function onError(error) {\n            listener.call(this, new ErrorEvent(error, this));\n        }\n        function onOpen() {\n            listener.call(this, new OpenEvent(this));\n        }\n        const method = options && options.once ? \"once\" : \"on\";\n        if (type === \"message\") {\n            onMessage._listener = listener;\n            this[method](type, onMessage);\n        } else if (type === \"close\") {\n            onClose._listener = listener;\n            this[method](type, onClose);\n        } else if (type === \"error\") {\n            onError._listener = listener;\n            this[method](type, onError);\n        } else if (type === \"open\") {\n            onOpen._listener = listener;\n            this[method](type, onOpen);\n        } else {\n            this[method](type, listener);\n        }\n    },\n    /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */ removeEventListener (type, listener) {\n        const listeners = this.listeners(type);\n        for(let i = 0; i < listeners.length; i++){\n            if (listeners[i] === listener || listeners[i]._listener === listener) {\n                this.removeListener(type, listeners[i]);\n            }\n        }\n    }\n};\nmodule.exports = EventTarget;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js ***!
  \********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0 // 112 - 127\n];\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */ function push(dest, name, elem) {\n    if (dest[name] === undefined) dest[name] = [\n        elem\n    ];\n    else dest[name].push(elem);\n}\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */ function parse(header) {\n    const offers = Object.create(null);\n    if (header === undefined || header === \"\") return offers;\n    let params = Object.create(null);\n    let mustUnescape = false;\n    let isEscaping = false;\n    let inQuotes = false;\n    let extensionName;\n    let paramName;\n    let start = -1;\n    let end = -1;\n    let i = 0;\n    for(; i < header.length; i++){\n        const code = header.charCodeAt(i);\n        if (extensionName === undefined) {\n            if (end === -1 && tokenChars[code] === 1) {\n                if (start === -1) start = i;\n            } else if (code === 0x20 /* ' ' */  || code === 0x09 /* '\\t' */ ) {\n                if (end === -1 && start !== -1) end = i;\n            } else if (code === 0x3b /* ';' */  || code === 0x2c /* ',' */ ) {\n                if (start === -1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (end === -1) end = i;\n                const name = header.slice(start, end);\n                if (code === 0x2c) {\n                    push(offers, name, params);\n                    params = Object.create(null);\n                } else {\n                    extensionName = name;\n                }\n                start = end = -1;\n            } else {\n                throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n        } else if (paramName === undefined) {\n            if (end === -1 && tokenChars[code] === 1) {\n                if (start === -1) start = i;\n            } else if (code === 0x20 || code === 0x09) {\n                if (end === -1 && start !== -1) end = i;\n            } else if (code === 0x3b || code === 0x2c) {\n                if (start === -1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (end === -1) end = i;\n                push(params, header.slice(start, end), true);\n                if (code === 0x2c) {\n                    push(offers, extensionName, params);\n                    params = Object.create(null);\n                    extensionName = undefined;\n                }\n                start = end = -1;\n            } else if (code === 0x3d /* '=' */  && start !== -1 && end === -1) {\n                paramName = header.slice(start, i);\n                start = end = -1;\n            } else {\n                throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n        } else {\n            //\n            // The value of a quoted-string after unescaping must conform to the\n            // token ABNF, so only token characters are valid.\n            // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n            //\n            if (isEscaping) {\n                if (tokenChars[code] !== 1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (start === -1) start = i;\n                else if (!mustUnescape) mustUnescape = true;\n                isEscaping = false;\n            } else if (inQuotes) {\n                if (tokenChars[code] === 1) {\n                    if (start === -1) start = i;\n                } else if (code === 0x22 /* '\"' */  && start !== -1) {\n                    inQuotes = false;\n                    end = i;\n                } else if (code === 0x5c /* '\\' */ ) {\n                    isEscaping = true;\n                } else {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n            } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n                inQuotes = true;\n            } else if (end === -1 && tokenChars[code] === 1) {\n                if (start === -1) start = i;\n            } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n                if (end === -1) end = i;\n            } else if (code === 0x3b || code === 0x2c) {\n                if (start === -1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (end === -1) end = i;\n                let value = header.slice(start, end);\n                if (mustUnescape) {\n                    value = value.replace(/\\\\/g, \"\");\n                    mustUnescape = false;\n                }\n                push(params, paramName, value);\n                if (code === 0x2c) {\n                    push(offers, extensionName, params);\n                    params = Object.create(null);\n                    extensionName = undefined;\n                }\n                paramName = undefined;\n                start = end = -1;\n            } else {\n                throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n        }\n    }\n    if (start === -1 || inQuotes) {\n        throw new SyntaxError(\"Unexpected end of input\");\n    }\n    if (end === -1) end = i;\n    const token = header.slice(start, end);\n    if (extensionName === undefined) {\n        push(offers, token, params);\n    } else {\n        if (paramName === undefined) {\n            push(params, token, true);\n        } else if (mustUnescape) {\n            push(params, paramName, token.replace(/\\\\/g, \"\"));\n        } else {\n            push(params, paramName, token);\n        }\n        push(offers, extensionName, params);\n    }\n    return offers;\n}\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */ function format(extensions) {\n    return Object.keys(extensions).map((extension)=>{\n        let configurations = extensions[extension];\n        if (!Array.isArray(configurations)) configurations = [\n            configurations\n        ];\n        return configurations.map((params)=>{\n            return [\n                extension\n            ].concat(Object.keys(params).map((k)=>{\n                let values = params[k];\n                if (!Array.isArray(values)) values = [\n                    values\n                ];\n                return values.map((v)=>v === true ? k : `${k}=${v}`).join(\"; \");\n            })).join(\"; \");\n        }).join(\", \");\n    }).join(\", \");\n}\nmodule.exports = {\n    format,\n    parse\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nconst kDone = Symbol(\"kDone\");\nconst kRun = Symbol(\"kRun\");\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */ class Limiter {\n    /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */ constructor(concurrency){\n        this[kDone] = ()=>{\n            this.pending--;\n            this[kRun]();\n        };\n        this.concurrency = concurrency || Infinity;\n        this.jobs = [];\n        this.pending = 0;\n    }\n    /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */ add(job) {\n        this.jobs.push(job);\n        this[kRun]();\n    }\n    /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */ [kRun]() {\n        if (this.pending === this.concurrency) return;\n        if (this.jobs.length) {\n            const job = this.jobs.shift();\n            this.pending++;\n            job(this[kDone]);\n        }\n    }\n}\nmodule.exports = Limiter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvbGltaXRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLFFBQVFDLE9BQU87QUFDckIsTUFBTUMsT0FBT0QsT0FBTztBQUVwQjs7O0NBR0MsR0FDRCxNQUFNRTtJQUNKOzs7OztHQUtDLEdBQ0RDLFlBQVlDLFdBQVcsQ0FBRTtRQUN2QixJQUFJLENBQUNMLE1BQU0sR0FBRztZQUNaLElBQUksQ0FBQ00sT0FBTztZQUNaLElBQUksQ0FBQ0osS0FBSztRQUNaO1FBQ0EsSUFBSSxDQUFDRyxXQUFXLEdBQUdBLGVBQWVFO1FBQ2xDLElBQUksQ0FBQ0MsSUFBSSxHQUFHLEVBQUU7UUFDZCxJQUFJLENBQUNGLE9BQU8sR0FBRztJQUNqQjtJQUVBOzs7OztHQUtDLEdBQ0RHLElBQUlDLEdBQUcsRUFBRTtRQUNQLElBQUksQ0FBQ0YsSUFBSSxDQUFDRyxJQUFJLENBQUNEO1FBQ2YsSUFBSSxDQUFDUixLQUFLO0lBQ1o7SUFFQTs7OztHQUlDLEdBQ0QsQ0FBQ0EsS0FBSyxHQUFHO1FBQ1AsSUFBSSxJQUFJLENBQUNJLE9BQU8sS0FBSyxJQUFJLENBQUNELFdBQVcsRUFBRTtRQUV2QyxJQUFJLElBQUksQ0FBQ0csSUFBSSxDQUFDSSxNQUFNLEVBQUU7WUFDcEIsTUFBTUYsTUFBTSxJQUFJLENBQUNGLElBQUksQ0FBQ0ssS0FBSztZQUUzQixJQUFJLENBQUNQLE9BQU87WUFDWkksSUFBSSxJQUFJLENBQUNWLE1BQU07UUFDakI7SUFDRjtBQUNGO0FBRUFjLE9BQU9DLE9BQU8sR0FBR1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL2xpbWl0ZXIuanM/NDNhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGtEb25lID0gU3ltYm9sKCdrRG9uZScpO1xuY29uc3Qga1J1biA9IFN5bWJvbCgna1J1bicpO1xuXG4vKipcbiAqIEEgdmVyeSBzaW1wbGUgam9iIHF1ZXVlIHdpdGggYWRqdXN0YWJsZSBjb25jdXJyZW5jeS4gQWRhcHRlZCBmcm9tXG4gKiBodHRwczovL2dpdGh1Yi5jb20vU1RSTUwvYXN5bmMtbGltaXRlclxuICovXG5jbGFzcyBMaW1pdGVyIHtcbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcgYExpbWl0ZXJgLlxuICAgKlxuICAgKiBAcGFyYW0ge051bWJlcn0gW2NvbmN1cnJlbmN5PUluZmluaXR5XSBUaGUgbWF4aW11bSBudW1iZXIgb2Ygam9icyBhbGxvd2VkXG4gICAqICAgICB0byBydW4gY29uY3VycmVudGx5XG4gICAqL1xuICBjb25zdHJ1Y3Rvcihjb25jdXJyZW5jeSkge1xuICAgIHRoaXNba0RvbmVdID0gKCkgPT4ge1xuICAgICAgdGhpcy5wZW5kaW5nLS07XG4gICAgICB0aGlzW2tSdW5dKCk7XG4gICAgfTtcbiAgICB0aGlzLmNvbmN1cnJlbmN5ID0gY29uY3VycmVuY3kgfHwgSW5maW5pdHk7XG4gICAgdGhpcy5qb2JzID0gW107XG4gICAgdGhpcy5wZW5kaW5nID0gMDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRzIGEgam9iIHRvIHRoZSBxdWV1ZS5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gam9iIFRoZSBqb2IgdG8gcnVuXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIGFkZChqb2IpIHtcbiAgICB0aGlzLmpvYnMucHVzaChqb2IpO1xuICAgIHRoaXNba1J1bl0oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGEgam9iIGZyb20gdGhlIHF1ZXVlIGFuZCBydW5zIGl0IGlmIHBvc3NpYmxlLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgW2tSdW5dKCkge1xuICAgIGlmICh0aGlzLnBlbmRpbmcgPT09IHRoaXMuY29uY3VycmVuY3kpIHJldHVybjtcblxuICAgIGlmICh0aGlzLmpvYnMubGVuZ3RoKSB7XG4gICAgICBjb25zdCBqb2IgPSB0aGlzLmpvYnMuc2hpZnQoKTtcblxuICAgICAgdGhpcy5wZW5kaW5nKys7XG4gICAgICBqb2IodGhpc1trRG9uZV0pO1xuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IExpbWl0ZXI7XG4iXSwibmFtZXMiOlsia0RvbmUiLCJTeW1ib2wiLCJrUnVuIiwiTGltaXRlciIsImNvbnN0cnVjdG9yIiwiY29uY3VycmVuY3kiLCJwZW5kaW5nIiwiSW5maW5pdHkiLCJqb2JzIiwiYWRkIiwiam9iIiwicHVzaCIsImxlbmd0aCIsInNoaWZ0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js ***!
  \*****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\nconst bufferUtil = __webpack_require__(/*! ./buffer-util */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst Limiter = __webpack_require__(/*! ./limiter */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js\");\nconst { kStatusCode, NOOP } = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst TRAILER = Buffer.from([\n    0x00,\n    0x00,\n    0xff,\n    0xff\n]);\nconst kPerMessageDeflate = Symbol(\"permessage-deflate\");\nconst kTotalLength = Symbol(\"total-length\");\nconst kCallback = Symbol(\"callback\");\nconst kBuffers = Symbol(\"buffers\");\nconst kError = Symbol(\"error\");\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n/**\n * permessage-deflate implementation.\n */ class PerMessageDeflate {\n    /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */ constructor(options, isServer, maxPayload){\n        this._maxPayload = maxPayload | 0;\n        this._options = options || {};\n        this._threshold = this._options.threshold !== undefined ? this._options.threshold : 1024;\n        this._isServer = !!isServer;\n        this._deflate = null;\n        this._inflate = null;\n        this.params = null;\n        if (!zlibLimiter) {\n            const concurrency = this._options.concurrencyLimit !== undefined ? this._options.concurrencyLimit : 10;\n            zlibLimiter = new Limiter(concurrency);\n        }\n    }\n    /**\n   * @type {String}\n   */ static get extensionName() {\n        return \"permessage-deflate\";\n    }\n    /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */ offer() {\n        const params = {};\n        if (this._options.serverNoContextTakeover) {\n            params.server_no_context_takeover = true;\n        }\n        if (this._options.clientNoContextTakeover) {\n            params.client_no_context_takeover = true;\n        }\n        if (this._options.serverMaxWindowBits) {\n            params.server_max_window_bits = this._options.serverMaxWindowBits;\n        }\n        if (this._options.clientMaxWindowBits) {\n            params.client_max_window_bits = this._options.clientMaxWindowBits;\n        } else if (this._options.clientMaxWindowBits == null) {\n            params.client_max_window_bits = true;\n        }\n        return params;\n    }\n    /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */ accept(configurations) {\n        configurations = this.normalizeParams(configurations);\n        this.params = this._isServer ? this.acceptAsServer(configurations) : this.acceptAsClient(configurations);\n        return this.params;\n    }\n    /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */ cleanup() {\n        if (this._inflate) {\n            this._inflate.close();\n            this._inflate = null;\n        }\n        if (this._deflate) {\n            const callback = this._deflate[kCallback];\n            this._deflate.close();\n            this._deflate = null;\n            if (callback) {\n                callback(new Error(\"The deflate stream was closed while data was being processed\"));\n            }\n        }\n    }\n    /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */ acceptAsServer(offers) {\n        const opts = this._options;\n        const accepted = offers.find((params)=>{\n            if (opts.serverNoContextTakeover === false && params.server_no_context_takeover || params.server_max_window_bits && (opts.serverMaxWindowBits === false || typeof opts.serverMaxWindowBits === \"number\" && opts.serverMaxWindowBits > params.server_max_window_bits) || typeof opts.clientMaxWindowBits === \"number\" && !params.client_max_window_bits) {\n                return false;\n            }\n            return true;\n        });\n        if (!accepted) {\n            throw new Error(\"None of the extension offers can be accepted\");\n        }\n        if (opts.serverNoContextTakeover) {\n            accepted.server_no_context_takeover = true;\n        }\n        if (opts.clientNoContextTakeover) {\n            accepted.client_no_context_takeover = true;\n        }\n        if (typeof opts.serverMaxWindowBits === \"number\") {\n            accepted.server_max_window_bits = opts.serverMaxWindowBits;\n        }\n        if (typeof opts.clientMaxWindowBits === \"number\") {\n            accepted.client_max_window_bits = opts.clientMaxWindowBits;\n        } else if (accepted.client_max_window_bits === true || opts.clientMaxWindowBits === false) {\n            delete accepted.client_max_window_bits;\n        }\n        return accepted;\n    }\n    /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */ acceptAsClient(response) {\n        const params = response[0];\n        if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {\n            throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n        }\n        if (!params.client_max_window_bits) {\n            if (typeof this._options.clientMaxWindowBits === \"number\") {\n                params.client_max_window_bits = this._options.clientMaxWindowBits;\n            }\n        } else if (this._options.clientMaxWindowBits === false || typeof this._options.clientMaxWindowBits === \"number\" && params.client_max_window_bits > this._options.clientMaxWindowBits) {\n            throw new Error('Unexpected or invalid parameter \"client_max_window_bits\"');\n        }\n        return params;\n    }\n    /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */ normalizeParams(configurations) {\n        configurations.forEach((params)=>{\n            Object.keys(params).forEach((key)=>{\n                let value = params[key];\n                if (value.length > 1) {\n                    throw new Error(`Parameter \"${key}\" must have only a single value`);\n                }\n                value = value[0];\n                if (key === \"client_max_window_bits\") {\n                    if (value !== true) {\n                        const num = +value;\n                        if (!Number.isInteger(num) || num < 8 || num > 15) {\n                            throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                        }\n                        value = num;\n                    } else if (!this._isServer) {\n                        throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                    }\n                } else if (key === \"server_max_window_bits\") {\n                    const num = +value;\n                    if (!Number.isInteger(num) || num < 8 || num > 15) {\n                        throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                    }\n                    value = num;\n                } else if (key === \"client_no_context_takeover\" || key === \"server_no_context_takeover\") {\n                    if (value !== true) {\n                        throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                    }\n                } else {\n                    throw new Error(`Unknown parameter \"${key}\"`);\n                }\n                params[key] = value;\n            });\n        });\n        return configurations;\n    }\n    /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */ decompress(data, fin, callback) {\n        zlibLimiter.add((done)=>{\n            this._decompress(data, fin, (err, result)=>{\n                done();\n                callback(err, result);\n            });\n        });\n    }\n    /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */ compress(data, fin, callback) {\n        zlibLimiter.add((done)=>{\n            this._compress(data, fin, (err, result)=>{\n                done();\n                callback(err, result);\n            });\n        });\n    }\n    /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */ _decompress(data, fin, callback) {\n        const endpoint = this._isServer ? \"client\" : \"server\";\n        if (!this._inflate) {\n            const key = `${endpoint}_max_window_bits`;\n            const windowBits = typeof this.params[key] !== \"number\" ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n            this._inflate = zlib.createInflateRaw({\n                ...this._options.zlibInflateOptions,\n                windowBits\n            });\n            this._inflate[kPerMessageDeflate] = this;\n            this._inflate[kTotalLength] = 0;\n            this._inflate[kBuffers] = [];\n            this._inflate.on(\"error\", inflateOnError);\n            this._inflate.on(\"data\", inflateOnData);\n        }\n        this._inflate[kCallback] = callback;\n        this._inflate.write(data);\n        if (fin) this._inflate.write(TRAILER);\n        this._inflate.flush(()=>{\n            const err = this._inflate[kError];\n            if (err) {\n                this._inflate.close();\n                this._inflate = null;\n                callback(err);\n                return;\n            }\n            const data = bufferUtil.concat(this._inflate[kBuffers], this._inflate[kTotalLength]);\n            if (this._inflate._readableState.endEmitted) {\n                this._inflate.close();\n                this._inflate = null;\n            } else {\n                this._inflate[kTotalLength] = 0;\n                this._inflate[kBuffers] = [];\n                if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n                    this._inflate.reset();\n                }\n            }\n            callback(null, data);\n        });\n    }\n    /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */ _compress(data, fin, callback) {\n        const endpoint = this._isServer ? \"server\" : \"client\";\n        if (!this._deflate) {\n            const key = `${endpoint}_max_window_bits`;\n            const windowBits = typeof this.params[key] !== \"number\" ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n            this._deflate = zlib.createDeflateRaw({\n                ...this._options.zlibDeflateOptions,\n                windowBits\n            });\n            this._deflate[kTotalLength] = 0;\n            this._deflate[kBuffers] = [];\n            //\n            // An `'error'` event is emitted, only on Node.js < 10.0.0, if the\n            // `zlib.DeflateRaw` instance is closed while data is being processed.\n            // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong\n            // time due to an abnormal WebSocket closure.\n            //\n            this._deflate.on(\"error\", NOOP);\n            this._deflate.on(\"data\", deflateOnData);\n        }\n        this._deflate[kCallback] = callback;\n        this._deflate.write(data);\n        this._deflate.flush(zlib.Z_SYNC_FLUSH, ()=>{\n            if (!this._deflate) {\n                //\n                // The deflate stream was closed while data was being processed.\n                //\n                return;\n            }\n            let data = bufferUtil.concat(this._deflate[kBuffers], this._deflate[kTotalLength]);\n            if (fin) data = data.slice(0, data.length - 4);\n            //\n            // Ensure that the callback will not be called again in\n            // `PerMessageDeflate#cleanup()`.\n            //\n            this._deflate[kCallback] = null;\n            this._deflate[kTotalLength] = 0;\n            this._deflate[kBuffers] = [];\n            if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n                this._deflate.reset();\n            }\n            callback(null, data);\n        });\n    }\n}\nmodule.exports = PerMessageDeflate;\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */ function deflateOnData(chunk) {\n    this[kBuffers].push(chunk);\n    this[kTotalLength] += chunk.length;\n}\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */ function inflateOnData(chunk) {\n    this[kTotalLength] += chunk.length;\n    if (this[kPerMessageDeflate]._maxPayload < 1 || this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload) {\n        this[kBuffers].push(chunk);\n        return;\n    }\n    this[kError] = new RangeError(\"Max payload size exceeded\");\n    this[kError].code = \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\";\n    this[kError][kStatusCode] = 1009;\n    this.removeListener(\"data\", inflateOnData);\n    this.reset();\n}\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */ function inflateOnError(err) {\n    //\n    // There is no need to call `Zlib#close()` as the handle is automatically\n    // closed when an error is emitted.\n    //\n    this[kPerMessageDeflate]._inflate = null;\n    err[kStatusCode] = 1007;\n    this[kCallback](err);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { Writable } = __webpack_require__(/*! stream */ \"stream\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst { BINARY_TYPES, EMPTY_BUFFER, kStatusCode, kWebSocket } = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst { concat, toArrayBuffer, unmask } = __webpack_require__(/*! ./buffer-util */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst { isValidStatusCode, isValidUTF8 } = __webpack_require__(/*! ./validation */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js\");\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */ class Receiver extends Writable {\n    /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} [binaryType=nodebuffer] The type for binary data\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Boolean} [isServer=false] Specifies whether to operate in client or\n   *     server mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */ constructor(binaryType, extensions, isServer, maxPayload){\n        super();\n        this._binaryType = binaryType || BINARY_TYPES[0];\n        this[kWebSocket] = undefined;\n        this._extensions = extensions || {};\n        this._isServer = !!isServer;\n        this._maxPayload = maxPayload | 0;\n        this._bufferedBytes = 0;\n        this._buffers = [];\n        this._compressed = false;\n        this._payloadLength = 0;\n        this._mask = undefined;\n        this._fragmented = 0;\n        this._masked = false;\n        this._fin = false;\n        this._opcode = 0;\n        this._totalPayloadLength = 0;\n        this._messageLength = 0;\n        this._fragments = [];\n        this._state = GET_INFO;\n        this._loop = false;\n    }\n    /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */ _write(chunk, encoding, cb) {\n        if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n        this._bufferedBytes += chunk.length;\n        this._buffers.push(chunk);\n        this.startLoop(cb);\n    }\n    /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */ consume(n) {\n        this._bufferedBytes -= n;\n        if (n === this._buffers[0].length) return this._buffers.shift();\n        if (n < this._buffers[0].length) {\n            const buf = this._buffers[0];\n            this._buffers[0] = buf.slice(n);\n            return buf.slice(0, n);\n        }\n        const dst = Buffer.allocUnsafe(n);\n        do {\n            const buf = this._buffers[0];\n            const offset = dst.length - n;\n            if (n >= buf.length) {\n                dst.set(this._buffers.shift(), offset);\n            } else {\n                dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n                this._buffers[0] = buf.slice(n);\n            }\n            n -= buf.length;\n        }while (n > 0);\n        return dst;\n    }\n    /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */ startLoop(cb) {\n        let err;\n        this._loop = true;\n        do {\n            switch(this._state){\n                case GET_INFO:\n                    err = this.getInfo();\n                    break;\n                case GET_PAYLOAD_LENGTH_16:\n                    err = this.getPayloadLength16();\n                    break;\n                case GET_PAYLOAD_LENGTH_64:\n                    err = this.getPayloadLength64();\n                    break;\n                case GET_MASK:\n                    this.getMask();\n                    break;\n                case GET_DATA:\n                    err = this.getData(cb);\n                    break;\n                default:\n                    // `INFLATING`\n                    this._loop = false;\n                    return;\n            }\n        }while (this._loop);\n        cb(err);\n    }\n    /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ getInfo() {\n        if (this._bufferedBytes < 2) {\n            this._loop = false;\n            return;\n        }\n        const buf = this.consume(2);\n        if ((buf[0] & 0x30) !== 0x00) {\n            this._loop = false;\n            return error(RangeError, \"RSV2 and RSV3 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_2_3\");\n        }\n        const compressed = (buf[0] & 0x40) === 0x40;\n        if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n            this._loop = false;\n            return error(RangeError, \"RSV1 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_1\");\n        }\n        this._fin = (buf[0] & 0x80) === 0x80;\n        this._opcode = buf[0] & 0x0f;\n        this._payloadLength = buf[1] & 0x7f;\n        if (this._opcode === 0x00) {\n            if (compressed) {\n                this._loop = false;\n                return error(RangeError, \"RSV1 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_1\");\n            }\n            if (!this._fragmented) {\n                this._loop = false;\n                return error(RangeError, \"invalid opcode 0\", true, 1002, \"WS_ERR_INVALID_OPCODE\");\n            }\n            this._opcode = this._fragmented;\n        } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n            if (this._fragmented) {\n                this._loop = false;\n                return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, \"WS_ERR_INVALID_OPCODE\");\n            }\n            this._compressed = compressed;\n        } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n            if (!this._fin) {\n                this._loop = false;\n                return error(RangeError, \"FIN must be set\", true, 1002, \"WS_ERR_EXPECTED_FIN\");\n            }\n            if (compressed) {\n                this._loop = false;\n                return error(RangeError, \"RSV1 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_1\");\n            }\n            if (this._payloadLength > 0x7d) {\n                this._loop = false;\n                return error(RangeError, `invalid payload length ${this._payloadLength}`, true, 1002, \"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH\");\n            }\n        } else {\n            this._loop = false;\n            return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, \"WS_ERR_INVALID_OPCODE\");\n        }\n        if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n        this._masked = (buf[1] & 0x80) === 0x80;\n        if (this._isServer) {\n            if (!this._masked) {\n                this._loop = false;\n                return error(RangeError, \"MASK must be set\", true, 1002, \"WS_ERR_EXPECTED_MASK\");\n            }\n        } else if (this._masked) {\n            this._loop = false;\n            return error(RangeError, \"MASK must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_MASK\");\n        }\n        if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n        else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n        else return this.haveLength();\n    }\n    /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ getPayloadLength16() {\n        if (this._bufferedBytes < 2) {\n            this._loop = false;\n            return;\n        }\n        this._payloadLength = this.consume(2).readUInt16BE(0);\n        return this.haveLength();\n    }\n    /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ getPayloadLength64() {\n        if (this._bufferedBytes < 8) {\n            this._loop = false;\n            return;\n        }\n        const buf = this.consume(8);\n        const num = buf.readUInt32BE(0);\n        //\n        // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n        // if payload length is greater than this number.\n        //\n        if (num > Math.pow(2, 53 - 32) - 1) {\n            this._loop = false;\n            return error(RangeError, \"Unsupported WebSocket frame: payload length > 2^53 - 1\", false, 1009, \"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH\");\n        }\n        this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n        return this.haveLength();\n    }\n    /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ haveLength() {\n        if (this._payloadLength && this._opcode < 0x08) {\n            this._totalPayloadLength += this._payloadLength;\n            if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n                this._loop = false;\n                return error(RangeError, \"Max payload size exceeded\", false, 1009, \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\");\n            }\n        }\n        if (this._masked) this._state = GET_MASK;\n        else this._state = GET_DATA;\n    }\n    /**\n   * Reads mask bytes.\n   *\n   * @private\n   */ getMask() {\n        if (this._bufferedBytes < 4) {\n            this._loop = false;\n            return;\n        }\n        this._mask = this.consume(4);\n        this._state = GET_DATA;\n    }\n    /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */ getData(cb) {\n        let data = EMPTY_BUFFER;\n        if (this._payloadLength) {\n            if (this._bufferedBytes < this._payloadLength) {\n                this._loop = false;\n                return;\n            }\n            data = this.consume(this._payloadLength);\n            if (this._masked) unmask(data, this._mask);\n        }\n        if (this._opcode > 0x07) return this.controlMessage(data);\n        if (this._compressed) {\n            this._state = INFLATING;\n            this.decompress(data, cb);\n            return;\n        }\n        if (data.length) {\n            //\n            // This message is not compressed so its lenght is the sum of the payload\n            // length of all fragments.\n            //\n            this._messageLength = this._totalPayloadLength;\n            this._fragments.push(data);\n        }\n        return this.dataMessage();\n    }\n    /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */ decompress(data, cb) {\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        perMessageDeflate.decompress(data, this._fin, (err, buf)=>{\n            if (err) return cb(err);\n            if (buf.length) {\n                this._messageLength += buf.length;\n                if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n                    return cb(error(RangeError, \"Max payload size exceeded\", false, 1009, \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\"));\n                }\n                this._fragments.push(buf);\n            }\n            const er = this.dataMessage();\n            if (er) return cb(er);\n            this.startLoop(cb);\n        });\n    }\n    /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */ dataMessage() {\n        if (this._fin) {\n            const messageLength = this._messageLength;\n            const fragments = this._fragments;\n            this._totalPayloadLength = 0;\n            this._messageLength = 0;\n            this._fragmented = 0;\n            this._fragments = [];\n            if (this._opcode === 2) {\n                let data;\n                if (this._binaryType === \"nodebuffer\") {\n                    data = concat(fragments, messageLength);\n                } else if (this._binaryType === \"arraybuffer\") {\n                    data = toArrayBuffer(concat(fragments, messageLength));\n                } else {\n                    data = fragments;\n                }\n                this.emit(\"message\", data);\n            } else {\n                const buf = concat(fragments, messageLength);\n                if (!isValidUTF8(buf)) {\n                    this._loop = false;\n                    return error(Error, \"invalid UTF-8 sequence\", true, 1007, \"WS_ERR_INVALID_UTF8\");\n                }\n                this.emit(\"message\", buf.toString());\n            }\n        }\n        this._state = GET_INFO;\n    }\n    /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */ controlMessage(data) {\n        if (this._opcode === 0x08) {\n            this._loop = false;\n            if (data.length === 0) {\n                this.emit(\"conclude\", 1005, \"\");\n                this.end();\n            } else if (data.length === 1) {\n                return error(RangeError, \"invalid payload length 1\", true, 1002, \"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH\");\n            } else {\n                const code = data.readUInt16BE(0);\n                if (!isValidStatusCode(code)) {\n                    return error(RangeError, `invalid status code ${code}`, true, 1002, \"WS_ERR_INVALID_CLOSE_CODE\");\n                }\n                const buf = data.slice(2);\n                if (!isValidUTF8(buf)) {\n                    return error(Error, \"invalid UTF-8 sequence\", true, 1007, \"WS_ERR_INVALID_UTF8\");\n                }\n                this.emit(\"conclude\", code, buf.toString());\n                this.end();\n            }\n        } else if (this._opcode === 0x09) {\n            this.emit(\"ping\", data);\n        } else {\n            this.emit(\"pong\", data);\n        }\n        this._state = GET_INFO;\n    }\n}\nmodule.exports = Receiver;\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */ function error(ErrorCtor, message, prefix, statusCode, errorCode) {\n    const err = new ErrorCtor(prefix ? `Invalid WebSocket frame: ${message}` : message);\n    Error.captureStackTrace(err, error);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */ \nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { randomFillSync } = __webpack_require__(/*! crypto */ \"crypto\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst { EMPTY_BUFFER } = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst { isValidStatusCode } = __webpack_require__(/*! ./validation */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js\");\nconst { mask: applyMask, toBuffer } = __webpack_require__(/*! ./buffer-util */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst mask = Buffer.alloc(4);\n/**\n * HyBi Sender implementation.\n */ class Sender {\n    /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   */ constructor(socket, extensions){\n        this._extensions = extensions || {};\n        this._socket = socket;\n        this._firstFragment = true;\n        this._compress = false;\n        this._bufferedBytes = 0;\n        this._deflating = false;\n        this._queue = [];\n    }\n    /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */ static frame(data, options) {\n        const merge = options.mask && options.readOnly;\n        let offset = options.mask ? 6 : 2;\n        let payloadLength = data.length;\n        if (data.length >= 65536) {\n            offset += 8;\n            payloadLength = 127;\n        } else if (data.length > 125) {\n            offset += 2;\n            payloadLength = 126;\n        }\n        const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n        target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n        if (options.rsv1) target[0] |= 0x40;\n        target[1] = payloadLength;\n        if (payloadLength === 126) {\n            target.writeUInt16BE(data.length, 2);\n        } else if (payloadLength === 127) {\n            target.writeUInt32BE(0, 2);\n            target.writeUInt32BE(data.length, 6);\n        }\n        if (!options.mask) return [\n            target,\n            data\n        ];\n        randomFillSync(mask, 0, 4);\n        target[1] |= 0x80;\n        target[offset - 4] = mask[0];\n        target[offset - 3] = mask[1];\n        target[offset - 2] = mask[2];\n        target[offset - 1] = mask[3];\n        if (merge) {\n            applyMask(data, mask, target, offset, data.length);\n            return [\n                target\n            ];\n        }\n        applyMask(data, mask, data, 0, data.length);\n        return [\n            target,\n            data\n        ];\n    }\n    /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {String} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */ close(code, data, mask, cb) {\n        let buf;\n        if (code === undefined) {\n            buf = EMPTY_BUFFER;\n        } else if (typeof code !== \"number\" || !isValidStatusCode(code)) {\n            throw new TypeError(\"First argument must be a valid error code number\");\n        } else if (data === undefined || data === \"\") {\n            buf = Buffer.allocUnsafe(2);\n            buf.writeUInt16BE(code, 0);\n        } else {\n            const length = Buffer.byteLength(data);\n            if (length > 123) {\n                throw new RangeError(\"The message must not be greater than 123 bytes\");\n            }\n            buf = Buffer.allocUnsafe(2 + length);\n            buf.writeUInt16BE(code, 0);\n            buf.write(data, 2);\n        }\n        if (this._deflating) {\n            this.enqueue([\n                this.doClose,\n                buf,\n                mask,\n                cb\n            ]);\n        } else {\n            this.doClose(buf, mask, cb);\n        }\n    }\n    /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @private\n   */ doClose(data, mask, cb) {\n        this.sendFrame(Sender.frame(data, {\n            fin: true,\n            rsv1: false,\n            opcode: 0x08,\n            mask,\n            readOnly: false\n        }), cb);\n    }\n    /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */ ping(data, mask, cb) {\n        const buf = toBuffer(data);\n        if (buf.length > 125) {\n            throw new RangeError(\"The data size must not be greater than 125 bytes\");\n        }\n        if (this._deflating) {\n            this.enqueue([\n                this.doPing,\n                buf,\n                mask,\n                toBuffer.readOnly,\n                cb\n            ]);\n        } else {\n            this.doPing(buf, mask, toBuffer.readOnly, cb);\n        }\n    }\n    /**\n   * Frames and sends a ping message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified\n   * @param {Function} [cb] Callback\n   * @private\n   */ doPing(data, mask, readOnly, cb) {\n        this.sendFrame(Sender.frame(data, {\n            fin: true,\n            rsv1: false,\n            opcode: 0x09,\n            mask,\n            readOnly\n        }), cb);\n    }\n    /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */ pong(data, mask, cb) {\n        const buf = toBuffer(data);\n        if (buf.length > 125) {\n            throw new RangeError(\"The data size must not be greater than 125 bytes\");\n        }\n        if (this._deflating) {\n            this.enqueue([\n                this.doPong,\n                buf,\n                mask,\n                toBuffer.readOnly,\n                cb\n            ]);\n        } else {\n            this.doPong(buf, mask, toBuffer.readOnly, cb);\n        }\n    }\n    /**\n   * Frames and sends a pong message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified\n   * @param {Function} [cb] Callback\n   * @private\n   */ doPong(data, mask, readOnly, cb) {\n        this.sendFrame(Sender.frame(data, {\n            fin: true,\n            rsv1: false,\n            opcode: 0x0a,\n            mask,\n            readOnly\n        }), cb);\n    }\n    /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */ send(data, options, cb) {\n        const buf = toBuffer(data);\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        let opcode = options.binary ? 2 : 1;\n        let rsv1 = options.compress;\n        if (this._firstFragment) {\n            this._firstFragment = false;\n            if (rsv1 && perMessageDeflate) {\n                rsv1 = buf.length >= perMessageDeflate._threshold;\n            }\n            this._compress = rsv1;\n        } else {\n            rsv1 = false;\n            opcode = 0;\n        }\n        if (options.fin) this._firstFragment = true;\n        if (perMessageDeflate) {\n            const opts = {\n                fin: options.fin,\n                rsv1,\n                opcode,\n                mask: options.mask,\n                readOnly: toBuffer.readOnly\n            };\n            if (this._deflating) {\n                this.enqueue([\n                    this.dispatch,\n                    buf,\n                    this._compress,\n                    opts,\n                    cb\n                ]);\n            } else {\n                this.dispatch(buf, this._compress, opts, cb);\n            }\n        } else {\n            this.sendFrame(Sender.frame(buf, {\n                fin: options.fin,\n                rsv1: false,\n                opcode,\n                mask: options.mask,\n                readOnly: toBuffer.readOnly\n            }), cb);\n        }\n    }\n    /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */ dispatch(data, compress, options, cb) {\n        if (!compress) {\n            this.sendFrame(Sender.frame(data, options), cb);\n            return;\n        }\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        this._bufferedBytes += data.length;\n        this._deflating = true;\n        perMessageDeflate.compress(data, options.fin, (_, buf)=>{\n            if (this._socket.destroyed) {\n                const err = new Error(\"The socket was closed while data was being compressed\");\n                if (typeof cb === \"function\") cb(err);\n                for(let i = 0; i < this._queue.length; i++){\n                    const callback = this._queue[i][4];\n                    if (typeof callback === \"function\") callback(err);\n                }\n                return;\n            }\n            this._bufferedBytes -= data.length;\n            this._deflating = false;\n            options.readOnly = false;\n            this.sendFrame(Sender.frame(buf, options), cb);\n            this.dequeue();\n        });\n    }\n    /**\n   * Executes queued send operations.\n   *\n   * @private\n   */ dequeue() {\n        while(!this._deflating && this._queue.length){\n            const params = this._queue.shift();\n            this._bufferedBytes -= params[1].length;\n            Reflect.apply(params[0], this, params.slice(1));\n        }\n    }\n    /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */ enqueue(params) {\n        this._bufferedBytes += params[1].length;\n        this._queue.push(params);\n    }\n    /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */ sendFrame(list, cb) {\n        if (list.length === 2) {\n            this._socket.cork();\n            this._socket.write(list[0]);\n            this._socket.write(list[1], cb);\n            this._socket.uncork();\n        } else {\n            this._socket.write(list[0], cb);\n        }\n    }\n}\nmodule.exports = Sender;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvc2VuZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBLDBFQUEwRSxHQUUxRTtBQUVBLE1BQU1BLE1BQU1DLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU1DLE1BQU1ELG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU0sRUFBRUUsY0FBYyxFQUFFLEdBQUdGLG1CQUFPQSxDQUFDO0FBRW5DLE1BQU1HLG9CQUFvQkgsbUJBQU9BLENBQUM7QUFDbEMsTUFBTSxFQUFFSSxZQUFZLEVBQUUsR0FBR0osbUJBQU9BLENBQUM7QUFDakMsTUFBTSxFQUFFSyxpQkFBaUIsRUFBRSxHQUFHTCxtQkFBT0EsQ0FBQztBQUN0QyxNQUFNLEVBQUVNLE1BQU1DLFNBQVMsRUFBRUMsUUFBUSxFQUFFLEdBQUdSLG1CQUFPQSxDQUFDO0FBRTlDLE1BQU1NLE9BQU9HLE9BQU9DLEtBQUssQ0FBQztBQUUxQjs7Q0FFQyxHQUNELE1BQU1DO0lBQ0o7Ozs7O0dBS0MsR0FDREMsWUFBWUMsTUFBTSxFQUFFQyxVQUFVLENBQUU7UUFDOUIsSUFBSSxDQUFDQyxXQUFXLEdBQUdELGNBQWMsQ0FBQztRQUNsQyxJQUFJLENBQUNFLE9BQU8sR0FBR0g7UUFFZixJQUFJLENBQUNJLGNBQWMsR0FBRztRQUN0QixJQUFJLENBQUNDLFNBQVMsR0FBRztRQUVqQixJQUFJLENBQUNDLGNBQWMsR0FBRztRQUN0QixJQUFJLENBQUNDLFVBQVUsR0FBRztRQUNsQixJQUFJLENBQUNDLE1BQU0sR0FBRyxFQUFFO0lBQ2xCO0lBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkMsR0FDRCxPQUFPQyxNQUFNQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUMxQixNQUFNQyxRQUFRRCxRQUFRbEIsSUFBSSxJQUFJa0IsUUFBUUUsUUFBUTtRQUM5QyxJQUFJQyxTQUFTSCxRQUFRbEIsSUFBSSxHQUFHLElBQUk7UUFD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QUksQ0FBQzNELE9BQU8sQ0FBQzZCLEtBQUssQ0FBQzZCLElBQUksQ0FBQyxFQUFFO1lBQzFCLElBQUksQ0FBQzFELE9BQU8sQ0FBQzZCLEtBQUssQ0FBQzZCLElBQUksQ0FBQyxFQUFFLEVBQUVuQztZQUM1QixJQUFJLENBQUN2QixPQUFPLENBQUM0RCxNQUFNO1FBQ3JCLE9BQU87WUFDTCxJQUFJLENBQUM1RCxPQUFPLENBQUM2QixLQUFLLENBQUM2QixJQUFJLENBQUMsRUFBRSxFQUFFbkM7UUFDOUI7SUFDRjtBQUNGO0FBRUFzQyxPQUFPQyxPQUFPLEdBQUduRSIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvc2VuZGVyLmpzP2M0ZTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLXVudXNlZC12YXJzOiBbXCJlcnJvclwiLCB7IFwidmFyc0lnbm9yZVBhdHRlcm5cIjogXCJebmV0fHRscyRcIiB9XSAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IG5ldCA9IHJlcXVpcmUoJ25ldCcpO1xuY29uc3QgdGxzID0gcmVxdWlyZSgndGxzJyk7XG5jb25zdCB7IHJhbmRvbUZpbGxTeW5jIH0gPSByZXF1aXJlKCdjcnlwdG8nKTtcblxuY29uc3QgUGVyTWVzc2FnZURlZmxhdGUgPSByZXF1aXJlKCcuL3Blcm1lc3NhZ2UtZGVmbGF0ZScpO1xuY29uc3QgeyBFTVBUWV9CVUZGRVIgfSA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJyk7XG5jb25zdCB7IGlzVmFsaWRTdGF0dXNDb2RlIH0gPSByZXF1aXJlKCcuL3ZhbGlkYXRpb24nKTtcbmNvbnN0IHsgbWFzazogYXBwbHlNYXNrLCB0b0J1ZmZlciB9ID0gcmVxdWlyZSgnLi9idWZmZXItdXRpbCcpO1xuXG5jb25zdCBtYXNrID0gQnVmZmVyLmFsbG9jKDQpO1xuXG4vKipcbiAqIEh5QmkgU2VuZGVyIGltcGxlbWVudGF0aW9uLlxuICovXG5jbGFzcyBTZW5kZXIge1xuICAvKipcbiAgICogQ3JlYXRlcyBhIFNlbmRlciBpbnN0YW5jZS5cbiAgICpcbiAgICogQHBhcmFtIHsobmV0LlNvY2tldHx0bHMuU29ja2V0KX0gc29ja2V0IFRoZSBjb25uZWN0aW9uIHNvY2tldFxuICAgKiBAcGFyYW0ge09iamVjdH0gW2V4dGVuc2lvbnNdIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBuZWdvdGlhdGVkIGV4dGVuc2lvbnNcbiAgICovXG4gIGNvbnN0cnVjdG9yKHNvY2tldCwgZXh0ZW5zaW9ucykge1xuICAgIHRoaXMuX2V4dGVuc2lvbnMgPSBleHRlbnNpb25zIHx8IHt9O1xuICAgIHRoaXMuX3NvY2tldCA9IHNvY2tldDtcblxuICAgIHRoaXMuX2ZpcnN0RnJhZ21lbnQgPSB0cnVlO1xuICAgIHRoaXMuX2NvbXByZXNzID0gZmFsc2U7XG5cbiAgICB0aGlzLl9idWZmZXJlZEJ5dGVzID0gMDtcbiAgICB0aGlzLl9kZWZsYXRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl9xdWV1ZSA9IFtdO1xuICB9XG5cbiAgLyoqXG4gICAqIEZyYW1lcyBhIHBpZWNlIG9mIGRhdGEgYWNjb3JkaW5nIHRvIHRoZSBIeUJpIFdlYlNvY2tldCBwcm90b2NvbC5cbiAgICpcbiAgICogQHBhcmFtIHtCdWZmZXJ9IGRhdGEgVGhlIGRhdGEgdG8gZnJhbWVcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgT3B0aW9ucyBvYmplY3RcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMub3Bjb2RlIFRoZSBvcGNvZGVcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5yZWFkT25seT1mYWxzZV0gU3BlY2lmaWVzIHdoZXRoZXIgYGRhdGFgIGNhbiBiZVxuICAgKiAgICAgbW9kaWZpZWRcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5maW49ZmFsc2VdIFNwZWNpZmllcyB3aGV0aGVyIG9yIG5vdCB0byBzZXQgdGhlXG4gICAqICAgICBGSU4gYml0XG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMubWFzaz1mYWxzZV0gU3BlY2lmaWVzIHdoZXRoZXIgb3Igbm90IHRvIG1hc2tcbiAgICogICAgIGBkYXRhYFxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnJzdjE9ZmFsc2VdIFNwZWNpZmllcyB3aGV0aGVyIG9yIG5vdCB0byBzZXQgdGhlXG4gICAqICAgICBSU1YxIGJpdFxuICAgKiBAcmV0dXJuIHtCdWZmZXJbXX0gVGhlIGZyYW1lZCBkYXRhIGFzIGEgbGlzdCBvZiBgQnVmZmVyYCBpbnN0YW5jZXNcbiAgICogQHB1YmxpY1xuICAgKi9cbiAgc3RhdGljIGZyYW1lKGRhdGEsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBtZXJnZSA9IG9wdGlvbnMubWFzayAmJiBvcHRpb25zLnJlYWRPbmx5O1xuICAgIGxldCBvZmZzZXQgPSBvcHRpb25zLm1hc2sgPyA2IDogMjtcbiAgICBsZXQgcGF5bG9hZExlbmd0aCA9IGRhdGEubGVuZ3RoO1xuXG4gICAgaWYgKGRhdGEubGVuZ3RoID49IDY1NTM2KSB7XG4gICAgICBvZmZzZXQgKz0gODtcbiAgICAgIHBheWxvYWRMZW5ndGggPSAxMjc7XG4gICAgfSBlbHNlIGlmIChkYXRhLmxlbmd0aCA+IDEyNSkge1xuICAgICAgb2Zmc2V0ICs9IDI7XG4gICAgICBwYXlsb2FkTGVuZ3RoID0gMTI2O1xuICAgIH1cblxuICAgIGNvbnN0IHRhcmdldCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShtZXJnZSA/IGRhdGEubGVuZ3RoICsgb2Zmc2V0IDogb2Zmc2V0KTtcblxuICAgIHRhcmdldFswXSA9IG9wdGlvbnMuZmluID8gb3B0aW9ucy5vcGNvZGUgfCAweDgwIDogb3B0aW9ucy5vcGNvZGU7XG4gICAgaWYgKG9wdGlvbnMucnN2MSkgdGFyZ2V0WzBdIHw9IDB4NDA7XG5cbiAgICB0YXJnZXRbMV0gPSBwYXlsb2FkTGVuZ3RoO1xuXG4gICAgaWYgKHBheWxvYWRMZW5ndGggPT09IDEyNikge1xuICAgICAgdGFyZ2V0LndyaXRlVUludDE2QkUoZGF0YS5sZW5ndGgsIDIpO1xuICAgIH0gZWxzZSBpZiAocGF5bG9hZExlbmd0aCA9PT0gMTI3KSB7XG4gICAgICB0YXJnZXQud3JpdGVVSW50MzJCRSgwLCAyKTtcbiAgICAgIHRhcmdldC53cml0ZVVJbnQzMkJFKGRhdGEubGVuZ3RoLCA2KTtcbiAgICB9XG5cbiAgICBpZiAoIW9wdGlvbnMubWFzaykgcmV0dXJuIFt0YXJnZXQsIGRhdGFdO1xuXG4gICAgcmFuZG9tRmlsbFN5bmMobWFzaywgMCwgNCk7XG5cbiAgICB0YXJnZXRbMV0gfD0gMHg4MDtcbiAgICB0YXJnZXRbb2Zmc2V0IC0gNF0gPSBtYXNrWzBdO1xuICAgIHRhcmdldFtvZmZzZXQgLSAzXSA9IG1hc2tbMV07XG4gICAgdGFyZ2V0W29mZnNldCAtIDJdID0gbWFza1syXTtcbiAgICB0YXJnZXRbb2Zmc2V0IC0gMV0gPSBtYXNrWzNdO1xuXG4gICAgaWYgKG1lcmdlKSB7XG4gICAgICBhcHBseU1hc2soZGF0YSwgbWFzaywgdGFyZ2V0LCBvZmZzZXQsIGRhdGEubGVuZ3RoKTtcbiAgICAgIHJldHVybiBbdGFyZ2V0XTtcbiAgICB9XG5cbiAgICBhcHBseU1hc2soZGF0YSwgbWFzaywgZGF0YSwgMCwgZGF0YS5sZW5ndGgpO1xuICAgIHJldHVybiBbdGFyZ2V0LCBkYXRhXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kcyBhIGNsb3NlIG1lc3NhZ2UgdG8gdGhlIG90aGVyIHBlZXIuXG4gICAqXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBbY29kZV0gVGhlIHN0YXR1cyBjb2RlIGNvbXBvbmVudCBvZiB0aGUgYm9keVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW2RhdGFdIFRoZSBtZXNzYWdlIGNvbXBvbmVudCBvZiB0aGUgYm9keVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFttYXNrPWZhbHNlXSBTcGVjaWZpZXMgd2hldGhlciBvciBub3QgdG8gbWFzayB0aGUgbWVzc2FnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2JdIENhbGxiYWNrXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIGNsb3NlKGNvZGUsIGRhdGEsIG1hc2ssIGNiKSB7XG4gICAgbGV0IGJ1ZjtcblxuICAgIGlmIChjb2RlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGJ1ZiA9IEVNUFRZX0JVRkZFUjtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb2RlICE9PSAnbnVtYmVyJyB8fCAhaXNWYWxpZFN0YXR1c0NvZGUoY29kZSkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSB2YWxpZCBlcnJvciBjb2RlIG51bWJlcicpO1xuICAgIH0gZWxzZSBpZiAoZGF0YSA9PT0gdW5kZWZpbmVkIHx8IGRhdGEgPT09ICcnKSB7XG4gICAgICBidWYgPSBCdWZmZXIuYWxsb2NVbnNhZmUoMik7XG4gICAgICBidWYud3JpdGVVSW50MTZCRShjb2RlLCAwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgbGVuZ3RoID0gQnVmZmVyLmJ5dGVMZW5ndGgoZGF0YSk7XG5cbiAgICAgIGlmIChsZW5ndGggPiAxMjMpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSBtZXNzYWdlIG11c3Qgbm90IGJlIGdyZWF0ZXIgdGhhbiAxMjMgYnl0ZXMnKTtcbiAgICAgIH1cblxuICAgICAgYnVmID0gQnVmZmVyLmFsbG9jVW5zYWZlKDIgKyBsZW5ndGgpO1xuICAgICAgYnVmLndyaXRlVUludDE2QkUoY29kZSwgMCk7XG4gICAgICBidWYud3JpdGUoZGF0YSwgMik7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2RlZmxhdGluZykge1xuICAgICAgdGhpcy5lbnF1ZXVlKFt0aGlzLmRvQ2xvc2UsIGJ1ZiwgbWFzaywgY2JdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kb0Nsb3NlKGJ1ZiwgbWFzaywgY2IpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBGcmFtZXMgYW5kIHNlbmRzIGEgY2xvc2UgbWVzc2FnZS5cbiAgICpcbiAgICogQHBhcmFtIHtCdWZmZXJ9IGRhdGEgVGhlIG1lc3NhZ2UgdG8gc2VuZFxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFttYXNrPWZhbHNlXSBTcGVjaWZpZXMgd2hldGhlciBvciBub3QgdG8gbWFzayBgZGF0YWBcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NiXSBDYWxsYmFja1xuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZG9DbG9zZShkYXRhLCBtYXNrLCBjYikge1xuICAgIHRoaXMuc2VuZEZyYW1lKFxuICAgICAgU2VuZGVyLmZyYW1lKGRhdGEsIHtcbiAgICAgICAgZmluOiB0cnVlLFxuICAgICAgICByc3YxOiBmYWxzZSxcbiAgICAgICAgb3Bjb2RlOiAweDA4LFxuICAgICAgICBtYXNrLFxuICAgICAgICByZWFkT25seTogZmFsc2VcbiAgICAgIH0pLFxuICAgICAgY2JcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIFNlbmRzIGEgcGluZyBtZXNzYWdlIHRvIHRoZSBvdGhlciBwZWVyLlxuICAgKlxuICAgKiBAcGFyYW0geyp9IGRhdGEgVGhlIG1lc3NhZ2UgdG8gc2VuZFxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFttYXNrPWZhbHNlXSBTcGVjaWZpZXMgd2hldGhlciBvciBub3QgdG8gbWFzayBgZGF0YWBcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NiXSBDYWxsYmFja1xuICAgKiBAcHVibGljXG4gICAqL1xuICBwaW5nKGRhdGEsIG1hc2ssIGNiKSB7XG4gICAgY29uc3QgYnVmID0gdG9CdWZmZXIoZGF0YSk7XG5cbiAgICBpZiAoYnVmLmxlbmd0aCA+IDEyNSkge1xuICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSBkYXRhIHNpemUgbXVzdCBub3QgYmUgZ3JlYXRlciB0aGFuIDEyNSBieXRlcycpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9kZWZsYXRpbmcpIHtcbiAgICAgIHRoaXMuZW5xdWV1ZShbdGhpcy5kb1BpbmcsIGJ1ZiwgbWFzaywgdG9CdWZmZXIucmVhZE9ubHksIGNiXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZG9QaW5nKGJ1ZiwgbWFzaywgdG9CdWZmZXIucmVhZE9ubHksIGNiKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRnJhbWVzIGFuZCBzZW5kcyBhIHBpbmcgbWVzc2FnZS5cbiAgICpcbiAgICogQHBhcmFtIHtCdWZmZXJ9IGRhdGEgVGhlIG1lc3NhZ2UgdG8gc2VuZFxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFttYXNrPWZhbHNlXSBTcGVjaWZpZXMgd2hldGhlciBvciBub3QgdG8gbWFzayBgZGF0YWBcbiAgICogQHBhcmFtIHtCb29sZWFufSBbcmVhZE9ubHk9ZmFsc2VdIFNwZWNpZmllcyB3aGV0aGVyIGBkYXRhYCBjYW4gYmUgbW9kaWZpZWRcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NiXSBDYWxsYmFja1xuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZG9QaW5nKGRhdGEsIG1hc2ssIHJlYWRPbmx5LCBjYikge1xuICAgIHRoaXMuc2VuZEZyYW1lKFxuICAgICAgU2VuZGVyLmZyYW1lKGRhdGEsIHtcbiAgICAgICAgZmluOiB0cnVlLFxuICAgICAgICByc3YxOiBmYWxzZSxcbiAgICAgICAgb3Bjb2RlOiAweDA5LFxuICAgICAgICBtYXNrLFxuICAgICAgICByZWFkT25seVxuICAgICAgfSksXG4gICAgICBjYlxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogU2VuZHMgYSBwb25nIG1lc3NhZ2UgdG8gdGhlIG90aGVyIHBlZXIuXG4gICAqXG4gICAqIEBwYXJhbSB7Kn0gZGF0YSBUaGUgbWVzc2FnZSB0byBzZW5kXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW21hc2s9ZmFsc2VdIFNwZWNpZmllcyB3aGV0aGVyIG9yIG5vdCB0byBtYXNrIGBkYXRhYFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2JdIENhbGxiYWNrXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIHBvbmcoZGF0YSwgbWFzaywgY2IpIHtcbiAgICBjb25zdCBidWYgPSB0b0J1ZmZlcihkYXRhKTtcblxuICAgIGlmIChidWYubGVuZ3RoID4gMTI1KSB7XG4gICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIGRhdGEgc2l6ZSBtdXN0IG5vdCBiZSBncmVhdGVyIHRoYW4gMTI1IGJ5dGVzJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2RlZmxhdGluZykge1xuICAgICAgdGhpcy5lbnF1ZXVlKFt0aGlzLmRvUG9uZywgYnVmLCBtYXNrLCB0b0J1ZmZlci5yZWFkT25seSwgY2JdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kb1BvbmcoYnVmLCBtYXNrLCB0b0J1ZmZlci5yZWFkT25seSwgY2IpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBGcmFtZXMgYW5kIHNlbmRzIGEgcG9uZyBtZXNzYWdlLlxuICAgKlxuICAgKiBAcGFyYW0ge0J1ZmZlcn0gZGF0YSBUaGUgbWVzc2FnZSB0byBzZW5kXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW21hc2s9ZmFsc2VdIFNwZWNpZmllcyB3aGV0aGVyIG9yIG5vdCB0byBtYXNrIGBkYXRhYFxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFtyZWFkT25seT1mYWxzZV0gU3BlY2lmaWVzIHdoZXRoZXIgYGRhdGFgIGNhbiBiZSBtb2RpZmllZFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2JdIENhbGxiYWNrXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBkb1BvbmcoZGF0YSwgbWFzaywgcmVhZE9ubHksIGNiKSB7XG4gICAgdGhpcy5zZW5kRnJhbWUoXG4gICAgICBTZW5kZXIuZnJhbWUoZGF0YSwge1xuICAgICAgICBmaW46IHRydWUsXG4gICAgICAgIHJzdjE6IGZhbHNlLFxuICAgICAgICBvcGNvZGU6IDB4MGEsXG4gICAgICAgIG1hc2ssXG4gICAgICAgIHJlYWRPbmx5XG4gICAgICB9KSxcbiAgICAgIGNiXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kcyBhIGRhdGEgbWVzc2FnZSB0byB0aGUgb3RoZXIgcGVlci5cbiAgICpcbiAgICogQHBhcmFtIHsqfSBkYXRhIFRoZSBtZXNzYWdlIHRvIHNlbmRcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgT3B0aW9ucyBvYmplY3RcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5jb21wcmVzcz1mYWxzZV0gU3BlY2lmaWVzIHdoZXRoZXIgb3Igbm90IHRvXG4gICAqICAgICBjb21wcmVzcyBgZGF0YWBcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5iaW5hcnk9ZmFsc2VdIFNwZWNpZmllcyB3aGV0aGVyIGBkYXRhYCBpcyBiaW5hcnlcbiAgICogICAgIG9yIHRleHRcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5maW49ZmFsc2VdIFNwZWNpZmllcyB3aGV0aGVyIHRoZSBmcmFnbWVudCBpcyB0aGVcbiAgICogICAgIGxhc3Qgb25lXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMubWFzaz1mYWxzZV0gU3BlY2lmaWVzIHdoZXRoZXIgb3Igbm90IHRvIG1hc2tcbiAgICogICAgIGBkYXRhYFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2JdIENhbGxiYWNrXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIHNlbmQoZGF0YSwgb3B0aW9ucywgY2IpIHtcbiAgICBjb25zdCBidWYgPSB0b0J1ZmZlcihkYXRhKTtcbiAgICBjb25zdCBwZXJNZXNzYWdlRGVmbGF0ZSA9IHRoaXMuX2V4dGVuc2lvbnNbUGVyTWVzc2FnZURlZmxhdGUuZXh0ZW5zaW9uTmFtZV07XG4gICAgbGV0IG9wY29kZSA9IG9wdGlvbnMuYmluYXJ5ID8gMiA6IDE7XG4gICAgbGV0IHJzdjEgPSBvcHRpb25zLmNvbXByZXNzO1xuXG4gICAgaWYgKHRoaXMuX2ZpcnN0RnJhZ21lbnQpIHtcbiAgICAgIHRoaXMuX2ZpcnN0RnJhZ21lbnQgPSBmYWxzZTtcbiAgICAgIGlmIChyc3YxICYmIHBlck1lc3NhZ2VEZWZsYXRlKSB7XG4gICAgICAgIHJzdjEgPSBidWYubGVuZ3RoID49IHBlck1lc3NhZ2VEZWZsYXRlLl90aHJlc2hvbGQ7XG4gICAgICB9XG4gICAgICB0aGlzLl9jb21wcmVzcyA9IHJzdjE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJzdjEgPSBmYWxzZTtcbiAgICAgIG9wY29kZSA9IDA7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuZmluKSB0aGlzLl9maXJzdEZyYWdtZW50ID0gdHJ1ZTtcblxuICAgIGlmIChwZXJNZXNzYWdlRGVmbGF0ZSkge1xuICAgICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgICAgZmluOiBvcHRpb25zLmZpbixcbiAgICAgICAgcnN2MSxcbiAgICAgICAgb3Bjb2RlLFxuICAgICAgICBtYXNrOiBvcHRpb25zLm1hc2ssXG4gICAgICAgIHJlYWRPbmx5OiB0b0J1ZmZlci5yZWFkT25seVxuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMuX2RlZmxhdGluZykge1xuICAgICAgICB0aGlzLmVucXVldWUoW3RoaXMuZGlzcGF0Y2gsIGJ1ZiwgdGhpcy5fY29tcHJlc3MsIG9wdHMsIGNiXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmRpc3BhdGNoKGJ1ZiwgdGhpcy5fY29tcHJlc3MsIG9wdHMsIGNiKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZW5kRnJhbWUoXG4gICAgICAgIFNlbmRlci5mcmFtZShidWYsIHtcbiAgICAgICAgICBmaW46IG9wdGlvbnMuZmluLFxuICAgICAgICAgIHJzdjE6IGZhbHNlLFxuICAgICAgICAgIG9wY29kZSxcbiAgICAgICAgICBtYXNrOiBvcHRpb25zLm1hc2ssXG4gICAgICAgICAgcmVhZE9ubHk6IHRvQnVmZmVyLnJlYWRPbmx5XG4gICAgICAgIH0pLFxuICAgICAgICBjYlxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRGlzcGF0Y2hlcyBhIGRhdGEgbWVzc2FnZS5cbiAgICpcbiAgICogQHBhcmFtIHtCdWZmZXJ9IGRhdGEgVGhlIG1lc3NhZ2UgdG8gc2VuZFxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFtjb21wcmVzcz1mYWxzZV0gU3BlY2lmaWVzIHdoZXRoZXIgb3Igbm90IHRvIGNvbXByZXNzXG4gICAqICAgICBgZGF0YWBcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgT3B0aW9ucyBvYmplY3RcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMub3Bjb2RlIFRoZSBvcGNvZGVcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5yZWFkT25seT1mYWxzZV0gU3BlY2lmaWVzIHdoZXRoZXIgYGRhdGFgIGNhbiBiZVxuICAgKiAgICAgbW9kaWZpZWRcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5maW49ZmFsc2VdIFNwZWNpZmllcyB3aGV0aGVyIG9yIG5vdCB0byBzZXQgdGhlXG4gICAqICAgICBGSU4gYml0XG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMubWFzaz1mYWxzZV0gU3BlY2lmaWVzIHdoZXRoZXIgb3Igbm90IHRvIG1hc2tcbiAgICogICAgIGBkYXRhYFxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnJzdjE9ZmFsc2VdIFNwZWNpZmllcyB3aGV0aGVyIG9yIG5vdCB0byBzZXQgdGhlXG4gICAqICAgICBSU1YxIGJpdFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2JdIENhbGxiYWNrXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBkaXNwYXRjaChkYXRhLCBjb21wcmVzcywgb3B0aW9ucywgY2IpIHtcbiAgICBpZiAoIWNvbXByZXNzKSB7XG4gICAgICB0aGlzLnNlbmRGcmFtZShTZW5kZXIuZnJhbWUoZGF0YSwgb3B0aW9ucyksIGNiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBwZXJNZXNzYWdlRGVmbGF0ZSA9IHRoaXMuX2V4dGVuc2lvbnNbUGVyTWVzc2FnZURlZmxhdGUuZXh0ZW5zaW9uTmFtZV07XG5cbiAgICB0aGlzLl9idWZmZXJlZEJ5dGVzICs9IGRhdGEubGVuZ3RoO1xuICAgIHRoaXMuX2RlZmxhdGluZyA9IHRydWU7XG4gICAgcGVyTWVzc2FnZURlZmxhdGUuY29tcHJlc3MoZGF0YSwgb3B0aW9ucy5maW4sIChfLCBidWYpID0+IHtcbiAgICAgIGlmICh0aGlzLl9zb2NrZXQuZGVzdHJveWVkKSB7XG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcihcbiAgICAgICAgICAnVGhlIHNvY2tldCB3YXMgY2xvc2VkIHdoaWxlIGRhdGEgd2FzIGJlaW5nIGNvbXByZXNzZWQnXG4gICAgICAgICk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykgY2IoZXJyKTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3F1ZXVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSB0aGlzLl9xdWV1ZVtpXVs0XTtcblxuICAgICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIGNhbGxiYWNrKGVycik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2J1ZmZlcmVkQnl0ZXMgLT0gZGF0YS5sZW5ndGg7XG4gICAgICB0aGlzLl9kZWZsYXRpbmcgPSBmYWxzZTtcbiAgICAgIG9wdGlvbnMucmVhZE9ubHkgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2VuZEZyYW1lKFNlbmRlci5mcmFtZShidWYsIG9wdGlvbnMpLCBjYik7XG4gICAgICB0aGlzLmRlcXVldWUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeGVjdXRlcyBxdWV1ZWQgc2VuZCBvcGVyYXRpb25zLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZGVxdWV1ZSgpIHtcbiAgICB3aGlsZSAoIXRoaXMuX2RlZmxhdGluZyAmJiB0aGlzLl9xdWV1ZS5sZW5ndGgpIHtcbiAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuX3F1ZXVlLnNoaWZ0KCk7XG5cbiAgICAgIHRoaXMuX2J1ZmZlcmVkQnl0ZXMgLT0gcGFyYW1zWzFdLmxlbmd0aDtcbiAgICAgIFJlZmxlY3QuYXBwbHkocGFyYW1zWzBdLCB0aGlzLCBwYXJhbXMuc2xpY2UoMSkpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBFbnF1ZXVlcyBhIHNlbmQgb3BlcmF0aW9uLlxuICAgKlxuICAgKiBAcGFyYW0ge0FycmF5fSBwYXJhbXMgU2VuZCBvcGVyYXRpb24gcGFyYW1ldGVycy5cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGVucXVldWUocGFyYW1zKSB7XG4gICAgdGhpcy5fYnVmZmVyZWRCeXRlcyArPSBwYXJhbXNbMV0ubGVuZ3RoO1xuICAgIHRoaXMuX3F1ZXVlLnB1c2gocGFyYW1zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kcyBhIGZyYW1lLlxuICAgKlxuICAgKiBAcGFyYW0ge0J1ZmZlcltdfSBsaXN0IFRoZSBmcmFtZSB0byBzZW5kXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYl0gQ2FsbGJhY2tcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHNlbmRGcmFtZShsaXN0LCBjYikge1xuICAgIGlmIChsaXN0Lmxlbmd0aCA9PT0gMikge1xuICAgICAgdGhpcy5fc29ja2V0LmNvcmsoKTtcbiAgICAgIHRoaXMuX3NvY2tldC53cml0ZShsaXN0WzBdKTtcbiAgICAgIHRoaXMuX3NvY2tldC53cml0ZShsaXN0WzFdLCBjYik7XG4gICAgICB0aGlzLl9zb2NrZXQudW5jb3JrKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3NvY2tldC53cml0ZShsaXN0WzBdLCBjYik7XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU2VuZGVyO1xuIl0sIm5hbWVzIjpbIm5ldCIsInJlcXVpcmUiLCJ0bHMiLCJyYW5kb21GaWxsU3luYyIsIlBlck1lc3NhZ2VEZWZsYXRlIiwiRU1QVFlfQlVGRkVSIiwiaXNWYWxpZFN0YXR1c0NvZGUiLCJtYXNrIiwiYXBwbHlNYXNrIiwidG9CdWZmZXIiLCJCdWZmZXIiLCJhbGxvYyIsIlNlbmRlciIsImNvbnN0cnVjdG9yIiwic29ja2V0IiwiZXh0ZW5zaW9ucyIsIl9leHRlbnNpb25zIiwiX3NvY2tldCIsIl9maXJzdEZyYWdtZW50IiwiX2NvbXByZXNzIiwiX2J1ZmZlcmVkQnl0ZXMiLCJfZGVmbGF0aW5nIiwiX3F1ZXVlIiwiZnJhbWUiLCJkYXRhIiwib3B0aW9ucyIsIm1lcmdlIiwicmVhZE9ubHkiLCJvZmZzZXQiLCJwYXlsb2FkTGVuZ3RoIiwibGVuZ3RoIiwidGFyZ2V0IiwiYWxsb2NVbnNhZmUiLCJmaW4iLCJvcGNvZGUiLCJyc3YxIiwid3JpdGVVSW50MTZCRSIsIndyaXRlVUludDMyQkUiLCJjbG9zZSIsImNvZGUiLCJjYiIsImJ1ZiIsInVuZGVmaW5lZCIsIlR5cGVFcnJvciIsImJ5dGVMZW5ndGgiLCJSYW5nZUVycm9yIiwid3JpdGUiLCJlbnF1ZXVlIiwiZG9DbG9zZSIsInNlbmRGcmFtZSIsInBpbmciLCJkb1BpbmciLCJwb25nIiwiZG9Qb25nIiwic2VuZCIsInBlck1lc3NhZ2VEZWZsYXRlIiwiZXh0ZW5zaW9uTmFtZSIsImJpbmFyeSIsImNvbXByZXNzIiwiX3RocmVzaG9sZCIsIm9wdHMiLCJkaXNwYXRjaCIsIl8iLCJkZXN0cm95ZWQiLCJlcnIiLCJFcnJvciIsImkiLCJjYWxsYmFjayIsImRlcXVldWUiLCJwYXJhbXMiLCJzaGlmdCIsIlJlZmxlY3QiLCJhcHBseSIsInNsaWNlIiwicHVzaCIsImxpc3QiLCJjb3JrIiwidW5jb3JrIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { Duplex } = __webpack_require__(/*! stream */ \"stream\");\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */ function emitClose(stream) {\n    stream.emit(\"close\");\n}\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */ function duplexOnEnd() {\n    if (!this.destroyed && this._writableState.finished) {\n        this.destroy();\n    }\n}\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */ function duplexOnError(err) {\n    this.removeListener(\"error\", duplexOnError);\n    this.destroy();\n    if (this.listenerCount(\"error\") === 0) {\n        // Do not suppress the throwing behavior.\n        this.emit(\"error\", err);\n    }\n}\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */ function createWebSocketStream(ws, options) {\n    let resumeOnReceiverDrain = true;\n    let terminateOnDestroy = true;\n    function receiverOnDrain() {\n        if (resumeOnReceiverDrain) ws._socket.resume();\n    }\n    if (ws.readyState === ws.CONNECTING) {\n        ws.once(\"open\", function open() {\n            ws._receiver.removeAllListeners(\"drain\");\n            ws._receiver.on(\"drain\", receiverOnDrain);\n        });\n    } else {\n        ws._receiver.removeAllListeners(\"drain\");\n        ws._receiver.on(\"drain\", receiverOnDrain);\n    }\n    const duplex = new Duplex({\n        ...options,\n        autoDestroy: false,\n        emitClose: false,\n        objectMode: false,\n        writableObjectMode: false\n    });\n    ws.on(\"message\", function message(msg) {\n        if (!duplex.push(msg)) {\n            resumeOnReceiverDrain = false;\n            ws._socket.pause();\n        }\n    });\n    ws.once(\"error\", function error(err) {\n        if (duplex.destroyed) return;\n        // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n        //\n        // - If the `'error'` event is emitted before the `'open'` event, then\n        //   `ws.terminate()` is a noop as no socket is assigned.\n        // - Otherwise, the error is re-emitted by the listener of the `'error'`\n        //   event of the `Receiver` object. The listener already closes the\n        //   connection by calling `ws.close()`. This allows a close frame to be\n        //   sent to the other peer. If `ws.terminate()` is called right after this,\n        //   then the close frame might not be sent.\n        terminateOnDestroy = false;\n        duplex.destroy(err);\n    });\n    ws.once(\"close\", function close() {\n        if (duplex.destroyed) return;\n        duplex.push(null);\n    });\n    duplex._destroy = function(err, callback) {\n        if (ws.readyState === ws.CLOSED) {\n            callback(err);\n            process.nextTick(emitClose, duplex);\n            return;\n        }\n        let called = false;\n        ws.once(\"error\", function error(err) {\n            called = true;\n            callback(err);\n        });\n        ws.once(\"close\", function close() {\n            if (!called) callback(err);\n            process.nextTick(emitClose, duplex);\n        });\n        if (terminateOnDestroy) ws.terminate();\n    };\n    duplex._final = function(callback) {\n        if (ws.readyState === ws.CONNECTING) {\n            ws.once(\"open\", function open() {\n                duplex._final(callback);\n            });\n            return;\n        }\n        // If the value of the `_socket` property is `null` it means that `ws` is a\n        // client websocket and the handshake failed. In fact, when this happens, a\n        // socket is never assigned to the websocket. Wait for the `'error'` event\n        // that will be emitted by the websocket.\n        if (ws._socket === null) return;\n        if (ws._socket._writableState.finished) {\n            callback();\n            if (duplex._readableState.endEmitted) duplex.destroy();\n        } else {\n            ws._socket.once(\"finish\", function finish() {\n                // `duplex` is not destroyed here because the `'end'` event will be\n                // emitted on `duplex` after this `'finish'` event. The EOF signaling\n                // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n                callback();\n            });\n            ws.close();\n        }\n    };\n    duplex._read = function() {\n        if ((ws.readyState === ws.OPEN || ws.readyState === ws.CLOSING) && !resumeOnReceiverDrain) {\n            resumeOnReceiverDrain = true;\n            if (!ws._receiver._writableState.needDrain) ws._socket.resume();\n        }\n    };\n    duplex._write = function(chunk, encoding, callback) {\n        if (ws.readyState === ws.CONNECTING) {\n            ws.once(\"open\", function open() {\n                duplex._write(chunk, encoding, callback);\n            });\n            return;\n        }\n        ws.send(chunk, callback);\n    };\n    duplex.on(\"end\", duplexOnEnd);\n    duplex.on(\"error\", duplexOnError);\n    return duplex;\n}\nmodule.exports = createWebSocketStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */ function isValidStatusCode(code) {\n    return code >= 1000 && code <= 1014 && code !== 1004 && code !== 1005 && code !== 1006 || code >= 3000 && code <= 4999;\n}\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */ function _isValidUTF8(buf) {\n    const len = buf.length;\n    let i = 0;\n    while(i < len){\n        if ((buf[i] & 0x80) === 0) {\n            // 0xxxxxxx\n            i++;\n        } else if ((buf[i] & 0xe0) === 0xc0) {\n            // 110xxxxx 10xxxxxx\n            if (i + 1 === len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i] & 0xfe) === 0xc0 // Overlong\n            ) {\n                return false;\n            }\n            i += 2;\n        } else if ((buf[i] & 0xf0) === 0xe0) {\n            // 1110xxxx 10xxxxxx 10xxxxxx\n            if (i + 2 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 || // Overlong\n            buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0 // Surrogate (U+D800 - U+DFFF)\n            ) {\n                return false;\n            }\n            i += 3;\n        } else if ((buf[i] & 0xf8) === 0xf0) {\n            // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n            if (i + 3 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || (buf[i + 3] & 0xc0) !== 0x80 || buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 || // Overlong\n            buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4 // > U+10FFFF\n            ) {\n                return false;\n            }\n            i += 4;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\ntry {\n    let isValidUTF8 = __webpack_require__(/*! utf-8-validate */ \"(ssr)/./node_modules/utf-8-validate/index.js\");\n    /* istanbul ignore if */ if (typeof isValidUTF8 === \"object\") {\n        isValidUTF8 = isValidUTF8.Validation.isValidUTF8; // utf-8-validate@<3.0.0\n    }\n    module.exports = {\n        isValidStatusCode,\n        isValidUTF8 (buf) {\n            return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n        }\n    };\n} catch (e) /* istanbul ignore next */ {\n    module.exports = {\n        isValidStatusCode,\n        isValidUTF8: _isValidUTF8\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvdmFsaWRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBOzs7Ozs7Q0FNQyxHQUNELFNBQVNBLGtCQUFrQkMsSUFBSTtJQUM3QixPQUNFLFFBQVMsUUFDUEEsUUFBUSxRQUNSQSxTQUFTLFFBQ1RBLFNBQVMsUUFDVEEsU0FBUyxRQUNWQSxRQUFRLFFBQVFBLFFBQVE7QUFFN0I7QUFFQTs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNDLGFBQWFDLEdBQUc7SUFDdkIsTUFBTUMsTUFBTUQsSUFBSUUsTUFBTTtJQUN0QixJQUFJQyxJQUFJO0lBRVIsTUFBT0EsSUFBSUYsSUFBSztRQUNkLElBQUksQ0FBQ0QsR0FBRyxDQUFDRyxFQUFFLEdBQUcsSUFBRyxNQUFPLEdBQUc7WUFDekIsV0FBVztZQUNYQTtRQUNGLE9BQU8sSUFBSSxDQUFDSCxHQUFHLENBQUNHLEVBQUUsR0FBRyxJQUFHLE1BQU8sTUFBTTtZQUNuQyxvQkFBb0I7WUFDcEIsSUFDRUEsSUFBSSxNQUFNRixPQUNWLENBQUNELEdBQUcsQ0FBQ0csSUFBSSxFQUFFLEdBQUcsSUFBRyxNQUFPLFFBQ3hCLENBQUNILEdBQUcsQ0FBQ0csRUFBRSxHQUFHLElBQUcsTUFBTyxLQUFLLFdBQVc7Y0FDcEM7Z0JBQ0EsT0FBTztZQUNUO1lBRUFBLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQ0gsR0FBRyxDQUFDRyxFQUFFLEdBQUcsSUFBRyxNQUFPLE1BQU07WUFDbkMsNkJBQTZCO1lBQzdCLElBQ0VBLElBQUksS0FBS0YsT0FDVCxDQUFDRCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLElBQUcsTUFBTyxRQUN4QixDQUFDSCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLElBQUcsTUFBTyxRQUN2QkgsR0FBRyxDQUFDRyxFQUFFLEtBQUssUUFBUSxDQUFDSCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLElBQUcsTUFBTyxRQUFTLFdBQVc7WUFDL0RILEdBQUcsQ0FBQ0csRUFBRSxLQUFLLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sS0FBTSw4QkFBOEI7Y0FDaEY7Z0JBQ0EsT0FBTztZQUNUO1lBRUFBLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQ0gsR0FBRyxDQUFDRyxFQUFFLEdBQUcsSUFBRyxNQUFPLE1BQU07WUFDbkMsc0NBQXNDO1lBQ3RDLElBQ0VBLElBQUksS0FBS0YsT0FDVCxDQUFDRCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLElBQUcsTUFBTyxRQUN4QixDQUFDSCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLElBQUcsTUFBTyxRQUN4QixDQUFDSCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLElBQUcsTUFBTyxRQUN2QkgsR0FBRyxDQUFDRyxFQUFFLEtBQUssUUFBUSxDQUFDSCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLElBQUcsTUFBTyxRQUFTLFdBQVc7WUFDL0RILEdBQUcsQ0FBQ0csRUFBRSxLQUFLLFFBQVFILEdBQUcsQ0FBQ0csSUFBSSxFQUFFLEdBQUcsUUFDakNILEdBQUcsQ0FBQ0csRUFBRSxHQUFHLEtBQUssYUFBYTtjQUMzQjtnQkFDQSxPQUFPO1lBQ1Q7WUFFQUEsS0FBSztRQUNQLE9BQU87WUFDTCxPQUFPO1FBQ1Q7SUFDRjtJQUVBLE9BQU87QUFDVDtBQUVBLElBQUk7SUFDRixJQUFJQyxjQUFjQyxtQkFBT0EsQ0FBQztJQUUxQixzQkFBc0IsR0FDdEIsSUFBSSxPQUFPRCxnQkFBZ0IsVUFBVTtRQUNuQ0EsY0FBY0EsWUFBWUUsVUFBVSxDQUFDRixXQUFXLEVBQUUsd0JBQXdCO0lBQzVFO0lBRUFHLE9BQU9DLE9BQU8sR0FBRztRQUNmWDtRQUNBTyxhQUFZSixHQUFHO1lBQ2IsT0FBT0EsSUFBSUUsTUFBTSxHQUFHLE1BQU1ILGFBQWFDLE9BQU9JLFlBQVlKO1FBQzVEO0lBQ0Y7QUFDRixFQUFFLE9BQU9TLEdBQUcsd0JBQXdCLEdBQUc7SUFDckNGLE9BQU9DLE9BQU8sR0FBRztRQUNmWDtRQUNBTyxhQUFhTDtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL3ZhbGlkYXRpb24uanM/MTE3MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgc3RhdHVzIGNvZGUgaXMgYWxsb3dlZCBpbiBhIGNsb3NlIGZyYW1lLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBjb2RlIFRoZSBzdGF0dXMgY29kZVxuICogQHJldHVybiB7Qm9vbGVhbn0gYHRydWVgIGlmIHRoZSBzdGF0dXMgY29kZSBpcyB2YWxpZCwgZWxzZSBgZmFsc2VgXG4gKiBAcHVibGljXG4gKi9cbmZ1bmN0aW9uIGlzVmFsaWRTdGF0dXNDb2RlKGNvZGUpIHtcbiAgcmV0dXJuIChcbiAgICAoY29kZSA+PSAxMDAwICYmXG4gICAgICBjb2RlIDw9IDEwMTQgJiZcbiAgICAgIGNvZGUgIT09IDEwMDQgJiZcbiAgICAgIGNvZGUgIT09IDEwMDUgJiZcbiAgICAgIGNvZGUgIT09IDEwMDYpIHx8XG4gICAgKGNvZGUgPj0gMzAwMCAmJiBjb2RlIDw9IDQ5OTkpXG4gICk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gYnVmZmVyIGNvbnRhaW5zIG9ubHkgY29ycmVjdCBVVEYtOC5cbiAqIFBvcnRlZCBmcm9tIGh0dHBzOi8vd3d3LmNsLmNhbS5hYy51ay8lN0VtZ2syNS91Y3MvdXRmOF9jaGVjay5jIGJ5XG4gKiBNYXJrdXMgS3Vobi5cbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcn0gYnVmIFRoZSBidWZmZXIgdG8gY2hlY2tcbiAqIEByZXR1cm4ge0Jvb2xlYW59IGB0cnVlYCBpZiBgYnVmYCBjb250YWlucyBvbmx5IGNvcnJlY3QgVVRGLTgsIGVsc2UgYGZhbHNlYFxuICogQHB1YmxpY1xuICovXG5mdW5jdGlvbiBfaXNWYWxpZFVURjgoYnVmKSB7XG4gIGNvbnN0IGxlbiA9IGJ1Zi5sZW5ndGg7XG4gIGxldCBpID0gMDtcblxuICB3aGlsZSAoaSA8IGxlbikge1xuICAgIGlmICgoYnVmW2ldICYgMHg4MCkgPT09IDApIHtcbiAgICAgIC8vIDB4eHh4eHh4XG4gICAgICBpKys7XG4gICAgfSBlbHNlIGlmICgoYnVmW2ldICYgMHhlMCkgPT09IDB4YzApIHtcbiAgICAgIC8vIDExMHh4eHh4IDEweHh4eHh4XG4gICAgICBpZiAoXG4gICAgICAgIGkgKyAxID09PSBsZW4gfHxcbiAgICAgICAgKGJ1ZltpICsgMV0gJiAweGMwKSAhPT0gMHg4MCB8fFxuICAgICAgICAoYnVmW2ldICYgMHhmZSkgPT09IDB4YzAgLy8gT3ZlcmxvbmdcbiAgICAgICkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGkgKz0gMjtcbiAgICB9IGVsc2UgaWYgKChidWZbaV0gJiAweGYwKSA9PT0gMHhlMCkge1xuICAgICAgLy8gMTExMHh4eHggMTB4eHh4eHggMTB4eHh4eHhcbiAgICAgIGlmIChcbiAgICAgICAgaSArIDIgPj0gbGVuIHx8XG4gICAgICAgIChidWZbaSArIDFdICYgMHhjMCkgIT09IDB4ODAgfHxcbiAgICAgICAgKGJ1ZltpICsgMl0gJiAweGMwKSAhPT0gMHg4MCB8fFxuICAgICAgICAoYnVmW2ldID09PSAweGUwICYmIChidWZbaSArIDFdICYgMHhlMCkgPT09IDB4ODApIHx8IC8vIE92ZXJsb25nXG4gICAgICAgIChidWZbaV0gPT09IDB4ZWQgJiYgKGJ1ZltpICsgMV0gJiAweGUwKSA9PT0gMHhhMCkgLy8gU3Vycm9nYXRlIChVK0Q4MDAgLSBVK0RGRkYpXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpICs9IDM7XG4gICAgfSBlbHNlIGlmICgoYnVmW2ldICYgMHhmOCkgPT09IDB4ZjApIHtcbiAgICAgIC8vIDExMTEweHh4IDEweHh4eHh4IDEweHh4eHh4IDEweHh4eHh4XG4gICAgICBpZiAoXG4gICAgICAgIGkgKyAzID49IGxlbiB8fFxuICAgICAgICAoYnVmW2kgKyAxXSAmIDB4YzApICE9PSAweDgwIHx8XG4gICAgICAgIChidWZbaSArIDJdICYgMHhjMCkgIT09IDB4ODAgfHxcbiAgICAgICAgKGJ1ZltpICsgM10gJiAweGMwKSAhPT0gMHg4MCB8fFxuICAgICAgICAoYnVmW2ldID09PSAweGYwICYmIChidWZbaSArIDFdICYgMHhmMCkgPT09IDB4ODApIHx8IC8vIE92ZXJsb25nXG4gICAgICAgIChidWZbaV0gPT09IDB4ZjQgJiYgYnVmW2kgKyAxXSA+IDB4OGYpIHx8XG4gICAgICAgIGJ1ZltpXSA+IDB4ZjQgLy8gPiBVKzEwRkZGRlxuICAgICAgKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaSArPSA0O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbnRyeSB7XG4gIGxldCBpc1ZhbGlkVVRGOCA9IHJlcXVpcmUoJ3V0Zi04LXZhbGlkYXRlJyk7XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmICh0eXBlb2YgaXNWYWxpZFVURjggPT09ICdvYmplY3QnKSB7XG4gICAgaXNWYWxpZFVURjggPSBpc1ZhbGlkVVRGOC5WYWxpZGF0aW9uLmlzVmFsaWRVVEY4OyAvLyB1dGYtOC12YWxpZGF0ZUA8My4wLjBcbiAgfVxuXG4gIG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGlzVmFsaWRTdGF0dXNDb2RlLFxuICAgIGlzVmFsaWRVVEY4KGJ1Zikge1xuICAgICAgcmV0dXJuIGJ1Zi5sZW5ndGggPCAxNTAgPyBfaXNWYWxpZFVURjgoYnVmKSA6IGlzVmFsaWRVVEY4KGJ1Zik7XG4gICAgfVxuICB9O1xufSBjYXRjaCAoZSkgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8ge1xuICBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBpc1ZhbGlkU3RhdHVzQ29kZSxcbiAgICBpc1ZhbGlkVVRGODogX2lzVmFsaWRVVEY4XG4gIH07XG59XG4iXSwibmFtZXMiOlsiaXNWYWxpZFN0YXR1c0NvZGUiLCJjb2RlIiwiX2lzVmFsaWRVVEY4IiwiYnVmIiwibGVuIiwibGVuZ3RoIiwiaSIsImlzVmFsaWRVVEY4IiwicmVxdWlyZSIsIlZhbGlkYXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js ***!
  \***************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */ \nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { createHash } = __webpack_require__(/*! crypto */ \"crypto\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst WebSocket = __webpack_require__(/*! ./websocket */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js\");\nconst { format, parse } = __webpack_require__(/*! ./extension */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js\");\nconst { GUID, kWebSocket } = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */ class WebSocketServer extends EventEmitter {\n    /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [callback] A listener for the `listening` event\n   */ constructor(options, callback){\n        super();\n        options = {\n            maxPayload: 100 * 1024 * 1024,\n            perMessageDeflate: false,\n            handleProtocols: null,\n            clientTracking: true,\n            verifyClient: null,\n            noServer: false,\n            backlog: null,\n            server: null,\n            host: null,\n            path: null,\n            port: null,\n            ...options\n        };\n        if (options.port == null && !options.server && !options.noServer || options.port != null && (options.server || options.noServer) || options.server && options.noServer) {\n            throw new TypeError('One and only one of the \"port\", \"server\", or \"noServer\" options ' + \"must be specified\");\n        }\n        if (options.port != null) {\n            this._server = http.createServer((req, res)=>{\n                const body = http.STATUS_CODES[426];\n                res.writeHead(426, {\n                    \"Content-Length\": body.length,\n                    \"Content-Type\": \"text/plain\"\n                });\n                res.end(body);\n            });\n            this._server.listen(options.port, options.host, options.backlog, callback);\n        } else if (options.server) {\n            this._server = options.server;\n        }\n        if (this._server) {\n            const emitConnection = this.emit.bind(this, \"connection\");\n            this._removeListeners = addListeners(this._server, {\n                listening: this.emit.bind(this, \"listening\"),\n                error: this.emit.bind(this, \"error\"),\n                upgrade: (req, socket, head)=>{\n                    this.handleUpgrade(req, socket, head, emitConnection);\n                }\n            });\n        }\n        if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n        if (options.clientTracking) this.clients = new Set();\n        this.options = options;\n        this._state = RUNNING;\n    }\n    /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */ address() {\n        if (this.options.noServer) {\n            throw new Error('The server is operating in \"noServer\" mode');\n        }\n        if (!this._server) return null;\n        return this._server.address();\n    }\n    /**\n   * Close the server.\n   *\n   * @param {Function} [cb] Callback\n   * @public\n   */ close(cb) {\n        if (cb) this.once(\"close\", cb);\n        if (this._state === CLOSED) {\n            process.nextTick(emitClose, this);\n            return;\n        }\n        if (this._state === CLOSING) return;\n        this._state = CLOSING;\n        //\n        // Terminate all associated clients.\n        //\n        if (this.clients) {\n            for (const client of this.clients)client.terminate();\n        }\n        const server = this._server;\n        if (server) {\n            this._removeListeners();\n            this._removeListeners = this._server = null;\n            //\n            // Close the http server if it was internally created.\n            //\n            if (this.options.port != null) {\n                server.close(emitClose.bind(undefined, this));\n                return;\n            }\n        }\n        process.nextTick(emitClose, this);\n    }\n    /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */ shouldHandle(req) {\n        if (this.options.path) {\n            const index = req.url.indexOf(\"?\");\n            const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n            if (pathname !== this.options.path) return false;\n        }\n        return true;\n    }\n    /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */ handleUpgrade(req, socket, head, cb) {\n        socket.on(\"error\", socketOnError);\n        const key = req.headers[\"sec-websocket-key\"] !== undefined ? req.headers[\"sec-websocket-key\"].trim() : false;\n        const upgrade = req.headers.upgrade;\n        const version = +req.headers[\"sec-websocket-version\"];\n        const extensions = {};\n        if (req.method !== \"GET\" || upgrade === undefined || upgrade.toLowerCase() !== \"websocket\" || !key || !keyRegex.test(key) || version !== 8 && version !== 13 || !this.shouldHandle(req)) {\n            return abortHandshake(socket, 400);\n        }\n        if (this.options.perMessageDeflate) {\n            const perMessageDeflate = new PerMessageDeflate(this.options.perMessageDeflate, true, this.options.maxPayload);\n            try {\n                const offers = parse(req.headers[\"sec-websocket-extensions\"]);\n                if (offers[PerMessageDeflate.extensionName]) {\n                    perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n                    extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n                }\n            } catch (err) {\n                return abortHandshake(socket, 400);\n            }\n        }\n        //\n        // Optionally call external client verification handler.\n        //\n        if (this.options.verifyClient) {\n            const info = {\n                origin: req.headers[`${version === 8 ? \"sec-websocket-origin\" : \"origin\"}`],\n                secure: !!(req.socket.authorized || req.socket.encrypted),\n                req\n            };\n            if (this.options.verifyClient.length === 2) {\n                this.options.verifyClient(info, (verified, code, message, headers)=>{\n                    if (!verified) {\n                        return abortHandshake(socket, code || 401, message, headers);\n                    }\n                    this.completeUpgrade(key, extensions, req, socket, head, cb);\n                });\n                return;\n            }\n            if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n        }\n        this.completeUpgrade(key, extensions, req, socket, head, cb);\n    }\n    /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */ completeUpgrade(key, extensions, req, socket, head, cb) {\n        //\n        // Destroy the socket if the client has already sent a FIN packet.\n        //\n        if (!socket.readable || !socket.writable) return socket.destroy();\n        if (socket[kWebSocket]) {\n            throw new Error(\"server.handleUpgrade() was called more than once with the same \" + \"socket, possibly due to a misconfiguration\");\n        }\n        if (this._state > RUNNING) return abortHandshake(socket, 503);\n        const digest = createHash(\"sha1\").update(key + GUID).digest(\"base64\");\n        const headers = [\n            \"HTTP/1.1 101 Switching Protocols\",\n            \"Upgrade: websocket\",\n            \"Connection: Upgrade\",\n            `Sec-WebSocket-Accept: ${digest}`\n        ];\n        const ws = new WebSocket(null);\n        let protocol = req.headers[\"sec-websocket-protocol\"];\n        if (protocol) {\n            protocol = protocol.split(\",\").map(trim);\n            //\n            // Optionally call external protocol selection handler.\n            //\n            if (this.options.handleProtocols) {\n                protocol = this.options.handleProtocols(protocol, req);\n            } else {\n                protocol = protocol[0];\n            }\n            if (protocol) {\n                headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n                ws._protocol = protocol;\n            }\n        }\n        if (extensions[PerMessageDeflate.extensionName]) {\n            const params = extensions[PerMessageDeflate.extensionName].params;\n            const value = format({\n                [PerMessageDeflate.extensionName]: [\n                    params\n                ]\n            });\n            headers.push(`Sec-WebSocket-Extensions: ${value}`);\n            ws._extensions = extensions;\n        }\n        //\n        // Allow external modification/inspection of handshake headers.\n        //\n        this.emit(\"headers\", headers, req);\n        socket.write(headers.concat(\"\\r\\n\").join(\"\\r\\n\"));\n        socket.removeListener(\"error\", socketOnError);\n        ws.setSocket(socket, head, this.options.maxPayload);\n        if (this.clients) {\n            this.clients.add(ws);\n            ws.on(\"close\", ()=>this.clients.delete(ws));\n        }\n        cb(ws, req);\n    }\n}\nmodule.exports = WebSocketServer;\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */ function addListeners(server, map) {\n    for (const event of Object.keys(map))server.on(event, map[event]);\n    return function removeListeners() {\n        for (const event of Object.keys(map)){\n            server.removeListener(event, map[event]);\n        }\n    };\n}\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */ function emitClose(server) {\n    server._state = CLOSED;\n    server.emit(\"close\");\n}\n/**\n * Handle premature socket errors.\n *\n * @private\n */ function socketOnError() {\n    this.destroy();\n}\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */ function abortHandshake(socket, code, message, headers) {\n    if (socket.writable) {\n        message = message || http.STATUS_CODES[code];\n        headers = {\n            Connection: \"close\",\n            \"Content-Type\": \"text/html\",\n            \"Content-Length\": Buffer.byteLength(message),\n            ...headers\n        };\n        socket.write(`HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` + Object.keys(headers).map((h)=>`${h}: ${headers[h]}`).join(\"\\r\\n\") + \"\\r\\n\\r\\n\" + message);\n    }\n    socket.removeListener(\"error\", socketOnError);\n    socket.destroy();\n}\n/**\n * Remove whitespace characters from both ends of a string.\n *\n * @param {String} str The string\n * @return {String} A new string representing `str` stripped of whitespace\n *     characters from both its beginning and end\n * @private\n */ function trim(str) {\n    return str.trim();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */ \nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { randomBytes, createHash } = __webpack_require__(/*! crypto */ \"crypto\");\nconst { Readable } = __webpack_require__(/*! stream */ \"stream\");\nconst { URL } = __webpack_require__(/*! url */ \"url\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst Receiver = __webpack_require__(/*! ./receiver */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js\");\nconst Sender = __webpack_require__(/*! ./sender */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js\");\nconst { BINARY_TYPES, EMPTY_BUFFER, GUID, kStatusCode, kWebSocket, NOOP } = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst { addEventListener, removeEventListener } = __webpack_require__(/*! ./event-target */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js\");\nconst { format, parse } = __webpack_require__(/*! ./extension */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js\");\nconst { toBuffer } = __webpack_require__(/*! ./buffer-util */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst readyStates = [\n    \"CONNECTING\",\n    \"OPEN\",\n    \"CLOSING\",\n    \"CLOSED\"\n];\nconst protocolVersions = [\n    8,\n    13\n];\nconst closeTimeout = 30 * 1000;\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */ class WebSocket extends EventEmitter {\n    /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */ constructor(address, protocols, options){\n        super();\n        this._binaryType = BINARY_TYPES[0];\n        this._closeCode = 1006;\n        this._closeFrameReceived = false;\n        this._closeFrameSent = false;\n        this._closeMessage = \"\";\n        this._closeTimer = null;\n        this._extensions = {};\n        this._protocol = \"\";\n        this._readyState = WebSocket.CONNECTING;\n        this._receiver = null;\n        this._sender = null;\n        this._socket = null;\n        if (address !== null) {\n            this._bufferedAmount = 0;\n            this._isServer = false;\n            this._redirects = 0;\n            if (Array.isArray(protocols)) {\n                protocols = protocols.join(\", \");\n            } else if (typeof protocols === \"object\" && protocols !== null) {\n                options = protocols;\n                protocols = undefined;\n            }\n            initAsClient(this, address, protocols, options);\n        } else {\n            this._isServer = true;\n        }\n    }\n    /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */ get binaryType() {\n        return this._binaryType;\n    }\n    set binaryType(type) {\n        if (!BINARY_TYPES.includes(type)) return;\n        this._binaryType = type;\n        //\n        // Allow to change `binaryType` on the fly.\n        //\n        if (this._receiver) this._receiver._binaryType = type;\n    }\n    /**\n   * @type {Number}\n   */ get bufferedAmount() {\n        if (!this._socket) return this._bufferedAmount;\n        return this._socket._writableState.length + this._sender._bufferedBytes;\n    }\n    /**\n   * @type {String}\n   */ get extensions() {\n        return Object.keys(this._extensions).join();\n    }\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onclose() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onclose(listener) {}\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onerror() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onerror(listener) {}\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onopen() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onopen(listener) {}\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onmessage() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onmessage(listener) {}\n    /**\n   * @type {String}\n   */ get protocol() {\n        return this._protocol;\n    }\n    /**\n   * @type {Number}\n   */ get readyState() {\n        return this._readyState;\n    }\n    /**\n   * @type {String}\n   */ get url() {\n        return this._url;\n    }\n    /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} [maxPayload=0] The maximum allowed message size\n   * @private\n   */ setSocket(socket, head, maxPayload) {\n        const receiver = new Receiver(this.binaryType, this._extensions, this._isServer, maxPayload);\n        this._sender = new Sender(socket, this._extensions);\n        this._receiver = receiver;\n        this._socket = socket;\n        receiver[kWebSocket] = this;\n        socket[kWebSocket] = this;\n        receiver.on(\"conclude\", receiverOnConclude);\n        receiver.on(\"drain\", receiverOnDrain);\n        receiver.on(\"error\", receiverOnError);\n        receiver.on(\"message\", receiverOnMessage);\n        receiver.on(\"ping\", receiverOnPing);\n        receiver.on(\"pong\", receiverOnPong);\n        socket.setTimeout(0);\n        socket.setNoDelay();\n        if (head.length > 0) socket.unshift(head);\n        socket.on(\"close\", socketOnClose);\n        socket.on(\"data\", socketOnData);\n        socket.on(\"end\", socketOnEnd);\n        socket.on(\"error\", socketOnError);\n        this._readyState = WebSocket.OPEN;\n        this.emit(\"open\");\n    }\n    /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */ emitClose() {\n        if (!this._socket) {\n            this._readyState = WebSocket.CLOSED;\n            this.emit(\"close\", this._closeCode, this._closeMessage);\n            return;\n        }\n        if (this._extensions[PerMessageDeflate.extensionName]) {\n            this._extensions[PerMessageDeflate.extensionName].cleanup();\n        }\n        this._receiver.removeAllListeners();\n        this._readyState = WebSocket.CLOSED;\n        this.emit(\"close\", this._closeCode, this._closeMessage);\n    }\n    /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {String} [data] A string explaining why the connection is closing\n   * @public\n   */ close(code, data) {\n        if (this.readyState === WebSocket.CLOSED) return;\n        if (this.readyState === WebSocket.CONNECTING) {\n            const msg = \"WebSocket was closed before the connection was established\";\n            return abortHandshake(this, this._req, msg);\n        }\n        if (this.readyState === WebSocket.CLOSING) {\n            if (this._closeFrameSent && (this._closeFrameReceived || this._receiver._writableState.errorEmitted)) {\n                this._socket.end();\n            }\n            return;\n        }\n        this._readyState = WebSocket.CLOSING;\n        this._sender.close(code, data, !this._isServer, (err)=>{\n            //\n            // This error is handled by the `'error'` listener on the socket. We only\n            // want to know if the close frame has been sent here.\n            //\n            if (err) return;\n            this._closeFrameSent = true;\n            if (this._closeFrameReceived || this._receiver._writableState.errorEmitted) {\n                this._socket.end();\n            }\n        });\n        //\n        // Specify a timeout for the closing handshake to complete.\n        //\n        this._closeTimer = setTimeout(this._socket.destroy.bind(this._socket), closeTimeout);\n    }\n    /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */ ping(data, mask, cb) {\n        if (this.readyState === WebSocket.CONNECTING) {\n            throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof data === \"function\") {\n            cb = data;\n            data = mask = undefined;\n        } else if (typeof mask === \"function\") {\n            cb = mask;\n            mask = undefined;\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== WebSocket.OPEN) {\n            sendAfterClose(this, data, cb);\n            return;\n        }\n        if (mask === undefined) mask = !this._isServer;\n        this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n    }\n    /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */ pong(data, mask, cb) {\n        if (this.readyState === WebSocket.CONNECTING) {\n            throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof data === \"function\") {\n            cb = data;\n            data = mask = undefined;\n        } else if (typeof mask === \"function\") {\n            cb = mask;\n            mask = undefined;\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== WebSocket.OPEN) {\n            sendAfterClose(this, data, cb);\n            return;\n        }\n        if (mask === undefined) mask = !this._isServer;\n        this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n    }\n    /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */ send(data, options, cb) {\n        if (this.readyState === WebSocket.CONNECTING) {\n            throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof options === \"function\") {\n            cb = options;\n            options = {};\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== WebSocket.OPEN) {\n            sendAfterClose(this, data, cb);\n            return;\n        }\n        const opts = {\n            binary: typeof data !== \"string\",\n            mask: !this._isServer,\n            compress: true,\n            fin: true,\n            ...options\n        };\n        if (!this._extensions[PerMessageDeflate.extensionName]) {\n            opts.compress = false;\n        }\n        this._sender.send(data || EMPTY_BUFFER, opts, cb);\n    }\n    /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */ terminate() {\n        if (this.readyState === WebSocket.CLOSED) return;\n        if (this.readyState === WebSocket.CONNECTING) {\n            const msg = \"WebSocket was closed before the connection was established\";\n            return abortHandshake(this, this._req, msg);\n        }\n        if (this._socket) {\n            this._readyState = WebSocket.CLOSING;\n            this._socket.destroy();\n        }\n    }\n}\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"CONNECTING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CONNECTING\")\n});\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"CONNECTING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CONNECTING\")\n});\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"OPEN\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"OPEN\")\n});\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"OPEN\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"OPEN\")\n});\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"CLOSING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSING\")\n});\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"CLOSING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSING\")\n});\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"CLOSED\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSED\")\n});\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"CLOSED\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSED\")\n});\n[\n    \"binaryType\",\n    \"bufferedAmount\",\n    \"extensions\",\n    \"protocol\",\n    \"readyState\",\n    \"url\"\n].forEach((property)=>{\n    Object.defineProperty(WebSocket.prototype, property, {\n        enumerable: true\n    });\n});\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n[\n    \"open\",\n    \"error\",\n    \"close\",\n    \"message\"\n].forEach((method)=>{\n    Object.defineProperty(WebSocket.prototype, `on${method}`, {\n        enumerable: true,\n        get () {\n            const listeners = this.listeners(method);\n            for(let i = 0; i < listeners.length; i++){\n                if (listeners[i]._listener) return listeners[i]._listener;\n            }\n            return undefined;\n        },\n        set (listener) {\n            const listeners = this.listeners(method);\n            for(let i = 0; i < listeners.length; i++){\n                //\n                // Remove only the listeners added via `addEventListener`.\n                //\n                if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n            }\n            this.addEventListener(method, listener);\n        }\n    });\n});\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\nmodule.exports = WebSocket;\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {String} [protocols] The subprotocols\n * @param {Object} [options] Connection options\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @private\n */ function initAsClient(websocket, address, protocols, options) {\n    const opts = {\n        protocolVersion: protocolVersions[1],\n        maxPayload: 100 * 1024 * 1024,\n        perMessageDeflate: true,\n        followRedirects: false,\n        maxRedirects: 10,\n        ...options,\n        createConnection: undefined,\n        socketPath: undefined,\n        hostname: undefined,\n        protocol: undefined,\n        timeout: undefined,\n        method: undefined,\n        host: undefined,\n        path: undefined,\n        port: undefined\n    };\n    if (!protocolVersions.includes(opts.protocolVersion)) {\n        throw new RangeError(`Unsupported protocol version: ${opts.protocolVersion} ` + `(supported versions: ${protocolVersions.join(\", \")})`);\n    }\n    let parsedUrl;\n    if (address instanceof URL) {\n        parsedUrl = address;\n        websocket._url = address.href;\n    } else {\n        parsedUrl = new URL(address);\n        websocket._url = address;\n    }\n    const isUnixSocket = parsedUrl.protocol === \"ws+unix:\";\n    if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n        const err = new Error(`Invalid URL: ${websocket.url}`);\n        if (websocket._redirects === 0) {\n            throw err;\n        } else {\n            emitErrorAndClose(websocket, err);\n            return;\n        }\n    }\n    const isSecure = parsedUrl.protocol === \"wss:\" || parsedUrl.protocol === \"https:\";\n    const defaultPort = isSecure ? 443 : 80;\n    const key = randomBytes(16).toString(\"base64\");\n    const get = isSecure ? https.get : http.get;\n    let perMessageDeflate;\n    opts.createConnection = isSecure ? tlsConnect : netConnect;\n    opts.defaultPort = opts.defaultPort || defaultPort;\n    opts.port = parsedUrl.port || defaultPort;\n    opts.host = parsedUrl.hostname.startsWith(\"[\") ? parsedUrl.hostname.slice(1, -1) : parsedUrl.hostname;\n    opts.headers = {\n        \"Sec-WebSocket-Version\": opts.protocolVersion,\n        \"Sec-WebSocket-Key\": key,\n        Connection: \"Upgrade\",\n        Upgrade: \"websocket\",\n        ...opts.headers\n    };\n    opts.path = parsedUrl.pathname + parsedUrl.search;\n    opts.timeout = opts.handshakeTimeout;\n    if (opts.perMessageDeflate) {\n        perMessageDeflate = new PerMessageDeflate(opts.perMessageDeflate !== true ? opts.perMessageDeflate : {}, false, opts.maxPayload);\n        opts.headers[\"Sec-WebSocket-Extensions\"] = format({\n            [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n        });\n    }\n    if (protocols) {\n        opts.headers[\"Sec-WebSocket-Protocol\"] = protocols;\n    }\n    if (opts.origin) {\n        if (opts.protocolVersion < 13) {\n            opts.headers[\"Sec-WebSocket-Origin\"] = opts.origin;\n        } else {\n            opts.headers.Origin = opts.origin;\n        }\n    }\n    if (parsedUrl.username || parsedUrl.password) {\n        opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n    }\n    if (isUnixSocket) {\n        const parts = opts.path.split(\":\");\n        opts.socketPath = parts[0];\n        opts.path = parts[1];\n    }\n    if (opts.followRedirects) {\n        if (websocket._redirects === 0) {\n            websocket._originalUnixSocket = isUnixSocket;\n            websocket._originalSecure = isSecure;\n            websocket._originalHostOrSocketPath = isUnixSocket ? opts.socketPath : parsedUrl.host;\n            const headers = options && options.headers;\n            //\n            // Shallow copy the user provided options so that headers can be changed\n            // without mutating the original object.\n            //\n            options = {\n                ...options,\n                headers: {}\n            };\n            if (headers) {\n                for (const [key, value] of Object.entries(headers)){\n                    options.headers[key.toLowerCase()] = value;\n                }\n            }\n        } else {\n            const isSameHost = isUnixSocket ? websocket._originalUnixSocket ? opts.socketPath === websocket._originalHostOrSocketPath : false : websocket._originalUnixSocket ? false : parsedUrl.host === websocket._originalHostOrSocketPath;\n            if (!isSameHost || websocket._originalSecure && !isSecure) {\n                //\n                // Match curl 7.77.0 behavior and drop the following headers. These\n                // headers are also dropped when following a redirect to a subdomain.\n                //\n                delete opts.headers.authorization;\n                delete opts.headers.cookie;\n                if (!isSameHost) delete opts.headers.host;\n                opts.auth = undefined;\n            }\n        }\n        //\n        // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n        // If the `Authorization` header is set, then there is nothing to do as it\n        // will take precedence.\n        //\n        if (opts.auth && !options.headers.authorization) {\n            options.headers.authorization = \"Basic \" + Buffer.from(opts.auth).toString(\"base64\");\n        }\n    }\n    let req = websocket._req = get(opts);\n    if (opts.timeout) {\n        req.on(\"timeout\", ()=>{\n            abortHandshake(websocket, req, \"Opening handshake has timed out\");\n        });\n    }\n    req.on(\"error\", (err)=>{\n        if (req === null || req.aborted) return;\n        req = websocket._req = null;\n        emitErrorAndClose(websocket, err);\n    });\n    req.on(\"response\", (res)=>{\n        const location = res.headers.location;\n        const statusCode = res.statusCode;\n        if (location && opts.followRedirects && statusCode >= 300 && statusCode < 400) {\n            if (++websocket._redirects > opts.maxRedirects) {\n                abortHandshake(websocket, req, \"Maximum redirects exceeded\");\n                return;\n            }\n            req.abort();\n            let addr;\n            try {\n                addr = new URL(location, address);\n            } catch (err) {\n                emitErrorAndClose(websocket, err);\n                return;\n            }\n            initAsClient(websocket, addr, protocols, options);\n        } else if (!websocket.emit(\"unexpected-response\", req, res)) {\n            abortHandshake(websocket, req, `Unexpected server response: ${res.statusCode}`);\n        }\n    });\n    req.on(\"upgrade\", (res, socket, head)=>{\n        websocket.emit(\"upgrade\", res);\n        //\n        // The user may have closed the connection from a listener of the `upgrade`\n        // event.\n        //\n        if (websocket.readyState !== WebSocket.CONNECTING) return;\n        req = websocket._req = null;\n        const upgrade = res.headers.upgrade;\n        if (upgrade === undefined || upgrade.toLowerCase() !== \"websocket\") {\n            abortHandshake(websocket, socket, \"Invalid Upgrade header\");\n            return;\n        }\n        const digest = createHash(\"sha1\").update(key + GUID).digest(\"base64\");\n        if (res.headers[\"sec-websocket-accept\"] !== digest) {\n            abortHandshake(websocket, socket, \"Invalid Sec-WebSocket-Accept header\");\n            return;\n        }\n        const serverProt = res.headers[\"sec-websocket-protocol\"];\n        const protList = (protocols || \"\").split(/, */);\n        let protError;\n        if (!protocols && serverProt) {\n            protError = \"Server sent a subprotocol but none was requested\";\n        } else if (protocols && !serverProt) {\n            protError = \"Server sent no subprotocol\";\n        } else if (serverProt && !protList.includes(serverProt)) {\n            protError = \"Server sent an invalid subprotocol\";\n        }\n        if (protError) {\n            abortHandshake(websocket, socket, protError);\n            return;\n        }\n        if (serverProt) websocket._protocol = serverProt;\n        const secWebSocketExtensions = res.headers[\"sec-websocket-extensions\"];\n        if (secWebSocketExtensions !== undefined) {\n            if (!perMessageDeflate) {\n                const message = \"Server sent a Sec-WebSocket-Extensions header but no extension \" + \"was requested\";\n                abortHandshake(websocket, socket, message);\n                return;\n            }\n            let extensions;\n            try {\n                extensions = parse(secWebSocketExtensions);\n            } catch (err) {\n                const message = \"Invalid Sec-WebSocket-Extensions header\";\n                abortHandshake(websocket, socket, message);\n                return;\n            }\n            const extensionNames = Object.keys(extensions);\n            if (extensionNames.length) {\n                if (extensionNames.length !== 1 || extensionNames[0] !== PerMessageDeflate.extensionName) {\n                    const message = \"Server indicated an extension that was not requested\";\n                    abortHandshake(websocket, socket, message);\n                    return;\n                }\n                try {\n                    perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n                } catch (err) {\n                    const message = \"Invalid Sec-WebSocket-Extensions header\";\n                    abortHandshake(websocket, socket, message);\n                    return;\n                }\n                websocket._extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n            }\n        }\n        websocket.setSocket(socket, head, opts.maxPayload);\n    });\n}\n/**\n * Emit the `'error'` and `'close'` event.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */ function emitErrorAndClose(websocket, err) {\n    websocket._readyState = WebSocket.CLOSING;\n    websocket.emit(\"error\", err);\n    websocket.emitClose();\n}\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */ function netConnect(options) {\n    options.path = options.socketPath;\n    return net.connect(options);\n}\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */ function tlsConnect(options) {\n    options.path = undefined;\n    if (!options.servername && options.servername !== \"\") {\n        options.servername = net.isIP(options.host) ? \"\" : options.host;\n    }\n    return tls.connect(options);\n}\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */ function abortHandshake(websocket, stream, message) {\n    websocket._readyState = WebSocket.CLOSING;\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshake);\n    if (stream.setHeader) {\n        stream.abort();\n        if (stream.socket && !stream.socket.destroyed) {\n            //\n            // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n            // called after the request completed. See\n            // https://github.com/websockets/ws/issues/1869.\n            //\n            stream.socket.destroy();\n        }\n        stream.once(\"abort\", websocket.emitClose.bind(websocket));\n        websocket.emit(\"error\", err);\n    } else {\n        stream.destroy(err);\n        stream.once(\"error\", websocket.emit.bind(websocket, \"error\"));\n        stream.once(\"close\", websocket.emitClose.bind(websocket));\n    }\n}\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */ function sendAfterClose(websocket, data, cb) {\n    if (data) {\n        const length = toBuffer(data).length;\n        //\n        // The `_bufferedAmount` property is used only when the peer is a client and\n        // the opening handshake fails. Under these circumstances, in fact, the\n        // `setSocket()` method is not called, so the `_socket` and `_sender`\n        // properties are set to `null`.\n        //\n        if (websocket._socket) websocket._sender._bufferedBytes += length;\n        else websocket._bufferedAmount += length;\n    }\n    if (cb) {\n        const err = new Error(`WebSocket is not open: readyState ${websocket.readyState} ` + `(${readyStates[websocket.readyState]})`);\n        cb(err);\n    }\n}\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */ function receiverOnConclude(code, reason) {\n    const websocket = this[kWebSocket];\n    websocket._closeFrameReceived = true;\n    websocket._closeMessage = reason;\n    websocket._closeCode = code;\n    if (websocket._socket[kWebSocket] === undefined) return;\n    websocket._socket.removeListener(\"data\", socketOnData);\n    process.nextTick(resume, websocket._socket);\n    if (code === 1005) websocket.close();\n    else websocket.close(code, reason);\n}\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */ function receiverOnDrain() {\n    this[kWebSocket]._socket.resume();\n}\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */ function receiverOnError(err) {\n    const websocket = this[kWebSocket];\n    if (websocket._socket[kWebSocket] !== undefined) {\n        websocket._socket.removeListener(\"data\", socketOnData);\n        //\n        // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n        // https://github.com/websockets/ws/issues/1940.\n        //\n        process.nextTick(resume, websocket._socket);\n        websocket.close(err[kStatusCode]);\n    }\n    websocket.emit(\"error\", err);\n}\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */ function receiverOnFinish() {\n    this[kWebSocket].emitClose();\n}\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */ function receiverOnMessage(data) {\n    this[kWebSocket].emit(\"message\", data);\n}\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */ function receiverOnPing(data) {\n    const websocket = this[kWebSocket];\n    websocket.pong(data, !websocket._isServer, NOOP);\n    websocket.emit(\"ping\", data);\n}\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */ function receiverOnPong(data) {\n    this[kWebSocket].emit(\"pong\", data);\n}\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */ function resume(stream) {\n    stream.resume();\n}\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */ function socketOnClose() {\n    const websocket = this[kWebSocket];\n    this.removeListener(\"close\", socketOnClose);\n    this.removeListener(\"data\", socketOnData);\n    this.removeListener(\"end\", socketOnEnd);\n    websocket._readyState = WebSocket.CLOSING;\n    let chunk;\n    //\n    // The close frame might not have been received or the `'end'` event emitted,\n    // for example, if the socket was destroyed due to an error. Ensure that the\n    // `receiver` stream is closed after writing any remaining buffered data to\n    // it. If the readable side of the socket is in flowing mode then there is no\n    // buffered data as everything has been already written and `readable.read()`\n    // will return `null`. If instead, the socket is paused, any possible buffered\n    // data will be read as a single chunk.\n    //\n    if (!this._readableState.endEmitted && !websocket._closeFrameReceived && !websocket._receiver._writableState.errorEmitted && (chunk = websocket._socket.read()) !== null) {\n        websocket._receiver.write(chunk);\n    }\n    websocket._receiver.end();\n    this[kWebSocket] = undefined;\n    clearTimeout(websocket._closeTimer);\n    if (websocket._receiver._writableState.finished || websocket._receiver._writableState.errorEmitted) {\n        websocket.emitClose();\n    } else {\n        websocket._receiver.on(\"error\", receiverOnFinish);\n        websocket._receiver.on(\"finish\", receiverOnFinish);\n    }\n}\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */ function socketOnData(chunk) {\n    if (!this[kWebSocket]._receiver.write(chunk)) {\n        this.pause();\n    }\n}\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */ function socketOnEnd() {\n    const websocket = this[kWebSocket];\n    websocket._readyState = WebSocket.CLOSING;\n    websocket._receiver.end();\n    this.end();\n}\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */ function socketOnError() {\n    const websocket = this[kWebSocket];\n    this.removeListener(\"error\", socketOnError);\n    this.on(\"error\", NOOP);\n    if (websocket) {\n        websocket._readyState = WebSocket.CLOSING;\n        this.destroy();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL25vZGVfbW9kdWxlcy93cy9saWIvd2Vic29ja2V0LmpzIiwibWFwcGluZ3MiOiJBQUFBLDJFQUEyRSxHQUUzRTtBQUVBLE1BQU1BLGVBQWVDLG1CQUFPQSxDQUFDO0FBQzdCLE1BQU1DLFFBQVFELG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1FLE9BQU9GLG1CQUFPQSxDQUFDO0FBQ3JCLE1BQU1HLE1BQU1ILG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU1JLE1BQU1KLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU0sRUFBRUssV0FBVyxFQUFFQyxVQUFVLEVBQUUsR0FBR04sbUJBQU9BLENBQUM7QUFDNUMsTUFBTSxFQUFFTyxRQUFRLEVBQUUsR0FBR1AsbUJBQU9BLENBQUM7QUFDN0IsTUFBTSxFQUFFUSxHQUFHLEVBQUUsR0FBR1IsbUJBQU9BLENBQUM7QUFFeEIsTUFBTVMsb0JBQW9CVCxtQkFBT0EsQ0FBQztBQUNsQyxNQUFNVSxXQUFXVixtQkFBT0EsQ0FBQztBQUN6QixNQUFNVyxTQUFTWCxtQkFBT0EsQ0FBQztBQUN2QixNQUFNLEVBQ0pZLFlBQVksRUFDWkMsWUFBWSxFQUNaQyxJQUFJLEVBQ0pDLFdBQVcsRUFDWEMsVUFBVSxFQUNWQyxJQUFJLEVBQ0wsR0FBR2pCLG1CQUFPQSxDQUFDO0FBQ1osTUFBTSxFQUFFa0IsZ0JBQWdCLEVBQUVDLG1CQUFtQixFQUFFLEdBQUduQixtQkFBT0EsQ0FBQztBQUMxRCxNQUFNLEVBQUVvQixNQUFNLEVBQUVDLEtBQUssRUFBRSxHQUFHckIsbUJBQU9BLENBQUM7QUFDbEMsTUFBTSxFQUFFc0IsUUFBUSxFQUFFLEdBQUd0QixtQkFBT0EsQ0FBQztBQUU3QixNQUFNdUIsY0FBYztJQUFDO0lBQWM7SUFBUTtJQUFXO0NBQVM7QUFDL0QsTUFBTUMsbUJBQW1CO0lBQUM7SUFBRztDQUFHO0FBQ2hDLE1BQU1DLGVBQWUsS0FBSztBQUUx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RDtJQUVqQixJQUFJeUgsV0FBVztRQUNiQSxVQUFVbkcsV0FBVyxHQUFHYixVQUFVNkUsT0FBTztRQUN6QyxJQUFJLENBQUNJLE9BQU87SUFDZDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXdzLWNvbm5lY3Rpb24vbm9kZV9tb2R1bGVzL3dzL2xpYi93ZWJzb2NrZXQuanM/MjRlMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tdW51c2VkLXZhcnM6IFtcImVycm9yXCIsIHsgXCJ2YXJzSWdub3JlUGF0dGVyblwiOiBcIl5SZWFkYWJsZSRcIiB9XSAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpO1xuY29uc3QgaHR0cHMgPSByZXF1aXJlKCdodHRwcycpO1xuY29uc3QgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKTtcbmNvbnN0IG5ldCA9IHJlcXVpcmUoJ25ldCcpO1xuY29uc3QgdGxzID0gcmVxdWlyZSgndGxzJyk7XG5jb25zdCB7IHJhbmRvbUJ5dGVzLCBjcmVhdGVIYXNoIH0gPSByZXF1aXJlKCdjcnlwdG8nKTtcbmNvbnN0IHsgUmVhZGFibGUgfSA9IHJlcXVpcmUoJ3N0cmVhbScpO1xuY29uc3QgeyBVUkwgfSA9IHJlcXVpcmUoJ3VybCcpO1xuXG5jb25zdCBQZXJNZXNzYWdlRGVmbGF0ZSA9IHJlcXVpcmUoJy4vcGVybWVzc2FnZS1kZWZsYXRlJyk7XG5jb25zdCBSZWNlaXZlciA9IHJlcXVpcmUoJy4vcmVjZWl2ZXInKTtcbmNvbnN0IFNlbmRlciA9IHJlcXVpcmUoJy4vc2VuZGVyJyk7XG5jb25zdCB7XG4gIEJJTkFSWV9UWVBFUyxcbiAgRU1QVFlfQlVGRkVSLFxuICBHVUlELFxuICBrU3RhdHVzQ29kZSxcbiAga1dlYlNvY2tldCxcbiAgTk9PUFxufSA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJyk7XG5jb25zdCB7IGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIgfSA9IHJlcXVpcmUoJy4vZXZlbnQtdGFyZ2V0Jyk7XG5jb25zdCB7IGZvcm1hdCwgcGFyc2UgfSA9IHJlcXVpcmUoJy4vZXh0ZW5zaW9uJyk7XG5jb25zdCB7IHRvQnVmZmVyIH0gPSByZXF1aXJlKCcuL2J1ZmZlci11dGlsJyk7XG5cbmNvbnN0IHJlYWR5U3RhdGVzID0gWydDT05ORUNUSU5HJywgJ09QRU4nLCAnQ0xPU0lORycsICdDTE9TRUQnXTtcbmNvbnN0IHByb3RvY29sVmVyc2lvbnMgPSBbOCwgMTNdO1xuY29uc3QgY2xvc2VUaW1lb3V0ID0gMzAgKiAxMDAwO1xuXG4vKipcbiAqIENsYXNzIHJlcHJlc2VudGluZyBhIFdlYlNvY2tldC5cbiAqXG4gKiBAZXh0ZW5kcyBFdmVudEVtaXR0ZXJcbiAqL1xuY2xhc3MgV2ViU29ja2V0IGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyBgV2ViU29ja2V0YC5cbiAgICpcbiAgICogQHBhcmFtIHsoU3RyaW5nfFVSTCl9IGFkZHJlc3MgVGhlIFVSTCB0byB3aGljaCB0byBjb25uZWN0XG4gICAqIEBwYXJhbSB7KFN0cmluZ3xTdHJpbmdbXSl9IFtwcm90b2NvbHNdIFRoZSBzdWJwcm90b2NvbHNcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSBDb25uZWN0aW9uIG9wdGlvbnNcbiAgICovXG4gIGNvbnN0cnVjdG9yKGFkZHJlc3MsIHByb3RvY29scywgb3B0aW9ucykge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9iaW5hcnlUeXBlID0gQklOQVJZX1RZUEVTWzBdO1xuICAgIHRoaXMuX2Nsb3NlQ29kZSA9IDEwMDY7XG4gICAgdGhpcy5fY2xvc2VGcmFtZVJlY2VpdmVkID0gZmFsc2U7XG4gICAgdGhpcy5fY2xvc2VGcmFtZVNlbnQgPSBmYWxzZTtcbiAgICB0aGlzLl9jbG9zZU1lc3NhZ2UgPSAnJztcbiAgICB0aGlzLl9jbG9zZVRpbWVyID0gbnVsbDtcbiAgICB0aGlzLl9leHRlbnNpb25zID0ge307XG4gICAgdGhpcy5fcHJvdG9jb2wgPSAnJztcbiAgICB0aGlzLl9yZWFkeVN0YXRlID0gV2ViU29ja2V0LkNPTk5FQ1RJTkc7XG4gICAgdGhpcy5fcmVjZWl2ZXIgPSBudWxsO1xuICAgIHRoaXMuX3NlbmRlciA9IG51bGw7XG4gICAgdGhpcy5fc29ja2V0ID0gbnVsbDtcblxuICAgIGlmIChhZGRyZXNzICE9PSBudWxsKSB7XG4gICAgICB0aGlzLl9idWZmZXJlZEFtb3VudCA9IDA7XG4gICAgICB0aGlzLl9pc1NlcnZlciA9IGZhbHNlO1xuICAgICAgdGhpcy5fcmVkaXJlY3RzID0gMDtcblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkocHJvdG9jb2xzKSkge1xuICAgICAgICBwcm90b2NvbHMgPSBwcm90b2NvbHMuam9pbignLCAnKTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHByb3RvY29scyA9PT0gJ29iamVjdCcgJiYgcHJvdG9jb2xzICE9PSBudWxsKSB7XG4gICAgICAgIG9wdGlvbnMgPSBwcm90b2NvbHM7XG4gICAgICAgIHByb3RvY29scyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgaW5pdEFzQ2xpZW50KHRoaXMsIGFkZHJlc3MsIHByb3RvY29scywgb3B0aW9ucyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2lzU2VydmVyID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBkZXZpYXRlcyBmcm9tIHRoZSBXSEFUV0cgaW50ZXJmYWNlIHNpbmNlIHdzIGRvZXNuJ3Qgc3VwcG9ydCB0aGVcbiAgICogcmVxdWlyZWQgZGVmYXVsdCBcImJsb2JcIiB0eXBlIChpbnN0ZWFkIHdlIGRlZmluZSBhIGN1c3RvbSBcIm5vZGVidWZmZXJcIlxuICAgKiB0eXBlKS5cbiAgICpcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICovXG4gIGdldCBiaW5hcnlUeXBlKCkge1xuICAgIHJldHVybiB0aGlzLl9iaW5hcnlUeXBlO1xuICB9XG5cbiAgc2V0IGJpbmFyeVR5cGUodHlwZSkge1xuICAgIGlmICghQklOQVJZX1RZUEVTLmluY2x1ZGVzKHR5cGUpKSByZXR1cm47XG5cbiAgICB0aGlzLl9iaW5hcnlUeXBlID0gdHlwZTtcblxuICAgIC8vXG4gICAgLy8gQWxsb3cgdG8gY2hhbmdlIGBiaW5hcnlUeXBlYCBvbiB0aGUgZmx5LlxuICAgIC8vXG4gICAgaWYgKHRoaXMuX3JlY2VpdmVyKSB0aGlzLl9yZWNlaXZlci5fYmluYXJ5VHlwZSA9IHR5cGU7XG4gIH1cblxuICAvKipcbiAgICogQHR5cGUge051bWJlcn1cbiAgICovXG4gIGdldCBidWZmZXJlZEFtb3VudCgpIHtcbiAgICBpZiAoIXRoaXMuX3NvY2tldCkgcmV0dXJuIHRoaXMuX2J1ZmZlcmVkQW1vdW50O1xuXG4gICAgcmV0dXJuIHRoaXMuX3NvY2tldC5fd3JpdGFibGVTdGF0ZS5sZW5ndGggKyB0aGlzLl9zZW5kZXIuX2J1ZmZlcmVkQnl0ZXM7XG4gIH1cblxuICAvKipcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICovXG4gIGdldCBleHRlbnNpb25zKCkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLl9leHRlbnNpb25zKS5qb2luKCk7XG4gIH1cblxuICAvKipcbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKi9cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgZ2V0IG9uY2xvc2UoKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIHNldCBvbmNsb3NlKGxpc3RlbmVyKSB7fVxuXG4gIC8qKlxuICAgKiBAdHlwZSB7RnVuY3Rpb259XG4gICAqL1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBnZXQgb25lcnJvcigpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgc2V0IG9uZXJyb3IobGlzdGVuZXIpIHt9XG5cbiAgLyoqXG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICovXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGdldCBvbm9wZW4oKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIHNldCBvbm9wZW4obGlzdGVuZXIpIHt9XG5cbiAgLyoqXG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICovXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGdldCBvbm1lc3NhZ2UoKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIHNldCBvbm1lc3NhZ2UobGlzdGVuZXIpIHt9XG5cbiAgLyoqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqL1xuICBnZXQgcHJvdG9jb2woKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Byb3RvY29sO1xuICB9XG5cbiAgLyoqXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqL1xuICBnZXQgcmVhZHlTdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fcmVhZHlTdGF0ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKi9cbiAgZ2V0IHVybCgpIHtcbiAgICByZXR1cm4gdGhpcy5fdXJsO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB1cCB0aGUgc29ja2V0IGFuZCB0aGUgaW50ZXJuYWwgcmVzb3VyY2VzLlxuICAgKlxuICAgKiBAcGFyYW0geyhuZXQuU29ja2V0fHRscy5Tb2NrZXQpfSBzb2NrZXQgVGhlIG5ldHdvcmsgc29ja2V0IGJldHdlZW4gdGhlXG4gICAqICAgICBzZXJ2ZXIgYW5kIGNsaWVudFxuICAgKiBAcGFyYW0ge0J1ZmZlcn0gaGVhZCBUaGUgZmlyc3QgcGFja2V0IG9mIHRoZSB1cGdyYWRlZCBzdHJlYW1cbiAgICogQHBhcmFtIHtOdW1iZXJ9IFttYXhQYXlsb2FkPTBdIFRoZSBtYXhpbXVtIGFsbG93ZWQgbWVzc2FnZSBzaXplXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBzZXRTb2NrZXQoc29ja2V0LCBoZWFkLCBtYXhQYXlsb2FkKSB7XG4gICAgY29uc3QgcmVjZWl2ZXIgPSBuZXcgUmVjZWl2ZXIoXG4gICAgICB0aGlzLmJpbmFyeVR5cGUsXG4gICAgICB0aGlzLl9leHRlbnNpb25zLFxuICAgICAgdGhpcy5faXNTZXJ2ZXIsXG4gICAgICBtYXhQYXlsb2FkXG4gICAgKTtcblxuICAgIHRoaXMuX3NlbmRlciA9IG5ldyBTZW5kZXIoc29ja2V0LCB0aGlzLl9leHRlbnNpb25zKTtcbiAgICB0aGlzLl9yZWNlaXZlciA9IHJlY2VpdmVyO1xuICAgIHRoaXMuX3NvY2tldCA9IHNvY2tldDtcblxuICAgIHJlY2VpdmVyW2tXZWJTb2NrZXRdID0gdGhpcztcbiAgICBzb2NrZXRba1dlYlNvY2tldF0gPSB0aGlzO1xuXG4gICAgcmVjZWl2ZXIub24oJ2NvbmNsdWRlJywgcmVjZWl2ZXJPbkNvbmNsdWRlKTtcbiAgICByZWNlaXZlci5vbignZHJhaW4nLCByZWNlaXZlck9uRHJhaW4pO1xuICAgIHJlY2VpdmVyLm9uKCdlcnJvcicsIHJlY2VpdmVyT25FcnJvcik7XG4gICAgcmVjZWl2ZXIub24oJ21lc3NhZ2UnLCByZWNlaXZlck9uTWVzc2FnZSk7XG4gICAgcmVjZWl2ZXIub24oJ3BpbmcnLCByZWNlaXZlck9uUGluZyk7XG4gICAgcmVjZWl2ZXIub24oJ3BvbmcnLCByZWNlaXZlck9uUG9uZyk7XG5cbiAgICBzb2NrZXQuc2V0VGltZW91dCgwKTtcbiAgICBzb2NrZXQuc2V0Tm9EZWxheSgpO1xuXG4gICAgaWYgKGhlYWQubGVuZ3RoID4gMCkgc29ja2V0LnVuc2hpZnQoaGVhZCk7XG5cbiAgICBzb2NrZXQub24oJ2Nsb3NlJywgc29ja2V0T25DbG9zZSk7XG4gICAgc29ja2V0Lm9uKCdkYXRhJywgc29ja2V0T25EYXRhKTtcbiAgICBzb2NrZXQub24oJ2VuZCcsIHNvY2tldE9uRW5kKTtcbiAgICBzb2NrZXQub24oJ2Vycm9yJywgc29ja2V0T25FcnJvcik7XG5cbiAgICB0aGlzLl9yZWFkeVN0YXRlID0gV2ViU29ja2V0Lk9QRU47XG4gICAgdGhpcy5lbWl0KCdvcGVuJyk7XG4gIH1cblxuICAvKipcbiAgICogRW1pdCB0aGUgYCdjbG9zZSdgIGV2ZW50LlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZW1pdENsb3NlKCkge1xuICAgIGlmICghdGhpcy5fc29ja2V0KSB7XG4gICAgICB0aGlzLl9yZWFkeVN0YXRlID0gV2ViU29ja2V0LkNMT1NFRDtcbiAgICAgIHRoaXMuZW1pdCgnY2xvc2UnLCB0aGlzLl9jbG9zZUNvZGUsIHRoaXMuX2Nsb3NlTWVzc2FnZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2V4dGVuc2lvbnNbUGVyTWVzc2FnZURlZmxhdGUuZXh0ZW5zaW9uTmFtZV0pIHtcbiAgICAgIHRoaXMuX2V4dGVuc2lvbnNbUGVyTWVzc2FnZURlZmxhdGUuZXh0ZW5zaW9uTmFtZV0uY2xlYW51cCgpO1xuICAgIH1cblxuICAgIHRoaXMuX3JlY2VpdmVyLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICAgIHRoaXMuX3JlYWR5U3RhdGUgPSBXZWJTb2NrZXQuQ0xPU0VEO1xuICAgIHRoaXMuZW1pdCgnY2xvc2UnLCB0aGlzLl9jbG9zZUNvZGUsIHRoaXMuX2Nsb3NlTWVzc2FnZSk7XG4gIH1cblxuICAvKipcbiAgICogU3RhcnQgYSBjbG9zaW5nIGhhbmRzaGFrZS5cbiAgICpcbiAgICogICAgICAgICAgKy0tLS0tLS0tLS0rICAgKy0tLS0tLS0tLS0tKyAgICstLS0tLS0tLS0tK1xuICAgKiAgICAgLSAtIC18d3MuY2xvc2UoKXwtLT58Y2xvc2UgZnJhbWV8LS0+fHdzLmNsb3NlKCl8LSAtIC1cbiAgICogICAgfCAgICAgKy0tLS0tLS0tLS0rICAgKy0tLS0tLS0tLS0tKyAgICstLS0tLS0tLS0tKyAgICAgfFxuICAgKiAgICAgICAgICArLS0tLS0tLS0tLSsgICArLS0tLS0tLS0tLS0rICAgICAgICAgfFxuICAgKiBDTE9TSU5HICB8d3MuY2xvc2UoKXw8LS18Y2xvc2UgZnJhbWV8PC0tKy0tLS0tKyAgICAgICBDTE9TSU5HXG4gICAqICAgICAgICAgICstLS0tLS0tLS0tKyAgICstLS0tLS0tLS0tLSsgICB8XG4gICAqICAgIHwgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICB8ICAgKy0tLSsgICAgICAgIHxcbiAgICogICAgICAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSstLT58ZmlufCAtIC0gLSAtXG4gICAqICAgIHwgICAgICAgICArLS0tKyAgICAgICAgICAgICAgICAgICAgICB8ICAgKy0tLStcbiAgICogICAgIC0gLSAtIC0gLXxmaW58PC0tLS0tLS0tLS0tLS0tLS0tLS0tLStcbiAgICogICAgICAgICAgICAgICstLS0rXG4gICAqXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBbY29kZV0gU3RhdHVzIGNvZGUgZXhwbGFpbmluZyB3aHkgdGhlIGNvbm5lY3Rpb24gaXMgY2xvc2luZ1xuICAgKiBAcGFyYW0ge1N0cmluZ30gW2RhdGFdIEEgc3RyaW5nIGV4cGxhaW5pbmcgd2h5IHRoZSBjb25uZWN0aW9uIGlzIGNsb3NpbmdcbiAgICogQHB1YmxpY1xuICAgKi9cbiAgY2xvc2UoY29kZSwgZGF0YSkge1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5DTE9TRUQpIHJldHVybjtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuQ09OTkVDVElORykge1xuICAgICAgY29uc3QgbXNnID0gJ1dlYlNvY2tldCB3YXMgY2xvc2VkIGJlZm9yZSB0aGUgY29ubmVjdGlvbiB3YXMgZXN0YWJsaXNoZWQnO1xuICAgICAgcmV0dXJuIGFib3J0SGFuZHNoYWtlKHRoaXMsIHRoaXMuX3JlcSwgbXNnKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuQ0xPU0lORykge1xuICAgICAgaWYgKFxuICAgICAgICB0aGlzLl9jbG9zZUZyYW1lU2VudCAmJlxuICAgICAgICAodGhpcy5fY2xvc2VGcmFtZVJlY2VpdmVkIHx8IHRoaXMuX3JlY2VpdmVyLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZClcbiAgICAgICkge1xuICAgICAgICB0aGlzLl9zb2NrZXQuZW5kKCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9yZWFkeVN0YXRlID0gV2ViU29ja2V0LkNMT1NJTkc7XG4gICAgdGhpcy5fc2VuZGVyLmNsb3NlKGNvZGUsIGRhdGEsICF0aGlzLl9pc1NlcnZlciwgKGVycikgPT4ge1xuICAgICAgLy9cbiAgICAgIC8vIFRoaXMgZXJyb3IgaXMgaGFuZGxlZCBieSB0aGUgYCdlcnJvcidgIGxpc3RlbmVyIG9uIHRoZSBzb2NrZXQuIFdlIG9ubHlcbiAgICAgIC8vIHdhbnQgdG8ga25vdyBpZiB0aGUgY2xvc2UgZnJhbWUgaGFzIGJlZW4gc2VudCBoZXJlLlxuICAgICAgLy9cbiAgICAgIGlmIChlcnIpIHJldHVybjtcblxuICAgICAgdGhpcy5fY2xvc2VGcmFtZVNlbnQgPSB0cnVlO1xuXG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMuX2Nsb3NlRnJhbWVSZWNlaXZlZCB8fFxuICAgICAgICB0aGlzLl9yZWNlaXZlci5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWRcbiAgICAgICkge1xuICAgICAgICB0aGlzLl9zb2NrZXQuZW5kKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvL1xuICAgIC8vIFNwZWNpZnkgYSB0aW1lb3V0IGZvciB0aGUgY2xvc2luZyBoYW5kc2hha2UgdG8gY29tcGxldGUuXG4gICAgLy9cbiAgICB0aGlzLl9jbG9zZVRpbWVyID0gc2V0VGltZW91dChcbiAgICAgIHRoaXMuX3NvY2tldC5kZXN0cm95LmJpbmQodGhpcy5fc29ja2V0KSxcbiAgICAgIGNsb3NlVGltZW91dFxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogU2VuZCBhIHBpbmcuXG4gICAqXG4gICAqIEBwYXJhbSB7Kn0gW2RhdGFdIFRoZSBkYXRhIHRvIHNlbmRcbiAgICogQHBhcmFtIHtCb29sZWFufSBbbWFza10gSW5kaWNhdGVzIHdoZXRoZXIgb3Igbm90IHRvIG1hc2sgYGRhdGFgXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYl0gQ2FsbGJhY2sgd2hpY2ggaXMgZXhlY3V0ZWQgd2hlbiB0aGUgcGluZyBpcyBzZW50XG4gICAqIEBwdWJsaWNcbiAgICovXG4gIHBpbmcoZGF0YSwgbWFzaywgY2IpIHtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuQ09OTkVDVElORykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdXZWJTb2NrZXQgaXMgbm90IG9wZW46IHJlYWR5U3RhdGUgMCAoQ09OTkVDVElORyknKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNiID0gZGF0YTtcbiAgICAgIGRhdGEgPSBtYXNrID0gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG1hc2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNiID0gbWFzaztcbiAgICAgIG1hc2sgPSB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnbnVtYmVyJykgZGF0YSA9IGRhdGEudG9TdHJpbmcoKTtcblxuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgIT09IFdlYlNvY2tldC5PUEVOKSB7XG4gICAgICBzZW5kQWZ0ZXJDbG9zZSh0aGlzLCBkYXRhLCBjYik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKG1hc2sgPT09IHVuZGVmaW5lZCkgbWFzayA9ICF0aGlzLl9pc1NlcnZlcjtcbiAgICB0aGlzLl9zZW5kZXIucGluZyhkYXRhIHx8IEVNUFRZX0JVRkZFUiwgbWFzaywgY2IpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNlbmQgYSBwb25nLlxuICAgKlxuICAgKiBAcGFyYW0geyp9IFtkYXRhXSBUaGUgZGF0YSB0byBzZW5kXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW21hc2tdIEluZGljYXRlcyB3aGV0aGVyIG9yIG5vdCB0byBtYXNrIGBkYXRhYFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2JdIENhbGxiYWNrIHdoaWNoIGlzIGV4ZWN1dGVkIHdoZW4gdGhlIHBvbmcgaXMgc2VudFxuICAgKiBAcHVibGljXG4gICAqL1xuICBwb25nKGRhdGEsIG1hc2ssIGNiKSB7XG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gV2ViU29ja2V0LkNPTk5FQ1RJTkcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignV2ViU29ja2V0IGlzIG5vdCBvcGVuOiByZWFkeVN0YXRlIDAgKENPTk5FQ1RJTkcpJyk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYiA9IGRhdGE7XG4gICAgICBkYXRhID0gbWFzayA9IHVuZGVmaW5lZDtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBtYXNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYiA9IG1hc2s7XG4gICAgICBtYXNrID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ251bWJlcicpIGRhdGEgPSBkYXRhLnRvU3RyaW5nKCk7XG5cbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlICE9PSBXZWJTb2NrZXQuT1BFTikge1xuICAgICAgc2VuZEFmdGVyQ2xvc2UodGhpcywgZGF0YSwgY2IpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChtYXNrID09PSB1bmRlZmluZWQpIG1hc2sgPSAhdGhpcy5faXNTZXJ2ZXI7XG4gICAgdGhpcy5fc2VuZGVyLnBvbmcoZGF0YSB8fCBFTVBUWV9CVUZGRVIsIG1hc2ssIGNiKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kIGEgZGF0YSBtZXNzYWdlLlxuICAgKlxuICAgKiBAcGFyYW0geyp9IGRhdGEgVGhlIG1lc3NhZ2UgdG8gc2VuZFxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIE9wdGlvbnMgb2JqZWN0XG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuY29tcHJlc3NdIFNwZWNpZmllcyB3aGV0aGVyIG9yIG5vdCB0byBjb21wcmVzc1xuICAgKiAgICAgYGRhdGFgXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuYmluYXJ5XSBTcGVjaWZpZXMgd2hldGhlciBgZGF0YWAgaXMgYmluYXJ5IG9yXG4gICAqICAgICB0ZXh0XG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuZmluPXRydWVdIFNwZWNpZmllcyB3aGV0aGVyIHRoZSBmcmFnbWVudCBpcyB0aGVcbiAgICogICAgIGxhc3Qgb25lXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMubWFza10gU3BlY2lmaWVzIHdoZXRoZXIgb3Igbm90IHRvIG1hc2sgYGRhdGFgXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYl0gQ2FsbGJhY2sgd2hpY2ggaXMgZXhlY3V0ZWQgd2hlbiBkYXRhIGlzIHdyaXR0ZW4gb3V0XG4gICAqIEBwdWJsaWNcbiAgICovXG4gIHNlbmQoZGF0YSwgb3B0aW9ucywgY2IpIHtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuQ09OTkVDVElORykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdXZWJTb2NrZXQgaXMgbm90IG9wZW46IHJlYWR5U3RhdGUgMCAoQ09OTkVDVElORyknKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNiID0gb3B0aW9ucztcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdudW1iZXInKSBkYXRhID0gZGF0YS50b1N0cmluZygpO1xuXG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSAhPT0gV2ViU29ja2V0Lk9QRU4pIHtcbiAgICAgIHNlbmRBZnRlckNsb3NlKHRoaXMsIGRhdGEsIGNiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBvcHRzID0ge1xuICAgICAgYmluYXJ5OiB0eXBlb2YgZGF0YSAhPT0gJ3N0cmluZycsXG4gICAgICBtYXNrOiAhdGhpcy5faXNTZXJ2ZXIsXG4gICAgICBjb21wcmVzczogdHJ1ZSxcbiAgICAgIGZpbjogdHJ1ZSxcbiAgICAgIC4uLm9wdGlvbnNcbiAgICB9O1xuXG4gICAgaWYgKCF0aGlzLl9leHRlbnNpb25zW1Blck1lc3NhZ2VEZWZsYXRlLmV4dGVuc2lvbk5hbWVdKSB7XG4gICAgICBvcHRzLmNvbXByZXNzID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdGhpcy5fc2VuZGVyLnNlbmQoZGF0YSB8fCBFTVBUWV9CVUZGRVIsIG9wdHMsIGNiKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBGb3JjaWJseSBjbG9zZSB0aGUgY29ubmVjdGlvbi5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKi9cbiAgdGVybWluYXRlKCkge1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5DTE9TRUQpIHJldHVybjtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuQ09OTkVDVElORykge1xuICAgICAgY29uc3QgbXNnID0gJ1dlYlNvY2tldCB3YXMgY2xvc2VkIGJlZm9yZSB0aGUgY29ubmVjdGlvbiB3YXMgZXN0YWJsaXNoZWQnO1xuICAgICAgcmV0dXJuIGFib3J0SGFuZHNoYWtlKHRoaXMsIHRoaXMuX3JlcSwgbXNnKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fc29ja2V0KSB7XG4gICAgICB0aGlzLl9yZWFkeVN0YXRlID0gV2ViU29ja2V0LkNMT1NJTkc7XG4gICAgICB0aGlzLl9zb2NrZXQuZGVzdHJveSgpO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEBjb25zdGFudCB7TnVtYmVyfSBDT05ORUNUSU5HXG4gKiBAbWVtYmVyb2YgV2ViU29ja2V0XG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXZWJTb2NrZXQsICdDT05ORUNUSU5HJywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICB2YWx1ZTogcmVhZHlTdGF0ZXMuaW5kZXhPZignQ09OTkVDVElORycpXG59KTtcblxuLyoqXG4gKiBAY29uc3RhbnQge051bWJlcn0gQ09OTkVDVElOR1xuICogQG1lbWJlcm9mIFdlYlNvY2tldC5wcm90b3R5cGVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KFdlYlNvY2tldC5wcm90b3R5cGUsICdDT05ORUNUSU5HJywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICB2YWx1ZTogcmVhZHlTdGF0ZXMuaW5kZXhPZignQ09OTkVDVElORycpXG59KTtcblxuLyoqXG4gKiBAY29uc3RhbnQge051bWJlcn0gT1BFTlxuICogQG1lbWJlcm9mIFdlYlNvY2tldFxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoV2ViU29ja2V0LCAnT1BFTicsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgdmFsdWU6IHJlYWR5U3RhdGVzLmluZGV4T2YoJ09QRU4nKVxufSk7XG5cbi8qKlxuICogQGNvbnN0YW50IHtOdW1iZXJ9IE9QRU5cbiAqIEBtZW1iZXJvZiBXZWJTb2NrZXQucHJvdG90eXBlXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXZWJTb2NrZXQucHJvdG90eXBlLCAnT1BFTicsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgdmFsdWU6IHJlYWR5U3RhdGVzLmluZGV4T2YoJ09QRU4nKVxufSk7XG5cbi8qKlxuICogQGNvbnN0YW50IHtOdW1iZXJ9IENMT1NJTkdcbiAqIEBtZW1iZXJvZiBXZWJTb2NrZXRcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KFdlYlNvY2tldCwgJ0NMT1NJTkcnLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIHZhbHVlOiByZWFkeVN0YXRlcy5pbmRleE9mKCdDTE9TSU5HJylcbn0pO1xuXG4vKipcbiAqIEBjb25zdGFudCB7TnVtYmVyfSBDTE9TSU5HXG4gKiBAbWVtYmVyb2YgV2ViU29ja2V0LnByb3RvdHlwZVxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoV2ViU29ja2V0LnByb3RvdHlwZSwgJ0NMT1NJTkcnLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIHZhbHVlOiByZWFkeVN0YXRlcy5pbmRleE9mKCdDTE9TSU5HJylcbn0pO1xuXG4vKipcbiAqIEBjb25zdGFudCB7TnVtYmVyfSBDTE9TRURcbiAqIEBtZW1iZXJvZiBXZWJTb2NrZXRcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KFdlYlNvY2tldCwgJ0NMT1NFRCcsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgdmFsdWU6IHJlYWR5U3RhdGVzLmluZGV4T2YoJ0NMT1NFRCcpXG59KTtcblxuLyoqXG4gKiBAY29uc3RhbnQge051bWJlcn0gQ0xPU0VEXG4gKiBAbWVtYmVyb2YgV2ViU29ja2V0LnByb3RvdHlwZVxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoV2ViU29ja2V0LnByb3RvdHlwZSwgJ0NMT1NFRCcsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgdmFsdWU6IHJlYWR5U3RhdGVzLmluZGV4T2YoJ0NMT1NFRCcpXG59KTtcblxuW1xuICAnYmluYXJ5VHlwZScsXG4gICdidWZmZXJlZEFtb3VudCcsXG4gICdleHRlbnNpb25zJyxcbiAgJ3Byb3RvY29sJyxcbiAgJ3JlYWR5U3RhdGUnLFxuICAndXJsJ1xuXS5mb3JFYWNoKChwcm9wZXJ0eSkgPT4ge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoV2ViU29ja2V0LnByb3RvdHlwZSwgcHJvcGVydHksIHsgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbn0pO1xuXG4vL1xuLy8gQWRkIHRoZSBgb25vcGVuYCwgYG9uZXJyb3JgLCBgb25jbG9zZWAsIGFuZCBgb25tZXNzYWdlYCBhdHRyaWJ1dGVzLlxuLy8gU2VlIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2NvbW1zLmh0bWwjdGhlLXdlYnNvY2tldC1pbnRlcmZhY2Vcbi8vXG5bJ29wZW4nLCAnZXJyb3InLCAnY2xvc2UnLCAnbWVzc2FnZSddLmZvckVhY2goKG1ldGhvZCkgPT4ge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoV2ViU29ja2V0LnByb3RvdHlwZSwgYG9uJHttZXRob2R9YCwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0KCkge1xuICAgICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5saXN0ZW5lcnMobWV0aG9kKTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChsaXN0ZW5lcnNbaV0uX2xpc3RlbmVyKSByZXR1cm4gbGlzdGVuZXJzW2ldLl9saXN0ZW5lcjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9LFxuICAgIHNldChsaXN0ZW5lcikge1xuICAgICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5saXN0ZW5lcnMobWV0aG9kKTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vXG4gICAgICAgIC8vIFJlbW92ZSBvbmx5IHRoZSBsaXN0ZW5lcnMgYWRkZWQgdmlhIGBhZGRFdmVudExpc3RlbmVyYC5cbiAgICAgICAgLy9cbiAgICAgICAgaWYgKGxpc3RlbmVyc1tpXS5fbGlzdGVuZXIpIHRoaXMucmVtb3ZlTGlzdGVuZXIobWV0aG9kLCBsaXN0ZW5lcnNbaV0pO1xuICAgICAgfVxuICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKG1ldGhvZCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfSk7XG59KTtcblxuV2ViU29ja2V0LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcjtcbldlYlNvY2tldC5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA9IHJlbW92ZUV2ZW50TGlzdGVuZXI7XG5cbm1vZHVsZS5leHBvcnRzID0gV2ViU29ja2V0O1xuXG4vKipcbiAqIEluaXRpYWxpemUgYSBXZWJTb2NrZXQgY2xpZW50LlxuICpcbiAqIEBwYXJhbSB7V2ViU29ja2V0fSB3ZWJzb2NrZXQgVGhlIGNsaWVudCB0byBpbml0aWFsaXplXG4gKiBAcGFyYW0geyhTdHJpbmd8VVJMKX0gYWRkcmVzcyBUaGUgVVJMIHRvIHdoaWNoIHRvIGNvbm5lY3RcbiAqIEBwYXJhbSB7U3RyaW5nfSBbcHJvdG9jb2xzXSBUaGUgc3VicHJvdG9jb2xzXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIENvbm5lY3Rpb24gb3B0aW9uc1xuICogQHBhcmFtIHsoQm9vbGVhbnxPYmplY3QpfSBbb3B0aW9ucy5wZXJNZXNzYWdlRGVmbGF0ZT10cnVlXSBFbmFibGUvZGlzYWJsZVxuICogICAgIHBlcm1lc3NhZ2UtZGVmbGF0ZVxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLmhhbmRzaGFrZVRpbWVvdXRdIFRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzIGZvciB0aGVcbiAqICAgICBoYW5kc2hha2UgcmVxdWVzdFxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLnByb3RvY29sVmVyc2lvbj0xM10gVmFsdWUgb2YgdGhlXG4gKiAgICAgYFNlYy1XZWJTb2NrZXQtVmVyc2lvbmAgaGVhZGVyXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMub3JpZ2luXSBWYWx1ZSBvZiB0aGUgYE9yaWdpbmAgb3JcbiAqICAgICBgU2VjLVdlYlNvY2tldC1PcmlnaW5gIGhlYWRlclxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLm1heFBheWxvYWQ9MTA0ODU3NjAwXSBUaGUgbWF4aW11bSBhbGxvd2VkIG1lc3NhZ2VcbiAqICAgICBzaXplXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmZvbGxvd1JlZGlyZWN0cz1mYWxzZV0gV2hldGhlciBvciBub3QgdG8gZm9sbG93XG4gKiAgICAgcmVkaXJlY3RzXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMubWF4UmVkaXJlY3RzPTEwXSBUaGUgbWF4aW11bSBudW1iZXIgb2YgcmVkaXJlY3RzXG4gKiAgICAgYWxsb3dlZFxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gaW5pdEFzQ2xpZW50KHdlYnNvY2tldCwgYWRkcmVzcywgcHJvdG9jb2xzLCBvcHRpb25zKSB7XG4gIGNvbnN0IG9wdHMgPSB7XG4gICAgcHJvdG9jb2xWZXJzaW9uOiBwcm90b2NvbFZlcnNpb25zWzFdLFxuICAgIG1heFBheWxvYWQ6IDEwMCAqIDEwMjQgKiAxMDI0LFxuICAgIHBlck1lc3NhZ2VEZWZsYXRlOiB0cnVlLFxuICAgIGZvbGxvd1JlZGlyZWN0czogZmFsc2UsXG4gICAgbWF4UmVkaXJlY3RzOiAxMCxcbiAgICAuLi5vcHRpb25zLFxuICAgIGNyZWF0ZUNvbm5lY3Rpb246IHVuZGVmaW5lZCxcbiAgICBzb2NrZXRQYXRoOiB1bmRlZmluZWQsXG4gICAgaG9zdG5hbWU6IHVuZGVmaW5lZCxcbiAgICBwcm90b2NvbDogdW5kZWZpbmVkLFxuICAgIHRpbWVvdXQ6IHVuZGVmaW5lZCxcbiAgICBtZXRob2Q6IHVuZGVmaW5lZCxcbiAgICBob3N0OiB1bmRlZmluZWQsXG4gICAgcGF0aDogdW5kZWZpbmVkLFxuICAgIHBvcnQ6IHVuZGVmaW5lZFxuICB9O1xuXG4gIGlmICghcHJvdG9jb2xWZXJzaW9ucy5pbmNsdWRlcyhvcHRzLnByb3RvY29sVmVyc2lvbikpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcbiAgICAgIGBVbnN1cHBvcnRlZCBwcm90b2NvbCB2ZXJzaW9uOiAke29wdHMucHJvdG9jb2xWZXJzaW9ufSBgICtcbiAgICAgICAgYChzdXBwb3J0ZWQgdmVyc2lvbnM6ICR7cHJvdG9jb2xWZXJzaW9ucy5qb2luKCcsICcpfSlgXG4gICAgKTtcbiAgfVxuXG4gIGxldCBwYXJzZWRVcmw7XG5cbiAgaWYgKGFkZHJlc3MgaW5zdGFuY2VvZiBVUkwpIHtcbiAgICBwYXJzZWRVcmwgPSBhZGRyZXNzO1xuICAgIHdlYnNvY2tldC5fdXJsID0gYWRkcmVzcy5ocmVmO1xuICB9IGVsc2Uge1xuICAgIHBhcnNlZFVybCA9IG5ldyBVUkwoYWRkcmVzcyk7XG4gICAgd2Vic29ja2V0Ll91cmwgPSBhZGRyZXNzO1xuICB9XG5cbiAgY29uc3QgaXNVbml4U29ja2V0ID0gcGFyc2VkVXJsLnByb3RvY29sID09PSAnd3MrdW5peDonO1xuXG4gIGlmICghcGFyc2VkVXJsLmhvc3QgJiYgKCFpc1VuaXhTb2NrZXQgfHwgIXBhcnNlZFVybC5wYXRobmFtZSkpIHtcbiAgICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoYEludmFsaWQgVVJMOiAke3dlYnNvY2tldC51cmx9YCk7XG5cbiAgICBpZiAod2Vic29ja2V0Ll9yZWRpcmVjdHMgPT09IDApIHtcbiAgICAgIHRocm93IGVycjtcbiAgICB9IGVsc2Uge1xuICAgICAgZW1pdEVycm9yQW5kQ2xvc2Uod2Vic29ja2V0LCBlcnIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGlzU2VjdXJlID1cbiAgICBwYXJzZWRVcmwucHJvdG9jb2wgPT09ICd3c3M6JyB8fCBwYXJzZWRVcmwucHJvdG9jb2wgPT09ICdodHRwczonO1xuICBjb25zdCBkZWZhdWx0UG9ydCA9IGlzU2VjdXJlID8gNDQzIDogODA7XG4gIGNvbnN0IGtleSA9IHJhbmRvbUJ5dGVzKDE2KS50b1N0cmluZygnYmFzZTY0Jyk7XG4gIGNvbnN0IGdldCA9IGlzU2VjdXJlID8gaHR0cHMuZ2V0IDogaHR0cC5nZXQ7XG4gIGxldCBwZXJNZXNzYWdlRGVmbGF0ZTtcblxuICBvcHRzLmNyZWF0ZUNvbm5lY3Rpb24gPSBpc1NlY3VyZSA/IHRsc0Nvbm5lY3QgOiBuZXRDb25uZWN0O1xuICBvcHRzLmRlZmF1bHRQb3J0ID0gb3B0cy5kZWZhdWx0UG9ydCB8fCBkZWZhdWx0UG9ydDtcbiAgb3B0cy5wb3J0ID0gcGFyc2VkVXJsLnBvcnQgfHwgZGVmYXVsdFBvcnQ7XG4gIG9wdHMuaG9zdCA9IHBhcnNlZFVybC5ob3N0bmFtZS5zdGFydHNXaXRoKCdbJylcbiAgICA/IHBhcnNlZFVybC5ob3N0bmFtZS5zbGljZSgxLCAtMSlcbiAgICA6IHBhcnNlZFVybC5ob3N0bmFtZTtcbiAgb3B0cy5oZWFkZXJzID0ge1xuICAgICdTZWMtV2ViU29ja2V0LVZlcnNpb24nOiBvcHRzLnByb3RvY29sVmVyc2lvbixcbiAgICAnU2VjLVdlYlNvY2tldC1LZXknOiBrZXksXG4gICAgQ29ubmVjdGlvbjogJ1VwZ3JhZGUnLFxuICAgIFVwZ3JhZGU6ICd3ZWJzb2NrZXQnLFxuICAgIC4uLm9wdHMuaGVhZGVyc1xuICB9O1xuICBvcHRzLnBhdGggPSBwYXJzZWRVcmwucGF0aG5hbWUgKyBwYXJzZWRVcmwuc2VhcmNoO1xuICBvcHRzLnRpbWVvdXQgPSBvcHRzLmhhbmRzaGFrZVRpbWVvdXQ7XG5cbiAgaWYgKG9wdHMucGVyTWVzc2FnZURlZmxhdGUpIHtcbiAgICBwZXJNZXNzYWdlRGVmbGF0ZSA9IG5ldyBQZXJNZXNzYWdlRGVmbGF0ZShcbiAgICAgIG9wdHMucGVyTWVzc2FnZURlZmxhdGUgIT09IHRydWUgPyBvcHRzLnBlck1lc3NhZ2VEZWZsYXRlIDoge30sXG4gICAgICBmYWxzZSxcbiAgICAgIG9wdHMubWF4UGF5bG9hZFxuICAgICk7XG4gICAgb3B0cy5oZWFkZXJzWydTZWMtV2ViU29ja2V0LUV4dGVuc2lvbnMnXSA9IGZvcm1hdCh7XG4gICAgICBbUGVyTWVzc2FnZURlZmxhdGUuZXh0ZW5zaW9uTmFtZV06IHBlck1lc3NhZ2VEZWZsYXRlLm9mZmVyKClcbiAgICB9KTtcbiAgfVxuICBpZiAocHJvdG9jb2xzKSB7XG4gICAgb3B0cy5oZWFkZXJzWydTZWMtV2ViU29ja2V0LVByb3RvY29sJ10gPSBwcm90b2NvbHM7XG4gIH1cbiAgaWYgKG9wdHMub3JpZ2luKSB7XG4gICAgaWYgKG9wdHMucHJvdG9jb2xWZXJzaW9uIDwgMTMpIHtcbiAgICAgIG9wdHMuaGVhZGVyc1snU2VjLVdlYlNvY2tldC1PcmlnaW4nXSA9IG9wdHMub3JpZ2luO1xuICAgIH0gZWxzZSB7XG4gICAgICBvcHRzLmhlYWRlcnMuT3JpZ2luID0gb3B0cy5vcmlnaW47XG4gICAgfVxuICB9XG4gIGlmIChwYXJzZWRVcmwudXNlcm5hbWUgfHwgcGFyc2VkVXJsLnBhc3N3b3JkKSB7XG4gICAgb3B0cy5hdXRoID0gYCR7cGFyc2VkVXJsLnVzZXJuYW1lfToke3BhcnNlZFVybC5wYXNzd29yZH1gO1xuICB9XG5cbiAgaWYgKGlzVW5peFNvY2tldCkge1xuICAgIGNvbnN0IHBhcnRzID0gb3B0cy5wYXRoLnNwbGl0KCc6Jyk7XG5cbiAgICBvcHRzLnNvY2tldFBhdGggPSBwYXJ0c1swXTtcbiAgICBvcHRzLnBhdGggPSBwYXJ0c1sxXTtcbiAgfVxuXG4gIGlmIChvcHRzLmZvbGxvd1JlZGlyZWN0cykge1xuICAgIGlmICh3ZWJzb2NrZXQuX3JlZGlyZWN0cyA9PT0gMCkge1xuICAgICAgd2Vic29ja2V0Ll9vcmlnaW5hbFVuaXhTb2NrZXQgPSBpc1VuaXhTb2NrZXQ7XG4gICAgICB3ZWJzb2NrZXQuX29yaWdpbmFsU2VjdXJlID0gaXNTZWN1cmU7XG4gICAgICB3ZWJzb2NrZXQuX29yaWdpbmFsSG9zdE9yU29ja2V0UGF0aCA9IGlzVW5peFNvY2tldFxuICAgICAgICA/IG9wdHMuc29ja2V0UGF0aFxuICAgICAgICA6IHBhcnNlZFVybC5ob3N0O1xuXG4gICAgICBjb25zdCBoZWFkZXJzID0gb3B0aW9ucyAmJiBvcHRpb25zLmhlYWRlcnM7XG5cbiAgICAgIC8vXG4gICAgICAvLyBTaGFsbG93IGNvcHkgdGhlIHVzZXIgcHJvdmlkZWQgb3B0aW9ucyBzbyB0aGF0IGhlYWRlcnMgY2FuIGJlIGNoYW5nZWRcbiAgICAgIC8vIHdpdGhvdXQgbXV0YXRpbmcgdGhlIG9yaWdpbmFsIG9iamVjdC5cbiAgICAgIC8vXG4gICAgICBvcHRpb25zID0geyAuLi5vcHRpb25zLCBoZWFkZXJzOiB7fSB9O1xuXG4gICAgICBpZiAoaGVhZGVycykge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhoZWFkZXJzKSkge1xuICAgICAgICAgIG9wdGlvbnMuaGVhZGVyc1trZXkudG9Mb3dlckNhc2UoKV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBpc1NhbWVIb3N0ID0gaXNVbml4U29ja2V0XG4gICAgICAgID8gd2Vic29ja2V0Ll9vcmlnaW5hbFVuaXhTb2NrZXRcbiAgICAgICAgICA/IG9wdHMuc29ja2V0UGF0aCA9PT0gd2Vic29ja2V0Ll9vcmlnaW5hbEhvc3RPclNvY2tldFBhdGhcbiAgICAgICAgICA6IGZhbHNlXG4gICAgICAgIDogd2Vic29ja2V0Ll9vcmlnaW5hbFVuaXhTb2NrZXRcbiAgICAgICAgPyBmYWxzZVxuICAgICAgICA6IHBhcnNlZFVybC5ob3N0ID09PSB3ZWJzb2NrZXQuX29yaWdpbmFsSG9zdE9yU29ja2V0UGF0aDtcblxuICAgICAgaWYgKCFpc1NhbWVIb3N0IHx8ICh3ZWJzb2NrZXQuX29yaWdpbmFsU2VjdXJlICYmICFpc1NlY3VyZSkpIHtcbiAgICAgICAgLy9cbiAgICAgICAgLy8gTWF0Y2ggY3VybCA3Ljc3LjAgYmVoYXZpb3IgYW5kIGRyb3AgdGhlIGZvbGxvd2luZyBoZWFkZXJzLiBUaGVzZVxuICAgICAgICAvLyBoZWFkZXJzIGFyZSBhbHNvIGRyb3BwZWQgd2hlbiBmb2xsb3dpbmcgYSByZWRpcmVjdCB0byBhIHN1YmRvbWFpbi5cbiAgICAgICAgLy9cbiAgICAgICAgZGVsZXRlIG9wdHMuaGVhZGVycy5hdXRob3JpemF0aW9uO1xuICAgICAgICBkZWxldGUgb3B0cy5oZWFkZXJzLmNvb2tpZTtcblxuICAgICAgICBpZiAoIWlzU2FtZUhvc3QpIGRlbGV0ZSBvcHRzLmhlYWRlcnMuaG9zdDtcblxuICAgICAgICBvcHRzLmF1dGggPSB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy9cbiAgICAvLyBNYXRjaCBjdXJsIDcuNzcuMCBiZWhhdmlvciBhbmQgbWFrZSB0aGUgZmlyc3QgYEF1dGhvcml6YXRpb25gIGhlYWRlciB3aW4uXG4gICAgLy8gSWYgdGhlIGBBdXRob3JpemF0aW9uYCBoZWFkZXIgaXMgc2V0LCB0aGVuIHRoZXJlIGlzIG5vdGhpbmcgdG8gZG8gYXMgaXRcbiAgICAvLyB3aWxsIHRha2UgcHJlY2VkZW5jZS5cbiAgICAvL1xuICAgIGlmIChvcHRzLmF1dGggJiYgIW9wdGlvbnMuaGVhZGVycy5hdXRob3JpemF0aW9uKSB7XG4gICAgICBvcHRpb25zLmhlYWRlcnMuYXV0aG9yaXphdGlvbiA9XG4gICAgICAgICdCYXNpYyAnICsgQnVmZmVyLmZyb20ob3B0cy5hdXRoKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgfVxuICB9XG5cbiAgbGV0IHJlcSA9ICh3ZWJzb2NrZXQuX3JlcSA9IGdldChvcHRzKSk7XG5cbiAgaWYgKG9wdHMudGltZW91dCkge1xuICAgIHJlcS5vbigndGltZW91dCcsICgpID0+IHtcbiAgICAgIGFib3J0SGFuZHNoYWtlKHdlYnNvY2tldCwgcmVxLCAnT3BlbmluZyBoYW5kc2hha2UgaGFzIHRpbWVkIG91dCcpO1xuICAgIH0pO1xuICB9XG5cbiAgcmVxLm9uKCdlcnJvcicsIChlcnIpID0+IHtcbiAgICBpZiAocmVxID09PSBudWxsIHx8IHJlcS5hYm9ydGVkKSByZXR1cm47XG5cbiAgICByZXEgPSB3ZWJzb2NrZXQuX3JlcSA9IG51bGw7XG4gICAgZW1pdEVycm9yQW5kQ2xvc2Uod2Vic29ja2V0LCBlcnIpO1xuICB9KTtcblxuICByZXEub24oJ3Jlc3BvbnNlJywgKHJlcykgPT4ge1xuICAgIGNvbnN0IGxvY2F0aW9uID0gcmVzLmhlYWRlcnMubG9jYXRpb247XG4gICAgY29uc3Qgc3RhdHVzQ29kZSA9IHJlcy5zdGF0dXNDb2RlO1xuXG4gICAgaWYgKFxuICAgICAgbG9jYXRpb24gJiZcbiAgICAgIG9wdHMuZm9sbG93UmVkaXJlY3RzICYmXG4gICAgICBzdGF0dXNDb2RlID49IDMwMCAmJlxuICAgICAgc3RhdHVzQ29kZSA8IDQwMFxuICAgICkge1xuICAgICAgaWYgKCsrd2Vic29ja2V0Ll9yZWRpcmVjdHMgPiBvcHRzLm1heFJlZGlyZWN0cykge1xuICAgICAgICBhYm9ydEhhbmRzaGFrZSh3ZWJzb2NrZXQsIHJlcSwgJ01heGltdW0gcmVkaXJlY3RzIGV4Y2VlZGVkJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmVxLmFib3J0KCk7XG5cbiAgICAgIGxldCBhZGRyO1xuXG4gICAgICB0cnkge1xuICAgICAgICBhZGRyID0gbmV3IFVSTChsb2NhdGlvbiwgYWRkcmVzcyk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgZW1pdEVycm9yQW5kQ2xvc2Uod2Vic29ja2V0LCBlcnIpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGluaXRBc0NsaWVudCh3ZWJzb2NrZXQsIGFkZHIsIHByb3RvY29scywgb3B0aW9ucyk7XG4gICAgfSBlbHNlIGlmICghd2Vic29ja2V0LmVtaXQoJ3VuZXhwZWN0ZWQtcmVzcG9uc2UnLCByZXEsIHJlcykpIHtcbiAgICAgIGFib3J0SGFuZHNoYWtlKFxuICAgICAgICB3ZWJzb2NrZXQsXG4gICAgICAgIHJlcSxcbiAgICAgICAgYFVuZXhwZWN0ZWQgc2VydmVyIHJlc3BvbnNlOiAke3Jlcy5zdGF0dXNDb2RlfWBcbiAgICAgICk7XG4gICAgfVxuICB9KTtcblxuICByZXEub24oJ3VwZ3JhZGUnLCAocmVzLCBzb2NrZXQsIGhlYWQpID0+IHtcbiAgICB3ZWJzb2NrZXQuZW1pdCgndXBncmFkZScsIHJlcyk7XG5cbiAgICAvL1xuICAgIC8vIFRoZSB1c2VyIG1heSBoYXZlIGNsb3NlZCB0aGUgY29ubmVjdGlvbiBmcm9tIGEgbGlzdGVuZXIgb2YgdGhlIGB1cGdyYWRlYFxuICAgIC8vIGV2ZW50LlxuICAgIC8vXG4gICAgaWYgKHdlYnNvY2tldC5yZWFkeVN0YXRlICE9PSBXZWJTb2NrZXQuQ09OTkVDVElORykgcmV0dXJuO1xuXG4gICAgcmVxID0gd2Vic29ja2V0Ll9yZXEgPSBudWxsO1xuXG4gICAgY29uc3QgdXBncmFkZSA9IHJlcy5oZWFkZXJzLnVwZ3JhZGU7XG5cbiAgICBpZiAodXBncmFkZSA9PT0gdW5kZWZpbmVkIHx8IHVwZ3JhZGUudG9Mb3dlckNhc2UoKSAhPT0gJ3dlYnNvY2tldCcpIHtcbiAgICAgIGFib3J0SGFuZHNoYWtlKHdlYnNvY2tldCwgc29ja2V0LCAnSW52YWxpZCBVcGdyYWRlIGhlYWRlcicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGRpZ2VzdCA9IGNyZWF0ZUhhc2goJ3NoYTEnKVxuICAgICAgLnVwZGF0ZShrZXkgKyBHVUlEKVxuICAgICAgLmRpZ2VzdCgnYmFzZTY0Jyk7XG5cbiAgICBpZiAocmVzLmhlYWRlcnNbJ3NlYy13ZWJzb2NrZXQtYWNjZXB0J10gIT09IGRpZ2VzdCkge1xuICAgICAgYWJvcnRIYW5kc2hha2Uod2Vic29ja2V0LCBzb2NrZXQsICdJbnZhbGlkIFNlYy1XZWJTb2NrZXQtQWNjZXB0IGhlYWRlcicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHNlcnZlclByb3QgPSByZXMuaGVhZGVyc1snc2VjLXdlYnNvY2tldC1wcm90b2NvbCddO1xuICAgIGNvbnN0IHByb3RMaXN0ID0gKHByb3RvY29scyB8fCAnJykuc3BsaXQoLywgKi8pO1xuICAgIGxldCBwcm90RXJyb3I7XG5cbiAgICBpZiAoIXByb3RvY29scyAmJiBzZXJ2ZXJQcm90KSB7XG4gICAgICBwcm90RXJyb3IgPSAnU2VydmVyIHNlbnQgYSBzdWJwcm90b2NvbCBidXQgbm9uZSB3YXMgcmVxdWVzdGVkJztcbiAgICB9IGVsc2UgaWYgKHByb3RvY29scyAmJiAhc2VydmVyUHJvdCkge1xuICAgICAgcHJvdEVycm9yID0gJ1NlcnZlciBzZW50IG5vIHN1YnByb3RvY29sJztcbiAgICB9IGVsc2UgaWYgKHNlcnZlclByb3QgJiYgIXByb3RMaXN0LmluY2x1ZGVzKHNlcnZlclByb3QpKSB7XG4gICAgICBwcm90RXJyb3IgPSAnU2VydmVyIHNlbnQgYW4gaW52YWxpZCBzdWJwcm90b2NvbCc7XG4gICAgfVxuXG4gICAgaWYgKHByb3RFcnJvcikge1xuICAgICAgYWJvcnRIYW5kc2hha2Uod2Vic29ja2V0LCBzb2NrZXQsIHByb3RFcnJvcik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHNlcnZlclByb3QpIHdlYnNvY2tldC5fcHJvdG9jb2wgPSBzZXJ2ZXJQcm90O1xuXG4gICAgY29uc3Qgc2VjV2ViU29ja2V0RXh0ZW5zaW9ucyA9IHJlcy5oZWFkZXJzWydzZWMtd2Vic29ja2V0LWV4dGVuc2lvbnMnXTtcblxuICAgIGlmIChzZWNXZWJTb2NrZXRFeHRlbnNpb25zICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGlmICghcGVyTWVzc2FnZURlZmxhdGUpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9XG4gICAgICAgICAgJ1NlcnZlciBzZW50IGEgU2VjLVdlYlNvY2tldC1FeHRlbnNpb25zIGhlYWRlciBidXQgbm8gZXh0ZW5zaW9uICcgK1xuICAgICAgICAgICd3YXMgcmVxdWVzdGVkJztcbiAgICAgICAgYWJvcnRIYW5kc2hha2Uod2Vic29ja2V0LCBzb2NrZXQsIG1lc3NhZ2UpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGxldCBleHRlbnNpb25zO1xuXG4gICAgICB0cnkge1xuICAgICAgICBleHRlbnNpb25zID0gcGFyc2Uoc2VjV2ViU29ja2V0RXh0ZW5zaW9ucyk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9ICdJbnZhbGlkIFNlYy1XZWJTb2NrZXQtRXh0ZW5zaW9ucyBoZWFkZXInO1xuICAgICAgICBhYm9ydEhhbmRzaGFrZSh3ZWJzb2NrZXQsIHNvY2tldCwgbWVzc2FnZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZXh0ZW5zaW9uTmFtZXMgPSBPYmplY3Qua2V5cyhleHRlbnNpb25zKTtcblxuICAgICAgaWYgKGV4dGVuc2lvbk5hbWVzLmxlbmd0aCkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgZXh0ZW5zaW9uTmFtZXMubGVuZ3RoICE9PSAxIHx8XG4gICAgICAgICAgZXh0ZW5zaW9uTmFtZXNbMF0gIT09IFBlck1lc3NhZ2VEZWZsYXRlLmV4dGVuc2lvbk5hbWVcbiAgICAgICAgKSB7XG4gICAgICAgICAgY29uc3QgbWVzc2FnZSA9XG4gICAgICAgICAgICAnU2VydmVyIGluZGljYXRlZCBhbiBleHRlbnNpb24gdGhhdCB3YXMgbm90IHJlcXVlc3RlZCc7XG4gICAgICAgICAgYWJvcnRIYW5kc2hha2Uod2Vic29ja2V0LCBzb2NrZXQsIG1lc3NhZ2UpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcGVyTWVzc2FnZURlZmxhdGUuYWNjZXB0KGV4dGVuc2lvbnNbUGVyTWVzc2FnZURlZmxhdGUuZXh0ZW5zaW9uTmFtZV0pO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICBjb25zdCBtZXNzYWdlID0gJ0ludmFsaWQgU2VjLVdlYlNvY2tldC1FeHRlbnNpb25zIGhlYWRlcic7XG4gICAgICAgICAgYWJvcnRIYW5kc2hha2Uod2Vic29ja2V0LCBzb2NrZXQsIG1lc3NhZ2UpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHdlYnNvY2tldC5fZXh0ZW5zaW9uc1tQZXJNZXNzYWdlRGVmbGF0ZS5leHRlbnNpb25OYW1lXSA9XG4gICAgICAgICAgcGVyTWVzc2FnZURlZmxhdGU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgd2Vic29ja2V0LnNldFNvY2tldChzb2NrZXQsIGhlYWQsIG9wdHMubWF4UGF5bG9hZCk7XG4gIH0pO1xufVxuXG4vKipcbiAqIEVtaXQgdGhlIGAnZXJyb3InYCBhbmQgYCdjbG9zZSdgIGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7V2ViU29ja2V0fSB3ZWJzb2NrZXQgVGhlIFdlYlNvY2tldCBpbnN0YW5jZVxuICogQHBhcmFtIHtFcnJvcn0gVGhlIGVycm9yIHRvIGVtaXRcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGVtaXRFcnJvckFuZENsb3NlKHdlYnNvY2tldCwgZXJyKSB7XG4gIHdlYnNvY2tldC5fcmVhZHlTdGF0ZSA9IFdlYlNvY2tldC5DTE9TSU5HO1xuICB3ZWJzb2NrZXQuZW1pdCgnZXJyb3InLCBlcnIpO1xuICB3ZWJzb2NrZXQuZW1pdENsb3NlKCk7XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgYG5ldC5Tb2NrZXRgIGFuZCBpbml0aWF0ZSBhIGNvbm5lY3Rpb24uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgQ29ubmVjdGlvbiBvcHRpb25zXG4gKiBAcmV0dXJuIHtuZXQuU29ja2V0fSBUaGUgbmV3bHkgY3JlYXRlZCBzb2NrZXQgdXNlZCB0byBzdGFydCB0aGUgY29ubmVjdGlvblxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gbmV0Q29ubmVjdChvcHRpb25zKSB7XG4gIG9wdGlvbnMucGF0aCA9IG9wdGlvbnMuc29ja2V0UGF0aDtcbiAgcmV0dXJuIG5ldC5jb25uZWN0KG9wdGlvbnMpO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIGB0bHMuVExTU29ja2V0YCBhbmQgaW5pdGlhdGUgYSBjb25uZWN0aW9uLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIENvbm5lY3Rpb24gb3B0aW9uc1xuICogQHJldHVybiB7dGxzLlRMU1NvY2tldH0gVGhlIG5ld2x5IGNyZWF0ZWQgc29ja2V0IHVzZWQgdG8gc3RhcnQgdGhlIGNvbm5lY3Rpb25cbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHRsc0Nvbm5lY3Qob3B0aW9ucykge1xuICBvcHRpb25zLnBhdGggPSB1bmRlZmluZWQ7XG5cbiAgaWYgKCFvcHRpb25zLnNlcnZlcm5hbWUgJiYgb3B0aW9ucy5zZXJ2ZXJuYW1lICE9PSAnJykge1xuICAgIG9wdGlvbnMuc2VydmVybmFtZSA9IG5ldC5pc0lQKG9wdGlvbnMuaG9zdCkgPyAnJyA6IG9wdGlvbnMuaG9zdDtcbiAgfVxuXG4gIHJldHVybiB0bHMuY29ubmVjdChvcHRpb25zKTtcbn1cblxuLyoqXG4gKiBBYm9ydCB0aGUgaGFuZHNoYWtlIGFuZCBlbWl0IGFuIGVycm9yLlxuICpcbiAqIEBwYXJhbSB7V2ViU29ja2V0fSB3ZWJzb2NrZXQgVGhlIFdlYlNvY2tldCBpbnN0YW5jZVxuICogQHBhcmFtIHsoaHR0cC5DbGllbnRSZXF1ZXN0fG5ldC5Tb2NrZXR8dGxzLlNvY2tldCl9IHN0cmVhbSBUaGUgcmVxdWVzdCB0b1xuICogICAgIGFib3J0IG9yIHRoZSBzb2NrZXQgdG8gZGVzdHJveVxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIGVycm9yIG1lc3NhZ2VcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGFib3J0SGFuZHNoYWtlKHdlYnNvY2tldCwgc3RyZWFtLCBtZXNzYWdlKSB7XG4gIHdlYnNvY2tldC5fcmVhZHlTdGF0ZSA9IFdlYlNvY2tldC5DTE9TSU5HO1xuXG4gIGNvbnN0IGVyciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UoZXJyLCBhYm9ydEhhbmRzaGFrZSk7XG5cbiAgaWYgKHN0cmVhbS5zZXRIZWFkZXIpIHtcbiAgICBzdHJlYW0uYWJvcnQoKTtcblxuICAgIGlmIChzdHJlYW0uc29ja2V0ICYmICFzdHJlYW0uc29ja2V0LmRlc3Ryb3llZCkge1xuICAgICAgLy9cbiAgICAgIC8vIE9uIE5vZGUuanMgPj0gMTQuMy4wIGByZXF1ZXN0LmFib3J0KClgIGRvZXMgbm90IGRlc3Ryb3kgdGhlIHNvY2tldCBpZlxuICAgICAgLy8gY2FsbGVkIGFmdGVyIHRoZSByZXF1ZXN0IGNvbXBsZXRlZC4gU2VlXG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vd2Vic29ja2V0cy93cy9pc3N1ZXMvMTg2OS5cbiAgICAgIC8vXG4gICAgICBzdHJlYW0uc29ja2V0LmRlc3Ryb3koKTtcbiAgICB9XG5cbiAgICBzdHJlYW0ub25jZSgnYWJvcnQnLCB3ZWJzb2NrZXQuZW1pdENsb3NlLmJpbmQod2Vic29ja2V0KSk7XG4gICAgd2Vic29ja2V0LmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgfSBlbHNlIHtcbiAgICBzdHJlYW0uZGVzdHJveShlcnIpO1xuICAgIHN0cmVhbS5vbmNlKCdlcnJvcicsIHdlYnNvY2tldC5lbWl0LmJpbmQod2Vic29ja2V0LCAnZXJyb3InKSk7XG4gICAgc3RyZWFtLm9uY2UoJ2Nsb3NlJywgd2Vic29ja2V0LmVtaXRDbG9zZS5iaW5kKHdlYnNvY2tldCkpO1xuICB9XG59XG5cbi8qKlxuICogSGFuZGxlIGNhc2VzIHdoZXJlIHRoZSBgcGluZygpYCwgYHBvbmcoKWAsIG9yIGBzZW5kKClgIG1ldGhvZHMgYXJlIGNhbGxlZFxuICogd2hlbiB0aGUgYHJlYWR5U3RhdGVgIGF0dHJpYnV0ZSBpcyBgQ0xPU0lOR2Agb3IgYENMT1NFRGAuXG4gKlxuICogQHBhcmFtIHtXZWJTb2NrZXR9IHdlYnNvY2tldCBUaGUgV2ViU29ja2V0IGluc3RhbmNlXG4gKiBAcGFyYW0geyp9IFtkYXRhXSBUaGUgZGF0YSB0byBzZW5kXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2JdIENhbGxiYWNrXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBzZW5kQWZ0ZXJDbG9zZSh3ZWJzb2NrZXQsIGRhdGEsIGNiKSB7XG4gIGlmIChkYXRhKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gdG9CdWZmZXIoZGF0YSkubGVuZ3RoO1xuXG4gICAgLy9cbiAgICAvLyBUaGUgYF9idWZmZXJlZEFtb3VudGAgcHJvcGVydHkgaXMgdXNlZCBvbmx5IHdoZW4gdGhlIHBlZXIgaXMgYSBjbGllbnQgYW5kXG4gICAgLy8gdGhlIG9wZW5pbmcgaGFuZHNoYWtlIGZhaWxzLiBVbmRlciB0aGVzZSBjaXJjdW1zdGFuY2VzLCBpbiBmYWN0LCB0aGVcbiAgICAvLyBgc2V0U29ja2V0KClgIG1ldGhvZCBpcyBub3QgY2FsbGVkLCBzbyB0aGUgYF9zb2NrZXRgIGFuZCBgX3NlbmRlcmBcbiAgICAvLyBwcm9wZXJ0aWVzIGFyZSBzZXQgdG8gYG51bGxgLlxuICAgIC8vXG4gICAgaWYgKHdlYnNvY2tldC5fc29ja2V0KSB3ZWJzb2NrZXQuX3NlbmRlci5fYnVmZmVyZWRCeXRlcyArPSBsZW5ndGg7XG4gICAgZWxzZSB3ZWJzb2NrZXQuX2J1ZmZlcmVkQW1vdW50ICs9IGxlbmd0aDtcbiAgfVxuXG4gIGlmIChjYikge1xuICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcihcbiAgICAgIGBXZWJTb2NrZXQgaXMgbm90IG9wZW46IHJlYWR5U3RhdGUgJHt3ZWJzb2NrZXQucmVhZHlTdGF0ZX0gYCArXG4gICAgICAgIGAoJHtyZWFkeVN0YXRlc1t3ZWJzb2NrZXQucmVhZHlTdGF0ZV19KWBcbiAgICApO1xuICAgIGNiKGVycik7XG4gIH1cbn1cblxuLyoqXG4gKiBUaGUgbGlzdGVuZXIgb2YgdGhlIGBSZWNlaXZlcmAgYCdjb25jbHVkZSdgIGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBjb2RlIFRoZSBzdGF0dXMgY29kZVxuICogQHBhcmFtIHtTdHJpbmd9IHJlYXNvbiBUaGUgcmVhc29uIGZvciBjbG9zaW5nXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiByZWNlaXZlck9uQ29uY2x1ZGUoY29kZSwgcmVhc29uKSB7XG4gIGNvbnN0IHdlYnNvY2tldCA9IHRoaXNba1dlYlNvY2tldF07XG5cbiAgd2Vic29ja2V0Ll9jbG9zZUZyYW1lUmVjZWl2ZWQgPSB0cnVlO1xuICB3ZWJzb2NrZXQuX2Nsb3NlTWVzc2FnZSA9IHJlYXNvbjtcbiAgd2Vic29ja2V0Ll9jbG9zZUNvZGUgPSBjb2RlO1xuXG4gIGlmICh3ZWJzb2NrZXQuX3NvY2tldFtrV2ViU29ja2V0XSA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgd2Vic29ja2V0Ll9zb2NrZXQucmVtb3ZlTGlzdGVuZXIoJ2RhdGEnLCBzb2NrZXRPbkRhdGEpO1xuICBwcm9jZXNzLm5leHRUaWNrKHJlc3VtZSwgd2Vic29ja2V0Ll9zb2NrZXQpO1xuXG4gIGlmIChjb2RlID09PSAxMDA1KSB3ZWJzb2NrZXQuY2xvc2UoKTtcbiAgZWxzZSB3ZWJzb2NrZXQuY2xvc2UoY29kZSwgcmVhc29uKTtcbn1cblxuLyoqXG4gKiBUaGUgbGlzdGVuZXIgb2YgdGhlIGBSZWNlaXZlcmAgYCdkcmFpbidgIGV2ZW50LlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlY2VpdmVyT25EcmFpbigpIHtcbiAgdGhpc1trV2ViU29ja2V0XS5fc29ja2V0LnJlc3VtZSgpO1xufVxuXG4vKipcbiAqIFRoZSBsaXN0ZW5lciBvZiB0aGUgYFJlY2VpdmVyYCBgJ2Vycm9yJ2AgZXZlbnQuXG4gKlxuICogQHBhcmFtIHsoUmFuZ2VFcnJvcnxFcnJvcil9IGVyciBUaGUgZW1pdHRlZCBlcnJvclxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcmVjZWl2ZXJPbkVycm9yKGVycikge1xuICBjb25zdCB3ZWJzb2NrZXQgPSB0aGlzW2tXZWJTb2NrZXRdO1xuXG4gIGlmICh3ZWJzb2NrZXQuX3NvY2tldFtrV2ViU29ja2V0XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgd2Vic29ja2V0Ll9zb2NrZXQucmVtb3ZlTGlzdGVuZXIoJ2RhdGEnLCBzb2NrZXRPbkRhdGEpO1xuXG4gICAgLy9cbiAgICAvLyBPbiBOb2RlLmpzIDwgMTQuMC4wIHRoZSBgJ2Vycm9yJ2AgZXZlbnQgaXMgZW1pdHRlZCBzeW5jaHJvbm91c2x5LiBTZWVcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vd2Vic29ja2V0cy93cy9pc3N1ZXMvMTk0MC5cbiAgICAvL1xuICAgIHByb2Nlc3MubmV4dFRpY2socmVzdW1lLCB3ZWJzb2NrZXQuX3NvY2tldCk7XG5cbiAgICB3ZWJzb2NrZXQuY2xvc2UoZXJyW2tTdGF0dXNDb2RlXSk7XG4gIH1cblxuICB3ZWJzb2NrZXQuZW1pdCgnZXJyb3InLCBlcnIpO1xufVxuXG4vKipcbiAqIFRoZSBsaXN0ZW5lciBvZiB0aGUgYFJlY2VpdmVyYCBgJ2ZpbmlzaCdgIGV2ZW50LlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlY2VpdmVyT25GaW5pc2goKSB7XG4gIHRoaXNba1dlYlNvY2tldF0uZW1pdENsb3NlKCk7XG59XG5cbi8qKlxuICogVGhlIGxpc3RlbmVyIG9mIHRoZSBgUmVjZWl2ZXJgIGAnbWVzc2FnZSdgIGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7KFN0cmluZ3xCdWZmZXJ8QXJyYXlCdWZmZXJ8QnVmZmVyW10pfSBkYXRhIFRoZSBtZXNzYWdlXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiByZWNlaXZlck9uTWVzc2FnZShkYXRhKSB7XG4gIHRoaXNba1dlYlNvY2tldF0uZW1pdCgnbWVzc2FnZScsIGRhdGEpO1xufVxuXG4vKipcbiAqIFRoZSBsaXN0ZW5lciBvZiB0aGUgYFJlY2VpdmVyYCBgJ3BpbmcnYCBldmVudC5cbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcn0gZGF0YSBUaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGUgcGluZyBmcmFtZVxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcmVjZWl2ZXJPblBpbmcoZGF0YSkge1xuICBjb25zdCB3ZWJzb2NrZXQgPSB0aGlzW2tXZWJTb2NrZXRdO1xuXG4gIHdlYnNvY2tldC5wb25nKGRhdGEsICF3ZWJzb2NrZXQuX2lzU2VydmVyLCBOT09QKTtcbiAgd2Vic29ja2V0LmVtaXQoJ3BpbmcnLCBkYXRhKTtcbn1cblxuLyoqXG4gKiBUaGUgbGlzdGVuZXIgb2YgdGhlIGBSZWNlaXZlcmAgYCdwb25nJ2AgZXZlbnQuXG4gKlxuICogQHBhcmFtIHtCdWZmZXJ9IGRhdGEgVGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhlIHBvbmcgZnJhbWVcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlY2VpdmVyT25Qb25nKGRhdGEpIHtcbiAgdGhpc1trV2ViU29ja2V0XS5lbWl0KCdwb25nJywgZGF0YSk7XG59XG5cbi8qKlxuICogUmVzdW1lIGEgcmVhZGFibGUgc3RyZWFtXG4gKlxuICogQHBhcmFtIHtSZWFkYWJsZX0gc3RyZWFtIFRoZSByZWFkYWJsZSBzdHJlYW1cbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlc3VtZShzdHJlYW0pIHtcbiAgc3RyZWFtLnJlc3VtZSgpO1xufVxuXG4vKipcbiAqIFRoZSBsaXN0ZW5lciBvZiB0aGUgYG5ldC5Tb2NrZXRgIGAnY2xvc2UnYCBldmVudC5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBzb2NrZXRPbkNsb3NlKCkge1xuICBjb25zdCB3ZWJzb2NrZXQgPSB0aGlzW2tXZWJTb2NrZXRdO1xuXG4gIHRoaXMucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgc29ja2V0T25DbG9zZSk7XG4gIHRoaXMucmVtb3ZlTGlzdGVuZXIoJ2RhdGEnLCBzb2NrZXRPbkRhdGEpO1xuICB0aGlzLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBzb2NrZXRPbkVuZCk7XG5cbiAgd2Vic29ja2V0Ll9yZWFkeVN0YXRlID0gV2ViU29ja2V0LkNMT1NJTkc7XG5cbiAgbGV0IGNodW5rO1xuXG4gIC8vXG4gIC8vIFRoZSBjbG9zZSBmcmFtZSBtaWdodCBub3QgaGF2ZSBiZWVuIHJlY2VpdmVkIG9yIHRoZSBgJ2VuZCdgIGV2ZW50IGVtaXR0ZWQsXG4gIC8vIGZvciBleGFtcGxlLCBpZiB0aGUgc29ja2V0IHdhcyBkZXN0cm95ZWQgZHVlIHRvIGFuIGVycm9yLiBFbnN1cmUgdGhhdCB0aGVcbiAgLy8gYHJlY2VpdmVyYCBzdHJlYW0gaXMgY2xvc2VkIGFmdGVyIHdyaXRpbmcgYW55IHJlbWFpbmluZyBidWZmZXJlZCBkYXRhIHRvXG4gIC8vIGl0LiBJZiB0aGUgcmVhZGFibGUgc2lkZSBvZiB0aGUgc29ja2V0IGlzIGluIGZsb3dpbmcgbW9kZSB0aGVuIHRoZXJlIGlzIG5vXG4gIC8vIGJ1ZmZlcmVkIGRhdGEgYXMgZXZlcnl0aGluZyBoYXMgYmVlbiBhbHJlYWR5IHdyaXR0ZW4gYW5kIGByZWFkYWJsZS5yZWFkKClgXG4gIC8vIHdpbGwgcmV0dXJuIGBudWxsYC4gSWYgaW5zdGVhZCwgdGhlIHNvY2tldCBpcyBwYXVzZWQsIGFueSBwb3NzaWJsZSBidWZmZXJlZFxuICAvLyBkYXRhIHdpbGwgYmUgcmVhZCBhcyBhIHNpbmdsZSBjaHVuay5cbiAgLy9cbiAgaWYgKFxuICAgICF0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQgJiZcbiAgICAhd2Vic29ja2V0Ll9jbG9zZUZyYW1lUmVjZWl2ZWQgJiZcbiAgICAhd2Vic29ja2V0Ll9yZWNlaXZlci5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQgJiZcbiAgICAoY2h1bmsgPSB3ZWJzb2NrZXQuX3NvY2tldC5yZWFkKCkpICE9PSBudWxsXG4gICkge1xuICAgIHdlYnNvY2tldC5fcmVjZWl2ZXIud3JpdGUoY2h1bmspO1xuICB9XG5cbiAgd2Vic29ja2V0Ll9yZWNlaXZlci5lbmQoKTtcblxuICB0aGlzW2tXZWJTb2NrZXRdID0gdW5kZWZpbmVkO1xuXG4gIGNsZWFyVGltZW91dCh3ZWJzb2NrZXQuX2Nsb3NlVGltZXIpO1xuXG4gIGlmIChcbiAgICB3ZWJzb2NrZXQuX3JlY2VpdmVyLl93cml0YWJsZVN0YXRlLmZpbmlzaGVkIHx8XG4gICAgd2Vic29ja2V0Ll9yZWNlaXZlci5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWRcbiAgKSB7XG4gICAgd2Vic29ja2V0LmVtaXRDbG9zZSgpO1xuICB9IGVsc2Uge1xuICAgIHdlYnNvY2tldC5fcmVjZWl2ZXIub24oJ2Vycm9yJywgcmVjZWl2ZXJPbkZpbmlzaCk7XG4gICAgd2Vic29ja2V0Ll9yZWNlaXZlci5vbignZmluaXNoJywgcmVjZWl2ZXJPbkZpbmlzaCk7XG4gIH1cbn1cblxuLyoqXG4gKiBUaGUgbGlzdGVuZXIgb2YgdGhlIGBuZXQuU29ja2V0YCBgJ2RhdGEnYCBldmVudC5cbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcn0gY2h1bmsgQSBjaHVuayBvZiBkYXRhXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBzb2NrZXRPbkRhdGEoY2h1bmspIHtcbiAgaWYgKCF0aGlzW2tXZWJTb2NrZXRdLl9yZWNlaXZlci53cml0ZShjaHVuaykpIHtcbiAgICB0aGlzLnBhdXNlKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBUaGUgbGlzdGVuZXIgb2YgdGhlIGBuZXQuU29ja2V0YCBgJ2VuZCdgIGV2ZW50LlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHNvY2tldE9uRW5kKCkge1xuICBjb25zdCB3ZWJzb2NrZXQgPSB0aGlzW2tXZWJTb2NrZXRdO1xuXG4gIHdlYnNvY2tldC5fcmVhZHlTdGF0ZSA9IFdlYlNvY2tldC5DTE9TSU5HO1xuICB3ZWJzb2NrZXQuX3JlY2VpdmVyLmVuZCgpO1xuICB0aGlzLmVuZCgpO1xufVxuXG4vKipcbiAqIFRoZSBsaXN0ZW5lciBvZiB0aGUgYG5ldC5Tb2NrZXRgIGAnZXJyb3InYCBldmVudC5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBzb2NrZXRPbkVycm9yKCkge1xuICBjb25zdCB3ZWJzb2NrZXQgPSB0aGlzW2tXZWJTb2NrZXRdO1xuXG4gIHRoaXMucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgc29ja2V0T25FcnJvcik7XG4gIHRoaXMub24oJ2Vycm9yJywgTk9PUCk7XG5cbiAgaWYgKHdlYnNvY2tldCkge1xuICAgIHdlYnNvY2tldC5fcmVhZHlTdGF0ZSA9IFdlYlNvY2tldC5DTE9TSU5HO1xuICAgIHRoaXMuZGVzdHJveSgpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwicmVxdWlyZSIsImh0dHBzIiwiaHR0cCIsIm5ldCIsInRscyIsInJhbmRvbUJ5dGVzIiwiY3JlYXRlSGFzaCIsIlJlYWRhYmxlIiwiVVJMIiwiUGVyTWVzc2FnZURlZmxhdGUiLCJSZWNlaXZlciIsIlNlbmRlciIsIkJJTkFSWV9UWVBFUyIsIkVNUFRZX0JVRkZFUiIsIkdVSUQiLCJrU3RhdHVzQ29kZSIsImtXZWJTb2NrZXQiLCJOT09QIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJmb3JtYXQiLCJwYXJzZSIsInRvQnVmZmVyIiwicmVhZHlTdGF0ZXMiLCJwcm90b2NvbFZlcnNpb25zIiwiY2xvc2VUaW1lb3V0IiwiV2ViU29ja2V0IiwiY29uc3RydWN0b3IiLCJhZGRyZXNzIiwicHJvdG9jb2xzIiwib3B0aW9ucyIsIl9iaW5hcnlUeXBlIiwiX2Nsb3NlQ29kZSIsIl9jbG9zZUZyYW1lUmVjZWl2ZWQiLCJfY2xvc2VGcmFtZVNlbnQiLCJfY2xvc2VNZXNzYWdlIiwiX2Nsb3NlVGltZXIiLCJfZXh0ZW5zaW9ucyIsIl9wcm90b2NvbCIsIl9yZWFkeVN0YXRlIiwiQ09OTkVDVElORyIsIl9yZWNlaXZlciIsIl9zZW5kZXIiLCJfc29ja2V0IiwiX2J1ZmZlcmVkQW1vdW50IiwiX2lzU2VydmVyIiwiX3JlZGlyZWN0cyIsIkFycmF5IiwiaXNBcnJheSIsImpvaW4iLCJ1bmRlZmluZWQiLCJpbml0QXNDbGllbnQiLCJiaW5hcnlUeXBlIiwidHlwZSIsImluY2x1ZGVzIiwiYnVmZmVyZWRBbW91bnQiLCJfd3JpdGFibGVTdGF0ZSIsImxlbmd0aCIsIl9idWZmZXJlZEJ5dGVzIiwiZXh0ZW5zaW9ucyIsIk9iamVjdCIsImtleXMiLCJvbmNsb3NlIiwibGlzdGVuZXIiLCJvbmVycm9yIiwib25vcGVuIiwib25tZXNzYWdlIiwicHJvdG9jb2wiLCJyZWFkeVN0YXRlIiwidXJsIiwiX3VybCIsInNldFNvY2tldCIsInNvY2tldCIsImhlYWQiLCJtYXhQYXlsb2FkIiwicmVjZWl2ZXIiLCJvbiIsInJlY2VpdmVyT25Db25jbHVkZSIsInJlY2VpdmVyT25EcmFpbiIsInJlY2VpdmVyT25FcnJvciIsInJlY2VpdmVyT25NZXNzYWdlIiwicmVjZWl2ZXJPblBpbmciLCJyZWNlaXZlck9uUG9uZyIsInNldFRpbWVvdXQiLCJzZXROb0RlbGF5IiwidW5zaGlmdCIsInNvY2tldE9uQ2xvc2UiLCJzb2NrZXRPbkRhdGEiLCJzb2NrZXRPbkVuZCIsInNvY2tldE9uRXJyb3IiLCJPUEVOIiwiZW1pdCIsImVtaXRDbG9zZSIsIkNMT1NFRCIsImV4dGVuc2lvbk5hbWUiLCJjbGVhbnVwIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwiY2xvc2UiLCJjb2RlIiwiZGF0YSIsIm1zZyIsImFib3J0SGFuZHNoYWtlIiwiX3JlcSIsIkNMT1NJTkciLCJlcnJvckVtaXR0ZWQiLCJlbmQiLCJlcnIiLCJkZXN0cm95IiwiYmluZCIsInBpbmciLCJtYXNrIiwiY2IiLCJFcnJvciIsInRvU3RyaW5nIiwic2VuZEFmdGVyQ2xvc2UiLCJwb25nIiwic2VuZCIsIm9wdHMiLCJiaW5hcnkiLCJjb21wcmVzcyIsImZpbiIsInRlcm1pbmF0ZSIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsInZhbHVlIiwiaW5kZXhPZiIsInByb3RvdHlwZSIsImZvckVhY2giLCJwcm9wZXJ0eSIsIm1ldGhvZCIsImdldCIsImxpc3RlbmVycyIsImkiLCJfbGlzdGVuZXIiLCJzZXQiLCJyZW1vdmVMaXN0ZW5lciIsIm1vZHVsZSIsImV4cG9ydHMiLCJ3ZWJzb2NrZXQiLCJwcm90b2NvbFZlcnNpb24iLCJwZXJNZXNzYWdlRGVmbGF0ZSIsImZvbGxvd1JlZGlyZWN0cyIsIm1heFJlZGlyZWN0cyIsImNyZWF0ZUNvbm5lY3Rpb24iLCJzb2NrZXRQYXRoIiwiaG9zdG5hbWUiLCJ0aW1lb3V0IiwiaG9zdCIsInBhdGgiLCJwb3J0IiwiUmFuZ2VFcnJvciIsInBhcnNlZFVybCIsImhyZWYiLCJpc1VuaXhTb2NrZXQiLCJwYXRobmFtZSIsImVtaXRFcnJvckFuZENsb3NlIiwiaXNTZWN1cmUiLCJkZWZhdWx0UG9ydCIsImtleSIsInRsc0Nvbm5lY3QiLCJuZXRDb25uZWN0Iiwic3RhcnRzV2l0aCIsInNsaWNlIiwiaGVhZGVycyIsIkNvbm5lY3Rpb24iLCJVcGdyYWRlIiwic2VhcmNoIiwiaGFuZHNoYWtlVGltZW91dCIsIm9mZmVyIiwib3JpZ2luIiwiT3JpZ2luIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImF1dGgiLCJwYXJ0cyIsInNwbGl0IiwiX29yaWdpbmFsVW5peFNvY2tldCIsIl9vcmlnaW5hbFNlY3VyZSIsIl9vcmlnaW5hbEhvc3RPclNvY2tldFBhdGgiLCJlbnRyaWVzIiwidG9Mb3dlckNhc2UiLCJpc1NhbWVIb3N0IiwiYXV0aG9yaXphdGlvbiIsImNvb2tpZSIsIkJ1ZmZlciIsImZyb20iLCJyZXEiLCJhYm9ydGVkIiwicmVzIiwibG9jYXRpb24iLCJzdGF0dXNDb2RlIiwiYWJvcnQiLCJhZGRyIiwidXBncmFkZSIsImRpZ2VzdCIsInVwZGF0ZSIsInNlcnZlclByb3QiLCJwcm90TGlzdCIsInByb3RFcnJvciIsInNlY1dlYlNvY2tldEV4dGVuc2lvbnMiLCJtZXNzYWdlIiwiZXh0ZW5zaW9uTmFtZXMiLCJhY2NlcHQiLCJjb25uZWN0Iiwic2VydmVybmFtZSIsImlzSVAiLCJzdHJlYW0iLCJjYXB0dXJlU3RhY2tUcmFjZSIsInNldEhlYWRlciIsImRlc3Ryb3llZCIsIm9uY2UiLCJyZWFzb24iLCJwcm9jZXNzIiwibmV4dFRpY2siLCJyZXN1bWUiLCJyZWNlaXZlck9uRmluaXNoIiwiY2h1bmsiLCJfcmVhZGFibGVTdGF0ZSIsImVuZEVtaXR0ZWQiLCJyZWFkIiwid3JpdGUiLCJjbGVhclRpbWVvdXQiLCJmaW5pc2hlZCIsInBhdXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyValueStorage: () => (/* binding */ h),\n/* harmony export */   \"default\": () => (/* binding */ h)\n/* harmony export */ });\n/* harmony import */ var unstorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unstorage */ \"(ssr)/./node_modules/unstorage/dist/index.mjs\");\n/* harmony import */ var idb_keyval__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! idb-keyval */ \"(ssr)/./node_modules/idb-keyval/dist/index.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n\n\n\nfunction C(i) {\n    return i;\n}\nconst x = \"idb-keyval\";\nvar z = (i = {})=>{\n    const t = i.base && i.base.length > 0 ? `${i.base}:` : \"\", e = (s)=>t + s;\n    let n;\n    return i.dbName && i.storeName && (n = (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.createStore)(i.dbName, i.storeName)), {\n        name: x,\n        options: i,\n        async hasItem (s) {\n            return !(typeof await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) > \"u\");\n        },\n        async getItem (s) {\n            return await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) ?? null;\n        },\n        setItem (s, a) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.set)(e(s), a, n);\n        },\n        removeItem (s) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.del)(e(s), n);\n        },\n        getKeys () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.keys)(n);\n        },\n        clear () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.clear)(n);\n        }\n    };\n};\nconst D = \"WALLET_CONNECT_V2_INDEXED_DB\", E = \"keyvaluestorage\";\nclass _ {\n    constructor(){\n        this.indexedDb = (0,unstorage__WEBPACK_IMPORTED_MODULE_2__.createStorage)({\n            driver: z({\n                dbName: D,\n                storeName: E\n            })\n        });\n    }\n    async getKeys() {\n        return this.indexedDb.getKeys();\n    }\n    async getEntries() {\n        return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t)=>[\n                t.key,\n                t.value\n            ]);\n    }\n    async getItem(t) {\n        const e = await this.indexedDb.getItem(t);\n        if (e !== null) return e;\n    }\n    async setItem(t, e) {\n        await this.indexedDb.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        await this.indexedDb.removeItem(t);\n    }\n}\nvar l = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, c = {\n    exports: {}\n};\n(function() {\n    let i;\n    function t() {}\n    i = t, i.prototype.getItem = function(e) {\n        return this.hasOwnProperty(e) ? String(this[e]) : null;\n    }, i.prototype.setItem = function(e, n) {\n        this[e] = String(n);\n    }, i.prototype.removeItem = function(e) {\n        delete this[e];\n    }, i.prototype.clear = function() {\n        const e = this;\n        Object.keys(e).forEach(function(n) {\n            e[n] = void 0, delete e[n];\n        });\n    }, i.prototype.key = function(e) {\n        return e = e || 0, Object.keys(this)[e];\n    }, i.prototype.__defineGetter__(\"length\", function() {\n        return Object.keys(this).length;\n    }), typeof l < \"u\" && l.localStorage ? c.exports = l.localStorage :  false ? 0 : c.exports = new t;\n})();\nfunction k(i) {\n    var t;\n    return [\n        i[0],\n        (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)((t = i[1]) != null ? t : \"\")\n    ];\n}\nclass K {\n    constructor(){\n        this.localStorage = c.exports;\n    }\n    async getKeys() {\n        return Object.keys(this.localStorage);\n    }\n    async getEntries() {\n        return Object.entries(this.localStorage).map(k);\n    }\n    async getItem(t) {\n        const e = this.localStorage.getItem(t);\n        if (e !== null) return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)(e);\n    }\n    async setItem(t, e) {\n        this.localStorage.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        this.localStorage.removeItem(t);\n    }\n}\nconst N = \"wc_storage_version\", y = 1, O = async (i, t, e)=>{\n    const n = N, s = await t.getItem(n);\n    if (s && s >= y) {\n        e(t);\n        return;\n    }\n    const a = await i.getKeys();\n    if (!a.length) {\n        e(t);\n        return;\n    }\n    const m = [];\n    for(; a.length;){\n        const r = a.shift();\n        if (!r) continue;\n        const o = r.toLowerCase();\n        if (o.includes(\"wc@\") || o.includes(\"walletconnect\") || o.includes(\"wc_\") || o.includes(\"wallet_connect\")) {\n            const f = await i.getItem(r);\n            await t.setItem(r, f), m.push(r);\n        }\n    }\n    await t.setItem(n, y), e(t), j(i, m);\n}, j = async (i, t)=>{\n    t.length && t.forEach(async (e)=>{\n        await i.removeItem(e);\n    });\n};\nclass h {\n    constructor(){\n        this.initialized = !1, this.setInitialized = (e)=>{\n            this.storage = e, this.initialized = !0;\n        };\n        const t = new K;\n        this.storage = t;\n        try {\n            const e = new _;\n            O(t, e, this.setInitialized);\n        } catch  {\n            this.initialized = !0;\n        }\n    }\n    async getKeys() {\n        return await this.initialize(), this.storage.getKeys();\n    }\n    async getEntries() {\n        return await this.initialize(), this.storage.getEntries();\n    }\n    async getItem(t) {\n        return await this.initialize(), this.storage.getItem(t);\n    }\n    async setItem(t, e) {\n        return await this.initialize(), this.storage.setItem(t, e);\n    }\n    async removeItem(t) {\n        return await this.initialize(), this.storage.removeItem(t);\n    }\n    async initialize() {\n        this.initialized || await new Promise((t)=>{\n            const e = setInterval(()=>{\n                this.initialized && (clearInterval(e), t());\n            }, 20);\n        });\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/@walletconnect/logger/dist/index.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_LOG_SIZE_IN_BYTES_DEFAULT: () => (/* binding */ l),\n/* harmony export */   PINO_CUSTOM_CONTEXT_KEY: () => (/* binding */ n),\n/* harmony export */   PINO_LOGGER_DEFAULTS: () => (/* binding */ c),\n/* harmony export */   formatChildLoggerContext: () => (/* binding */ w),\n/* harmony export */   generateChildLogger: () => (/* binding */ E),\n/* harmony export */   generateClientLogger: () => (/* binding */ C),\n/* harmony export */   generatePlatformLogger: () => (/* binding */ A),\n/* harmony export */   generateServerLogger: () => (/* binding */ I),\n/* harmony export */   getBrowserLoggerContext: () => (/* binding */ v),\n/* harmony export */   getDefaultLoggerOptions: () => (/* binding */ k),\n/* harmony export */   getLoggerContext: () => (/* binding */ y),\n/* harmony export */   pino: () => (/* reexport default from dynamic */ pino__WEBPACK_IMPORTED_MODULE_0___default.a),\n/* harmony export */   setBrowserLoggerContext: () => (/* binding */ b)\n/* harmony export */ });\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pino */ \"(ssr)/./node_modules/pino/pino.js\");\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pino__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n\n\n\nconst c = {\n    level: \"info\"\n}, n = \"custom_context\", l = 1e3 * 1024;\nclass O {\n    constructor(e){\n        this.nodeValue = e, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;\n    }\n    get value() {\n        return this.nodeValue;\n    }\n    get size() {\n        return this.sizeInBytes;\n    }\n}\nclass d {\n    constructor(e){\n        this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e, this.sizeInBytes = 0;\n    }\n    append(e) {\n        const t = new O(e);\n        if (t.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${e} with size ${t.size}`);\n        for(; this.size + t.size > this.maxSizeInBytes;)this.shift();\n        this.head ? (this.tail && (this.tail.next = t), this.tail = t) : (this.head = t, this.tail = t), this.lengthInNodes++, this.sizeInBytes += t.size;\n    }\n    shift() {\n        if (!this.head) return;\n        const e = this.head;\n        this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e.size;\n    }\n    toArray() {\n        const e = [];\n        let t = this.head;\n        for(; t !== null;)e.push(t.value), t = t.next;\n        return e;\n    }\n    get length() {\n        return this.lengthInNodes;\n    }\n    get size() {\n        return this.sizeInBytes;\n    }\n    toOrderedArray() {\n        return Array.from(this);\n    }\n    [Symbol.iterator]() {\n        let e = this.head;\n        return {\n            next: ()=>{\n                if (!e) return {\n                    done: !0,\n                    value: null\n                };\n                const t = e.value;\n                return e = e.next, {\n                    done: !1,\n                    value: t\n                };\n            }\n        };\n    }\n}\nclass L {\n    constructor(e, t = l){\n        this.level = e ?? \"error\", this.levelValue = pino__WEBPACK_IMPORTED_MODULE_0__.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = t, this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);\n    }\n    forwardToConsole(e, t) {\n        t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.error ? console.error(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.warn ? console.warn(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.debug ? console.debug(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.trace ? console.trace(e) : console.log(e);\n    }\n    appendToLogs(e) {\n        this.logs.append((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)({\n            timestamp: new Date().toISOString(),\n            log: e\n        }));\n        const t = typeof e == \"string\" ? JSON.parse(e).level : e.level;\n        t >= this.levelValue && this.forwardToConsole(e, t);\n    }\n    getLogs() {\n        return this.logs;\n    }\n    clearLogs() {\n        this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);\n    }\n    getLogArray() {\n        return Array.from(this.logs);\n    }\n    logsToBlob(e) {\n        const t = this.getLogArray();\n        return t.push((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)({\n            extraMetadata: e\n        })), new Blob(t, {\n            type: \"application/json\"\n        });\n    }\n}\nclass m {\n    constructor(e, t = l){\n        this.baseChunkLogger = new L(e, t);\n    }\n    write(e) {\n        this.baseChunkLogger.appendToLogs(e);\n    }\n    getLogs() {\n        return this.baseChunkLogger.getLogs();\n    }\n    clearLogs() {\n        this.baseChunkLogger.clearLogs();\n    }\n    getLogArray() {\n        return this.baseChunkLogger.getLogArray();\n    }\n    logsToBlob(e) {\n        return this.baseChunkLogger.logsToBlob(e);\n    }\n    downloadLogsBlobInBrowser(e) {\n        const t = URL.createObjectURL(this.logsToBlob(e)), o = document.createElement(\"a\");\n        o.href = t, o.download = `walletconnect-logs-${new Date().toISOString()}.txt`, document.body.appendChild(o), o.click(), document.body.removeChild(o), URL.revokeObjectURL(t);\n    }\n}\nclass B {\n    constructor(e, t = l){\n        this.baseChunkLogger = new L(e, t);\n    }\n    write(e) {\n        this.baseChunkLogger.appendToLogs(e);\n    }\n    getLogs() {\n        return this.baseChunkLogger.getLogs();\n    }\n    clearLogs() {\n        this.baseChunkLogger.clearLogs();\n    }\n    getLogArray() {\n        return this.baseChunkLogger.getLogArray();\n    }\n    logsToBlob(e) {\n        return this.baseChunkLogger.logsToBlob(e);\n    }\n}\nvar x = Object.defineProperty, S = Object.defineProperties, _ = Object.getOwnPropertyDescriptors, p = Object.getOwnPropertySymbols, T = Object.prototype.hasOwnProperty, z = Object.prototype.propertyIsEnumerable, f = (r, e, t)=>e in r ? x(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, i = (r, e)=>{\n    for(var t in e || (e = {}))T.call(e, t) && f(r, t, e[t]);\n    if (p) for (var t of p(e))z.call(e, t) && f(r, t, e[t]);\n    return r;\n}, g = (r, e)=>S(r, _(e));\nfunction k(r) {\n    return g(i({}, r), {\n        level: r?.level || c.level\n    });\n}\nfunction v(r, e = n) {\n    return r[e] || \"\";\n}\nfunction b(r, e, t = n) {\n    return r[t] = e, r;\n}\nfunction y(r, e = n) {\n    let t = \"\";\n    return typeof r.bindings > \"u\" ? t = v(r, e) : t = r.bindings().context || \"\", t;\n}\nfunction w(r, e, t = n) {\n    const o = y(r, t);\n    return o.trim() ? `${o}/${e}` : e;\n}\nfunction E(r, e, t = n) {\n    const o = w(r, e, t), a = r.child({\n        context: o\n    });\n    return b(a, o, t);\n}\nfunction C(r) {\n    var e, t;\n    const o = new m((e = r.opts) == null ? void 0 : e.level, r.maxSizeInBytes);\n    return {\n        logger: pino__WEBPACK_IMPORTED_MODULE_0___default()(g(i({}, r.opts), {\n            level: \"trace\",\n            browser: g(i({}, (t = r.opts) == null ? void 0 : t.browser), {\n                write: (a)=>o.write(a)\n            })\n        })),\n        chunkLoggerController: o\n    };\n}\nfunction I(r) {\n    var e;\n    const t = new B((e = r.opts) == null ? void 0 : e.level, r.maxSizeInBytes);\n    return {\n        logger: pino__WEBPACK_IMPORTED_MODULE_0___default()(g(i({}, r.opts), {\n            level: \"trace\"\n        }), t),\n        chunkLoggerController: t\n    };\n}\nfunction A(r) {\n    return typeof r.loggerOverride < \"u\" && typeof r.loggerOverride != \"string\" ? {\n        logger: r.loggerOverride,\n        chunkLoggerController: null\n    } :  false ? 0 : I(r);\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-api/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RELAY_JSONRPC: () => (/* binding */ C),\n/* harmony export */   isPublishMethod: () => (/* binding */ c),\n/* harmony export */   isPublishParams: () => (/* binding */ h),\n/* harmony export */   isPublishRequest: () => (/* binding */ P),\n/* harmony export */   isSubscribeMethod: () => (/* binding */ b),\n/* harmony export */   isSubscribeParams: () => (/* binding */ a),\n/* harmony export */   isSubscribeRequest: () => (/* binding */ R),\n/* harmony export */   isSubscriptionMethod: () => (/* binding */ m),\n/* harmony export */   isSubscriptionParams: () => (/* binding */ d),\n/* harmony export */   isSubscriptionRequest: () => (/* binding */ S),\n/* harmony export */   isUnsubscribeMethod: () => (/* binding */ o),\n/* harmony export */   isUnsubscribeParams: () => (/* binding */ p),\n/* harmony export */   isUnsubscribeRequest: () => (/* binding */ _),\n/* harmony export */   parsePublishRequest: () => (/* binding */ q),\n/* harmony export */   parseSubscribeRequest: () => (/* binding */ g),\n/* harmony export */   parseSubscriptionRequest: () => (/* binding */ k),\n/* harmony export */   parseUnsubscribeRequest: () => (/* binding */ E)\n/* harmony export */ });\nfunction e(s, r, i = \"string\") {\n    if (!s[r] || typeof s[r] !== i) throw new Error(`Missing or invalid \"${r}\" param`);\n}\nfunction l(s, r) {\n    let i = !0;\n    return r.forEach((t)=>{\n        t in s || (i = !1);\n    }), i;\n}\nfunction f(s, r) {\n    return Array.isArray(s) ? s.length === r : Object.keys(s).length === r;\n}\nfunction w(s, r) {\n    return Array.isArray(s) ? s.length >= r : Object.keys(s).length >= r;\n}\nfunction u(s, r, i) {\n    return (i.length ? w(s, r.length) : f(s, r.length)) ? l(s, r) : !1;\n}\nfunction n(s, r, i = \"_\") {\n    const t = s.split(i);\n    return t[t.length - 1].trim().toLowerCase() === r.trim().toLowerCase();\n}\nfunction R(s) {\n    return b(s.method) && a(s.params);\n}\nfunction b(s) {\n    return n(s, \"subscribe\");\n}\nfunction a(s) {\n    return u(s, [\n        \"topic\"\n    ], []);\n}\nfunction P(s) {\n    return c(s.method) && h(s.params);\n}\nfunction c(s) {\n    return n(s, \"publish\");\n}\nfunction h(s) {\n    return u(s, [\n        \"message\",\n        \"topic\",\n        \"ttl\"\n    ], [\n        \"prompt\",\n        \"tag\"\n    ]);\n}\nfunction _(s) {\n    return o(s.method) && p(s.params);\n}\nfunction o(s) {\n    return n(s, \"unsubscribe\");\n}\nfunction p(s) {\n    return u(s, [\n        \"id\",\n        \"topic\"\n    ], []);\n}\nfunction S(s) {\n    return m(s.method) && d(s.params);\n}\nfunction m(s) {\n    return n(s, \"subscription\");\n}\nfunction d(s) {\n    return u(s, [\n        \"id\",\n        \"data\"\n    ], []);\n}\nfunction g(s) {\n    if (!b(s.method)) throw new Error(\"JSON-RPC Request has invalid subscribe method\");\n    if (!a(s.params)) throw new Error(\"JSON-RPC Request has invalid subscribe params\");\n    const r = s.params;\n    return e(r, \"topic\"), r;\n}\nfunction q(s) {\n    if (!c(s.method)) throw new Error(\"JSON-RPC Request has invalid publish method\");\n    if (!h(s.params)) throw new Error(\"JSON-RPC Request has invalid publish params\");\n    const r = s.params;\n    return e(r, \"topic\"), e(r, \"message\"), e(r, \"ttl\", \"number\"), r;\n}\nfunction E(s) {\n    if (!o(s.method)) throw new Error(\"JSON-RPC Request has invalid unsubscribe method\");\n    if (!p(s.params)) throw new Error(\"JSON-RPC Request has invalid unsubscribe params\");\n    const r = s.params;\n    return e(r, \"id\"), r;\n}\nfunction k(s) {\n    if (!m(s.method)) throw new Error(\"JSON-RPC Request has invalid subscription method\");\n    if (!d(s.params)) throw new Error(\"JSON-RPC Request has invalid subscription params\");\n    const r = s.params;\n    return e(r, \"id\"), e(r, \"data\"), r;\n}\nconst C = {\n    waku: {\n        publish: \"waku_publish\",\n        batchPublish: \"waku_batchPublish\",\n        subscribe: \"waku_subscribe\",\n        batchSubscribe: \"waku_batchSubscribe\",\n        subscription: \"waku_subscription\",\n        unsubscribe: \"waku_unsubscribe\",\n        batchUnsubscribe: \"waku_batchUnsubscribe\",\n        batchFetchMessages: \"waku_batchFetchMessages\"\n    },\n    irn: {\n        publish: \"irn_publish\",\n        batchPublish: \"irn_batchPublish\",\n        subscribe: \"irn_subscribe\",\n        batchSubscribe: \"irn_batchSubscribe\",\n        subscription: \"irn_subscription\",\n        unsubscribe: \"irn_unsubscribe\",\n        batchUnsubscribe: \"irn_batchUnsubscribe\",\n        batchFetchMessages: \"irn_batchFetchMessages\"\n    },\n    iridium: {\n        publish: \"iridium_publish\",\n        batchPublish: \"iridium_batchPublish\",\n        subscribe: \"iridium_subscribe\",\n        batchSubscribe: \"iridium_batchSubscribe\",\n        subscription: \"iridium_subscription\",\n        unsubscribe: \"iridium_unsubscribe\",\n        batchUnsubscribe: \"iridium_batchUnsubscribe\",\n        batchFetchMessages: \"iridium_batchFetchMessages\"\n    }\n};\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/api.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   signJWT: () => (/* binding */ signJWT),\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/ed25519 */ \"(ssr)/./node_modules/@stablelib/ed25519/lib/ed25519.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/./node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n\n\nfunction generateKeyPair(seed = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(_constants__WEBPACK_IMPORTED_MODULE_3__.KEY_PAIR_SEED_LENGTH)) {\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.generateKeyPairFromSeed(seed);\n}\nasync function signJWT(sub, aud, ttl, keyPair, iat = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.fromMiliseconds)(Date.now())) {\n    const header = {\n        alg: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG,\n        typ: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP\n    };\n    const iss = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeIss)(keyPair.publicKey);\n    const exp = iat + ttl;\n    const payload = {\n        iss,\n        sub,\n        aud,\n        iat,\n        exp\n    };\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeData)({\n        header,\n        payload\n    });\n    const signature = _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.sign(keyPair.secretKey, data);\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeJWT)({\n        header,\n        payload,\n        signature\n    });\n}\nasync function verifyJWT(jwt) {\n    const { header, payload, data, signature } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(jwt);\n    if (header.alg !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG || header.typ !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP) {\n        throw new Error(\"JWT must use EdDSA algorithm\");\n    }\n    const publicKey = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeIss)(payload.iss);\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.verify(publicKey, data, signature);\n} //# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ0U7QUFDTTtBQUNnQztBQUNKO0FBQzNFLFNBQVNXLGdCQUFnQkMsT0FBT1gsOERBQVdBLENBQUNJLDREQUFvQkEsQ0FBQztJQUNwRSxPQUFPTCx1RUFBK0IsQ0FBQ1k7QUFDM0M7QUFDTyxlQUFlRSxRQUFRQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLE1BQU1qQixvRUFBZUEsQ0FBQ2tCLEtBQUtDLEdBQUcsR0FBRztJQUNuRixNQUFNQyxTQUFTO1FBQUVDLEtBQUtwQix1REFBZUE7UUFBRXFCLEtBQUtwQix1REFBZUE7SUFBQztJQUM1RCxNQUFNcUIsTUFBTWhCLGlEQUFTQSxDQUFDUyxRQUFRUSxTQUFTO0lBQ3ZDLE1BQU1DLE1BQU1SLE1BQU1GO0lBQ2xCLE1BQU1XLFVBQVU7UUFBRUg7UUFBS1Y7UUFBS0M7UUFBS0c7UUFBS1E7SUFBSTtJQUMxQyxNQUFNRSxPQUFPckIsa0RBQVVBLENBQUM7UUFBRWM7UUFBUU07SUFBUTtJQUMxQyxNQUFNRSxZQUFZOUIsb0RBQVksQ0FBQ2tCLFFBQVFjLFNBQVMsRUFBRUg7SUFDbEQsT0FBT25CLGlEQUFTQSxDQUFDO1FBQUVZO1FBQVFNO1FBQVNFO0lBQVU7QUFDbEQ7QUFDTyxlQUFlRyxVQUFVQyxHQUFHO0lBQy9CLE1BQU0sRUFBRVosTUFBTSxFQUFFTSxPQUFPLEVBQUVDLElBQUksRUFBRUMsU0FBUyxFQUFFLEdBQUd2QixpREFBU0EsQ0FBQzJCO0lBQ3ZELElBQUlaLE9BQU9DLEdBQUcsS0FBS3BCLHVEQUFlQSxJQUFJbUIsT0FBT0UsR0FBRyxLQUFLcEIsdURBQWVBLEVBQUU7UUFDbEUsTUFBTSxJQUFJK0IsTUFBTTtJQUNwQjtJQUNBLE1BQU1ULFlBQVlwQixpREFBU0EsQ0FBQ3NCLFFBQVFILEdBQUc7SUFDdkMsT0FBT3pCLHNEQUFjLENBQUMwQixXQUFXRyxNQUFNQztBQUMzQyxFQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9hcGkuanM/MmM0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBlZDI1NTE5IGZyb20gXCJAc3RhYmxlbGliL2VkMjU1MTlcIjtcbmltcG9ydCB7IHJhbmRvbUJ5dGVzIH0gZnJvbSBcIkBzdGFibGVsaWIvcmFuZG9tXCI7XG5pbXBvcnQgeyBmcm9tTWlsaXNlY29uZHMgfSBmcm9tIFwiQHdhbGxldGNvbm5lY3QvdGltZVwiO1xuaW1wb3J0IHsgSldUX0lSSURJVU1fQUxHLCBKV1RfSVJJRElVTV9UWVAsIEtFWV9QQUlSX1NFRURfTEVOR1RILCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZGVjb2RlSXNzLCBkZWNvZGVKV1QsIGVuY29kZURhdGEsIGVuY29kZUlzcywgZW5jb2RlSldULCB9IGZyb20gXCIuL3V0aWxzXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVLZXlQYWlyKHNlZWQgPSByYW5kb21CeXRlcyhLRVlfUEFJUl9TRUVEX0xFTkdUSCkpIHtcbiAgICByZXR1cm4gZWQyNTUxOS5nZW5lcmF0ZUtleVBhaXJGcm9tU2VlZChzZWVkKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduSldUKHN1YiwgYXVkLCB0dGwsIGtleVBhaXIsIGlhdCA9IGZyb21NaWxpc2Vjb25kcyhEYXRlLm5vdygpKSkge1xuICAgIGNvbnN0IGhlYWRlciA9IHsgYWxnOiBKV1RfSVJJRElVTV9BTEcsIHR5cDogSldUX0lSSURJVU1fVFlQIH07XG4gICAgY29uc3QgaXNzID0gZW5jb2RlSXNzKGtleVBhaXIucHVibGljS2V5KTtcbiAgICBjb25zdCBleHAgPSBpYXQgKyB0dGw7XG4gICAgY29uc3QgcGF5bG9hZCA9IHsgaXNzLCBzdWIsIGF1ZCwgaWF0LCBleHAgfTtcbiAgICBjb25zdCBkYXRhID0gZW5jb2RlRGF0YSh7IGhlYWRlciwgcGF5bG9hZCB9KTtcbiAgICBjb25zdCBzaWduYXR1cmUgPSBlZDI1NTE5LnNpZ24oa2V5UGFpci5zZWNyZXRLZXksIGRhdGEpO1xuICAgIHJldHVybiBlbmNvZGVKV1QoeyBoZWFkZXIsIHBheWxvYWQsIHNpZ25hdHVyZSB9KTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlKV1Qoand0KSB7XG4gICAgY29uc3QgeyBoZWFkZXIsIHBheWxvYWQsIGRhdGEsIHNpZ25hdHVyZSB9ID0gZGVjb2RlSldUKGp3dCk7XG4gICAgaWYgKGhlYWRlci5hbGcgIT09IEpXVF9JUklESVVNX0FMRyB8fCBoZWFkZXIudHlwICE9PSBKV1RfSVJJRElVTV9UWVApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSldUIG11c3QgdXNlIEVkRFNBIGFsZ29yaXRobVwiKTtcbiAgICB9XG4gICAgY29uc3QgcHVibGljS2V5ID0gZGVjb2RlSXNzKHBheWxvYWQuaXNzKTtcbiAgICByZXR1cm4gZWQyNTUxOS52ZXJpZnkocHVibGljS2V5LCBkYXRhLCBzaWduYXR1cmUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6WyJlZDI1NTE5IiwicmFuZG9tQnl0ZXMiLCJmcm9tTWlsaXNlY29uZHMiLCJKV1RfSVJJRElVTV9BTEciLCJKV1RfSVJJRElVTV9UWVAiLCJLRVlfUEFJUl9TRUVEX0xFTkdUSCIsImRlY29kZUlzcyIsImRlY29kZUpXVCIsImVuY29kZURhdGEiLCJlbmNvZGVJc3MiLCJlbmNvZGVKV1QiLCJnZW5lcmF0ZUtleVBhaXIiLCJzZWVkIiwiZ2VuZXJhdGVLZXlQYWlyRnJvbVNlZWQiLCJzaWduSldUIiwic3ViIiwiYXVkIiwidHRsIiwia2V5UGFpciIsImlhdCIsIkRhdGUiLCJub3ciLCJoZWFkZXIiLCJhbGciLCJ0eXAiLCJpc3MiLCJwdWJsaWNLZXkiLCJleHAiLCJwYXlsb2FkIiwiZGF0YSIsInNpZ25hdHVyZSIsInNpZ24iLCJzZWNyZXRLZXkiLCJ2ZXJpZnlKV1QiLCJqd3QiLCJFcnJvciIsInZlcmlmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* binding */ DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* binding */ DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* binding */ DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* binding */ DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* binding */ JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* binding */ JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* binding */ JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* binding */ JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* binding */ JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* binding */ KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* binding */ MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* binding */ MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* binding */ MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* binding */ MULTICODEC_ED25519_LENGTH)\n/* harmony export */ });\nconst JWT_IRIDIUM_ALG = \"EdDSA\";\nconst JWT_IRIDIUM_TYP = \"JWT\";\nconst JWT_DELIMITER = \".\";\nconst JWT_ENCODING = \"base64url\";\nconst JSON_ENCODING = \"utf8\";\nconst DATA_ENCODING = \"utf8\";\nconst DID_DELIMITER = \":\";\nconst DID_PREFIX = \"did\";\nconst DID_METHOD = \"key\";\nconst MULTICODEC_ED25519_ENCODING = \"base58btc\";\nconst MULTICODEC_ED25519_BASE = \"z\";\nconst MULTICODEC_ED25519_HEADER = \"K36\";\nconst MULTICODEC_ED25519_LENGTH = 32;\nconst KEY_PAIR_SEED_LENGTH = 32; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxrQkFBa0IsUUFBUTtBQUNoQyxNQUFNQyxrQkFBa0IsTUFBTTtBQUM5QixNQUFNQyxnQkFBZ0IsSUFBSTtBQUMxQixNQUFNQyxlQUFlLFlBQVk7QUFDakMsTUFBTUMsZ0JBQWdCLE9BQU87QUFDN0IsTUFBTUMsZ0JBQWdCLE9BQU87QUFDN0IsTUFBTUMsZ0JBQWdCLElBQUk7QUFDMUIsTUFBTUMsYUFBYSxNQUFNO0FBQ3pCLE1BQU1DLGFBQWEsTUFBTTtBQUN6QixNQUFNQyw4QkFBOEIsWUFBWTtBQUNoRCxNQUFNQywwQkFBMEIsSUFBSTtBQUNwQyxNQUFNQyw0QkFBNEIsTUFBTTtBQUN4QyxNQUFNQyw0QkFBNEIsR0FBRztBQUNyQyxNQUFNQyx1QkFBdUIsR0FBRyxDQUN2QyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vY29uc3RhbnRzLmpzPzVkOGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEpXVF9JUklESVVNX0FMRyA9IFwiRWREU0FcIjtcbmV4cG9ydCBjb25zdCBKV1RfSVJJRElVTV9UWVAgPSBcIkpXVFwiO1xuZXhwb3J0IGNvbnN0IEpXVF9ERUxJTUlURVIgPSBcIi5cIjtcbmV4cG9ydCBjb25zdCBKV1RfRU5DT0RJTkcgPSBcImJhc2U2NHVybFwiO1xuZXhwb3J0IGNvbnN0IEpTT05fRU5DT0RJTkcgPSBcInV0ZjhcIjtcbmV4cG9ydCBjb25zdCBEQVRBX0VOQ09ESU5HID0gXCJ1dGY4XCI7XG5leHBvcnQgY29uc3QgRElEX0RFTElNSVRFUiA9IFwiOlwiO1xuZXhwb3J0IGNvbnN0IERJRF9QUkVGSVggPSBcImRpZFwiO1xuZXhwb3J0IGNvbnN0IERJRF9NRVRIT0QgPSBcImtleVwiO1xuZXhwb3J0IGNvbnN0IE1VTFRJQ09ERUNfRUQyNTUxOV9FTkNPRElORyA9IFwiYmFzZTU4YnRjXCI7XG5leHBvcnQgY29uc3QgTVVMVElDT0RFQ19FRDI1NTE5X0JBU0UgPSBcInpcIjtcbmV4cG9ydCBjb25zdCBNVUxUSUNPREVDX0VEMjU1MTlfSEVBREVSID0gXCJLMzZcIjtcbmV4cG9ydCBjb25zdCBNVUxUSUNPREVDX0VEMjU1MTlfTEVOR1RIID0gMzI7XG5leHBvcnQgY29uc3QgS0VZX1BBSVJfU0VFRF9MRU5HVEggPSAzMjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiSldUX0lSSURJVU1fQUxHIiwiSldUX0lSSURJVU1fVFlQIiwiSldUX0RFTElNSVRFUiIsIkpXVF9FTkNPRElORyIsIkpTT05fRU5DT0RJTkciLCJEQVRBX0VOQ09ESU5HIiwiRElEX0RFTElNSVRFUiIsIkRJRF9QUkVGSVgiLCJESURfTUVUSE9EIiwiTVVMVElDT0RFQ19FRDI1NTE5X0VOQ09ESU5HIiwiTVVMVElDT0RFQ19FRDI1NTE5X0JBU0UiLCJNVUxUSUNPREVDX0VEMjU1MTlfSEVBREVSIiwiTVVMVElDT0RFQ19FRDI1NTE5X0xFTkdUSCIsIktFWV9QQUlSX1NFRURfTEVOR1RIIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_LENGTH),\n/* harmony export */   decodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeData),\n/* harmony export */   decodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeIss),\n/* harmony export */   decodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJSON),\n/* harmony export */   decodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJWT),\n/* harmony export */   decodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeSig),\n/* harmony export */   encodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeData),\n/* harmony export */   encodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeIss),\n/* harmony export */   encodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJSON),\n/* harmony export */   encodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJWT),\n/* harmony export */   encodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeSig),\n/* harmony export */   generateKeyPair: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.generateKeyPair),\n/* harmony export */   signJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.signJWT),\n/* harmony export */   verifyJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"generateKeyPair\",\"signJWT\",\"verifyJWT\",\"DATA_ENCODING\",\"DID_DELIMITER\",\"DID_METHOD\",\"DID_PREFIX\",\"JSON_ENCODING\",\"JWT_DELIMITER\",\"JWT_ENCODING\",\"JWT_IRIDIUM_ALG\",\"JWT_IRIDIUM_TYP\",\"KEY_PAIR_SEED_LENGTH\",\"MULTICODEC_ED25519_BASE\",\"MULTICODEC_ED25519_ENCODING\",\"MULTICODEC_ED25519_HEADER\",\"MULTICODEC_ED25519_LENGTH\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFzQjtBQUNNO0FBQ0o7QUFDQSxDQUN4QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vaW5kZXguanM/NTRlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9hcGlcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHlwZXNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3V0aWxzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/types.js ***!
  \******************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vdHlwZXMuanM/NjczZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUNBQWlDIiwiZmlsZSI6Iihzc3IpLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vdHlwZXMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeData: () => (/* binding */ decodeData),\n/* harmony export */   decodeIss: () => (/* binding */ decodeIss),\n/* harmony export */   decodeJSON: () => (/* binding */ decodeJSON),\n/* harmony export */   decodeJWT: () => (/* binding */ decodeJWT),\n/* harmony export */   decodeSig: () => (/* binding */ decodeSig),\n/* harmony export */   encodeData: () => (/* binding */ encodeData),\n/* harmony export */   encodeIss: () => (/* binding */ encodeIss),\n/* harmony export */   encodeJSON: () => (/* binding */ encodeJSON),\n/* harmony export */   encodeJWT: () => (/* binding */ encodeJWT),\n/* harmony export */   encodeSig: () => (/* binding */ encodeSig)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/concat */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/concat.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/to-string.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/from-string.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n\n\n\n\n\nfunction decodeJSON(str) {\n    return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonParse)((0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(str, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonStringify)(val), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    const header = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(_constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER, _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const multicodec = _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__.concat)([\n        header,\n        publicKey\n    ]), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    return [\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX,\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD,\n        multicodec\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n    if (prefix !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX || method !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    const base = multicodec.slice(0, 1);\n    if (base !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE) {\n        throw new Error(`Issuer must be a key in mulicodec format`);\n    }\n    const bytes = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(multicodec.slice(1), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const type = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes.slice(0, 2), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    if (type !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER) {\n        throw new Error(`Issuer must be a public key with type \"Ed25519\"`);\n    }\n    const publicKey = bytes.slice(2);\n    if (publicKey.length !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\nfunction encodeSig(bytes) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(encoded, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeData(params) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)([\n        encodeJSON(params.header),\n        encodeJSON(params.payload)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    const params = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(data, _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING).split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    return {\n        header,\n        payload\n    };\n}\nfunction encodeJWT(params) {\n    return [\n        encodeJSON(params.header),\n        encodeJSON(params.payload),\n        encodeSig(params.signature)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    const params = jwt.split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    const signature = decodeSig(params[2]);\n    const data = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(params.slice(0, 2).join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n    return {\n        header,\n        payload,\n        signature,\n        data\n    };\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),\n/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)\n/* harmony export */ });\nconst JSONStringify = (data)=>JSON.stringify(data, (_, value)=>typeof value === \"bigint\" ? value.toString() + \"n\" : value);\nconst JSONParse = (json)=>{\n    const numbersBiggerThanMaxInt = /([\\[:])?(\\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\\}\\]])/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, '$1\"$2n\"$3');\n    return JSON.parse(serializedData, (_, value)=>{\n        const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n        if (isCustomFormatBigInt) return BigInt(value.substring(0, value.length - 1));\n        return value;\n    });\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    } catch (_a) {\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvc2FmZS1qc29uL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsZ0JBQWdCQyxDQUFBQSxPQUFRQyxLQUFLQyxTQUFTLENBQUNGLE1BQU0sQ0FBQ0csR0FBR0MsUUFBVSxPQUFPQSxVQUFVLFdBQVdBLE1BQU1DLFFBQVEsS0FBSyxNQUFNRDtBQUN0SCxNQUFNRSxZQUFZQyxDQUFBQTtJQUNkLE1BQU1DLDBCQUEwQjtJQUNoQyxNQUFNQyxpQkFBaUJGLEtBQUtHLE9BQU8sQ0FBQ0YseUJBQXlCO0lBQzdELE9BQU9QLEtBQUtVLEtBQUssQ0FBQ0YsZ0JBQWdCLENBQUNOLEdBQUdDO1FBQ2xDLE1BQU1RLHVCQUF1QixPQUFPUixVQUFVLFlBQVlBLE1BQU1TLEtBQUssQ0FBQztRQUN0RSxJQUFJRCxzQkFDQSxPQUFPRSxPQUFPVixNQUFNVyxTQUFTLENBQUMsR0FBR1gsTUFBTVksTUFBTSxHQUFHO1FBQ3BELE9BQU9aO0lBQ1g7QUFDSjtBQUNPLFNBQVNhLGNBQWNiLEtBQUs7SUFDL0IsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDM0IsTUFBTSxJQUFJYyxNQUFNLENBQUMscUNBQXFDLEVBQUUsT0FBT2QsTUFBTSxDQUFDO0lBQzFFO0lBQ0EsSUFBSTtRQUNBLE9BQU9FLFVBQVVGO0lBQ3JCLEVBQ0EsT0FBT2UsSUFBSTtRQUNQLE9BQU9mO0lBQ1g7QUFDSjtBQUNPLFNBQVNnQixrQkFBa0JoQixLQUFLO0lBQ25DLE9BQU8sT0FBT0EsVUFBVSxXQUFXQSxRQUFRTCxjQUFjSyxVQUFVO0FBQ3ZFLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9zYWZlLWpzb24vZGlzdC9lc20vaW5kZXguanM/ZTJkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBKU09OU3RyaW5naWZ5ID0gZGF0YSA9PiBKU09OLnN0cmluZ2lmeShkYXRhLCAoXywgdmFsdWUpID0+IHR5cGVvZiB2YWx1ZSA9PT0gXCJiaWdpbnRcIiA/IHZhbHVlLnRvU3RyaW5nKCkgKyBcIm5cIiA6IHZhbHVlKTtcbmNvbnN0IEpTT05QYXJzZSA9IGpzb24gPT4ge1xuICAgIGNvbnN0IG51bWJlcnNCaWdnZXJUaGFuTWF4SW50ID0gLyhbXFxbOl0pPyhcXGR7MTcsfXwoPzpbOV0oPzpbMS05XTA3MTk5MjU0NzQwOTkxfDBbMS05XTcxOTkyNTQ3NDA5OTF8MDBbOC05XTE5OTI1NDc0MDk5MXwwMDdbMi05XTk5MjU0NzQwOTkxfDAwNzE5OVszLTldNTQ3NDA5OTF8MDA3MTk5Mls2LTldNDc0MDk5MXwwMDcxOTkyNVs1LTldNzQwOTkxfDAwNzE5OTI1NFs4LTldNDA5OTF8MDA3MTk5MjU0N1s1LTldMDk5MXwwMDcxOTkyNTQ3NFsxLTldOTkxfDAwNzE5OTI1NDc0MDk5WzItOV0pKSkoWyxcXH1cXF1dKS9nO1xuICAgIGNvbnN0IHNlcmlhbGl6ZWREYXRhID0ganNvbi5yZXBsYWNlKG51bWJlcnNCaWdnZXJUaGFuTWF4SW50LCBcIiQxXFxcIiQyblxcXCIkM1wiKTtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShzZXJpYWxpemVkRGF0YSwgKF8sIHZhbHVlKSA9PiB7XG4gICAgICAgIGNvbnN0IGlzQ3VzdG9tRm9ybWF0QmlnSW50ID0gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIHZhbHVlLm1hdGNoKC9eXFxkK24kLyk7XG4gICAgICAgIGlmIChpc0N1c3RvbUZvcm1hdEJpZ0ludClcbiAgICAgICAgICAgIHJldHVybiBCaWdJbnQodmFsdWUuc3Vic3RyaW5nKDAsIHZhbHVlLmxlbmd0aCAtIDEpKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0pO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBzYWZlSnNvblBhcnNlKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBzYWZlIGpzb24gcGFyc2UgdmFsdWUgb2YgdHlwZSAke3R5cGVvZiB2YWx1ZX1gKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIEpTT05QYXJzZSh2YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIChfYSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNhZmVKc29uU3RyaW5naWZ5KHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiA/IHZhbHVlIDogSlNPTlN0cmluZ2lmeSh2YWx1ZSkgfHwgXCJcIjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJKU09OU3RyaW5naWZ5IiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJfIiwidmFsdWUiLCJ0b1N0cmluZyIsIkpTT05QYXJzZSIsImpzb24iLCJudW1iZXJzQmlnZ2VyVGhhbk1heEludCIsInNlcmlhbGl6ZWREYXRhIiwicmVwbGFjZSIsInBhcnNlIiwiaXNDdXN0b21Gb3JtYXRCaWdJbnQiLCJtYXRjaCIsIkJpZ0ludCIsInN1YnN0cmluZyIsImxlbmd0aCIsInNhZmVKc29uUGFyc2UiLCJFcnJvciIsIl9hIiwic2FmZUpzb25TdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/dist/index.es.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AUTH_CONTEXT: () => (/* binding */ lt),\n/* harmony export */   AUTH_KEYS_CONTEXT: () => (/* binding */ pt),\n/* harmony export */   AUTH_PAIRING_TOPIC_CONTEXT: () => (/* binding */ ht),\n/* harmony export */   AUTH_PROTOCOL: () => (/* binding */ ct),\n/* harmony export */   AUTH_PUBLIC_KEY_NAME: () => (/* binding */ ae),\n/* harmony export */   AUTH_REQUEST_CONTEXT: () => (/* binding */ dt),\n/* harmony export */   AUTH_STORAGE_PREFIX: () => (/* binding */ oe),\n/* harmony export */   AUTH_VERSION: () => (/* binding */ gs),\n/* harmony export */   ENGINE_CONTEXT: () => (/* binding */ nt),\n/* harmony export */   ENGINE_QUEUE_STATES: () => (/* binding */ x),\n/* harmony export */   ENGINE_RPC_OPTS: () => (/* binding */ v),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ hs),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ ps),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ ds),\n/* harmony export */   METHODS_TO_VERIFY: () => (/* binding */ at),\n/* harmony export */   PROPOSAL_CONTEXT: () => (/* binding */ st),\n/* harmony export */   PROPOSAL_EXPIRY: () => (/* binding */ us),\n/* harmony export */   PROPOSAL_EXPIRY_MESSAGE: () => (/* binding */ it),\n/* harmony export */   REQUEST_CONTEXT: () => (/* binding */ ot),\n/* harmony export */   SESSION_CONTEXT: () => (/* binding */ rt),\n/* harmony export */   SESSION_EXPIRY: () => (/* binding */ z),\n/* harmony export */   SESSION_REQUEST_EXPIRY_BOUNDARIES: () => (/* binding */ me),\n/* harmony export */   SIGN_CLIENT_CONTEXT: () => (/* binding */ Le),\n/* harmony export */   SIGN_CLIENT_DEFAULT: () => (/* binding */ we),\n/* harmony export */   SIGN_CLIENT_EVENTS: () => (/* binding */ cs),\n/* harmony export */   SIGN_CLIENT_PROTOCOL: () => (/* binding */ be),\n/* harmony export */   SIGN_CLIENT_STORAGE_OPTIONS: () => (/* binding */ ls),\n/* harmony export */   SIGN_CLIENT_STORAGE_PREFIX: () => (/* binding */ ye),\n/* harmony export */   SIGN_CLIENT_VERSION: () => (/* binding */ Ce),\n/* harmony export */   SessionStore: () => (/* binding */ Ns),\n/* harmony export */   SignClient: () => (/* binding */ Ps),\n/* harmony export */   WALLETCONNECT_DEEPLINK_CHOICE: () => (/* binding */ xe),\n/* harmony export */   \"default\": () => (/* binding */ _e)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/core */ \"(ssr)/./node_modules/@walletconnect/core/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst be = \"wc\", Ce = 2, Le = \"client\", ye = `${be}@${Ce}:${Le}:`, we = {\n    name: Le,\n    logger: \"error\",\n    controller: !1,\n    relayUrl: \"wss://relay.walletconnect.org\"\n}, cs = {\n    session_proposal: \"session_proposal\",\n    session_update: \"session_update\",\n    session_extend: \"session_extend\",\n    session_ping: \"session_ping\",\n    session_delete: \"session_delete\",\n    session_expire: \"session_expire\",\n    session_request: \"session_request\",\n    session_request_sent: \"session_request_sent\",\n    session_event: \"session_event\",\n    proposal_expire: \"proposal_expire\",\n    session_authenticate: \"session_authenticate\",\n    session_request_expire: \"session_request_expire\"\n}, ls = {\n    database: \":memory:\"\n}, xe = \"WALLETCONNECT_DEEPLINK_CHOICE\", ps = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, hs = \"history\", ds = \"0.3\", st = \"proposal\", us = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_DAYS, it = \"Proposal expired\", rt = \"session\", z = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS, nt = \"engine\", v = {\n    wc_sessionPropose: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1100\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1101\n        },\n        reject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1120\n        },\n        autoReject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1121\n        }\n    },\n    wc_sessionSettle: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1102\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1103\n        }\n    },\n    wc_sessionUpdate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1104\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1105\n        }\n    },\n    wc_sessionExtend: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1106\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1107\n        }\n    },\n    wc_sessionRequest: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1108\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1109\n        }\n    },\n    wc_sessionEvent: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1110\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1111\n        }\n    },\n    wc_sessionDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1112\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1113\n        }\n    },\n    wc_sessionPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1114\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1115\n        }\n    },\n    wc_sessionAuthenticate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_HOUR,\n            prompt: !0,\n            tag: 1116\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_HOUR,\n            prompt: !1,\n            tag: 1117\n        },\n        reject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1118\n        },\n        autoReject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1119\n        }\n    }\n}, me = {\n    min: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n    max: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS\n}, x = {\n    idle: \"IDLE\",\n    active: \"ACTIVE\"\n}, ot = \"request\", at = [\n    \"wc_sessionPropose\",\n    \"wc_sessionRequest\",\n    \"wc_authRequest\",\n    \"wc_sessionAuthenticate\"\n], ct = \"wc\", gs = 1.5, lt = \"auth\", pt = \"authKeys\", ht = \"pairingTopics\", dt = \"requests\", oe = `${ct}@${1.5}:${lt}:`, ae = `${oe}:PUB_KEY`;\nvar ys = Object.defineProperty, ws = Object.defineProperties, ms = Object.getOwnPropertyDescriptors, ut = Object.getOwnPropertySymbols, _s = Object.prototype.hasOwnProperty, Es = Object.prototype.propertyIsEnumerable, gt = (q, o, e)=>o in q ? ys(q, o, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : q[o] = e, I = (q, o)=>{\n    for(var e in o || (o = {}))_s.call(o, e) && gt(q, e, o[e]);\n    if (ut) for (var e of ut(o))Es.call(o, e) && gt(q, e, o[e]);\n    return q;\n}, D = (q, o)=>ws(q, ms(o));\nclass Rs extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IEngine {\n    constructor(o){\n        super(o), this.name = nt, this.events = new (events__WEBPACK_IMPORTED_MODULE_1___default()), this.initialized = !1, this.requestQueue = {\n            state: x.idle,\n            queue: []\n        }, this.sessionRequestQueue = {\n            state: x.idle,\n            queue: []\n        }, this.requestQueueDelay = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_SECOND, this.expectedPairingMethodMap = new Map, this.recentlyDeletedMap = new Map, this.recentlyDeletedLimit = 200, this.relayMessageCache = [], this.init = async ()=>{\n            this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), await this.registerLinkModeListeners(), this.client.core.pairing.register({\n                methods: Object.keys(v)\n            }), this.initialized = !0, setTimeout(()=>{\n                this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay)));\n        }, this.connect = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            const t = D(I({}, e), {\n                requiredNamespaces: e.requiredNamespaces || {},\n                optionalNamespaces: e.optionalNamespaces || {}\n            });\n            await this.isValidConnect(t);\n            const { pairingTopic: s, requiredNamespaces: i, optionalNamespaces: r, sessionProperties: n, relays: a } = t;\n            let c = s, h, p = !1;\n            try {\n                c && (p = this.client.core.pairing.pairings.get(c).active);\n            } catch (E) {\n                throw this.client.logger.error(`connect() -> pairing.get(${c}) failed`), E;\n            }\n            if (!c || !p) {\n                const { topic: E, uri: S } = await this.client.core.pairing.create();\n                c = E, h = S;\n            }\n            if (!c) {\n                const { message: E } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `connect() pairing topic: ${c}`);\n                throw new Error(E);\n            }\n            const d = await this.client.core.crypto.generateKeyPair(), l = v.wc_sessionPropose.req.ttl || _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES, w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(l), m = I({\n                requiredNamespaces: i,\n                optionalNamespaces: r,\n                relays: a ?? [\n                    {\n                        protocol: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_DEFAULT_PROTOCOL\n                    }\n                ],\n                proposer: {\n                    publicKey: d,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: w,\n                pairingTopic: c\n            }, n && {\n                sessionProperties: n\n            }), { reject: y, resolve: _, done: R } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(l, it);\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), async ({ error: E, session: S })=>{\n                if (E) y(E);\n                else if (S) {\n                    S.self.publicKey = d;\n                    const M = D(I({}, S), {\n                        pairingTopic: m.pairingTopic,\n                        requiredNamespaces: m.requiredNamespaces,\n                        optionalNamespaces: m.optionalNamespaces,\n                        transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay\n                    });\n                    await this.client.session.set(S.topic, M), await this.setExpiry(S.topic, S.expiry), c && await this.client.core.pairing.updateMetadata({\n                        topic: c,\n                        metadata: S.peer.metadata\n                    }), this.cleanupDuplicatePairings(M), _(M);\n                }\n            });\n            const V = await this.sendRequest({\n                topic: c,\n                method: \"wc_sessionPropose\",\n                params: m,\n                throwOnFailedPublish: !0\n            });\n            return await this.setProposal(V, I({\n                id: V\n            }, m)), {\n                uri: h,\n                approval: R\n            };\n        }, this.pair = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                return await this.client.core.pairing.pair(e);\n            } catch (t) {\n                throw this.client.logger.error(\"pair() failed\"), t;\n            }\n        }, this.approve = async (e)=>{\n            var t, s, i;\n            const r = this.client.core.eventClient.createEvent({\n                properties: {\n                    topic: (t = e?.id) == null ? void 0 : t.toString(),\n                    trace: [\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_started\n                    ]\n                }\n            });\n            try {\n                this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            } catch (N) {\n                throw r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.no_internet_connection), N;\n            }\n            try {\n                await this.isValidProposalId(e?.id);\n            } catch (N) {\n                throw this.client.logger.error(`approve() -> proposal.get(${e?.id}) failed`), r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.proposal_not_found), N;\n            }\n            try {\n                await this.isValidApprove(e);\n            } catch (N) {\n                throw this.client.logger.error(\"approve() -> isValidApprove() failed\"), r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.session_approve_namespace_validation_failure), N;\n            }\n            const { id: n, relayProtocol: a, namespaces: c, sessionProperties: h, sessionConfig: p } = e, d = this.client.proposal.get(n);\n            this.client.core.eventClient.deleteEvent({\n                eventId: r.eventId\n            });\n            const { pairingTopic: l, proposer: w, requiredNamespaces: m, optionalNamespaces: y } = d;\n            let _ = (s = this.client.core.eventClient) == null ? void 0 : s.getEvent({\n                topic: l\n            });\n            _ || (_ = (i = this.client.core.eventClient) == null ? void 0 : i.createEvent({\n                type: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_started,\n                properties: {\n                    topic: l,\n                    trace: [\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_started,\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_namespaces_validation_success\n                    ]\n                }\n            }));\n            const R = await this.client.core.crypto.generateKeyPair(), V = w.publicKey, E = await this.client.core.crypto.generateSharedKey(R, V), S = I(I({\n                relay: {\n                    protocol: a ?? \"irn\"\n                },\n                namespaces: c,\n                controller: {\n                    publicKey: R,\n                    metadata: this.client.metadata\n                },\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z)\n            }, h && {\n                sessionProperties: h\n            }), p && {\n                sessionConfig: p\n            }), M = _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay;\n            _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.subscribing_session_topic);\n            try {\n                await this.client.core.relayer.subscribe(E, {\n                    transportType: M\n                });\n            } catch (N) {\n                throw _.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.subscribe_session_topic_failure), N;\n            }\n            _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.subscribe_session_topic_success);\n            const W = D(I({}, S), {\n                topic: E,\n                requiredNamespaces: m,\n                optionalNamespaces: y,\n                pairingTopic: l,\n                acknowledged: !1,\n                self: S.controller,\n                peer: {\n                    publicKey: w.publicKey,\n                    metadata: w.metadata\n                },\n                controller: R,\n                transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay\n            });\n            await this.client.session.set(E, W), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.store_session);\n            try {\n                _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.publishing_session_settle), await this.sendRequest({\n                    topic: E,\n                    method: \"wc_sessionSettle\",\n                    params: S,\n                    throwOnFailedPublish: !0\n                }).catch((N)=>{\n                    throw _?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.session_settle_publish_failure), N;\n                }), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_settle_publish_success), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.publishing_session_approve), await this.sendResult({\n                    id: n,\n                    topic: l,\n                    result: {\n                        relay: {\n                            protocol: a ?? \"irn\"\n                        },\n                        responderPublicKey: R\n                    },\n                    throwOnFailedPublish: !0\n                }).catch((N)=>{\n                    throw _?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.session_approve_publish_failure), N;\n                }), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_publish_success);\n            } catch (N) {\n                throw this.client.logger.error(N), this.client.session.delete(E, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.relayer.unsubscribe(E), N;\n            }\n            return this.client.core.eventClient.deleteEvent({\n                eventId: _.eventId\n            }), await this.client.core.pairing.updateMetadata({\n                topic: l,\n                metadata: w.metadata\n            }), await this.client.proposal.delete(n, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.pairing.activate({\n                topic: l\n            }), await this.setExpiry(E, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z)), {\n                topic: E,\n                acknowledged: ()=>Promise.resolve(this.client.session.get(E))\n            };\n        }, this.reject = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidReject(e);\n            } catch (r) {\n                throw this.client.logger.error(\"reject() -> isValidReject() failed\"), r;\n            }\n            const { id: t, reason: s } = e;\n            let i;\n            try {\n                i = this.client.proposal.get(t).pairingTopic;\n            } catch (r) {\n                throw this.client.logger.error(`reject() -> proposal.get(${t}) failed`), r;\n            }\n            i && (await this.sendError({\n                id: t,\n                topic: i,\n                error: s,\n                rpcOpts: v.wc_sessionPropose.reject\n            }), await this.client.proposal.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")));\n        }, this.update = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidUpdate(e);\n            } catch (p) {\n                throw this.client.logger.error(\"update() -> isValidUpdate() failed\"), p;\n            }\n            const { topic: t, namespaces: s } = e, { done: i, resolve: r, reject: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(), a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), h = this.client.session.get(t).namespaces;\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", a), ({ error: p })=>{\n                p ? n(p) : r();\n            }), await this.client.session.update(t, {\n                namespaces: s\n            }), await this.sendRequest({\n                topic: t,\n                method: \"wc_sessionUpdate\",\n                params: {\n                    namespaces: s\n                },\n                throwOnFailedPublish: !0,\n                clientRpcId: a,\n                relayRpcId: c\n            }).catch((p)=>{\n                this.client.logger.error(p), this.client.session.update(t, {\n                    namespaces: h\n                }), n(p);\n            }), {\n                acknowledged: i\n            };\n        }, this.extend = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidExtend(e);\n            } catch (a) {\n                throw this.client.logger.error(\"extend() -> isValidExtend() failed\"), a;\n            }\n            const { topic: t } = e, s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), { done: i, resolve: r, reject: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), ({ error: a })=>{\n                a ? n(a) : r();\n            }), await this.setExpiry(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z)), this.sendRequest({\n                topic: t,\n                method: \"wc_sessionExtend\",\n                params: {},\n                clientRpcId: s,\n                throwOnFailedPublish: !0\n            }).catch((a)=>{\n                n(a);\n            }), {\n                acknowledged: i\n            };\n        }, this.request = async (e)=>{\n            this.isInitialized();\n            try {\n                await this.isValidRequest(e);\n            } catch (w) {\n                throw this.client.logger.error(\"request() -> isValidRequest() failed\"), w;\n            }\n            const { chainId: t, request: s, topic: i, expiry: r = v.wc_sessionRequest.req.ttl } = e, n = this.client.session.get(i);\n            n?.transportType === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), { done: h, resolve: p, reject: d } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(r, \"Request expired. Please try again.\");\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", a), ({ error: w, result: m })=>{\n                w ? d(w) : p(m);\n            });\n            const l = this.getAppLinkIfEnabled(n.peer.metadata, n.transportType);\n            return l ? (await this.sendRequest({\n                clientRpcId: a,\n                relayRpcId: c,\n                topic: i,\n                method: \"wc_sessionRequest\",\n                params: {\n                    request: D(I({}, s), {\n                        expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(r)\n                    }),\n                    chainId: t\n                },\n                expiry: r,\n                throwOnFailedPublish: !0,\n                appLink: l\n            }).catch((w)=>d(w)), this.client.events.emit(\"session_request_sent\", {\n                topic: i,\n                request: s,\n                chainId: t,\n                id: a\n            }), await h()) : await Promise.all([\n                new Promise(async (w)=>{\n                    await this.sendRequest({\n                        clientRpcId: a,\n                        relayRpcId: c,\n                        topic: i,\n                        method: \"wc_sessionRequest\",\n                        params: {\n                            request: D(I({}, s), {\n                                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(r)\n                            }),\n                            chainId: t\n                        },\n                        expiry: r,\n                        throwOnFailedPublish: !0\n                    }).catch((m)=>d(m)), this.client.events.emit(\"session_request_sent\", {\n                        topic: i,\n                        request: s,\n                        chainId: t,\n                        id: a\n                    }), w();\n                }),\n                new Promise(async (w)=>{\n                    var m;\n                    if (!((m = n.sessionConfig) != null && m.disableDeepLink)) {\n                        const y = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDeepLink)(this.client.core.storage, xe);\n                        await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.handleDeeplinkRedirect)({\n                            id: a,\n                            topic: i,\n                            wcDeepLink: y\n                        });\n                    }\n                    w();\n                }),\n                h()\n            ]).then((w)=>w[2]);\n        }, this.respond = async (e)=>{\n            this.isInitialized(), await this.isValidRespond(e);\n            const { topic: t, response: s } = e, { id: i } = s, r = this.client.session.get(t);\n            r.transportType === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const n = this.getAppLinkIfEnabled(r.peer.metadata, r.transportType);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? await this.sendResult({\n                id: i,\n                topic: t,\n                result: s.result,\n                throwOnFailedPublish: !0,\n                appLink: n\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && await this.sendError({\n                id: i,\n                topic: t,\n                error: s.error,\n                appLink: n\n            }), this.cleanupAfterResponse(e);\n        }, this.ping = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidPing(e);\n            } catch (s) {\n                throw this.client.logger.error(\"ping() -> isValidPing() failed\"), s;\n            }\n            const { topic: t } = e;\n            if (this.client.session.keys.includes(t)) {\n                const s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), i = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), { done: r, resolve: n, reject: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), ({ error: c })=>{\n                    c ? a(c) : n();\n                }), await Promise.all([\n                    this.sendRequest({\n                        topic: t,\n                        method: \"wc_sessionPing\",\n                        params: {},\n                        throwOnFailedPublish: !0,\n                        clientRpcId: s,\n                        relayRpcId: i\n                    }),\n                    r()\n                ]);\n            } else this.client.core.pairing.pairings.keys.includes(t) && await this.client.core.pairing.ping({\n                topic: t\n            });\n        }, this.emit = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidEmit(e);\n            const { topic: t, event: s, chainId: i } = e, r = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString();\n            await this.sendRequest({\n                topic: t,\n                method: \"wc_sessionEvent\",\n                params: {\n                    event: s,\n                    chainId: i\n                },\n                throwOnFailedPublish: !0,\n                relayRpcId: r\n            });\n        }, this.disconnect = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidDisconnect(e);\n            const { topic: t } = e;\n            if (this.client.session.keys.includes(t)) await this.sendRequest({\n                topic: t,\n                method: \"wc_sessionDelete\",\n                params: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"),\n                throwOnFailedPublish: !0\n            }), await this.deleteSession({\n                topic: t,\n                emitEvent: !1\n            });\n            else if (this.client.core.pairing.pairings.keys.includes(t)) await this.client.core.pairing.disconnect({\n                topic: t\n            });\n            else {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISMATCHED_TOPIC\", `Session or pairing topic not found: ${t}`);\n                throw new Error(s);\n            }\n        }, this.find = (e)=>(this.isInitialized(), this.client.session.getAll().filter((t)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isSessionCompatible)(t, e))), this.getPendingSessionRequests = ()=>this.client.pendingRequest.getAll(), this.authenticate = async (e, t)=>{\n            var s;\n            this.isInitialized(), this.isValidAuthenticate(e);\n            const i = t && this.client.core.linkModeSupportedApps.includes(t) && ((s = this.client.metadata.redirect) == null ? void 0 : s.linkMode), r = i ? _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode : _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay;\n            r === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const { chains: n, statement: a = \"\", uri: c, domain: h, nonce: p, type: d, exp: l, nbf: w, methods: m = [], expiry: y } = e, _ = [\n                ...e.resources || []\n            ], { topic: R, uri: V } = await this.client.core.pairing.create({\n                methods: [\n                    \"wc_sessionAuthenticate\"\n                ],\n                transportType: r\n            });\n            this.client.logger.info({\n                message: \"Generated new pairing\",\n                pairing: {\n                    topic: R,\n                    uri: V\n                }\n            });\n            const E = await this.client.core.crypto.generateKeyPair(), S = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(E);\n            if (await Promise.all([\n                this.client.auth.authKeys.set(ae, {\n                    responseTopic: S,\n                    publicKey: E\n                }),\n                this.client.auth.pairingTopics.set(S, {\n                    topic: S,\n                    pairingTopic: R\n                })\n            ]), await this.client.core.relayer.subscribe(S, {\n                transportType: r\n            }), this.client.logger.info(`sending request to new pairing topic: ${R}`), m.length > 0) {\n                const { namespace: O } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(n[0]);\n                let T = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createEncodedRecap)(O, \"request\", m);\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(_) && (T = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeEncodedRecaps)(T, _.pop())), _.push(T);\n            }\n            const M = y && y > v.wc_sessionAuthenticate.req.ttl ? y : v.wc_sessionAuthenticate.req.ttl, W = {\n                authPayload: {\n                    type: d ?? \"caip122\",\n                    chains: n,\n                    statement: a,\n                    aud: c,\n                    domain: h,\n                    version: \"1\",\n                    nonce: p,\n                    iat: new Date().toISOString(),\n                    exp: l,\n                    nbf: w,\n                    resources: _\n                },\n                requester: {\n                    publicKey: E,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(M)\n            }, N = {\n                eip155: {\n                    chains: n,\n                    methods: [\n                        ...new Set([\n                            \"personal_sign\",\n                            ...m\n                        ])\n                    ],\n                    events: [\n                        \"chainChanged\",\n                        \"accountsChanged\"\n                    ]\n                }\n            }, De = {\n                requiredNamespaces: {},\n                optionalNamespaces: N,\n                relays: [\n                    {\n                        protocol: \"irn\"\n                    }\n                ],\n                pairingTopic: R,\n                proposer: {\n                    publicKey: E,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionPropose.req.ttl)\n            }, { done: wt, resolve: Ve, reject: Ee } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(M, \"Request expired\"), ce = async ({ error: O, session: T })=>{\n                if (this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", G), Re), O) Ee(O);\n                else if (T) {\n                    T.self.publicKey = E, await this.client.session.set(T.topic, T), await this.setExpiry(T.topic, T.expiry), R && await this.client.core.pairing.updateMetadata({\n                        topic: R,\n                        metadata: T.peer.metadata\n                    });\n                    const le = this.client.session.get(T.topic);\n                    await this.deleteProposal(Z), Ve({\n                        session: le\n                    });\n                }\n            }, Re = async (O)=>{\n                var T, le, Me;\n                if (await this.deletePendingAuthRequest(G, {\n                    message: \"fulfilled\",\n                    code: 0\n                }), O.error) {\n                    const te = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", \"wc_sessionAuthenticate\");\n                    return O.error.code === te.code ? void 0 : (this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce), Ee(O.error.message));\n                }\n                await this.deleteProposal(Z), this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce);\n                const { cacaos: ke, responder: j } = O.result, Ie = [], $e = [];\n                for (const te of ke){\n                    await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.validateSignedCacao)({\n                        cacao: te,\n                        projectId: this.client.core.projectId\n                    }) || (this.client.logger.error(te, \"Signature verification failed\"), Ee((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"SESSION_SETTLEMENT_FAILED\", \"Signature verification failed\")));\n                    const { p: fe } = te, ve = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(fe.resources), Ke = [\n                        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getNamespacedDidChainId)(fe.iss)\n                    ], mt = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDidAddress)(fe.iss);\n                    if (ve) {\n                        const qe = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getMethodsFromRecap)(ve), _t = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getChainsFromRecap)(ve);\n                        Ie.push(...qe), Ke.push(..._t);\n                    }\n                    for (const qe of Ke)$e.push(`${qe}:${mt}`);\n                }\n                const ee = await this.client.core.crypto.generateSharedKey(E, j.publicKey);\n                let pe;\n                Ie.length > 0 && (pe = {\n                    topic: ee,\n                    acknowledged: !0,\n                    self: {\n                        publicKey: E,\n                        metadata: this.client.metadata\n                    },\n                    peer: j,\n                    controller: j.publicKey,\n                    expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z),\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    relay: {\n                        protocol: \"irn\"\n                    },\n                    pairingTopic: R,\n                    namespaces: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.buildNamespacesFromAuth)([\n                        ...new Set(Ie)\n                    ], [\n                        ...new Set($e)\n                    ]),\n                    transportType: r\n                }, await this.client.core.relayer.subscribe(ee, {\n                    transportType: r\n                }), await this.client.session.set(ee, pe), R && await this.client.core.pairing.updateMetadata({\n                    topic: R,\n                    metadata: j.metadata\n                }), pe = this.client.session.get(ee)), (T = this.client.metadata.redirect) != null && T.linkMode && (le = j.metadata.redirect) != null && le.linkMode && (Me = j.metadata.redirect) != null && Me.universal && t && (this.client.core.addLinkModeSupportedApp(j.metadata.redirect.universal), this.client.session.update(ee, {\n                    transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode\n                })), Ve({\n                    auths: ke,\n                    session: pe\n                });\n            }, G = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), Z = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)();\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce), this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", G), Re);\n            let Se;\n            try {\n                if (i) {\n                    const O = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionAuthenticate\", W, G);\n                    this.client.core.history.set(R, O);\n                    const T = await this.client.core.crypto.encode(\"\", O, {\n                        type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_2,\n                        encoding: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL\n                    });\n                    Se = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(t, R, T);\n                } else await Promise.all([\n                    this.sendRequest({\n                        topic: R,\n                        method: \"wc_sessionAuthenticate\",\n                        params: W,\n                        expiry: e.expiry,\n                        throwOnFailedPublish: !0,\n                        clientRpcId: G\n                    }),\n                    this.sendRequest({\n                        topic: R,\n                        method: \"wc_sessionPropose\",\n                        params: De,\n                        expiry: v.wc_sessionPropose.req.ttl,\n                        throwOnFailedPublish: !0,\n                        clientRpcId: Z\n                    })\n                ]);\n            } catch (O) {\n                throw this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce), this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", G), Re), O;\n            }\n            return await this.setProposal(Z, I({\n                id: Z\n            }, De)), await this.setAuthRequest(G, {\n                request: D(I({}, W), {\n                    verifyContext: {}\n                }),\n                pairingTopic: R,\n                transportType: r\n            }), {\n                uri: Se ?? V,\n                response: wt\n            };\n        }, this.approveSessionAuthenticate = async (e)=>{\n            const { id: t, auths: s } = e, i = this.client.core.eventClient.createEvent({\n                properties: {\n                    topic: t.toString(),\n                    trace: [\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.authenticated_session_approve_started\n                    ]\n                }\n            });\n            try {\n                this.isInitialized();\n            } catch (y) {\n                throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.no_internet_connection), y;\n            }\n            const r = this.getPendingAuthRequest(t);\n            if (!r) throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.authenticated_session_pending_request_not_found), new Error(`Could not find pending auth request with id ${t}`);\n            const n = r.transportType || _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay;\n            n === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const a = r.requester.publicKey, c = await this.client.core.crypto.generateKeyPair(), h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(a), p = {\n                type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                receiverPublicKey: a,\n                senderPublicKey: c\n            }, d = [], l = [];\n            for (const y of s){\n                if (!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.validateSignedCacao)({\n                    cacao: y,\n                    projectId: this.client.core.projectId\n                })) {\n                    i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.invalid_cacao);\n                    const S = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"SESSION_SETTLEMENT_FAILED\", \"Signature verification failed\");\n                    throw await this.sendError({\n                        id: t,\n                        topic: h,\n                        error: S,\n                        encodeOpts: p\n                    }), new Error(S.message);\n                }\n                i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.cacaos_verified);\n                const { p: _ } = y, R = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(_.resources), V = [\n                    (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getNamespacedDidChainId)(_.iss)\n                ], E = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDidAddress)(_.iss);\n                if (R) {\n                    const S = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getMethodsFromRecap)(R), M = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getChainsFromRecap)(R);\n                    d.push(...S), V.push(...M);\n                }\n                for (const S of V)l.push(`${S}:${E}`);\n            }\n            const w = await this.client.core.crypto.generateSharedKey(c, a);\n            i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.create_authenticated_session_topic);\n            let m;\n            if (d?.length > 0) {\n                m = {\n                    topic: w,\n                    acknowledged: !0,\n                    self: {\n                        publicKey: c,\n                        metadata: this.client.metadata\n                    },\n                    peer: {\n                        publicKey: a,\n                        metadata: r.requester.metadata\n                    },\n                    controller: a,\n                    expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z),\n                    authentication: s,\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    relay: {\n                        protocol: \"irn\"\n                    },\n                    pairingTopic: r.pairingTopic,\n                    namespaces: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.buildNamespacesFromAuth)([\n                        ...new Set(d)\n                    ], [\n                        ...new Set(l)\n                    ]),\n                    transportType: n\n                }, i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.subscribing_authenticated_session_topic);\n                try {\n                    await this.client.core.relayer.subscribe(w, {\n                        transportType: n\n                    });\n                } catch (y) {\n                    throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.subscribe_authenticated_session_topic_failure), y;\n                }\n                i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.subscribe_authenticated_session_topic_success), await this.client.session.set(w, m), i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.store_authenticated_session), await this.client.core.pairing.updateMetadata({\n                    topic: r.pairingTopic,\n                    metadata: r.requester.metadata\n                });\n            }\n            i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.publishing_authenticated_session_approve);\n            try {\n                await this.sendResult({\n                    topic: h,\n                    id: t,\n                    result: {\n                        cacaos: s,\n                        responder: {\n                            publicKey: c,\n                            metadata: this.client.metadata\n                        }\n                    },\n                    encodeOpts: p,\n                    throwOnFailedPublish: !0,\n                    appLink: this.getAppLinkIfEnabled(r.requester.metadata, n)\n                });\n            } catch (y) {\n                throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.authenticated_session_approve_publish_failure), y;\n            }\n            return await this.client.auth.requests.delete(t, {\n                message: \"fulfilled\",\n                code: 0\n            }), await this.client.core.pairing.activate({\n                topic: r.pairingTopic\n            }), this.client.core.eventClient.deleteEvent({\n                eventId: i.eventId\n            }), {\n                session: m\n            };\n        }, this.rejectSessionAuthenticate = async (e)=>{\n            this.isInitialized();\n            const { id: t, reason: s } = e, i = this.getPendingAuthRequest(t);\n            if (!i) throw new Error(`Could not find pending auth request with id ${t}`);\n            i.transportType === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const r = i.requester.publicKey, n = await this.client.core.crypto.generateKeyPair(), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(r), c = {\n                type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                receiverPublicKey: r,\n                senderPublicKey: n\n            };\n            await this.sendError({\n                id: t,\n                topic: a,\n                error: s,\n                encodeOpts: c,\n                rpcOpts: v.wc_sessionAuthenticate.reject,\n                appLink: this.getAppLinkIfEnabled(i.requester.metadata, i.transportType)\n            }), await this.client.auth.requests.delete(t, {\n                message: \"rejected\",\n                code: 0\n            }), await this.client.proposal.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n        }, this.formatAuthMessage = (e)=>{\n            this.isInitialized();\n            const { request: t, iss: s } = e;\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.formatMessage)(t, s);\n        }, this.processRelayMessageCache = ()=>{\n            setTimeout(async ()=>{\n                if (this.relayMessageCache.length !== 0) for(; this.relayMessageCache.length > 0;)try {\n                    const e = this.relayMessageCache.shift();\n                    e && await this.onRelayMessage(e);\n                } catch (e) {\n                    this.client.logger.error(e);\n                }\n            }, 50);\n        }, this.cleanupDuplicatePairings = async (e)=>{\n            if (e.pairingTopic) try {\n                const t = this.client.core.pairing.pairings.get(e.pairingTopic), s = this.client.core.pairing.pairings.getAll().filter((i)=>{\n                    var r, n;\n                    return ((r = i.peerMetadata) == null ? void 0 : r.url) && ((n = i.peerMetadata) == null ? void 0 : n.url) === e.peer.metadata.url && i.topic && i.topic !== t.topic;\n                });\n                if (s.length === 0) return;\n                this.client.logger.info(`Cleaning up ${s.length} duplicate pairing(s)`), await Promise.all(s.map((i)=>this.client.core.pairing.disconnect({\n                        topic: i.topic\n                    }))), this.client.logger.info(\"Duplicate pairings clean up finished\");\n            } catch (t) {\n                this.client.logger.error(t);\n            }\n        }, this.deleteSession = async (e)=>{\n            var t;\n            const { topic: s, expirerHasDeleted: i = !1, emitEvent: r = !0, id: n = 0 } = e, { self: a } = this.client.session.get(s);\n            await this.client.core.relayer.unsubscribe(s), await this.client.session.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.addToRecentlyDeleted(s, \"session\"), this.client.core.crypto.keychain.has(a.publicKey) && await this.client.core.crypto.deleteKeyPair(a.publicKey), this.client.core.crypto.keychain.has(s) && await this.client.core.crypto.deleteSymKey(s), i || this.client.core.expirer.del(s), this.client.core.storage.removeItem(xe).catch((c)=>this.client.logger.warn(c)), this.getPendingSessionRequests().forEach((c)=>{\n                c.topic === s && this.deletePendingSessionRequest(c.id, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n            }), s === ((t = this.sessionRequestQueue.queue[0]) == null ? void 0 : t.topic) && (this.sessionRequestQueue.state = x.idle), r && this.client.events.emit(\"session_delete\", {\n                id: n,\n                topic: s\n            });\n        }, this.deleteProposal = async (e, t)=>{\n            if (t) try {\n                const s = this.client.proposal.get(e), i = this.client.core.eventClient.getEvent({\n                    topic: s.pairingTopic\n                });\n                i?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.proposal_expired);\n            } catch  {}\n            await Promise.all([\n                this.client.proposal.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")),\n                t ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]), this.addToRecentlyDeleted(e, \"proposal\");\n        }, this.deletePendingSessionRequest = async (e, t, s = !1)=>{\n            await Promise.all([\n                this.client.pendingRequest.delete(e, t),\n                s ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]), this.addToRecentlyDeleted(e, \"request\"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i)=>i.id !== e), s && (this.sessionRequestQueue.state = x.idle, this.client.events.emit(\"session_request_expire\", {\n                id: e\n            }));\n        }, this.deletePendingAuthRequest = async (e, t, s = !1)=>{\n            await Promise.all([\n                this.client.auth.requests.delete(e, t),\n                s ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]);\n        }, this.setExpiry = async (e, t)=>{\n            this.client.session.keys.includes(e) && (this.client.core.expirer.set(e, t), await this.client.session.update(e, {\n                expiry: t\n            }));\n        }, this.setProposal = async (e, t)=>{\n            this.client.core.expirer.set(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionPropose.req.ttl)), await this.client.proposal.set(e, t);\n        }, this.setAuthRequest = async (e, t)=>{\n            const { request: s, pairingTopic: i, transportType: r = _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay } = t;\n            this.client.core.expirer.set(e, s.expiryTimestamp), await this.client.auth.requests.set(e, {\n                authPayload: s.authPayload,\n                requester: s.requester,\n                expiryTimestamp: s.expiryTimestamp,\n                id: e,\n                pairingTopic: i,\n                verifyContext: s.verifyContext,\n                transportType: r\n            });\n        }, this.setPendingSessionRequest = async (e)=>{\n            const { id: t, topic: s, params: i, verifyContext: r } = e, n = i.request.expiryTimestamp || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionRequest.req.ttl);\n            this.client.core.expirer.set(t, n), await this.client.pendingRequest.set(t, {\n                id: t,\n                topic: s,\n                params: i,\n                verifyContext: r\n            });\n        }, this.sendRequest = async (e)=>{\n            const { topic: t, method: s, params: i, expiry: r, relayRpcId: n, clientRpcId: a, throwOnFailedPublish: c, appLink: h } = e, p = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(s, i, a);\n            let d;\n            const l = !!h;\n            try {\n                const y = l ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64;\n                d = await this.client.core.crypto.encode(t, p, {\n                    encoding: y\n                });\n            } catch (y) {\n                throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${t} failed`), y;\n            }\n            let w;\n            if (at.includes(s)) {\n                const y = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(p)), _ = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(d);\n                w = await this.client.core.verify.register({\n                    id: _,\n                    decryptedId: y\n                });\n            }\n            const m = v[s].req;\n            if (m.attestation = w, r && (m.ttl = r), n && (m.id = n), this.client.core.history.set(t, p), l) {\n                const y = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(h, t, d);\n                await global.Linking.openURL(y, this.client.name);\n            } else {\n                const y = v[s].req;\n                r && (y.ttl = r), n && (y.id = n), c ? (y.internal = D(I({}, y.internal), {\n                    throwOnFailedPublish: !0\n                }), await this.client.core.relayer.publish(t, d, y)) : this.client.core.relayer.publish(t, d, y).catch((_)=>this.client.logger.error(_));\n            }\n            return p.id;\n        }, this.sendResult = async (e)=>{\n            const { id: t, topic: s, result: i, throwOnFailedPublish: r, encodeOpts: n, appLink: a } = e, c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult)(t, i);\n            let h;\n            const p = a && typeof (global == null ? void 0 : global.Linking) < \"u\";\n            try {\n                const l = p ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64;\n                h = await this.client.core.crypto.encode(s, c, D(I({}, n || {}), {\n                    encoding: l\n                }));\n            } catch (l) {\n                throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${s} failed`), l;\n            }\n            let d;\n            try {\n                d = await this.client.core.history.get(s, t);\n            } catch (l) {\n                throw this.client.logger.error(`sendResult() -> history.get(${s}, ${t}) failed`), l;\n            }\n            if (p) {\n                const l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(a, s, h);\n                await global.Linking.openURL(l, this.client.name);\n            } else {\n                const l = v[d.request.method].res;\n                r ? (l.internal = D(I({}, l.internal), {\n                    throwOnFailedPublish: !0\n                }), await this.client.core.relayer.publish(s, h, l)) : this.client.core.relayer.publish(s, h, l).catch((w)=>this.client.logger.error(w));\n            }\n            await this.client.core.history.resolve(c);\n        }, this.sendError = async (e)=>{\n            const { id: t, topic: s, error: i, encodeOpts: r, rpcOpts: n, appLink: a } = e, c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(t, i);\n            let h;\n            const p = a && typeof (global == null ? void 0 : global.Linking) < \"u\";\n            try {\n                const l = p ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64;\n                h = await this.client.core.crypto.encode(s, c, D(I({}, r || {}), {\n                    encoding: l\n                }));\n            } catch (l) {\n                throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${s} failed`), l;\n            }\n            let d;\n            try {\n                d = await this.client.core.history.get(s, t);\n            } catch (l) {\n                throw this.client.logger.error(`sendError() -> history.get(${s}, ${t}) failed`), l;\n            }\n            if (p) {\n                const l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(a, s, h);\n                await global.Linking.openURL(l, this.client.name);\n            } else {\n                const l = n || v[d.request.method].res;\n                this.client.core.relayer.publish(s, h, l);\n            }\n            await this.client.core.history.resolve(c);\n        }, this.cleanup = async ()=>{\n            const e = [], t = [];\n            this.client.session.getAll().forEach((s)=>{\n                let i = !1;\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(s.expiry) && (i = !0), this.client.core.crypto.keychain.has(s.topic) || (i = !0), i && e.push(s.topic);\n            }), this.client.proposal.getAll().forEach((s)=>{\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(s.expiryTimestamp) && t.push(s.id);\n            }), await Promise.all([\n                ...e.map((s)=>this.deleteSession({\n                        topic: s\n                    })),\n                ...t.map((s)=>this.deleteProposal(s))\n            ]);\n        }, this.onRelayEventRequest = async (e)=>{\n            this.requestQueue.queue.push(e), await this.processRequestsQueue();\n        }, this.processRequestsQueue = async ()=>{\n            if (this.requestQueue.state === x.active) {\n                this.client.logger.info(\"Request queue already active, skipping...\");\n                return;\n            }\n            for(this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0;){\n                this.requestQueue.state = x.active;\n                const e = this.requestQueue.queue.shift();\n                if (e) try {\n                    await this.processRequest(e);\n                } catch (t) {\n                    this.client.logger.warn(t);\n                }\n            }\n            this.requestQueue.state = x.idle;\n        }, this.processRequest = async (e)=>{\n            const { topic: t, payload: s, attestation: i, transportType: r, encryptedId: n } = e, a = s.method;\n            if (!this.shouldIgnorePairingRequest({\n                topic: t,\n                requestMethod: a\n            })) switch(a){\n                case \"wc_sessionPropose\":\n                    return await this.onSessionProposeRequest({\n                        topic: t,\n                        payload: s,\n                        attestation: i,\n                        encryptedId: n\n                    });\n                case \"wc_sessionSettle\":\n                    return await this.onSessionSettleRequest(t, s);\n                case \"wc_sessionUpdate\":\n                    return await this.onSessionUpdateRequest(t, s);\n                case \"wc_sessionExtend\":\n                    return await this.onSessionExtendRequest(t, s);\n                case \"wc_sessionPing\":\n                    return await this.onSessionPingRequest(t, s);\n                case \"wc_sessionDelete\":\n                    return await this.onSessionDeleteRequest(t, s);\n                case \"wc_sessionRequest\":\n                    return await this.onSessionRequest({\n                        topic: t,\n                        payload: s,\n                        attestation: i,\n                        encryptedId: n,\n                        transportType: r\n                    });\n                case \"wc_sessionEvent\":\n                    return await this.onSessionEventRequest(t, s);\n                case \"wc_sessionAuthenticate\":\n                    return await this.onSessionAuthenticateRequest({\n                        topic: t,\n                        payload: s,\n                        attestation: i,\n                        encryptedId: n,\n                        transportType: r\n                    });\n                default:\n                    return this.client.logger.info(`Unsupported request method ${a}`);\n            }\n        }, this.onRelayEventResponse = async (e)=>{\n            const { topic: t, payload: s, transportType: i } = e, r = (await this.client.core.history.get(t, s.id)).request.method;\n            switch(r){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeResponse(t, s, i);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleResponse(t, s);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateResponse(t, s);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendResponse(t, s);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingResponse(t, s);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequestResponse(t, s);\n                case \"wc_sessionAuthenticate\":\n                    return this.onSessionAuthenticateResponse(t, s);\n                default:\n                    return this.client.logger.info(`Unsupported response method ${r}`);\n            }\n        }, this.onRelayEventUnknownPayload = (e)=>{\n            const { topic: t } = e, { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Decoded payload on topic ${t} is not identifiable as a JSON-RPC request or a response.`);\n            throw new Error(s);\n        }, this.shouldIgnorePairingRequest = (e)=>{\n            const { topic: t, requestMethod: s } = e, i = this.expectedPairingMethodMap.get(t);\n            return !i || i.includes(s) ? !1 : !!(i.includes(\"wc_sessionAuthenticate\") && this.client.events.listenerCount(\"session_authenticate\") > 0);\n        }, this.onSessionProposeRequest = async (e)=>{\n            const { topic: t, payload: s, attestation: i, encryptedId: r } = e, { params: n, id: a } = s;\n            try {\n                const c = this.client.core.eventClient.getEvent({\n                    topic: t\n                });\n                this.isValidConnect(I({}, s.params));\n                const h = n.expiryTimestamp || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionPropose.req.ttl), p = I({\n                    id: a,\n                    pairingTopic: t,\n                    expiryTimestamp: h\n                }, n);\n                await this.setProposal(a, p);\n                const d = await this.getVerifyContext({\n                    attestationId: i,\n                    hash: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(s)),\n                    encryptedId: r,\n                    metadata: p.proposer.metadata\n                });\n                this.client.events.listenerCount(\"session_proposal\") === 0 && (console.warn(\"No listener for session_proposal event\"), c?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_PAIRING_ERRORS.proposal_listener_not_found)), c?.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_PAIRING_TRACES.emit_session_proposal), this.client.events.emit(\"session_proposal\", {\n                    id: a,\n                    params: p,\n                    verifyContext: d\n                });\n            } catch (c) {\n                await this.sendError({\n                    id: a,\n                    topic: t,\n                    error: c,\n                    rpcOpts: v.wc_sessionPropose.autoReject\n                }), this.client.logger.error(c);\n            }\n        }, this.onSessionProposeResponse = async (e, t, s)=>{\n            const { id: i } = t;\n            if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t)) {\n                const { result: r } = t;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    result: r\n                });\n                const n = this.client.proposal.get(i);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    proposal: n\n                });\n                const a = n.proposer.publicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    selfPublicKey: a\n                });\n                const c = r.responderPublicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    peerPublicKey: c\n                });\n                const h = await this.client.core.crypto.generateSharedKey(a, c);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    sessionTopic: h\n                });\n                const p = await this.client.core.relayer.subscribe(h, {\n                    transportType: s\n                });\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    subscriptionId: p\n                }), await this.client.core.pairing.activate({\n                    topic: e\n                });\n            } else if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t)) {\n                await this.client.proposal.delete(i, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n                const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\");\n                if (this.events.listenerCount(r) === 0) throw new Error(`emitting ${r} without any listeners, 954`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    error: t.error\n                });\n            }\n        }, this.onSessionSettleRequest = async (e, t)=>{\n            const { id: s, params: i } = t;\n            try {\n                this.isValidSessionSettleRequest(i);\n                const { relay: r, controller: n, expiry: a, namespaces: c, sessionProperties: h, sessionConfig: p } = t.params, d = D(I(I({\n                    topic: e,\n                    relay: r,\n                    expiry: a,\n                    namespaces: c,\n                    acknowledged: !0,\n                    pairingTopic: \"\",\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    controller: n.publicKey,\n                    self: {\n                        publicKey: \"\",\n                        metadata: this.client.metadata\n                    },\n                    peer: {\n                        publicKey: n.publicKey,\n                        metadata: n.metadata\n                    }\n                }, h && {\n                    sessionProperties: h\n                }), p && {\n                    sessionConfig: p\n                }), {\n                    transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay\n                }), l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\");\n                if (this.events.listenerCount(l) === 0) throw new Error(`emitting ${l} without any listeners 997`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    session: d\n                }), await this.sendResult({\n                    id: t.id,\n                    topic: e,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                });\n            } catch (r) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.onSessionSettleResponse = async (e, t)=>{\n            const { id: s } = t;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? (await this.client.session.update(e, {\n                acknowledged: !0\n            }), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", s), {})) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && (await this.client.session.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", s), {\n                error: t.error\n            }));\n        }, this.onSessionUpdateRequest = async (e, t)=>{\n            const { params: s, id: i } = t;\n            try {\n                const r = `${e}_session_update`, n = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(r);\n                if (n && this.isRequestOutOfSync(n, i)) {\n                    this.client.logger.info(`Discarding out of sync request - ${i}`), this.sendError({\n                        id: i,\n                        topic: e,\n                        error: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"INVALID_UPDATE_REQUEST\")\n                    });\n                    return;\n                }\n                this.isValidUpdate(I({\n                    topic: e\n                }, s));\n                try {\n                    _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(r, i), await this.client.session.update(e, {\n                        namespaces: s.namespaces\n                    }), await this.sendResult({\n                        id: i,\n                        topic: e,\n                        result: !0,\n                        throwOnFailedPublish: !0\n                    });\n                } catch (a) {\n                    throw _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.delete(r), a;\n                }\n                this.client.events.emit(\"session_update\", {\n                    id: i,\n                    topic: e,\n                    params: s\n                });\n            } catch (r) {\n                await this.sendError({\n                    id: i,\n                    topic: e,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.isRequestOutOfSync = (e, t)=>parseInt(t.toString().slice(0, -3)) <= parseInt(e.toString().slice(0, -3)), this.onSessionUpdateResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s), {\n                error: t.error\n            });\n        }, this.onSessionExtendRequest = async (e, t)=>{\n            const { id: s } = t;\n            try {\n                this.isValidExtend({\n                    topic: e\n                }), await this.setExpiry(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z)), await this.sendResult({\n                    id: s,\n                    topic: e,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                }), this.client.events.emit(\"session_extend\", {\n                    id: s,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: i\n                }), this.client.logger.error(i);\n            }\n        }, this.onSessionExtendResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), {\n                error: t.error\n            });\n        }, this.onSessionPingRequest = async (e, t)=>{\n            const { id: s } = t;\n            try {\n                this.isValidPing({\n                    topic: e\n                }), await this.sendResult({\n                    id: s,\n                    topic: e,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                }), this.client.events.emit(\"session_ping\", {\n                    id: s,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: i\n                }), this.client.logger.error(i);\n            }\n        }, this.onSessionPingResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), {\n                    error: t.error\n                });\n            }, 500);\n        }, this.onSessionDeleteRequest = async (e, t)=>{\n            const { id: s } = t;\n            try {\n                this.isValidDisconnect({\n                    topic: e,\n                    reason: t.params\n                }), Promise.all([\n                    new Promise((i)=>{\n                        this.client.core.relayer.once(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.publish, async ()=>{\n                            i(await this.deleteSession({\n                                topic: e,\n                                id: s\n                            }));\n                        });\n                    }),\n                    this.sendResult({\n                        id: s,\n                        topic: e,\n                        result: !0,\n                        throwOnFailedPublish: !0\n                    }),\n                    this.cleanupPendingSentRequestsForTopic({\n                        topic: e,\n                        error: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")\n                    })\n                ]).catch((i)=>this.client.logger.error(i));\n            } catch (i) {\n                this.client.logger.error(i);\n            }\n        }, this.onSessionRequest = async (e)=>{\n            var t, s, i;\n            const { topic: r, payload: n, attestation: a, encryptedId: c, transportType: h } = e, { id: p, params: d } = n;\n            try {\n                await this.isValidRequest(I({\n                    topic: r\n                }, d));\n                const l = this.client.session.get(r), w = await this.getVerifyContext({\n                    attestationId: a,\n                    hash: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionRequest\", d, p))),\n                    encryptedId: c,\n                    metadata: l.peer.metadata,\n                    transportType: h\n                }), m = {\n                    id: p,\n                    topic: r,\n                    params: d,\n                    verifyContext: w\n                };\n                await this.setPendingSessionRequest(m), h === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode && (t = l.peer.metadata.redirect) != null && t.universal && this.client.core.addLinkModeSupportedApp((s = l.peer.metadata.redirect) == null ? void 0 : s.universal), (i = this.client.signConfig) != null && i.disableRequestQueue ? this.emitSessionRequest(m) : (this.addSessionRequestToSessionRequestQueue(m), this.processSessionRequestQueue());\n            } catch (l) {\n                await this.sendError({\n                    id: p,\n                    topic: r,\n                    error: l\n                }), this.client.logger.error(l);\n            }\n        }, this.onSessionRequestResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                result: t.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                error: t.error\n            });\n        }, this.onSessionEventRequest = async (e, t)=>{\n            const { id: s, params: i } = t;\n            try {\n                const r = `${e}_session_event_${i.event.name}`, n = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(r);\n                if (n && this.isRequestOutOfSync(n, s)) {\n                    this.client.logger.info(`Discarding out of sync request - ${s}`);\n                    return;\n                }\n                this.isValidEmit(I({\n                    topic: e\n                }, i)), this.client.events.emit(\"session_event\", {\n                    id: s,\n                    topic: e,\n                    params: i\n                }), _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(r, s);\n            } catch (r) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.onSessionAuthenticateResponse = (e, t)=>{\n            const { id: s } = t;\n            this.client.logger.trace({\n                type: \"method\",\n                method: \"onSessionAuthenticateResponse\",\n                topic: e,\n                payload: t\n            }), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                result: t.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                error: t.error\n            });\n        }, this.onSessionAuthenticateRequest = async (e)=>{\n            var t;\n            const { topic: s, payload: i, attestation: r, encryptedId: n, transportType: a } = e;\n            try {\n                const { requester: c, authPayload: h, expiryTimestamp: p } = i.params, d = await this.getVerifyContext({\n                    attestationId: r,\n                    hash: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(i)),\n                    encryptedId: n,\n                    metadata: c.metadata,\n                    transportType: a\n                }), l = {\n                    requester: c,\n                    pairingTopic: s,\n                    id: i.id,\n                    authPayload: h,\n                    verifyContext: d,\n                    expiryTimestamp: p\n                };\n                await this.setAuthRequest(i.id, {\n                    request: l,\n                    pairingTopic: s,\n                    transportType: a\n                }), a === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode && (t = c.metadata.redirect) != null && t.universal && this.client.core.addLinkModeSupportedApp(c.metadata.redirect.universal), this.client.events.emit(\"session_authenticate\", {\n                    topic: s,\n                    params: i.params,\n                    id: i.id,\n                    verifyContext: d\n                });\n            } catch (c) {\n                this.client.logger.error(c);\n                const h = i.params.requester.publicKey, p = await this.client.core.crypto.generateKeyPair(), d = this.getAppLinkIfEnabled(i.params.requester.metadata, a), l = {\n                    type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                    receiverPublicKey: h,\n                    senderPublicKey: p\n                };\n                await this.sendError({\n                    id: i.id,\n                    topic: s,\n                    error: c,\n                    encodeOpts: l,\n                    rpcOpts: v.wc_sessionAuthenticate.autoReject,\n                    appLink: d\n                });\n            }\n        }, this.addSessionRequestToSessionRequestQueue = (e)=>{\n            this.sessionRequestQueue.queue.push(e);\n        }, this.cleanupAfterResponse = (e)=>{\n            this.deletePendingSessionRequest(e.response.id, {\n                message: \"fulfilled\",\n                code: 0\n            }), setTimeout(()=>{\n                this.sessionRequestQueue.state = x.idle, this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay));\n        }, this.cleanupPendingSentRequestsForTopic = ({ topic: e, error: t })=>{\n            const s = this.client.core.history.pending;\n            s.length > 0 && s.filter((i)=>i.topic === e && i.request.method === \"wc_sessionRequest\").forEach((i)=>{\n                const r = i.request.id, n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", r);\n                if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", i.request.id), {\n                    error: t\n                });\n            });\n        }, this.processSessionRequestQueue = ()=>{\n            if (this.sessionRequestQueue.state === x.active) {\n                this.client.logger.info(\"session request queue is already active.\");\n                return;\n            }\n            const e = this.sessionRequestQueue.queue[0];\n            if (!e) {\n                this.client.logger.info(\"session request queue is empty.\");\n                return;\n            }\n            try {\n                this.sessionRequestQueue.state = x.active, this.emitSessionRequest(e);\n            } catch (t) {\n                this.client.logger.error(t);\n            }\n        }, this.emitSessionRequest = (e)=>{\n            this.client.events.emit(\"session_request\", e);\n        }, this.onPairingCreated = (e)=>{\n            if (e.methods && this.expectedPairingMethodMap.set(e.topic, e.methods), e.active) return;\n            const t = this.client.proposal.getAll().find((s)=>s.pairingTopic === e.topic);\n            t && this.onSessionProposeRequest({\n                topic: e.topic,\n                payload: (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionPropose\", {\n                    requiredNamespaces: t.requiredNamespaces,\n                    optionalNamespaces: t.optionalNamespaces,\n                    relays: t.relays,\n                    proposer: t.proposer,\n                    sessionProperties: t.sessionProperties\n                }, t.id)\n            });\n        }, this.isValidConnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() params: ${JSON.stringify(e)}`);\n                throw new Error(a);\n            }\n            const { pairingTopic: t, requiredNamespaces: s, optionalNamespaces: i, sessionProperties: r, relays: n } = e;\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(t) || await this.isValidPairingTopic(t), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelays)(n, !0)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() relays: ${n}`);\n                throw new Error(a);\n            }\n            !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(s) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(s) !== 0 && this.validateNamespaces(s, \"requiredNamespaces\"), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(i) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(i) !== 0 && this.validateNamespaces(i, \"optionalNamespaces\"), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(r) || this.validateSessionProps(r, \"sessionProperties\");\n        }, this.validateNamespaces = (e, t)=>{\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequiredNamespaces)(e, \"connect()\", t);\n            if (s) throw new Error(s.message);\n        }, this.isValidApprove = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) throw new Error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() params: ${e}`).message);\n            const { id: t, namespaces: s, relayProtocol: i, sessionProperties: r } = e;\n            this.checkRecentlyDeleted(t), await this.isValidProposalId(t);\n            const n = this.client.proposal.get(t), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(s, \"approve()\");\n            if (a) throw new Error(a.message);\n            const c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(n.requiredNamespaces, s, \"approve()\");\n            if (c) throw new Error(c.message);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !0)) {\n                const { message: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() relayProtocol: ${i}`);\n                throw new Error(h);\n            }\n            (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(r) || this.validateSessionProps(r, \"sessionProperties\");\n        }, this.isValidReject = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() params: ${e}`);\n                throw new Error(i);\n            }\n            const { id: t, reason: s } = e;\n            if (this.checkRecentlyDeleted(t), await this.isValidProposalId(t), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidErrorReason)(s)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() reason: ${JSON.stringify(s)}`);\n                throw new Error(i);\n            }\n        }, this.isValidSessionSettleRequest = (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `onSessionSettleRequest() params: ${e}`);\n                throw new Error(c);\n            }\n            const { relay: t, controller: s, namespaces: i, expiry: r } = e;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelay)(t)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", \"onSessionSettleRequest() relay protocol should be a string\");\n                throw new Error(c);\n            }\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidController)(s, \"onSessionSettleRequest()\");\n            if (n) throw new Error(n.message);\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(i, \"onSessionSettleRequest()\");\n            if (a) throw new Error(a.message);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(r)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", \"onSessionSettleRequest()\");\n                throw new Error(c);\n            }\n        }, this.isValidUpdate = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `update() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: t, namespaces: s } = e;\n            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);\n            const i = this.client.session.get(t), r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(s, \"update()\");\n            if (r) throw new Error(r.message);\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(i.requiredNamespaces, s, \"update()\");\n            if (n) throw new Error(n.message);\n        }, this.isValidExtend = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `extend() params: ${e}`);\n                throw new Error(s);\n            }\n            const { topic: t } = e;\n            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);\n        }, this.isValidRequest = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: t, request: s, chainId: i, expiry: r } = e;\n            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);\n            const { namespaces: n } = this.client.session.get(t);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(n, i)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() chainId: ${i}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequest)(s)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() ${JSON.stringify(s)}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesRequest)(n, i, s.method)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() method: ${s.method}`);\n                throw new Error(a);\n            }\n            if (r && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequestExpiry)(r, me)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() expiry: ${r}. Expiry must be a number (in seconds) between ${me.min} and ${me.max}`);\n                throw new Error(a);\n            }\n        }, this.isValidRespond = async (e)=>{\n            var t;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() params: ${e}`);\n                throw new Error(r);\n            }\n            const { topic: s, response: i } = e;\n            try {\n                await this.isValidSessionTopic(s);\n            } catch (r) {\n                throw (t = e?.response) != null && t.id && this.cleanupAfterResponse(e), r;\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidResponse)(i)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() response: ${JSON.stringify(i)}`);\n                throw new Error(r);\n            }\n        }, this.isValidPing = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${e}`);\n                throw new Error(s);\n            }\n            const { topic: t } = e;\n            await this.isValidSessionOrPairingTopic(t);\n        }, this.isValidEmit = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() params: ${e}`);\n                throw new Error(n);\n            }\n            const { topic: t, event: s, chainId: i } = e;\n            await this.isValidSessionTopic(t);\n            const { namespaces: r } = this.client.session.get(t);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(r, i)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() chainId: ${i}`);\n                throw new Error(n);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidEvent)(s)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(s)}`);\n                throw new Error(n);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesEvent)(r, i, s.name)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(s)}`);\n                throw new Error(n);\n            }\n        }, this.isValidDisconnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${e}`);\n                throw new Error(s);\n            }\n            const { topic: t } = e;\n            await this.isValidSessionOrPairingTopic(t);\n        }, this.isValidAuthenticate = (e)=>{\n            const { chains: t, uri: s, domain: i, nonce: r } = e;\n            if (!Array.isArray(t) || t.length === 0) throw new Error(\"chains is required and must be a non-empty array\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(s, !1)) throw new Error(\"uri is required parameter\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !1)) throw new Error(\"domain is required parameter\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) throw new Error(\"nonce is required parameter\");\n            if ([\n                ...new Set(t.map((a)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(a).namespace))\n            ].length > 1) throw new Error(\"Multi-namespace requests are not supported. Please request single namespace only.\");\n            const { namespace: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(t[0]);\n            if (n !== \"eip155\") throw new Error(\"Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.\");\n        }, this.getVerifyContext = async (e)=>{\n            const { attestationId: t, hash: s, encryptedId: i, metadata: r, transportType: n } = e, a = {\n                verified: {\n                    verifyUrl: r.verifyUrl || _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.VERIFY_SERVER,\n                    validation: \"UNKNOWN\",\n                    origin: r.url || \"\"\n                }\n            };\n            try {\n                if (n === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode) {\n                    const h = this.getAppLinkIfEnabled(r, n);\n                    return a.verified.validation = h && new URL(h).origin === new URL(r.url).origin ? \"VALID\" : \"INVALID\", a;\n                }\n                const c = await this.client.core.verify.resolve({\n                    attestationId: t,\n                    hash: s,\n                    encryptedId: i,\n                    verifyUrl: r.verifyUrl\n                });\n                c && (a.verified.origin = c.origin, a.verified.isScam = c.isScam, a.verified.validation = c.origin === new URL(r.url).origin ? \"VALID\" : \"INVALID\");\n            } catch (c) {\n                this.client.logger.warn(c);\n            }\n            return this.client.logger.debug(`Verify context: ${JSON.stringify(a)}`), a;\n        }, this.validateSessionProps = (e, t)=>{\n            Object.values(e).forEach((s)=>{\n                if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(s, !1)) {\n                    const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `${t} must be in Record<string, string> format. Received: ${JSON.stringify(s)}`);\n                    throw new Error(i);\n                }\n            });\n        }, this.getPendingAuthRequest = (e)=>{\n            const t = this.client.auth.requests.get(e);\n            return typeof t == \"object\" ? t : void 0;\n        }, this.addToRecentlyDeleted = (e, t)=>{\n            if (this.recentlyDeletedMap.set(e, t), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {\n                let s = 0;\n                const i = this.recentlyDeletedLimit / 2;\n                for (const r of this.recentlyDeletedMap.keys()){\n                    if (s++ >= i) break;\n                    this.recentlyDeletedMap.delete(r);\n                }\n            }\n        }, this.checkRecentlyDeleted = (e)=>{\n            const t = this.recentlyDeletedMap.get(e);\n            if (t) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Record was recently deleted - ${t}: ${e}`);\n                throw new Error(s);\n            }\n        }, this.isLinkModeEnabled = (e, t)=>{\n            var s, i, r, n, a, c, h, p, d;\n            return !e || t !== _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode ? !1 : ((i = (s = this.client.metadata) == null ? void 0 : s.redirect) == null ? void 0 : i.linkMode) === !0 && ((n = (r = this.client.metadata) == null ? void 0 : r.redirect) == null ? void 0 : n.universal) !== void 0 && ((c = (a = this.client.metadata) == null ? void 0 : a.redirect) == null ? void 0 : c.universal) !== \"\" && ((h = e?.redirect) == null ? void 0 : h.universal) !== void 0 && ((p = e?.redirect) == null ? void 0 : p.universal) !== \"\" && ((d = e?.redirect) == null ? void 0 : d.linkMode) === !0 && this.client.core.linkModeSupportedApps.includes(e.redirect.universal) && typeof (global == null ? void 0 : global.Linking) < \"u\";\n        }, this.getAppLinkIfEnabled = (e, t)=>{\n            var s;\n            return this.isLinkModeEnabled(e, t) ? (s = e?.redirect) == null ? void 0 : s.universal : void 0;\n        }, this.handleLinkModeMessage = ({ url: e })=>{\n            if (!e || !e.includes(\"wc_ev\") || !e.includes(\"topic\")) return;\n            const t = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSearchParamFromURL)(e, \"topic\") || \"\", s = decodeURIComponent((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSearchParamFromURL)(e, \"wc_ev\") || \"\"), i = this.client.session.keys.includes(t);\n            i && this.client.session.update(t, {\n                transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode\n            }), this.client.core.dispatchEnvelope({\n                topic: t,\n                message: s,\n                sessionExists: i\n            });\n        }, this.registerLinkModeListeners = async ()=>{\n            var e;\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isTestRun)() || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isReactNative)() && (e = this.client.metadata.redirect) != null && e.linkMode) {\n                const t = global == null ? void 0 : global.Linking;\n                if (typeof t < \"u\") {\n                    t.addEventListener(\"url\", this.handleLinkModeMessage, this.client.name);\n                    const s = await t.getInitialURL();\n                    s && setTimeout(()=>{\n                        this.handleLinkModeMessage({\n                            url: s\n                        });\n                    }, 50);\n                }\n            }\n        };\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(o);\n        }\n    }\n    async confirmOnlineStateOrThrow() {\n        await this.client.core.relayer.confirmOnlineStateOrThrow();\n    }\n    registerRelayerEvents() {\n        this.client.core.relayer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.message, (o)=>{\n            !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(o) : this.onRelayMessage(o);\n        });\n    }\n    async onRelayMessage(o) {\n        const { topic: e, message: t, attestation: s, transportType: i } = o, { publicKey: r } = this.client.auth.authKeys.keys.includes(ae) ? this.client.auth.authKeys.get(ae) : {\n            responseTopic: void 0,\n            publicKey: void 0\n        }, n = await this.client.core.crypto.decode(e, t, {\n            receiverPublicKey: r,\n            encoding: i === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64\n        });\n        try {\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcRequest)(n) ? (this.client.core.history.set(e, n), this.onRelayEventRequest({\n                topic: e,\n                payload: n,\n                attestation: s,\n                transportType: i,\n                encryptedId: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(t)\n            })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResponse)(n) ? (await this.client.core.history.resolve(n), await this.onRelayEventResponse({\n                topic: e,\n                payload: n,\n                transportType: i\n            }), this.client.core.history.delete(e, n.id)) : this.onRelayEventUnknownPayload({\n                topic: e,\n                payload: n,\n                transportType: i\n            });\n        } catch (a) {\n            this.client.logger.error(a);\n        }\n    }\n    registerExpirerEvents() {\n        this.client.core.expirer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EXPIRER_EVENTS.expired, async (o)=>{\n            const { topic: e, id: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseExpirerTarget)(o.target);\n            if (t && this.client.pendingRequest.keys.includes(t)) return await this.deletePendingSessionRequest(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            if (t && this.client.auth.requests.keys.includes(t)) return await this.deletePendingAuthRequest(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            e ? this.client.session.keys.includes(e) && (await this.deleteSession({\n                topic: e,\n                expirerHasDeleted: !0\n            }), this.client.events.emit(\"session_expire\", {\n                topic: e\n            })) : t && (await this.deleteProposal(t, !0), this.client.events.emit(\"proposal_expire\", {\n                id: t\n            }));\n        });\n    }\n    registerPairingEvents() {\n        this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.create, (o)=>this.onPairingCreated(o)), this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.delete, (o)=>{\n            this.addToRecentlyDeleted(o.topic, \"pairing\");\n        });\n    }\n    isValidPairingTopic(o) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(o, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${o}`);\n            throw new Error(e);\n        }\n        if (!this.client.core.pairing.pairings.keys.includes(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${o}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.core.pairing.pairings.get(o).expiry)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `pairing topic: ${o}`);\n            throw new Error(e);\n        }\n    }\n    async isValidSessionTopic(o) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(o, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic should be a string: ${o}`);\n            throw new Error(e);\n        }\n        if (this.checkRecentlyDeleted(o), !this.client.session.keys.includes(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session topic doesn't exist: ${o}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.session.get(o).expiry)) {\n            await this.deleteSession({\n                topic: o\n            });\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `session topic: ${o}`);\n            throw new Error(e);\n        }\n        if (!this.client.core.crypto.keychain.has(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic does not exist in keychain: ${o}`);\n            throw await this.deleteSession({\n                topic: o\n            }), new Error(e);\n        }\n    }\n    async isValidSessionOrPairingTopic(o) {\n        if (this.checkRecentlyDeleted(o), this.client.session.keys.includes(o)) await this.isValidSessionTopic(o);\n        else if (this.client.core.pairing.pairings.keys.includes(o)) this.isValidPairingTopic(o);\n        else if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(o, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session or pairing topic doesn't exist: ${o}`);\n            throw new Error(e);\n        } else {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session or pairing topic should be a string: ${o}`);\n            throw new Error(e);\n        }\n    }\n    async isValidProposalId(o) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidId)(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `proposal id should be a number: ${o}`);\n            throw new Error(e);\n        }\n        if (!this.client.proposal.keys.includes(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${o}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.proposal.get(o).expiryTimestamp)) {\n            await this.deleteProposal(o);\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `proposal id: ${o}`);\n            throw new Error(e);\n        }\n    }\n}\nclass Ss extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, st, ye), this.core = o, this.logger = e;\n    }\n}\nclass yt extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, rt, ye), this.core = o, this.logger = e;\n    }\n}\nclass Is extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, ot, ye, (t)=>t.id), this.core = o, this.logger = e;\n    }\n}\nclass fs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, pt, oe, ()=>ae), this.core = o, this.logger = e;\n    }\n}\nclass vs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, ht, oe), this.core = o, this.logger = e;\n    }\n}\nclass qs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, dt, oe, (t)=>t.id), this.core = o, this.logger = e;\n    }\n}\nclass Ts {\n    constructor(o, e){\n        this.core = o, this.logger = e, this.authKeys = new fs(this.core, this.logger), this.pairingTopics = new vs(this.core, this.logger), this.requests = new qs(this.core, this.logger);\n    }\n    async init() {\n        await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();\n    }\n}\nclass _e extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.ISignClient {\n    constructor(o){\n        super(o), this.protocol = be, this.version = Ce, this.name = we.name, this.events = new events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter, this.on = (t, s)=>this.events.on(t, s), this.once = (t, s)=>this.events.once(t, s), this.off = (t, s)=>this.events.off(t, s), this.removeListener = (t, s)=>this.events.removeListener(t, s), this.removeAllListeners = (t)=>this.events.removeAllListeners(t), this.connect = async (t)=>{\n            try {\n                return await this.engine.connect(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.pair = async (t)=>{\n            try {\n                return await this.engine.pair(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.approve = async (t)=>{\n            try {\n                return await this.engine.approve(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.reject = async (t)=>{\n            try {\n                return await this.engine.reject(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.update = async (t)=>{\n            try {\n                return await this.engine.update(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.extend = async (t)=>{\n            try {\n                return await this.engine.extend(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.request = async (t)=>{\n            try {\n                return await this.engine.request(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.respond = async (t)=>{\n            try {\n                return await this.engine.respond(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.ping = async (t)=>{\n            try {\n                return await this.engine.ping(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.emit = async (t)=>{\n            try {\n                return await this.engine.emit(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.disconnect = async (t)=>{\n            try {\n                return await this.engine.disconnect(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.find = (t)=>{\n            try {\n                return this.engine.find(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.getPendingSessionRequests = ()=>{\n            try {\n                return this.engine.getPendingSessionRequests();\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.authenticate = async (t, s)=>{\n            try {\n                return await this.engine.authenticate(t, s);\n            } catch (i) {\n                throw this.logger.error(i.message), i;\n            }\n        }, this.formatAuthMessage = (t)=>{\n            try {\n                return this.engine.formatAuthMessage(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.approveSessionAuthenticate = async (t)=>{\n            try {\n                return await this.engine.approveSessionAuthenticate(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.rejectSessionAuthenticate = async (t)=>{\n            try {\n                return await this.engine.rejectSessionAuthenticate(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.name = o?.name || we.name, this.metadata = o?.metadata || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getAppMetadata)(), this.signConfig = o?.signConfig;\n        const e = typeof o?.logger < \"u\" && typeof o?.logger != \"string\" ? o.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: o?.logger || we.logger\n        }));\n        this.core = o?.core || new _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Core(o), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.generateChildLogger)(e, this.name), this.session = new yt(this.core, this.logger), this.proposal = new Ss(this.core, this.logger), this.pendingRequest = new Is(this.core, this.logger), this.engine = new Rs(this), this.auth = new Ts(this.core, this.logger);\n    }\n    static async init(o) {\n        const e = new _e(o);\n        return await e.initialize(), e;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getLoggerContext)(this.logger);\n    }\n    get pairing() {\n        return this.core.pairing.pairings;\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.auth.init(), await this.engine.init(), this.logger.info(\"SignClient Initialization Success\"), this.engine.processRelayMessageCache();\n        } catch (o) {\n            throw this.logger.info(\"SignClient Initialization Failure\"), this.logger.error(o.message), o;\n        }\n    }\n}\nconst Ns = yt, Ps = _e;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvc2lnbi1jbGllbnQvZGlzdC9pbmRleC5lcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaVo7QUFBNkg7QUFBa0U7QUFBc3BDO0FBQTJDO0FBQXVKO0FBQW9QO0FBQUEsTUFBTW1MLEtBQUcsTUFBS0MsS0FBRyxHQUFFQyxLQUFHLFVBQVNDLEtBQUcsQ0FBQyxFQUFFSCxHQUFHLENBQUMsRUFBRUMsR0FBRyxDQUFDLEVBQUVDLEdBQUcsQ0FBQyxDQUFDLEVBQUNFLEtBQUc7SUFBQ0MsTUFBS0g7SUFBR0ksUUFBTztJQUFRQyxZQUFXLENBQUM7SUFBRUMsVUFBUztBQUErQixHQUFFQyxLQUFHO0lBQUNDLGtCQUFpQjtJQUFtQkMsZ0JBQWU7SUFBaUJDLGdCQUFlO0lBQWlCQyxjQUFhO0lBQWVDLGdCQUFlO0lBQWlCQyxnQkFBZTtJQUFpQkMsaUJBQWdCO0lBQWtCQyxzQkFBcUI7SUFBdUJDLGVBQWM7SUFBZ0JDLGlCQUFnQjtJQUFrQkMsc0JBQXFCO0lBQXVCQyx3QkFBdUI7QUFBd0IsR0FBRUMsS0FBRztJQUFDQyxVQUFTO0FBQVUsR0FBRUMsS0FBRyxpQ0FBZ0NDLEtBQUc7SUFBQ0MsU0FBUTtJQUFrQkMsU0FBUTtJQUFrQkMsU0FBUTtJQUFrQkMsTUFBSztBQUFjLEdBQUVDLEtBQUcsV0FBVUMsS0FBRyxPQUFNQyxLQUFHLFlBQVdDLEtBQUdoRSw0REFBRUEsRUFBQ2lFLEtBQUcsb0JBQW1CQyxLQUFHLFdBQVVDLElBQUVqRSwyREFBRUEsRUFBQ2tFLEtBQUcsVUFBU0MsSUFBRTtJQUFDQyxtQkFBa0I7UUFBQ0MsS0FBSTtZQUFDQyxLQUFJcEUsNkRBQUNBO1lBQUNxRSxRQUFPLENBQUM7WUFBRUMsS0FBSTtRQUFJO1FBQUVDLEtBQUk7WUFBQ0gsS0FBSXBFLDZEQUFDQTtZQUFDcUUsUUFBTyxDQUFDO1lBQUVDLEtBQUk7UUFB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LElBQUksQ0FBQ2tMLElBQUksQ0FBQ2xMLElBQUksSUFBRyxNQUFNLElBQUksQ0FBQ3FYLE1BQU0sQ0FBQ3JYLElBQUksSUFBRyxJQUFJLENBQUN4RyxNQUFNLENBQUN5UixJQUFJLENBQUMsc0NBQXFDLElBQUksQ0FBQ29NLE1BQU0sQ0FBQ25ILHdCQUF3QjtRQUFFLEVBQUMsT0FBTXpSLEdBQUU7WUFBQyxNQUFNLElBQUksQ0FBQ2pGLE1BQU0sQ0FBQ3lSLElBQUksQ0FBQyxzQ0FBcUMsSUFBSSxDQUFDelIsTUFBTSxDQUFDNEksS0FBSyxDQUFDM0QsRUFBRWdFLE9BQU8sR0FBRWhFO1FBQUM7SUFBQztBQUFDO0FBQUMsTUFBTWlaLEtBQUdkLElBQUdlLEtBQUdUO0FBQWcwQixDQUN2eTBELG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvc2lnbi1jbGllbnQvZGlzdC9pbmRleC5lcy5qcz9lYjIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydHtSRUxBWUVSX0RFRkFVTFRfUFJPVE9DT0wgYXMgRXQsVFJBTlNQT1JUX1RZUEVTIGFzIGYsRVZFTlRfQ0xJRU5UX1NFU1NJT05fVFJBQ0VTIGFzIEMsRVZFTlRfQ0xJRU5UX1NFU1NJT05fRVJST1JTIGFzIEYsRVZFTlRfQ0xJRU5UX0FVVEhFTlRJQ0FURV9UUkFDRVMgYXMgUSxFVkVOVF9DTElFTlRfQVVUSEVOVElDQVRFX0VSUk9SUyBhcyBzZSxFVkVOVF9DTElFTlRfUEFJUklOR19FUlJPUlMgYXMgUnQsRVZFTlRfQ0xJRU5UX1BBSVJJTkdfVFJBQ0VTIGFzIFN0LFJFTEFZRVJfRVZFTlRTIGFzIFVlLFZFUklGWV9TRVJWRVIgYXMgSXQsRVhQSVJFUl9FVkVOVFMgYXMgZnQsUEFJUklOR19FVkVOVFMgYXMgR2UsU3RvcmUgYXMgSCxDb3JlIGFzIHZ0fWZyb21cIkB3YWxsZXRjb25uZWN0L2NvcmVcIjtpbXBvcnR7cGlubyBhcyBxdCxnZXREZWZhdWx0TG9nZ2VyT3B0aW9ucyBhcyBUdCxnZW5lcmF0ZUNoaWxkTG9nZ2VyIGFzIE50LGdldExvZ2dlckNvbnRleHQgYXMgUHR9ZnJvbVwiQHdhbGxldGNvbm5lY3QvbG9nZ2VyXCI7aW1wb3J0e0lFbmdpbmUgYXMgT3QsSVNpZ25DbGllbnQgYXMgQXR9ZnJvbVwiQHdhbGxldGNvbm5lY3QvdHlwZXNcIjtpbXBvcnR7Z2V0SW50ZXJuYWxFcnJvciBhcyB1LGNhbGNFeHBpcnkgYXMgQSxjcmVhdGVEZWxheWVkUHJvbWlzZSBhcyBZLGVuZ2luZUV2ZW50IGFzIGcsZ2V0U2RrRXJyb3IgYXMgUCxnZXREZWVwTGluayBhcyBidCxoYW5kbGVEZWVwbGlua1JlZGlyZWN0IGFzIEN0LGlzU2Vzc2lvbkNvbXBhdGlibGUgYXMgTHQsaGFzaEtleSBhcyBUZSxwYXJzZUNoYWluSWQgYXMgTmUsY3JlYXRlRW5jb2RlZFJlY2FwIGFzIHh0LGdldFJlY2FwRnJvbVJlc291cmNlcyBhcyBQZSxtZXJnZUVuY29kZWRSZWNhcHMgYXMgRHQsVFlQRV8yIGFzIFZ0LEJBU0U2NFVSTCBhcyBpZSxnZXRMaW5rTW9kZVVSTCBhcyBoZSx2YWxpZGF0ZVNpZ25lZENhY2FvIGFzIGplLGdldE5hbWVzcGFjZWREaWRDaGFpbklkIGFzIEZlLGdldERpZEFkZHJlc3MgYXMgUWUsZ2V0TWV0aG9kc0Zyb21SZWNhcCBhcyB6ZSxnZXRDaGFpbnNGcm9tUmVjYXAgYXMgSGUsYnVpbGROYW1lc3BhY2VzRnJvbUF1dGggYXMgWWUsZm9ybWF0TWVzc2FnZSBhcyBNdCxCQVNFNjQgYXMgZGUsaGFzaE1lc3NhZ2UgYXMgWCxpc0V4cGlyZWQgYXMgSixNZW1vcnlTdG9yZSBhcyByZSxpc1ZhbGlkUGFyYW1zIGFzIEwsaXNVbmRlZmluZWQgYXMgbmUsaXNWYWxpZFJlbGF5cyBhcyBrdCxpc1ZhbGlkT2JqZWN0IGFzIFhlLGlzVmFsaWRSZXF1aXJlZE5hbWVzcGFjZXMgYXMgJHQsaXNWYWxpZE5hbWVzcGFjZXMgYXMgT2UsaXNDb25mb3JtaW5nTmFtZXNwYWNlcyBhcyBKZSxpc1ZhbGlkU3RyaW5nIGFzIGssaXNWYWxpZEVycm9yUmVhc29uIGFzIEt0LGlzVmFsaWRSZWxheSBhcyBVdCxpc1ZhbGlkQ29udHJvbGxlciBhcyBHdCxpc1ZhbGlkTmFtZXNwYWNlc0NoYWluSWQgYXMgQmUsaXNWYWxpZFJlcXVlc3QgYXMganQsaXNWYWxpZE5hbWVzcGFjZXNSZXF1ZXN0IGFzIEZ0LGlzVmFsaWRSZXF1ZXN0RXhwaXJ5IGFzIFF0LGlzVmFsaWRSZXNwb25zZSBhcyB6dCxpc1ZhbGlkRXZlbnQgYXMgSHQsaXNWYWxpZE5hbWVzcGFjZXNFdmVudCBhcyBZdCxnZXRTZWFyY2hQYXJhbUZyb21VUkwgYXMgV2UsaXNUZXN0UnVuIGFzIFh0LGlzUmVhY3ROYXRpdmUgYXMgSnQscGFyc2VFeHBpcmVyVGFyZ2V0IGFzIEJ0LGlzVmFsaWRJZCBhcyBXdCxUWVBFXzEgYXMgQWUsZ2V0QXBwTWV0YWRhdGEgYXMgWnR9ZnJvbVwiQHdhbGxldGNvbm5lY3QvdXRpbHNcIjtpbXBvcnQgZXMse0V2ZW50RW1pdHRlciBhcyB0c31mcm9tXCJldmVudHNcIjtpbXBvcnR7VEhJUlRZX0RBWVMgYXMgc3MsU0VWRU5fREFZUyBhcyBaZSxGSVZFX01JTlVURVMgYXMgYixPTkVfREFZIGFzICQsT05FX0hPVVIgYXMgZXQsT05FX1NFQ09ORCBhcyBpcyx0b01pbGlzZWNvbmRzIGFzIHR0fWZyb21cIkB3YWxsZXRjb25uZWN0L3RpbWVcIjtpbXBvcnR7cGF5bG9hZElkIGFzIEIsZ2V0QmlnSW50UnBjSWQgYXMgdWUsaXNKc29uUnBjUmVzdWx0IGFzIEssaXNKc29uUnBjRXJyb3IgYXMgVSxmb3JtYXRKc29uUnBjUmVxdWVzdCBhcyBnZSxmb3JtYXRKc29uUnBjUmVzdWx0IGFzIHJzLGZvcm1hdEpzb25ScGNFcnJvciBhcyBucyxpc0pzb25ScGNSZXF1ZXN0IGFzIG9zLGlzSnNvblJwY1Jlc3BvbnNlIGFzIGFzfWZyb21cIkB3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHNcIjtjb25zdCBiZT1cIndjXCIsQ2U9MixMZT1cImNsaWVudFwiLHllPWAke2JlfUAke0NlfToke0xlfTpgLHdlPXtuYW1lOkxlLGxvZ2dlcjpcImVycm9yXCIsY29udHJvbGxlcjohMSxyZWxheVVybDpcIndzczovL3JlbGF5LndhbGxldGNvbm5lY3Qub3JnXCJ9LGNzPXtzZXNzaW9uX3Byb3Bvc2FsOlwic2Vzc2lvbl9wcm9wb3NhbFwiLHNlc3Npb25fdXBkYXRlOlwic2Vzc2lvbl91cGRhdGVcIixzZXNzaW9uX2V4dGVuZDpcInNlc3Npb25fZXh0ZW5kXCIsc2Vzc2lvbl9waW5nOlwic2Vzc2lvbl9waW5nXCIsc2Vzc2lvbl9kZWxldGU6XCJzZXNzaW9uX2RlbGV0ZVwiLHNlc3Npb25fZXhwaXJlOlwic2Vzc2lvbl9leHBpcmVcIixzZXNzaW9uX3JlcXVlc3Q6XCJzZXNzaW9uX3JlcXVlc3RcIixzZXNzaW9uX3JlcXVlc3Rfc2VudDpcInNlc3Npb25fcmVxdWVzdF9zZW50XCIsc2Vzc2lvbl9ldmVudDpcInNlc3Npb25fZXZlbnRcIixwcm9wb3NhbF9leHBpcmU6XCJwcm9wb3NhbF9leHBpcmVcIixzZXNzaW9uX2F1dGhlbnRpY2F0ZTpcInNlc3Npb25fYXV0aGVudGljYXRlXCIsc2Vzc2lvbl9yZXF1ZXN0X2V4cGlyZTpcInNlc3Npb25fcmVxdWVzdF9leHBpcmVcIn0sbHM9e2RhdGFiYXNlOlwiOm1lbW9yeTpcIn0seGU9XCJXQUxMRVRDT05ORUNUX0RFRVBMSU5LX0NIT0lDRVwiLHBzPXtjcmVhdGVkOlwiaGlzdG9yeV9jcmVhdGVkXCIsdXBkYXRlZDpcImhpc3RvcnlfdXBkYXRlZFwiLGRlbGV0ZWQ6XCJoaXN0b3J5X2RlbGV0ZWRcIixzeW5jOlwiaGlzdG9yeV9zeW5jXCJ9LGhzPVwiaGlzdG9yeVwiLGRzPVwiMC4zXCIsc3Q9XCJwcm9wb3NhbFwiLHVzPXNzLGl0PVwiUHJvcG9zYWwgZXhwaXJlZFwiLHJ0PVwic2Vzc2lvblwiLHo9WmUsbnQ9XCJlbmdpbmVcIix2PXt3Y19zZXNzaW9uUHJvcG9zZTp7cmVxOnt0dGw6Yixwcm9tcHQ6ITAsdGFnOjExMDB9LHJlczp7dHRsOmIscHJvbXB0OiExLHRhZzoxMTAxfSxyZWplY3Q6e3R0bDpiLHByb21wdDohMSx0YWc6MTEyMH0sYXV0b1JlamVjdDp7dHRsOmIscHJvbXB0OiExLHRhZzoxMTIxfX0sd2Nfc2Vzc2lvblNldHRsZTp7cmVxOnt0dGw6Yixwcm9tcHQ6ITEsdGFnOjExMDJ9LHJlczp7dHRsOmIscHJvbXB0OiExLHRhZzoxMTAzfX0sd2Nfc2Vzc2lvblVwZGF0ZTp7cmVxOnt0dGw6JCxwcm9tcHQ6ITEsdGFnOjExMDR9LHJlczp7dHRsOiQscHJvbXB0OiExLHRhZzoxMTA1fX0sd2Nfc2Vzc2lvbkV4dGVuZDp7cmVxOnt0dGw6JCxwcm9tcHQ6ITEsdGFnOjExMDZ9LHJlczp7dHRsOiQscHJvbXB0OiExLHRhZzoxMTA3fX0sd2Nfc2Vzc2lvblJlcXVlc3Q6e3JlcTp7dHRsOmIscHJvbXB0OiEwLHRhZzoxMTA4fSxyZXM6e3R0bDpiLHByb21wdDohMSx0YWc6MTEwOX19LHdjX3Nlc3Npb25FdmVudDp7cmVxOnt0dGw6Yixwcm9tcHQ6ITAsdGFnOjExMTB9LHJlczp7dHRsOmIscHJvbXB0OiExLHRhZzoxMTExfX0sd2Nfc2Vzc2lvbkRlbGV0ZTp7cmVxOnt0dGw6JCxwcm9tcHQ6ITEsdGFnOjExMTJ9LHJlczp7dHRsOiQscHJvbXB0OiExLHRhZzoxMTEzfX0sd2Nfc2Vzc2lvblBpbmc6e3JlcTp7dHRsOiQscHJvbXB0OiExLHRhZzoxMTE0fSxyZXM6e3R0bDokLHByb21wdDohMSx0YWc6MTExNX19LHdjX3Nlc3Npb25BdXRoZW50aWNhdGU6e3JlcTp7dHRsOmV0LHByb21wdDohMCx0YWc6MTExNn0scmVzOnt0dGw6ZXQscHJvbXB0OiExLHRhZzoxMTE3fSxyZWplY3Q6e3R0bDpiLHByb21wdDohMSx0YWc6MTExOH0sYXV0b1JlamVjdDp7dHRsOmIscHJvbXB0OiExLHRhZzoxMTE5fX19LG1lPXttaW46YixtYXg6WmV9LHg9e2lkbGU6XCJJRExFXCIsYWN0aXZlOlwiQUNUSVZFXCJ9LG90PVwicmVxdWVzdFwiLGF0PVtcIndjX3Nlc3Npb25Qcm9wb3NlXCIsXCJ3Y19zZXNzaW9uUmVxdWVzdFwiLFwid2NfYXV0aFJlcXVlc3RcIixcIndjX3Nlc3Npb25BdXRoZW50aWNhdGVcIl0sY3Q9XCJ3Y1wiLGdzPTEuNSxsdD1cImF1dGhcIixwdD1cImF1dGhLZXlzXCIsaHQ9XCJwYWlyaW5nVG9waWNzXCIsZHQ9XCJyZXF1ZXN0c1wiLG9lPWAke2N0fUAkezEuNX06JHtsdH06YCxhZT1gJHtvZX06UFVCX0tFWWA7dmFyIHlzPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSx3cz1PYmplY3QuZGVmaW5lUHJvcGVydGllcyxtcz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyx1dD1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLF9zPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksRXM9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxndD0ocSxvLGUpPT5vIGluIHE/eXMocSxvLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTplfSk6cVtvXT1lLEk9KHEsbyk9Pntmb3IodmFyIGUgaW4gb3x8KG89e30pKV9zLmNhbGwobyxlKSYmZ3QocSxlLG9bZV0pO2lmKHV0KWZvcih2YXIgZSBvZiB1dChvKSlFcy5jYWxsKG8sZSkmJmd0KHEsZSxvW2VdKTtyZXR1cm4gcX0sRD0ocSxvKT0+d3MocSxtcyhvKSk7Y2xhc3MgUnMgZXh0ZW5kcyBPdHtjb25zdHJ1Y3RvcihvKXtzdXBlcihvKSx0aGlzLm5hbWU9bnQsdGhpcy5ldmVudHM9bmV3IGVzLHRoaXMuaW5pdGlhbGl6ZWQ9ITEsdGhpcy5yZXF1ZXN0UXVldWU9e3N0YXRlOnguaWRsZSxxdWV1ZTpbXX0sdGhpcy5zZXNzaW9uUmVxdWVzdFF1ZXVlPXtzdGF0ZTp4LmlkbGUscXVldWU6W119LHRoaXMucmVxdWVzdFF1ZXVlRGVsYXk9aXMsdGhpcy5leHBlY3RlZFBhaXJpbmdNZXRob2RNYXA9bmV3IE1hcCx0aGlzLnJlY2VudGx5RGVsZXRlZE1hcD1uZXcgTWFwLHRoaXMucmVjZW50bHlEZWxldGVkTGltaXQ9MjAwLHRoaXMucmVsYXlNZXNzYWdlQ2FjaGU9W10sdGhpcy5pbml0PWFzeW5jKCk9Pnt0aGlzLmluaXRpYWxpemVkfHwoYXdhaXQgdGhpcy5jbGVhbnVwKCksdGhpcy5yZWdpc3RlclJlbGF5ZXJFdmVudHMoKSx0aGlzLnJlZ2lzdGVyRXhwaXJlckV2ZW50cygpLHRoaXMucmVnaXN0ZXJQYWlyaW5nRXZlbnRzKCksYXdhaXQgdGhpcy5yZWdpc3RlckxpbmtNb2RlTGlzdGVuZXJzKCksdGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLnJlZ2lzdGVyKHttZXRob2RzOk9iamVjdC5rZXlzKHYpfSksdGhpcy5pbml0aWFsaXplZD0hMCxzZXRUaW1lb3V0KCgpPT57dGhpcy5zZXNzaW9uUmVxdWVzdFF1ZXVlLnF1ZXVlPXRoaXMuZ2V0UGVuZGluZ1Nlc3Npb25SZXF1ZXN0cygpLHRoaXMucHJvY2Vzc1Nlc3Npb25SZXF1ZXN0UXVldWUoKX0sdHQodGhpcy5yZXF1ZXN0UXVldWVEZWxheSkpKX0sdGhpcy5jb25uZWN0PWFzeW5jIGU9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKSxhd2FpdCB0aGlzLmNvbmZpcm1PbmxpbmVTdGF0ZU9yVGhyb3coKTtjb25zdCB0PUQoSSh7fSxlKSx7cmVxdWlyZWROYW1lc3BhY2VzOmUucmVxdWlyZWROYW1lc3BhY2VzfHx7fSxvcHRpb25hbE5hbWVzcGFjZXM6ZS5vcHRpb25hbE5hbWVzcGFjZXN8fHt9fSk7YXdhaXQgdGhpcy5pc1ZhbGlkQ29ubmVjdCh0KTtjb25zdHtwYWlyaW5nVG9waWM6cyxyZXF1aXJlZE5hbWVzcGFjZXM6aSxvcHRpb25hbE5hbWVzcGFjZXM6cixzZXNzaW9uUHJvcGVydGllczpuLHJlbGF5czphfT10O2xldCBjPXMsaCxwPSExO3RyeXtjJiYocD10aGlzLmNsaWVudC5jb3JlLnBhaXJpbmcucGFpcmluZ3MuZ2V0KGMpLmFjdGl2ZSl9Y2F0Y2goRSl7dGhyb3cgdGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKGBjb25uZWN0KCkgLT4gcGFpcmluZy5nZXQoJHtjfSkgZmFpbGVkYCksRX1pZighY3x8IXApe2NvbnN0e3RvcGljOkUsdXJpOlN9PWF3YWl0IHRoaXMuY2xpZW50LmNvcmUucGFpcmluZy5jcmVhdGUoKTtjPUUsaD1TfWlmKCFjKXtjb25zdHttZXNzYWdlOkV9PXUoXCJOT19NQVRDSElOR19LRVlcIixgY29ubmVjdCgpIHBhaXJpbmcgdG9waWM6ICR7Y31gKTt0aHJvdyBuZXcgRXJyb3IoRSl9Y29uc3QgZD1hd2FpdCB0aGlzLmNsaWVudC5jb3JlLmNyeXB0by5nZW5lcmF0ZUtleVBhaXIoKSxsPXYud2Nfc2Vzc2lvblByb3Bvc2UucmVxLnR0bHx8Yix3PUEobCksbT1JKHtyZXF1aXJlZE5hbWVzcGFjZXM6aSxvcHRpb25hbE5hbWVzcGFjZXM6cixyZWxheXM6YT8/W3twcm90b2NvbDpFdH1dLHByb3Bvc2VyOntwdWJsaWNLZXk6ZCxtZXRhZGF0YTp0aGlzLmNsaWVudC5tZXRhZGF0YX0sZXhwaXJ5VGltZXN0YW1wOncscGFpcmluZ1RvcGljOmN9LG4mJntzZXNzaW9uUHJvcGVydGllczpufSkse3JlamVjdDp5LHJlc29sdmU6Xyxkb25lOlJ9PVkobCxpdCk7dGhpcy5ldmVudHMub25jZShnKFwic2Vzc2lvbl9jb25uZWN0XCIpLGFzeW5jKHtlcnJvcjpFLHNlc3Npb246U30pPT57aWYoRSl5KEUpO2Vsc2UgaWYoUyl7Uy5zZWxmLnB1YmxpY0tleT1kO2NvbnN0IE09RChJKHt9LFMpLHtwYWlyaW5nVG9waWM6bS5wYWlyaW5nVG9waWMscmVxdWlyZWROYW1lc3BhY2VzOm0ucmVxdWlyZWROYW1lc3BhY2VzLG9wdGlvbmFsTmFtZXNwYWNlczptLm9wdGlvbmFsTmFtZXNwYWNlcyx0cmFuc3BvcnRUeXBlOmYucmVsYXl9KTthd2FpdCB0aGlzLmNsaWVudC5zZXNzaW9uLnNldChTLnRvcGljLE0pLGF3YWl0IHRoaXMuc2V0RXhwaXJ5KFMudG9waWMsUy5leHBpcnkpLGMmJmF3YWl0IHRoaXMuY2xpZW50LmNvcmUucGFpcmluZy51cGRhdGVNZXRhZGF0YSh7dG9waWM6YyxtZXRhZGF0YTpTLnBlZXIubWV0YWRhdGF9KSx0aGlzLmNsZWFudXBEdXBsaWNhdGVQYWlyaW5ncyhNKSxfKE0pfX0pO2NvbnN0IFY9YXdhaXQgdGhpcy5zZW5kUmVxdWVzdCh7dG9waWM6YyxtZXRob2Q6XCJ3Y19zZXNzaW9uUHJvcG9zZVwiLHBhcmFtczptLHRocm93T25GYWlsZWRQdWJsaXNoOiEwfSk7cmV0dXJuIGF3YWl0IHRoaXMuc2V0UHJvcG9zYWwoVixJKHtpZDpWfSxtKSkse3VyaTpoLGFwcHJvdmFsOlJ9fSx0aGlzLnBhaXI9YXN5bmMgZT0+e3RoaXMuaXNJbml0aWFsaXplZCgpLGF3YWl0IHRoaXMuY29uZmlybU9ubGluZVN0YXRlT3JUaHJvdygpO3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLnBhaXIoZSl9Y2F0Y2godCl7dGhyb3cgdGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKFwicGFpcigpIGZhaWxlZFwiKSx0fX0sdGhpcy5hcHByb3ZlPWFzeW5jIGU9Pnt2YXIgdCxzLGk7Y29uc3Qgcj10aGlzLmNsaWVudC5jb3JlLmV2ZW50Q2xpZW50LmNyZWF0ZUV2ZW50KHtwcm9wZXJ0aWVzOnt0b3BpYzoodD1lPy5pZCk9PW51bGw/dm9pZCAwOnQudG9TdHJpbmcoKSx0cmFjZTpbQy5zZXNzaW9uX2FwcHJvdmVfc3RhcnRlZF19fSk7dHJ5e3RoaXMuaXNJbml0aWFsaXplZCgpLGF3YWl0IHRoaXMuY29uZmlybU9ubGluZVN0YXRlT3JUaHJvdygpfWNhdGNoKE4pe3Rocm93IHIuc2V0RXJyb3IoRi5ub19pbnRlcm5ldF9jb25uZWN0aW9uKSxOfXRyeXthd2FpdCB0aGlzLmlzVmFsaWRQcm9wb3NhbElkKGU/LmlkKX1jYXRjaChOKXt0aHJvdyB0aGlzLmNsaWVudC5sb2dnZXIuZXJyb3IoYGFwcHJvdmUoKSAtPiBwcm9wb3NhbC5nZXQoJHtlPy5pZH0pIGZhaWxlZGApLHIuc2V0RXJyb3IoRi5wcm9wb3NhbF9ub3RfZm91bmQpLE59dHJ5e2F3YWl0IHRoaXMuaXNWYWxpZEFwcHJvdmUoZSl9Y2F0Y2goTil7dGhyb3cgdGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKFwiYXBwcm92ZSgpIC0+IGlzVmFsaWRBcHByb3ZlKCkgZmFpbGVkXCIpLHIuc2V0RXJyb3IoRi5zZXNzaW9uX2FwcHJvdmVfbmFtZXNwYWNlX3ZhbGlkYXRpb25fZmFpbHVyZSksTn1jb25zdHtpZDpuLHJlbGF5UHJvdG9jb2w6YSxuYW1lc3BhY2VzOmMsc2Vzc2lvblByb3BlcnRpZXM6aCxzZXNzaW9uQ29uZmlnOnB9PWUsZD10aGlzLmNsaWVudC5wcm9wb3NhbC5nZXQobik7dGhpcy5jbGllbnQuY29yZS5ldmVudENsaWVudC5kZWxldGVFdmVudCh7ZXZlbnRJZDpyLmV2ZW50SWR9KTtjb25zdHtwYWlyaW5nVG9waWM6bCxwcm9wb3Nlcjp3LHJlcXVpcmVkTmFtZXNwYWNlczptLG9wdGlvbmFsTmFtZXNwYWNlczp5fT1kO2xldCBfPShzPXRoaXMuY2xpZW50LmNvcmUuZXZlbnRDbGllbnQpPT1udWxsP3ZvaWQgMDpzLmdldEV2ZW50KHt0b3BpYzpsfSk7X3x8KF89KGk9dGhpcy5jbGllbnQuY29yZS5ldmVudENsaWVudCk9PW51bGw/dm9pZCAwOmkuY3JlYXRlRXZlbnQoe3R5cGU6Qy5zZXNzaW9uX2FwcHJvdmVfc3RhcnRlZCxwcm9wZXJ0aWVzOnt0b3BpYzpsLHRyYWNlOltDLnNlc3Npb25fYXBwcm92ZV9zdGFydGVkLEMuc2Vzc2lvbl9uYW1lc3BhY2VzX3ZhbGlkYXRpb25fc3VjY2Vzc119fSkpO2NvbnN0IFI9YXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZ2VuZXJhdGVLZXlQYWlyKCksVj13LnB1YmxpY0tleSxFPWF3YWl0IHRoaXMuY2xpZW50LmNvcmUuY3J5cHRvLmdlbmVyYXRlU2hhcmVkS2V5KFIsViksUz1JKEkoe3JlbGF5Ontwcm90b2NvbDphPz9cImlyblwifSxuYW1lc3BhY2VzOmMsY29udHJvbGxlcjp7cHVibGljS2V5OlIsbWV0YWRhdGE6dGhpcy5jbGllbnQubWV0YWRhdGF9LGV4cGlyeTpBKHopfSxoJiZ7c2Vzc2lvblByb3BlcnRpZXM6aH0pLHAmJntzZXNzaW9uQ29uZmlnOnB9KSxNPWYucmVsYXk7Xy5hZGRUcmFjZShDLnN1YnNjcmliaW5nX3Nlc3Npb25fdG9waWMpO3RyeXthd2FpdCB0aGlzLmNsaWVudC5jb3JlLnJlbGF5ZXIuc3Vic2NyaWJlKEUse3RyYW5zcG9ydFR5cGU6TX0pfWNhdGNoKE4pe3Rocm93IF8uc2V0RXJyb3IoRi5zdWJzY3JpYmVfc2Vzc2lvbl90b3BpY19mYWlsdXJlKSxOfV8uYWRkVHJhY2UoQy5zdWJzY3JpYmVfc2Vzc2lvbl90b3BpY19zdWNjZXNzKTtjb25zdCBXPUQoSSh7fSxTKSx7dG9waWM6RSxyZXF1aXJlZE5hbWVzcGFjZXM6bSxvcHRpb25hbE5hbWVzcGFjZXM6eSxwYWlyaW5nVG9waWM6bCxhY2tub3dsZWRnZWQ6ITEsc2VsZjpTLmNvbnRyb2xsZXIscGVlcjp7cHVibGljS2V5OncucHVibGljS2V5LG1ldGFkYXRhOncubWV0YWRhdGF9LGNvbnRyb2xsZXI6Uix0cmFuc3BvcnRUeXBlOmYucmVsYXl9KTthd2FpdCB0aGlzLmNsaWVudC5zZXNzaW9uLnNldChFLFcpLF8uYWRkVHJhY2UoQy5zdG9yZV9zZXNzaW9uKTt0cnl7Xy5hZGRUcmFjZShDLnB1Ymxpc2hpbmdfc2Vzc2lvbl9zZXR0bGUpLGF3YWl0IHRoaXMuc2VuZFJlcXVlc3Qoe3RvcGljOkUsbWV0aG9kOlwid2Nfc2Vzc2lvblNldHRsZVwiLHBhcmFtczpTLHRocm93T25GYWlsZWRQdWJsaXNoOiEwfSkuY2F0Y2goTj0+e3Rocm93IF8/LnNldEVycm9yKEYuc2Vzc2lvbl9zZXR0bGVfcHVibGlzaF9mYWlsdXJlKSxOfSksXy5hZGRUcmFjZShDLnNlc3Npb25fc2V0dGxlX3B1Ymxpc2hfc3VjY2VzcyksXy5hZGRUcmFjZShDLnB1Ymxpc2hpbmdfc2Vzc2lvbl9hcHByb3ZlKSxhd2FpdCB0aGlzLnNlbmRSZXN1bHQoe2lkOm4sdG9waWM6bCxyZXN1bHQ6e3JlbGF5Ontwcm90b2NvbDphPz9cImlyblwifSxyZXNwb25kZXJQdWJsaWNLZXk6Un0sdGhyb3dPbkZhaWxlZFB1Ymxpc2g6ITB9KS5jYXRjaChOPT57dGhyb3cgXz8uc2V0RXJyb3IoRi5zZXNzaW9uX2FwcHJvdmVfcHVibGlzaF9mYWlsdXJlKSxOfSksXy5hZGRUcmFjZShDLnNlc3Npb25fYXBwcm92ZV9wdWJsaXNoX3N1Y2Nlc3MpfWNhdGNoKE4pe3Rocm93IHRoaXMuY2xpZW50LmxvZ2dlci5lcnJvcihOKSx0aGlzLmNsaWVudC5zZXNzaW9uLmRlbGV0ZShFLFAoXCJVU0VSX0RJU0NPTk5FQ1RFRFwiKSksYXdhaXQgdGhpcy5jbGllbnQuY29yZS5yZWxheWVyLnVuc3Vic2NyaWJlKEUpLE59cmV0dXJuIHRoaXMuY2xpZW50LmNvcmUuZXZlbnRDbGllbnQuZGVsZXRlRXZlbnQoe2V2ZW50SWQ6Xy5ldmVudElkfSksYXdhaXQgdGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLnVwZGF0ZU1ldGFkYXRhKHt0b3BpYzpsLG1ldGFkYXRhOncubWV0YWRhdGF9KSxhd2FpdCB0aGlzLmNsaWVudC5wcm9wb3NhbC5kZWxldGUobixQKFwiVVNFUl9ESVNDT05ORUNURURcIikpLGF3YWl0IHRoaXMuY2xpZW50LmNvcmUucGFpcmluZy5hY3RpdmF0ZSh7dG9waWM6bH0pLGF3YWl0IHRoaXMuc2V0RXhwaXJ5KEUsQSh6KSkse3RvcGljOkUsYWNrbm93bGVkZ2VkOigpPT5Qcm9taXNlLnJlc29sdmUodGhpcy5jbGllbnQuc2Vzc2lvbi5nZXQoRSkpfX0sdGhpcy5yZWplY3Q9YXN5bmMgZT0+e3RoaXMuaXNJbml0aWFsaXplZCgpLGF3YWl0IHRoaXMuY29uZmlybU9ubGluZVN0YXRlT3JUaHJvdygpO3RyeXthd2FpdCB0aGlzLmlzVmFsaWRSZWplY3QoZSl9Y2F0Y2gocil7dGhyb3cgdGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKFwicmVqZWN0KCkgLT4gaXNWYWxpZFJlamVjdCgpIGZhaWxlZFwiKSxyfWNvbnN0e2lkOnQscmVhc29uOnN9PWU7bGV0IGk7dHJ5e2k9dGhpcy5jbGllbnQucHJvcG9zYWwuZ2V0KHQpLnBhaXJpbmdUb3BpY31jYXRjaChyKXt0aHJvdyB0aGlzLmNsaWVudC5sb2dnZXIuZXJyb3IoYHJlamVjdCgpIC0+IHByb3Bvc2FsLmdldCgke3R9KSBmYWlsZWRgKSxyfWkmJihhd2FpdCB0aGlzLnNlbmRFcnJvcih7aWQ6dCx0b3BpYzppLGVycm9yOnMscnBjT3B0czp2LndjX3Nlc3Npb25Qcm9wb3NlLnJlamVjdH0pLGF3YWl0IHRoaXMuY2xpZW50LnByb3Bvc2FsLmRlbGV0ZSh0LFAoXCJVU0VSX0RJU0NPTk5FQ1RFRFwiKSkpfSx0aGlzLnVwZGF0ZT1hc3luYyBlPT57dGhpcy5pc0luaXRpYWxpemVkKCksYXdhaXQgdGhpcy5jb25maXJtT25saW5lU3RhdGVPclRocm93KCk7dHJ5e2F3YWl0IHRoaXMuaXNWYWxpZFVwZGF0ZShlKX1jYXRjaChwKXt0aHJvdyB0aGlzLmNsaWVudC5sb2dnZXIuZXJyb3IoXCJ1cGRhdGUoKSAtPiBpc1ZhbGlkVXBkYXRlKCkgZmFpbGVkXCIpLHB9Y29uc3R7dG9waWM6dCxuYW1lc3BhY2VzOnN9PWUse2RvbmU6aSxyZXNvbHZlOnIscmVqZWN0Om59PVkoKSxhPUIoKSxjPXVlKCkudG9TdHJpbmcoKSxoPXRoaXMuY2xpZW50LnNlc3Npb24uZ2V0KHQpLm5hbWVzcGFjZXM7cmV0dXJuIHRoaXMuZXZlbnRzLm9uY2UoZyhcInNlc3Npb25fdXBkYXRlXCIsYSksKHtlcnJvcjpwfSk9PntwP24ocCk6cigpfSksYXdhaXQgdGhpcy5jbGllbnQuc2Vzc2lvbi51cGRhdGUodCx7bmFtZXNwYWNlczpzfSksYXdhaXQgdGhpcy5zZW5kUmVxdWVzdCh7dG9waWM6dCxtZXRob2Q6XCJ3Y19zZXNzaW9uVXBkYXRlXCIscGFyYW1zOntuYW1lc3BhY2VzOnN9LHRocm93T25GYWlsZWRQdWJsaXNoOiEwLGNsaWVudFJwY0lkOmEscmVsYXlScGNJZDpjfSkuY2F0Y2gocD0+e3RoaXMuY2xpZW50LmxvZ2dlci5lcnJvcihwKSx0aGlzLmNsaWVudC5zZXNzaW9uLnVwZGF0ZSh0LHtuYW1lc3BhY2VzOmh9KSxuKHApfSkse2Fja25vd2xlZGdlZDppfX0sdGhpcy5leHRlbmQ9YXN5bmMgZT0+e3RoaXMuaXNJbml0aWFsaXplZCgpLGF3YWl0IHRoaXMuY29uZmlybU9ubGluZVN0YXRlT3JUaHJvdygpO3RyeXthd2FpdCB0aGlzLmlzVmFsaWRFeHRlbmQoZSl9Y2F0Y2goYSl7dGhyb3cgdGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKFwiZXh0ZW5kKCkgLT4gaXNWYWxpZEV4dGVuZCgpIGZhaWxlZFwiKSxhfWNvbnN0e3RvcGljOnR9PWUscz1CKCkse2RvbmU6aSxyZXNvbHZlOnIscmVqZWN0Om59PVkoKTtyZXR1cm4gdGhpcy5ldmVudHMub25jZShnKFwic2Vzc2lvbl9leHRlbmRcIixzKSwoe2Vycm9yOmF9KT0+e2E/bihhKTpyKCl9KSxhd2FpdCB0aGlzLnNldEV4cGlyeSh0LEEoeikpLHRoaXMuc2VuZFJlcXVlc3Qoe3RvcGljOnQsbWV0aG9kOlwid2Nfc2Vzc2lvbkV4dGVuZFwiLHBhcmFtczp7fSxjbGllbnRScGNJZDpzLHRocm93T25GYWlsZWRQdWJsaXNoOiEwfSkuY2F0Y2goYT0+e24oYSl9KSx7YWNrbm93bGVkZ2VkOml9fSx0aGlzLnJlcXVlc3Q9YXN5bmMgZT0+e3RoaXMuaXNJbml0aWFsaXplZCgpO3RyeXthd2FpdCB0aGlzLmlzVmFsaWRSZXF1ZXN0KGUpfWNhdGNoKHcpe3Rocm93IHRoaXMuY2xpZW50LmxvZ2dlci5lcnJvcihcInJlcXVlc3QoKSAtPiBpc1ZhbGlkUmVxdWVzdCgpIGZhaWxlZFwiKSx3fWNvbnN0e2NoYWluSWQ6dCxyZXF1ZXN0OnMsdG9waWM6aSxleHBpcnk6cj12LndjX3Nlc3Npb25SZXF1ZXN0LnJlcS50dGx9PWUsbj10aGlzLmNsaWVudC5zZXNzaW9uLmdldChpKTtuPy50cmFuc3BvcnRUeXBlPT09Zi5yZWxheSYmYXdhaXQgdGhpcy5jb25maXJtT25saW5lU3RhdGVPclRocm93KCk7Y29uc3QgYT1CKCksYz11ZSgpLnRvU3RyaW5nKCkse2RvbmU6aCxyZXNvbHZlOnAscmVqZWN0OmR9PVkocixcIlJlcXVlc3QgZXhwaXJlZC4gUGxlYXNlIHRyeSBhZ2Fpbi5cIik7dGhpcy5ldmVudHMub25jZShnKFwic2Vzc2lvbl9yZXF1ZXN0XCIsYSksKHtlcnJvcjp3LHJlc3VsdDptfSk9Pnt3P2Qodyk6cChtKX0pO2NvbnN0IGw9dGhpcy5nZXRBcHBMaW5rSWZFbmFibGVkKG4ucGVlci5tZXRhZGF0YSxuLnRyYW5zcG9ydFR5cGUpO3JldHVybiBsPyhhd2FpdCB0aGlzLnNlbmRSZXF1ZXN0KHtjbGllbnRScGNJZDphLHJlbGF5UnBjSWQ6Yyx0b3BpYzppLG1ldGhvZDpcIndjX3Nlc3Npb25SZXF1ZXN0XCIscGFyYW1zOntyZXF1ZXN0OkQoSSh7fSxzKSx7ZXhwaXJ5VGltZXN0YW1wOkEocil9KSxjaGFpbklkOnR9LGV4cGlyeTpyLHRocm93T25GYWlsZWRQdWJsaXNoOiEwLGFwcExpbms6bH0pLmNhdGNoKHc9PmQodykpLHRoaXMuY2xpZW50LmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9yZXF1ZXN0X3NlbnRcIix7dG9waWM6aSxyZXF1ZXN0OnMsY2hhaW5JZDp0LGlkOmF9KSxhd2FpdCBoKCkpOmF3YWl0IFByb21pc2UuYWxsKFtuZXcgUHJvbWlzZShhc3luYyB3PT57YXdhaXQgdGhpcy5zZW5kUmVxdWVzdCh7Y2xpZW50UnBjSWQ6YSxyZWxheVJwY0lkOmMsdG9waWM6aSxtZXRob2Q6XCJ3Y19zZXNzaW9uUmVxdWVzdFwiLHBhcmFtczp7cmVxdWVzdDpEKEkoe30scykse2V4cGlyeVRpbWVzdGFtcDpBKHIpfSksY2hhaW5JZDp0fSxleHBpcnk6cix0aHJvd09uRmFpbGVkUHVibGlzaDohMH0pLmNhdGNoKG09PmQobSkpLHRoaXMuY2xpZW50LmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9yZXF1ZXN0X3NlbnRcIix7dG9waWM6aSxyZXF1ZXN0OnMsY2hhaW5JZDp0LGlkOmF9KSx3KCl9KSxuZXcgUHJvbWlzZShhc3luYyB3PT57dmFyIG07aWYoISgobT1uLnNlc3Npb25Db25maWcpIT1udWxsJiZtLmRpc2FibGVEZWVwTGluaykpe2NvbnN0IHk9YXdhaXQgYnQodGhpcy5jbGllbnQuY29yZS5zdG9yYWdlLHhlKTthd2FpdCBDdCh7aWQ6YSx0b3BpYzppLHdjRGVlcExpbms6eX0pfXcoKX0pLGgoKV0pLnRoZW4odz0+d1syXSl9LHRoaXMucmVzcG9uZD1hc3luYyBlPT57dGhpcy5pc0luaXRpYWxpemVkKCksYXdhaXQgdGhpcy5pc1ZhbGlkUmVzcG9uZChlKTtjb25zdHt0b3BpYzp0LHJlc3BvbnNlOnN9PWUse2lkOml9PXMscj10aGlzLmNsaWVudC5zZXNzaW9uLmdldCh0KTtyLnRyYW5zcG9ydFR5cGU9PT1mLnJlbGF5JiZhd2FpdCB0aGlzLmNvbmZpcm1PbmxpbmVTdGF0ZU9yVGhyb3coKTtjb25zdCBuPXRoaXMuZ2V0QXBwTGlua0lmRW5hYmxlZChyLnBlZXIubWV0YWRhdGEsci50cmFuc3BvcnRUeXBlKTtLKHMpP2F3YWl0IHRoaXMuc2VuZFJlc3VsdCh7aWQ6aSx0b3BpYzp0LHJlc3VsdDpzLnJlc3VsdCx0aHJvd09uRmFpbGVkUHVibGlzaDohMCxhcHBMaW5rOm59KTpVKHMpJiZhd2FpdCB0aGlzLnNlbmRFcnJvcih7aWQ6aSx0b3BpYzp0LGVycm9yOnMuZXJyb3IsYXBwTGluazpufSksdGhpcy5jbGVhbnVwQWZ0ZXJSZXNwb25zZShlKX0sdGhpcy5waW5nPWFzeW5jIGU9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKSxhd2FpdCB0aGlzLmNvbmZpcm1PbmxpbmVTdGF0ZU9yVGhyb3coKTt0cnl7YXdhaXQgdGhpcy5pc1ZhbGlkUGluZyhlKX1jYXRjaChzKXt0aHJvdyB0aGlzLmNsaWVudC5sb2dnZXIuZXJyb3IoXCJwaW5nKCkgLT4gaXNWYWxpZFBpbmcoKSBmYWlsZWRcIiksc31jb25zdHt0b3BpYzp0fT1lO2lmKHRoaXMuY2xpZW50LnNlc3Npb24ua2V5cy5pbmNsdWRlcyh0KSl7Y29uc3Qgcz1CKCksaT11ZSgpLnRvU3RyaW5nKCkse2RvbmU6cixyZXNvbHZlOm4scmVqZWN0OmF9PVkoKTt0aGlzLmV2ZW50cy5vbmNlKGcoXCJzZXNzaW9uX3BpbmdcIixzKSwoe2Vycm9yOmN9KT0+e2M/YShjKTpuKCl9KSxhd2FpdCBQcm9taXNlLmFsbChbdGhpcy5zZW5kUmVxdWVzdCh7dG9waWM6dCxtZXRob2Q6XCJ3Y19zZXNzaW9uUGluZ1wiLHBhcmFtczp7fSx0aHJvd09uRmFpbGVkUHVibGlzaDohMCxjbGllbnRScGNJZDpzLHJlbGF5UnBjSWQ6aX0pLHIoKV0pfWVsc2UgdGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLnBhaXJpbmdzLmtleXMuaW5jbHVkZXModCkmJmF3YWl0IHRoaXMuY2xpZW50LmNvcmUucGFpcmluZy5waW5nKHt0b3BpYzp0fSl9LHRoaXMuZW1pdD1hc3luYyBlPT57dGhpcy5pc0luaXRpYWxpemVkKCksYXdhaXQgdGhpcy5jb25maXJtT25saW5lU3RhdGVPclRocm93KCksYXdhaXQgdGhpcy5pc1ZhbGlkRW1pdChlKTtjb25zdHt0b3BpYzp0LGV2ZW50OnMsY2hhaW5JZDppfT1lLHI9dWUoKS50b1N0cmluZygpO2F3YWl0IHRoaXMuc2VuZFJlcXVlc3Qoe3RvcGljOnQsbWV0aG9kOlwid2Nfc2Vzc2lvbkV2ZW50XCIscGFyYW1zOntldmVudDpzLGNoYWluSWQ6aX0sdGhyb3dPbkZhaWxlZFB1Ymxpc2g6ITAscmVsYXlScGNJZDpyfSl9LHRoaXMuZGlzY29ubmVjdD1hc3luYyBlPT57dGhpcy5pc0luaXRpYWxpemVkKCksYXdhaXQgdGhpcy5jb25maXJtT25saW5lU3RhdGVPclRocm93KCksYXdhaXQgdGhpcy5pc1ZhbGlkRGlzY29ubmVjdChlKTtjb25zdHt0b3BpYzp0fT1lO2lmKHRoaXMuY2xpZW50LnNlc3Npb24ua2V5cy5pbmNsdWRlcyh0KSlhd2FpdCB0aGlzLnNlbmRSZXF1ZXN0KHt0b3BpYzp0LG1ldGhvZDpcIndjX3Nlc3Npb25EZWxldGVcIixwYXJhbXM6UChcIlVTRVJfRElTQ09OTkVDVEVEXCIpLHRocm93T25GYWlsZWRQdWJsaXNoOiEwfSksYXdhaXQgdGhpcy5kZWxldGVTZXNzaW9uKHt0b3BpYzp0LGVtaXRFdmVudDohMX0pO2Vsc2UgaWYodGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLnBhaXJpbmdzLmtleXMuaW5jbHVkZXModCkpYXdhaXQgdGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLmRpc2Nvbm5lY3Qoe3RvcGljOnR9KTtlbHNle2NvbnN0e21lc3NhZ2U6c309dShcIk1JU01BVENIRURfVE9QSUNcIixgU2Vzc2lvbiBvciBwYWlyaW5nIHRvcGljIG5vdCBmb3VuZDogJHt0fWApO3Rocm93IG5ldyBFcnJvcihzKX19LHRoaXMuZmluZD1lPT4odGhpcy5pc0luaXRpYWxpemVkKCksdGhpcy5jbGllbnQuc2Vzc2lvbi5nZXRBbGwoKS5maWx0ZXIodD0+THQodCxlKSkpLHRoaXMuZ2V0UGVuZGluZ1Nlc3Npb25SZXF1ZXN0cz0oKT0+dGhpcy5jbGllbnQucGVuZGluZ1JlcXVlc3QuZ2V0QWxsKCksdGhpcy5hdXRoZW50aWNhdGU9YXN5bmMoZSx0KT0+e3ZhciBzO3RoaXMuaXNJbml0aWFsaXplZCgpLHRoaXMuaXNWYWxpZEF1dGhlbnRpY2F0ZShlKTtjb25zdCBpPXQmJnRoaXMuY2xpZW50LmNvcmUubGlua01vZGVTdXBwb3J0ZWRBcHBzLmluY2x1ZGVzKHQpJiYoKHM9dGhpcy5jbGllbnQubWV0YWRhdGEucmVkaXJlY3QpPT1udWxsP3ZvaWQgMDpzLmxpbmtNb2RlKSxyPWk/Zi5saW5rX21vZGU6Zi5yZWxheTtyPT09Zi5yZWxheSYmYXdhaXQgdGhpcy5jb25maXJtT25saW5lU3RhdGVPclRocm93KCk7Y29uc3R7Y2hhaW5zOm4sc3RhdGVtZW50OmE9XCJcIix1cmk6Yyxkb21haW46aCxub25jZTpwLHR5cGU6ZCxleHA6bCxuYmY6dyxtZXRob2RzOm09W10sZXhwaXJ5Onl9PWUsXz1bLi4uZS5yZXNvdXJjZXN8fFtdXSx7dG9waWM6Uix1cmk6Vn09YXdhaXQgdGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLmNyZWF0ZSh7bWV0aG9kczpbXCJ3Y19zZXNzaW9uQXV0aGVudGljYXRlXCJdLHRyYW5zcG9ydFR5cGU6cn0pO3RoaXMuY2xpZW50LmxvZ2dlci5pbmZvKHttZXNzYWdlOlwiR2VuZXJhdGVkIG5ldyBwYWlyaW5nXCIscGFpcmluZzp7dG9waWM6Uix1cmk6Vn19KTtjb25zdCBFPWF3YWl0IHRoaXMuY2xpZW50LmNvcmUuY3J5cHRvLmdlbmVyYXRlS2V5UGFpcigpLFM9VGUoRSk7aWYoYXdhaXQgUHJvbWlzZS5hbGwoW3RoaXMuY2xpZW50LmF1dGguYXV0aEtleXMuc2V0KGFlLHtyZXNwb25zZVRvcGljOlMscHVibGljS2V5OkV9KSx0aGlzLmNsaWVudC5hdXRoLnBhaXJpbmdUb3BpY3Muc2V0KFMse3RvcGljOlMscGFpcmluZ1RvcGljOlJ9KV0pLGF3YWl0IHRoaXMuY2xpZW50LmNvcmUucmVsYXllci5zdWJzY3JpYmUoUyx7dHJhbnNwb3J0VHlwZTpyfSksdGhpcy5jbGllbnQubG9nZ2VyLmluZm8oYHNlbmRpbmcgcmVxdWVzdCB0byBuZXcgcGFpcmluZyB0b3BpYzogJHtSfWApLG0ubGVuZ3RoPjApe2NvbnN0e25hbWVzcGFjZTpPfT1OZShuWzBdKTtsZXQgVD14dChPLFwicmVxdWVzdFwiLG0pO1BlKF8pJiYoVD1EdChULF8ucG9wKCkpKSxfLnB1c2goVCl9Y29uc3QgTT15JiZ5PnYud2Nfc2Vzc2lvbkF1dGhlbnRpY2F0ZS5yZXEudHRsP3k6di53Y19zZXNzaW9uQXV0aGVudGljYXRlLnJlcS50dGwsVz17YXV0aFBheWxvYWQ6e3R5cGU6ZD8/XCJjYWlwMTIyXCIsY2hhaW5zOm4sc3RhdGVtZW50OmEsYXVkOmMsZG9tYWluOmgsdmVyc2lvbjpcIjFcIixub25jZTpwLGlhdDpuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksZXhwOmwsbmJmOncscmVzb3VyY2VzOl99LHJlcXVlc3Rlcjp7cHVibGljS2V5OkUsbWV0YWRhdGE6dGhpcy5jbGllbnQubWV0YWRhdGF9LGV4cGlyeVRpbWVzdGFtcDpBKE0pfSxOPXtlaXAxNTU6e2NoYWluczpuLG1ldGhvZHM6Wy4uLm5ldyBTZXQoW1wicGVyc29uYWxfc2lnblwiLC4uLm1dKV0sZXZlbnRzOltcImNoYWluQ2hhbmdlZFwiLFwiYWNjb3VudHNDaGFuZ2VkXCJdfX0sRGU9e3JlcXVpcmVkTmFtZXNwYWNlczp7fSxvcHRpb25hbE5hbWVzcGFjZXM6TixyZWxheXM6W3twcm90b2NvbDpcImlyblwifV0scGFpcmluZ1RvcGljOlIscHJvcG9zZXI6e3B1YmxpY0tleTpFLG1ldGFkYXRhOnRoaXMuY2xpZW50Lm1ldGFkYXRhfSxleHBpcnlUaW1lc3RhbXA6QSh2LndjX3Nlc3Npb25Qcm9wb3NlLnJlcS50dGwpfSx7ZG9uZTp3dCxyZXNvbHZlOlZlLHJlamVjdDpFZX09WShNLFwiUmVxdWVzdCBleHBpcmVkXCIpLGNlPWFzeW5jKHtlcnJvcjpPLHNlc3Npb246VH0pPT57aWYodGhpcy5ldmVudHMub2ZmKGcoXCJzZXNzaW9uX3JlcXVlc3RcIixHKSxSZSksTylFZShPKTtlbHNlIGlmKFQpe1Quc2VsZi5wdWJsaWNLZXk9RSxhd2FpdCB0aGlzLmNsaWVudC5zZXNzaW9uLnNldChULnRvcGljLFQpLGF3YWl0IHRoaXMuc2V0RXhwaXJ5KFQudG9waWMsVC5leHBpcnkpLFImJmF3YWl0IHRoaXMuY2xpZW50LmNvcmUucGFpcmluZy51cGRhdGVNZXRhZGF0YSh7dG9waWM6UixtZXRhZGF0YTpULnBlZXIubWV0YWRhdGF9KTtjb25zdCBsZT10aGlzLmNsaWVudC5zZXNzaW9uLmdldChULnRvcGljKTthd2FpdCB0aGlzLmRlbGV0ZVByb3Bvc2FsKFopLFZlKHtzZXNzaW9uOmxlfSl9fSxSZT1hc3luYyBPPT57dmFyIFQsbGUsTWU7aWYoYXdhaXQgdGhpcy5kZWxldGVQZW5kaW5nQXV0aFJlcXVlc3QoRyx7bWVzc2FnZTpcImZ1bGZpbGxlZFwiLGNvZGU6MH0pLE8uZXJyb3Ipe2NvbnN0IHRlPVAoXCJXQ19NRVRIT0RfVU5TVVBQT1JURURcIixcIndjX3Nlc3Npb25BdXRoZW50aWNhdGVcIik7cmV0dXJuIE8uZXJyb3IuY29kZT09PXRlLmNvZGU/dm9pZCAwOih0aGlzLmV2ZW50cy5vZmYoZyhcInNlc3Npb25fY29ubmVjdFwiKSxjZSksRWUoTy5lcnJvci5tZXNzYWdlKSl9YXdhaXQgdGhpcy5kZWxldGVQcm9wb3NhbChaKSx0aGlzLmV2ZW50cy5vZmYoZyhcInNlc3Npb25fY29ubmVjdFwiKSxjZSk7Y29uc3R7Y2FjYW9zOmtlLHJlc3BvbmRlcjpqfT1PLnJlc3VsdCxJZT1bXSwkZT1bXTtmb3IoY29uc3QgdGUgb2Yga2Upe2F3YWl0IGplKHtjYWNhbzp0ZSxwcm9qZWN0SWQ6dGhpcy5jbGllbnQuY29yZS5wcm9qZWN0SWR9KXx8KHRoaXMuY2xpZW50LmxvZ2dlci5lcnJvcih0ZSxcIlNpZ25hdHVyZSB2ZXJpZmljYXRpb24gZmFpbGVkXCIpLEVlKFAoXCJTRVNTSU9OX1NFVFRMRU1FTlRfRkFJTEVEXCIsXCJTaWduYXR1cmUgdmVyaWZpY2F0aW9uIGZhaWxlZFwiKSkpO2NvbnN0e3A6ZmV9PXRlLHZlPVBlKGZlLnJlc291cmNlcyksS2U9W0ZlKGZlLmlzcyldLG10PVFlKGZlLmlzcyk7aWYodmUpe2NvbnN0IHFlPXplKHZlKSxfdD1IZSh2ZSk7SWUucHVzaCguLi5xZSksS2UucHVzaCguLi5fdCl9Zm9yKGNvbnN0IHFlIG9mIEtlKSRlLnB1c2goYCR7cWV9OiR7bXR9YCl9Y29uc3QgZWU9YXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZ2VuZXJhdGVTaGFyZWRLZXkoRSxqLnB1YmxpY0tleSk7bGV0IHBlO0llLmxlbmd0aD4wJiYocGU9e3RvcGljOmVlLGFja25vd2xlZGdlZDohMCxzZWxmOntwdWJsaWNLZXk6RSxtZXRhZGF0YTp0aGlzLmNsaWVudC5tZXRhZGF0YX0scGVlcjpqLGNvbnRyb2xsZXI6ai5wdWJsaWNLZXksZXhwaXJ5OkEoeikscmVxdWlyZWROYW1lc3BhY2VzOnt9LG9wdGlvbmFsTmFtZXNwYWNlczp7fSxyZWxheTp7cHJvdG9jb2w6XCJpcm5cIn0scGFpcmluZ1RvcGljOlIsbmFtZXNwYWNlczpZZShbLi4ubmV3IFNldChJZSldLFsuLi5uZXcgU2V0KCRlKV0pLHRyYW5zcG9ydFR5cGU6cn0sYXdhaXQgdGhpcy5jbGllbnQuY29yZS5yZWxheWVyLnN1YnNjcmliZShlZSx7dHJhbnNwb3J0VHlwZTpyfSksYXdhaXQgdGhpcy5jbGllbnQuc2Vzc2lvbi5zZXQoZWUscGUpLFImJmF3YWl0IHRoaXMuY2xpZW50LmNvcmUucGFpcmluZy51cGRhdGVNZXRhZGF0YSh7dG9waWM6UixtZXRhZGF0YTpqLm1ldGFkYXRhfSkscGU9dGhpcy5jbGllbnQuc2Vzc2lvbi5nZXQoZWUpKSwoVD10aGlzLmNsaWVudC5tZXRhZGF0YS5yZWRpcmVjdCkhPW51bGwmJlQubGlua01vZGUmJihsZT1qLm1ldGFkYXRhLnJlZGlyZWN0KSE9bnVsbCYmbGUubGlua01vZGUmJihNZT1qLm1ldGFkYXRhLnJlZGlyZWN0KSE9bnVsbCYmTWUudW5pdmVyc2FsJiZ0JiYodGhpcy5jbGllbnQuY29yZS5hZGRMaW5rTW9kZVN1cHBvcnRlZEFwcChqLm1ldGFkYXRhLnJlZGlyZWN0LnVuaXZlcnNhbCksdGhpcy5jbGllbnQuc2Vzc2lvbi51cGRhdGUoZWUse3RyYW5zcG9ydFR5cGU6Zi5saW5rX21vZGV9KSksVmUoe2F1dGhzOmtlLHNlc3Npb246cGV9KX0sRz1CKCksWj1CKCk7dGhpcy5ldmVudHMub25jZShnKFwic2Vzc2lvbl9jb25uZWN0XCIpLGNlKSx0aGlzLmV2ZW50cy5vbmNlKGcoXCJzZXNzaW9uX3JlcXVlc3RcIixHKSxSZSk7bGV0IFNlO3RyeXtpZihpKXtjb25zdCBPPWdlKFwid2Nfc2Vzc2lvbkF1dGhlbnRpY2F0ZVwiLFcsRyk7dGhpcy5jbGllbnQuY29yZS5oaXN0b3J5LnNldChSLE8pO2NvbnN0IFQ9YXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZW5jb2RlKFwiXCIsTyx7dHlwZTpWdCxlbmNvZGluZzppZX0pO1NlPWhlKHQsUixUKX1lbHNlIGF3YWl0IFByb21pc2UuYWxsKFt0aGlzLnNlbmRSZXF1ZXN0KHt0b3BpYzpSLG1ldGhvZDpcIndjX3Nlc3Npb25BdXRoZW50aWNhdGVcIixwYXJhbXM6VyxleHBpcnk6ZS5leHBpcnksdGhyb3dPbkZhaWxlZFB1Ymxpc2g6ITAsY2xpZW50UnBjSWQ6R30pLHRoaXMuc2VuZFJlcXVlc3Qoe3RvcGljOlIsbWV0aG9kOlwid2Nfc2Vzc2lvblByb3Bvc2VcIixwYXJhbXM6RGUsZXhwaXJ5OnYud2Nfc2Vzc2lvblByb3Bvc2UucmVxLnR0bCx0aHJvd09uRmFpbGVkUHVibGlzaDohMCxjbGllbnRScGNJZDpafSldKX1jYXRjaChPKXt0aHJvdyB0aGlzLmV2ZW50cy5vZmYoZyhcInNlc3Npb25fY29ubmVjdFwiKSxjZSksdGhpcy5ldmVudHMub2ZmKGcoXCJzZXNzaW9uX3JlcXVlc3RcIixHKSxSZSksT31yZXR1cm4gYXdhaXQgdGhpcy5zZXRQcm9wb3NhbChaLEkoe2lkOlp9LERlKSksYXdhaXQgdGhpcy5zZXRBdXRoUmVxdWVzdChHLHtyZXF1ZXN0OkQoSSh7fSxXKSx7dmVyaWZ5Q29udGV4dDp7fX0pLHBhaXJpbmdUb3BpYzpSLHRyYW5zcG9ydFR5cGU6cn0pLHt1cmk6U2U/P1YscmVzcG9uc2U6d3R9fSx0aGlzLmFwcHJvdmVTZXNzaW9uQXV0aGVudGljYXRlPWFzeW5jIGU9Pntjb25zdHtpZDp0LGF1dGhzOnN9PWUsaT10aGlzLmNsaWVudC5jb3JlLmV2ZW50Q2xpZW50LmNyZWF0ZUV2ZW50KHtwcm9wZXJ0aWVzOnt0b3BpYzp0LnRvU3RyaW5nKCksdHJhY2U6W1EuYXV0aGVudGljYXRlZF9zZXNzaW9uX2FwcHJvdmVfc3RhcnRlZF19fSk7dHJ5e3RoaXMuaXNJbml0aWFsaXplZCgpfWNhdGNoKHkpe3Rocm93IGkuc2V0RXJyb3Ioc2Uubm9faW50ZXJuZXRfY29ubmVjdGlvbikseX1jb25zdCByPXRoaXMuZ2V0UGVuZGluZ0F1dGhSZXF1ZXN0KHQpO2lmKCFyKXRocm93IGkuc2V0RXJyb3Ioc2UuYXV0aGVudGljYXRlZF9zZXNzaW9uX3BlbmRpbmdfcmVxdWVzdF9ub3RfZm91bmQpLG5ldyBFcnJvcihgQ291bGQgbm90IGZpbmQgcGVuZGluZyBhdXRoIHJlcXVlc3Qgd2l0aCBpZCAke3R9YCk7Y29uc3Qgbj1yLnRyYW5zcG9ydFR5cGV8fGYucmVsYXk7bj09PWYucmVsYXkmJmF3YWl0IHRoaXMuY29uZmlybU9ubGluZVN0YXRlT3JUaHJvdygpO2NvbnN0IGE9ci5yZXF1ZXN0ZXIucHVibGljS2V5LGM9YXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZ2VuZXJhdGVLZXlQYWlyKCksaD1UZShhKSxwPXt0eXBlOkFlLHJlY2VpdmVyUHVibGljS2V5OmEsc2VuZGVyUHVibGljS2V5OmN9LGQ9W10sbD1bXTtmb3IoY29uc3QgeSBvZiBzKXtpZighYXdhaXQgamUoe2NhY2FvOnkscHJvamVjdElkOnRoaXMuY2xpZW50LmNvcmUucHJvamVjdElkfSkpe2kuc2V0RXJyb3Ioc2UuaW52YWxpZF9jYWNhbyk7Y29uc3QgUz1QKFwiU0VTU0lPTl9TRVRUTEVNRU5UX0ZBSUxFRFwiLFwiU2lnbmF0dXJlIHZlcmlmaWNhdGlvbiBmYWlsZWRcIik7dGhyb3cgYXdhaXQgdGhpcy5zZW5kRXJyb3Ioe2lkOnQsdG9waWM6aCxlcnJvcjpTLGVuY29kZU9wdHM6cH0pLG5ldyBFcnJvcihTLm1lc3NhZ2UpfWkuYWRkVHJhY2UoUS5jYWNhb3NfdmVyaWZpZWQpO2NvbnN0e3A6X309eSxSPVBlKF8ucmVzb3VyY2VzKSxWPVtGZShfLmlzcyldLEU9UWUoXy5pc3MpO2lmKFIpe2NvbnN0IFM9emUoUiksTT1IZShSKTtkLnB1c2goLi4uUyksVi5wdXNoKC4uLk0pfWZvcihjb25zdCBTIG9mIFYpbC5wdXNoKGAke1N9OiR7RX1gKX1jb25zdCB3PWF3YWl0IHRoaXMuY2xpZW50LmNvcmUuY3J5cHRvLmdlbmVyYXRlU2hhcmVkS2V5KGMsYSk7aS5hZGRUcmFjZShRLmNyZWF0ZV9hdXRoZW50aWNhdGVkX3Nlc3Npb25fdG9waWMpO2xldCBtO2lmKGQ/Lmxlbmd0aD4wKXttPXt0b3BpYzp3LGFja25vd2xlZGdlZDohMCxzZWxmOntwdWJsaWNLZXk6YyxtZXRhZGF0YTp0aGlzLmNsaWVudC5tZXRhZGF0YX0scGVlcjp7cHVibGljS2V5OmEsbWV0YWRhdGE6ci5yZXF1ZXN0ZXIubWV0YWRhdGF9LGNvbnRyb2xsZXI6YSxleHBpcnk6QSh6KSxhdXRoZW50aWNhdGlvbjpzLHJlcXVpcmVkTmFtZXNwYWNlczp7fSxvcHRpb25hbE5hbWVzcGFjZXM6e30scmVsYXk6e3Byb3RvY29sOlwiaXJuXCJ9LHBhaXJpbmdUb3BpYzpyLnBhaXJpbmdUb3BpYyxuYW1lc3BhY2VzOlllKFsuLi5uZXcgU2V0KGQpXSxbLi4ubmV3IFNldChsKV0pLHRyYW5zcG9ydFR5cGU6bn0saS5hZGRUcmFjZShRLnN1YnNjcmliaW5nX2F1dGhlbnRpY2F0ZWRfc2Vzc2lvbl90b3BpYyk7dHJ5e2F3YWl0IHRoaXMuY2xpZW50LmNvcmUucmVsYXllci5zdWJzY3JpYmUodyx7dHJhbnNwb3J0VHlwZTpufSl9Y2F0Y2goeSl7dGhyb3cgaS5zZXRFcnJvcihzZS5zdWJzY3JpYmVfYXV0aGVudGljYXRlZF9zZXNzaW9uX3RvcGljX2ZhaWx1cmUpLHl9aS5hZGRUcmFjZShRLnN1YnNjcmliZV9hdXRoZW50aWNhdGVkX3Nlc3Npb25fdG9waWNfc3VjY2VzcyksYXdhaXQgdGhpcy5jbGllbnQuc2Vzc2lvbi5zZXQodyxtKSxpLmFkZFRyYWNlKFEuc3RvcmVfYXV0aGVudGljYXRlZF9zZXNzaW9uKSxhd2FpdCB0aGlzLmNsaWVudC5jb3JlLnBhaXJpbmcudXBkYXRlTWV0YWRhdGEoe3RvcGljOnIucGFpcmluZ1RvcGljLG1ldGFkYXRhOnIucmVxdWVzdGVyLm1ldGFkYXRhfSl9aS5hZGRUcmFjZShRLnB1Ymxpc2hpbmdfYXV0aGVudGljYXRlZF9zZXNzaW9uX2FwcHJvdmUpO3RyeXthd2FpdCB0aGlzLnNlbmRSZXN1bHQoe3RvcGljOmgsaWQ6dCxyZXN1bHQ6e2NhY2FvczpzLHJlc3BvbmRlcjp7cHVibGljS2V5OmMsbWV0YWRhdGE6dGhpcy5jbGllbnQubWV0YWRhdGF9fSxlbmNvZGVPcHRzOnAsdGhyb3dPbkZhaWxlZFB1Ymxpc2g6ITAsYXBwTGluazp0aGlzLmdldEFwcExpbmtJZkVuYWJsZWQoci5yZXF1ZXN0ZXIubWV0YWRhdGEsbil9KX1jYXRjaCh5KXt0aHJvdyBpLnNldEVycm9yKHNlLmF1dGhlbnRpY2F0ZWRfc2Vzc2lvbl9hcHByb3ZlX3B1Ymxpc2hfZmFpbHVyZSkseX1yZXR1cm4gYXdhaXQgdGhpcy5jbGllbnQuYXV0aC5yZXF1ZXN0cy5kZWxldGUodCx7bWVzc2FnZTpcImZ1bGZpbGxlZFwiLGNvZGU6MH0pLGF3YWl0IHRoaXMuY2xpZW50LmNvcmUucGFpcmluZy5hY3RpdmF0ZSh7dG9waWM6ci5wYWlyaW5nVG9waWN9KSx0aGlzLmNsaWVudC5jb3JlLmV2ZW50Q2xpZW50LmRlbGV0ZUV2ZW50KHtldmVudElkOmkuZXZlbnRJZH0pLHtzZXNzaW9uOm19fSx0aGlzLnJlamVjdFNlc3Npb25BdXRoZW50aWNhdGU9YXN5bmMgZT0+e3RoaXMuaXNJbml0aWFsaXplZCgpO2NvbnN0e2lkOnQscmVhc29uOnN9PWUsaT10aGlzLmdldFBlbmRpbmdBdXRoUmVxdWVzdCh0KTtpZighaSl0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBmaW5kIHBlbmRpbmcgYXV0aCByZXF1ZXN0IHdpdGggaWQgJHt0fWApO2kudHJhbnNwb3J0VHlwZT09PWYucmVsYXkmJmF3YWl0IHRoaXMuY29uZmlybU9ubGluZVN0YXRlT3JUaHJvdygpO2NvbnN0IHI9aS5yZXF1ZXN0ZXIucHVibGljS2V5LG49YXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZ2VuZXJhdGVLZXlQYWlyKCksYT1UZShyKSxjPXt0eXBlOkFlLHJlY2VpdmVyUHVibGljS2V5OnIsc2VuZGVyUHVibGljS2V5Om59O2F3YWl0IHRoaXMuc2VuZEVycm9yKHtpZDp0LHRvcGljOmEsZXJyb3I6cyxlbmNvZGVPcHRzOmMscnBjT3B0czp2LndjX3Nlc3Npb25BdXRoZW50aWNhdGUucmVqZWN0LGFwcExpbms6dGhpcy5nZXRBcHBMaW5rSWZFbmFibGVkKGkucmVxdWVzdGVyLm1ldGFkYXRhLGkudHJhbnNwb3J0VHlwZSl9KSxhd2FpdCB0aGlzLmNsaWVudC5hdXRoLnJlcXVlc3RzLmRlbGV0ZSh0LHttZXNzYWdlOlwicmVqZWN0ZWRcIixjb2RlOjB9KSxhd2FpdCB0aGlzLmNsaWVudC5wcm9wb3NhbC5kZWxldGUodCxQKFwiVVNFUl9ESVNDT05ORUNURURcIikpfSx0aGlzLmZvcm1hdEF1dGhNZXNzYWdlPWU9Pnt0aGlzLmlzSW5pdGlhbGl6ZWQoKTtjb25zdHtyZXF1ZXN0OnQsaXNzOnN9PWU7cmV0dXJuIE10KHQscyl9LHRoaXMucHJvY2Vzc1JlbGF5TWVzc2FnZUNhY2hlPSgpPT57c2V0VGltZW91dChhc3luYygpPT57aWYodGhpcy5yZWxheU1lc3NhZ2VDYWNoZS5sZW5ndGghPT0wKWZvcig7dGhpcy5yZWxheU1lc3NhZ2VDYWNoZS5sZW5ndGg+MDspdHJ5e2NvbnN0IGU9dGhpcy5yZWxheU1lc3NhZ2VDYWNoZS5zaGlmdCgpO2UmJmF3YWl0IHRoaXMub25SZWxheU1lc3NhZ2UoZSl9Y2F0Y2goZSl7dGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKGUpfX0sNTApfSx0aGlzLmNsZWFudXBEdXBsaWNhdGVQYWlyaW5ncz1hc3luYyBlPT57aWYoZS5wYWlyaW5nVG9waWMpdHJ5e2NvbnN0IHQ9dGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLnBhaXJpbmdzLmdldChlLnBhaXJpbmdUb3BpYykscz10aGlzLmNsaWVudC5jb3JlLnBhaXJpbmcucGFpcmluZ3MuZ2V0QWxsKCkuZmlsdGVyKGk9Pnt2YXIgcixuO3JldHVybigocj1pLnBlZXJNZXRhZGF0YSk9PW51bGw/dm9pZCAwOnIudXJsKSYmKChuPWkucGVlck1ldGFkYXRhKT09bnVsbD92b2lkIDA6bi51cmwpPT09ZS5wZWVyLm1ldGFkYXRhLnVybCYmaS50b3BpYyYmaS50b3BpYyE9PXQudG9waWN9KTtpZihzLmxlbmd0aD09PTApcmV0dXJuO3RoaXMuY2xpZW50LmxvZ2dlci5pbmZvKGBDbGVhbmluZyB1cCAke3MubGVuZ3RofSBkdXBsaWNhdGUgcGFpcmluZyhzKWApLGF3YWl0IFByb21pc2UuYWxsKHMubWFwKGk9PnRoaXMuY2xpZW50LmNvcmUucGFpcmluZy5kaXNjb25uZWN0KHt0b3BpYzppLnRvcGljfSkpKSx0aGlzLmNsaWVudC5sb2dnZXIuaW5mbyhcIkR1cGxpY2F0ZSBwYWlyaW5ncyBjbGVhbiB1cCBmaW5pc2hlZFwiKX1jYXRjaCh0KXt0aGlzLmNsaWVudC5sb2dnZXIuZXJyb3IodCl9fSx0aGlzLmRlbGV0ZVNlc3Npb249YXN5bmMgZT0+e3ZhciB0O2NvbnN0e3RvcGljOnMsZXhwaXJlckhhc0RlbGV0ZWQ6aT0hMSxlbWl0RXZlbnQ6cj0hMCxpZDpuPTB9PWUse3NlbGY6YX09dGhpcy5jbGllbnQuc2Vzc2lvbi5nZXQocyk7YXdhaXQgdGhpcy5jbGllbnQuY29yZS5yZWxheWVyLnVuc3Vic2NyaWJlKHMpLGF3YWl0IHRoaXMuY2xpZW50LnNlc3Npb24uZGVsZXRlKHMsUChcIlVTRVJfRElTQ09OTkVDVEVEXCIpKSx0aGlzLmFkZFRvUmVjZW50bHlEZWxldGVkKHMsXCJzZXNzaW9uXCIpLHRoaXMuY2xpZW50LmNvcmUuY3J5cHRvLmtleWNoYWluLmhhcyhhLnB1YmxpY0tleSkmJmF3YWl0IHRoaXMuY2xpZW50LmNvcmUuY3J5cHRvLmRlbGV0ZUtleVBhaXIoYS5wdWJsaWNLZXkpLHRoaXMuY2xpZW50LmNvcmUuY3J5cHRvLmtleWNoYWluLmhhcyhzKSYmYXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZGVsZXRlU3ltS2V5KHMpLGl8fHRoaXMuY2xpZW50LmNvcmUuZXhwaXJlci5kZWwocyksdGhpcy5jbGllbnQuY29yZS5zdG9yYWdlLnJlbW92ZUl0ZW0oeGUpLmNhdGNoKGM9PnRoaXMuY2xpZW50LmxvZ2dlci53YXJuKGMpKSx0aGlzLmdldFBlbmRpbmdTZXNzaW9uUmVxdWVzdHMoKS5mb3JFYWNoKGM9PntjLnRvcGljPT09cyYmdGhpcy5kZWxldGVQZW5kaW5nU2Vzc2lvblJlcXVlc3QoYy5pZCxQKFwiVVNFUl9ESVNDT05ORUNURURcIikpfSkscz09PSgodD10aGlzLnNlc3Npb25SZXF1ZXN0UXVldWUucXVldWVbMF0pPT1udWxsP3ZvaWQgMDp0LnRvcGljKSYmKHRoaXMuc2Vzc2lvblJlcXVlc3RRdWV1ZS5zdGF0ZT14LmlkbGUpLHImJnRoaXMuY2xpZW50LmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9kZWxldGVcIix7aWQ6bix0b3BpYzpzfSl9LHRoaXMuZGVsZXRlUHJvcG9zYWw9YXN5bmMoZSx0KT0+e2lmKHQpdHJ5e2NvbnN0IHM9dGhpcy5jbGllbnQucHJvcG9zYWwuZ2V0KGUpLGk9dGhpcy5jbGllbnQuY29yZS5ldmVudENsaWVudC5nZXRFdmVudCh7dG9waWM6cy5wYWlyaW5nVG9waWN9KTtpPy5zZXRFcnJvcihGLnByb3Bvc2FsX2V4cGlyZWQpfWNhdGNoe31hd2FpdCBQcm9taXNlLmFsbChbdGhpcy5jbGllbnQucHJvcG9zYWwuZGVsZXRlKGUsUChcIlVTRVJfRElTQ09OTkVDVEVEXCIpKSx0P1Byb21pc2UucmVzb2x2ZSgpOnRoaXMuY2xpZW50LmNvcmUuZXhwaXJlci5kZWwoZSldKSx0aGlzLmFkZFRvUmVjZW50bHlEZWxldGVkKGUsXCJwcm9wb3NhbFwiKX0sdGhpcy5kZWxldGVQZW5kaW5nU2Vzc2lvblJlcXVlc3Q9YXN5bmMoZSx0LHM9ITEpPT57YXdhaXQgUHJvbWlzZS5hbGwoW3RoaXMuY2xpZW50LnBlbmRpbmdSZXF1ZXN0LmRlbGV0ZShlLHQpLHM/UHJvbWlzZS5yZXNvbHZlKCk6dGhpcy5jbGllbnQuY29yZS5leHBpcmVyLmRlbChlKV0pLHRoaXMuYWRkVG9SZWNlbnRseURlbGV0ZWQoZSxcInJlcXVlc3RcIiksdGhpcy5zZXNzaW9uUmVxdWVzdFF1ZXVlLnF1ZXVlPXRoaXMuc2Vzc2lvblJlcXVlc3RRdWV1ZS5xdWV1ZS5maWx0ZXIoaT0+aS5pZCE9PWUpLHMmJih0aGlzLnNlc3Npb25SZXF1ZXN0UXVldWUuc3RhdGU9eC5pZGxlLHRoaXMuY2xpZW50LmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9yZXF1ZXN0X2V4cGlyZVwiLHtpZDplfSkpfSx0aGlzLmRlbGV0ZVBlbmRpbmdBdXRoUmVxdWVzdD1hc3luYyhlLHQscz0hMSk9Pnthd2FpdCBQcm9taXNlLmFsbChbdGhpcy5jbGllbnQuYXV0aC5yZXF1ZXN0cy5kZWxldGUoZSx0KSxzP1Byb21pc2UucmVzb2x2ZSgpOnRoaXMuY2xpZW50LmNvcmUuZXhwaXJlci5kZWwoZSldKX0sdGhpcy5zZXRFeHBpcnk9YXN5bmMoZSx0KT0+e3RoaXMuY2xpZW50LnNlc3Npb24ua2V5cy5pbmNsdWRlcyhlKSYmKHRoaXMuY2xpZW50LmNvcmUuZXhwaXJlci5zZXQoZSx0KSxhd2FpdCB0aGlzLmNsaWVudC5zZXNzaW9uLnVwZGF0ZShlLHtleHBpcnk6dH0pKX0sdGhpcy5zZXRQcm9wb3NhbD1hc3luYyhlLHQpPT57dGhpcy5jbGllbnQuY29yZS5leHBpcmVyLnNldChlLEEodi53Y19zZXNzaW9uUHJvcG9zZS5yZXEudHRsKSksYXdhaXQgdGhpcy5jbGllbnQucHJvcG9zYWwuc2V0KGUsdCl9LHRoaXMuc2V0QXV0aFJlcXVlc3Q9YXN5bmMoZSx0KT0+e2NvbnN0e3JlcXVlc3Q6cyxwYWlyaW5nVG9waWM6aSx0cmFuc3BvcnRUeXBlOnI9Zi5yZWxheX09dDt0aGlzLmNsaWVudC5jb3JlLmV4cGlyZXIuc2V0KGUscy5leHBpcnlUaW1lc3RhbXApLGF3YWl0IHRoaXMuY2xpZW50LmF1dGgucmVxdWVzdHMuc2V0KGUse2F1dGhQYXlsb2FkOnMuYXV0aFBheWxvYWQscmVxdWVzdGVyOnMucmVxdWVzdGVyLGV4cGlyeVRpbWVzdGFtcDpzLmV4cGlyeVRpbWVzdGFtcCxpZDplLHBhaXJpbmdUb3BpYzppLHZlcmlmeUNvbnRleHQ6cy52ZXJpZnlDb250ZXh0LHRyYW5zcG9ydFR5cGU6cn0pfSx0aGlzLnNldFBlbmRpbmdTZXNzaW9uUmVxdWVzdD1hc3luYyBlPT57Y29uc3R7aWQ6dCx0b3BpYzpzLHBhcmFtczppLHZlcmlmeUNvbnRleHQ6cn09ZSxuPWkucmVxdWVzdC5leHBpcnlUaW1lc3RhbXB8fEEodi53Y19zZXNzaW9uUmVxdWVzdC5yZXEudHRsKTt0aGlzLmNsaWVudC5jb3JlLmV4cGlyZXIuc2V0KHQsbiksYXdhaXQgdGhpcy5jbGllbnQucGVuZGluZ1JlcXVlc3Quc2V0KHQse2lkOnQsdG9waWM6cyxwYXJhbXM6aSx2ZXJpZnlDb250ZXh0OnJ9KX0sdGhpcy5zZW5kUmVxdWVzdD1hc3luYyBlPT57Y29uc3R7dG9waWM6dCxtZXRob2Q6cyxwYXJhbXM6aSxleHBpcnk6cixyZWxheVJwY0lkOm4sY2xpZW50UnBjSWQ6YSx0aHJvd09uRmFpbGVkUHVibGlzaDpjLGFwcExpbms6aH09ZSxwPWdlKHMsaSxhKTtsZXQgZDtjb25zdCBsPSEhaDt0cnl7Y29uc3QgeT1sP2llOmRlO2Q9YXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZW5jb2RlKHQscCx7ZW5jb2Rpbmc6eX0pfWNhdGNoKHkpe3Rocm93IGF3YWl0IHRoaXMuY2xlYW51cCgpLHRoaXMuY2xpZW50LmxvZ2dlci5lcnJvcihgc2VuZFJlcXVlc3QoKSAtPiBjb3JlLmNyeXB0by5lbmNvZGUoKSBmb3IgdG9waWMgJHt0fSBmYWlsZWRgKSx5fWxldCB3O2lmKGF0LmluY2x1ZGVzKHMpKXtjb25zdCB5PVgoSlNPTi5zdHJpbmdpZnkocCkpLF89WChkKTt3PWF3YWl0IHRoaXMuY2xpZW50LmNvcmUudmVyaWZ5LnJlZ2lzdGVyKHtpZDpfLGRlY3J5cHRlZElkOnl9KX1jb25zdCBtPXZbc10ucmVxO2lmKG0uYXR0ZXN0YXRpb249dyxyJiYobS50dGw9ciksbiYmKG0uaWQ9biksdGhpcy5jbGllbnQuY29yZS5oaXN0b3J5LnNldCh0LHApLGwpe2NvbnN0IHk9aGUoaCx0LGQpO2F3YWl0IGdsb2JhbC5MaW5raW5nLm9wZW5VUkwoeSx0aGlzLmNsaWVudC5uYW1lKX1lbHNle2NvbnN0IHk9dltzXS5yZXE7ciYmKHkudHRsPXIpLG4mJih5LmlkPW4pLGM/KHkuaW50ZXJuYWw9RChJKHt9LHkuaW50ZXJuYWwpLHt0aHJvd09uRmFpbGVkUHVibGlzaDohMH0pLGF3YWl0IHRoaXMuY2xpZW50LmNvcmUucmVsYXllci5wdWJsaXNoKHQsZCx5KSk6dGhpcy5jbGllbnQuY29yZS5yZWxheWVyLnB1Ymxpc2godCxkLHkpLmNhdGNoKF89PnRoaXMuY2xpZW50LmxvZ2dlci5lcnJvcihfKSl9cmV0dXJuIHAuaWR9LHRoaXMuc2VuZFJlc3VsdD1hc3luYyBlPT57Y29uc3R7aWQ6dCx0b3BpYzpzLHJlc3VsdDppLHRocm93T25GYWlsZWRQdWJsaXNoOnIsZW5jb2RlT3B0czpuLGFwcExpbms6YX09ZSxjPXJzKHQsaSk7bGV0IGg7Y29uc3QgcD1hJiZ0eXBlb2YoZ2xvYmFsPT1udWxsP3ZvaWQgMDpnbG9iYWwuTGlua2luZyk8XCJ1XCI7dHJ5e2NvbnN0IGw9cD9pZTpkZTtoPWF3YWl0IHRoaXMuY2xpZW50LmNvcmUuY3J5cHRvLmVuY29kZShzLGMsRChJKHt9LG58fHt9KSx7ZW5jb2Rpbmc6bH0pKX1jYXRjaChsKXt0aHJvdyBhd2FpdCB0aGlzLmNsZWFudXAoKSx0aGlzLmNsaWVudC5sb2dnZXIuZXJyb3IoYHNlbmRSZXN1bHQoKSAtPiBjb3JlLmNyeXB0by5lbmNvZGUoKSBmb3IgdG9waWMgJHtzfSBmYWlsZWRgKSxsfWxldCBkO3RyeXtkPWF3YWl0IHRoaXMuY2xpZW50LmNvcmUuaGlzdG9yeS5nZXQocyx0KX1jYXRjaChsKXt0aHJvdyB0aGlzLmNsaWVudC5sb2dnZXIuZXJyb3IoYHNlbmRSZXN1bHQoKSAtPiBoaXN0b3J5LmdldCgke3N9LCAke3R9KSBmYWlsZWRgKSxsfWlmKHApe2NvbnN0IGw9aGUoYSxzLGgpO2F3YWl0IGdsb2JhbC5MaW5raW5nLm9wZW5VUkwobCx0aGlzLmNsaWVudC5uYW1lKX1lbHNle2NvbnN0IGw9dltkLnJlcXVlc3QubWV0aG9kXS5yZXM7cj8obC5pbnRlcm5hbD1EKEkoe30sbC5pbnRlcm5hbCkse3Rocm93T25GYWlsZWRQdWJsaXNoOiEwfSksYXdhaXQgdGhpcy5jbGllbnQuY29yZS5yZWxheWVyLnB1Ymxpc2gocyxoLGwpKTp0aGlzLmNsaWVudC5jb3JlLnJlbGF5ZXIucHVibGlzaChzLGgsbCkuY2F0Y2godz0+dGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKHcpKX1hd2FpdCB0aGlzLmNsaWVudC5jb3JlLmhpc3RvcnkucmVzb2x2ZShjKX0sdGhpcy5zZW5kRXJyb3I9YXN5bmMgZT0+e2NvbnN0e2lkOnQsdG9waWM6cyxlcnJvcjppLGVuY29kZU9wdHM6cixycGNPcHRzOm4sYXBwTGluazphfT1lLGM9bnModCxpKTtsZXQgaDtjb25zdCBwPWEmJnR5cGVvZihnbG9iYWw9PW51bGw/dm9pZCAwOmdsb2JhbC5MaW5raW5nKTxcInVcIjt0cnl7Y29uc3QgbD1wP2llOmRlO2g9YXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZW5jb2RlKHMsYyxEKEkoe30scnx8e30pLHtlbmNvZGluZzpsfSkpfWNhdGNoKGwpe3Rocm93IGF3YWl0IHRoaXMuY2xlYW51cCgpLHRoaXMuY2xpZW50LmxvZ2dlci5lcnJvcihgc2VuZEVycm9yKCkgLT4gY29yZS5jcnlwdG8uZW5jb2RlKCkgZm9yIHRvcGljICR7c30gZmFpbGVkYCksbH1sZXQgZDt0cnl7ZD1hd2FpdCB0aGlzLmNsaWVudC5jb3JlLmhpc3RvcnkuZ2V0KHMsdCl9Y2F0Y2gobCl7dGhyb3cgdGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKGBzZW5kRXJyb3IoKSAtPiBoaXN0b3J5LmdldCgke3N9LCAke3R9KSBmYWlsZWRgKSxsfWlmKHApe2NvbnN0IGw9aGUoYSxzLGgpO2F3YWl0IGdsb2JhbC5MaW5raW5nLm9wZW5VUkwobCx0aGlzLmNsaWVudC5uYW1lKX1lbHNle2NvbnN0IGw9bnx8dltkLnJlcXVlc3QubWV0aG9kXS5yZXM7dGhpcy5jbGllbnQuY29yZS5yZWxheWVyLnB1Ymxpc2gocyxoLGwpfWF3YWl0IHRoaXMuY2xpZW50LmNvcmUuaGlzdG9yeS5yZXNvbHZlKGMpfSx0aGlzLmNsZWFudXA9YXN5bmMoKT0+e2NvbnN0IGU9W10sdD1bXTt0aGlzLmNsaWVudC5zZXNzaW9uLmdldEFsbCgpLmZvckVhY2gocz0+e2xldCBpPSExO0oocy5leHBpcnkpJiYoaT0hMCksdGhpcy5jbGllbnQuY29yZS5jcnlwdG8ua2V5Y2hhaW4uaGFzKHMudG9waWMpfHwoaT0hMCksaSYmZS5wdXNoKHMudG9waWMpfSksdGhpcy5jbGllbnQucHJvcG9zYWwuZ2V0QWxsKCkuZm9yRWFjaChzPT57SihzLmV4cGlyeVRpbWVzdGFtcCkmJnQucHVzaChzLmlkKX0pLGF3YWl0IFByb21pc2UuYWxsKFsuLi5lLm1hcChzPT50aGlzLmRlbGV0ZVNlc3Npb24oe3RvcGljOnN9KSksLi4udC5tYXAocz0+dGhpcy5kZWxldGVQcm9wb3NhbChzKSldKX0sdGhpcy5vblJlbGF5RXZlbnRSZXF1ZXN0PWFzeW5jIGU9Pnt0aGlzLnJlcXVlc3RRdWV1ZS5xdWV1ZS5wdXNoKGUpLGF3YWl0IHRoaXMucHJvY2Vzc1JlcXVlc3RzUXVldWUoKX0sdGhpcy5wcm9jZXNzUmVxdWVzdHNRdWV1ZT1hc3luYygpPT57aWYodGhpcy5yZXF1ZXN0UXVldWUuc3RhdGU9PT14LmFjdGl2ZSl7dGhpcy5jbGllbnQubG9nZ2VyLmluZm8oXCJSZXF1ZXN0IHF1ZXVlIGFscmVhZHkgYWN0aXZlLCBza2lwcGluZy4uLlwiKTtyZXR1cm59Zm9yKHRoaXMuY2xpZW50LmxvZ2dlci5pbmZvKGBSZXF1ZXN0IHF1ZXVlIHN0YXJ0aW5nIHdpdGggJHt0aGlzLnJlcXVlc3RRdWV1ZS5xdWV1ZS5sZW5ndGh9IHJlcXVlc3RzYCk7dGhpcy5yZXF1ZXN0UXVldWUucXVldWUubGVuZ3RoPjA7KXt0aGlzLnJlcXVlc3RRdWV1ZS5zdGF0ZT14LmFjdGl2ZTtjb25zdCBlPXRoaXMucmVxdWVzdFF1ZXVlLnF1ZXVlLnNoaWZ0KCk7aWYoZSl0cnl7YXdhaXQgdGhpcy5wcm9jZXNzUmVxdWVzdChlKX1jYXRjaCh0KXt0aGlzLmNsaWVudC5sb2dnZXIud2Fybih0KX19dGhpcy5yZXF1ZXN0UXVldWUuc3RhdGU9eC5pZGxlfSx0aGlzLnByb2Nlc3NSZXF1ZXN0PWFzeW5jIGU9Pntjb25zdHt0b3BpYzp0LHBheWxvYWQ6cyxhdHRlc3RhdGlvbjppLHRyYW5zcG9ydFR5cGU6cixlbmNyeXB0ZWRJZDpufT1lLGE9cy5tZXRob2Q7aWYoIXRoaXMuc2hvdWxkSWdub3JlUGFpcmluZ1JlcXVlc3Qoe3RvcGljOnQscmVxdWVzdE1ldGhvZDphfSkpc3dpdGNoKGEpe2Nhc2VcIndjX3Nlc3Npb25Qcm9wb3NlXCI6cmV0dXJuIGF3YWl0IHRoaXMub25TZXNzaW9uUHJvcG9zZVJlcXVlc3Qoe3RvcGljOnQscGF5bG9hZDpzLGF0dGVzdGF0aW9uOmksZW5jcnlwdGVkSWQ6bn0pO2Nhc2VcIndjX3Nlc3Npb25TZXR0bGVcIjpyZXR1cm4gYXdhaXQgdGhpcy5vblNlc3Npb25TZXR0bGVSZXF1ZXN0KHQscyk7Y2FzZVwid2Nfc2Vzc2lvblVwZGF0ZVwiOnJldHVybiBhd2FpdCB0aGlzLm9uU2Vzc2lvblVwZGF0ZVJlcXVlc3QodCxzKTtjYXNlXCJ3Y19zZXNzaW9uRXh0ZW5kXCI6cmV0dXJuIGF3YWl0IHRoaXMub25TZXNzaW9uRXh0ZW5kUmVxdWVzdCh0LHMpO2Nhc2VcIndjX3Nlc3Npb25QaW5nXCI6cmV0dXJuIGF3YWl0IHRoaXMub25TZXNzaW9uUGluZ1JlcXVlc3QodCxzKTtjYXNlXCJ3Y19zZXNzaW9uRGVsZXRlXCI6cmV0dXJuIGF3YWl0IHRoaXMub25TZXNzaW9uRGVsZXRlUmVxdWVzdCh0LHMpO2Nhc2VcIndjX3Nlc3Npb25SZXF1ZXN0XCI6cmV0dXJuIGF3YWl0IHRoaXMub25TZXNzaW9uUmVxdWVzdCh7dG9waWM6dCxwYXlsb2FkOnMsYXR0ZXN0YXRpb246aSxlbmNyeXB0ZWRJZDpuLHRyYW5zcG9ydFR5cGU6cn0pO2Nhc2VcIndjX3Nlc3Npb25FdmVudFwiOnJldHVybiBhd2FpdCB0aGlzLm9uU2Vzc2lvbkV2ZW50UmVxdWVzdCh0LHMpO2Nhc2VcIndjX3Nlc3Npb25BdXRoZW50aWNhdGVcIjpyZXR1cm4gYXdhaXQgdGhpcy5vblNlc3Npb25BdXRoZW50aWNhdGVSZXF1ZXN0KHt0b3BpYzp0LHBheWxvYWQ6cyxhdHRlc3RhdGlvbjppLGVuY3J5cHRlZElkOm4sdHJhbnNwb3J0VHlwZTpyfSk7ZGVmYXVsdDpyZXR1cm4gdGhpcy5jbGllbnQubG9nZ2VyLmluZm8oYFVuc3VwcG9ydGVkIHJlcXVlc3QgbWV0aG9kICR7YX1gKX19LHRoaXMub25SZWxheUV2ZW50UmVzcG9uc2U9YXN5bmMgZT0+e2NvbnN0e3RvcGljOnQscGF5bG9hZDpzLHRyYW5zcG9ydFR5cGU6aX09ZSxyPShhd2FpdCB0aGlzLmNsaWVudC5jb3JlLmhpc3RvcnkuZ2V0KHQscy5pZCkpLnJlcXVlc3QubWV0aG9kO3N3aXRjaChyKXtjYXNlXCJ3Y19zZXNzaW9uUHJvcG9zZVwiOnJldHVybiB0aGlzLm9uU2Vzc2lvblByb3Bvc2VSZXNwb25zZSh0LHMsaSk7Y2FzZVwid2Nfc2Vzc2lvblNldHRsZVwiOnJldHVybiB0aGlzLm9uU2Vzc2lvblNldHRsZVJlc3BvbnNlKHQscyk7Y2FzZVwid2Nfc2Vzc2lvblVwZGF0ZVwiOnJldHVybiB0aGlzLm9uU2Vzc2lvblVwZGF0ZVJlc3BvbnNlKHQscyk7Y2FzZVwid2Nfc2Vzc2lvbkV4dGVuZFwiOnJldHVybiB0aGlzLm9uU2Vzc2lvbkV4dGVuZFJlc3BvbnNlKHQscyk7Y2FzZVwid2Nfc2Vzc2lvblBpbmdcIjpyZXR1cm4gdGhpcy5vblNlc3Npb25QaW5nUmVzcG9uc2UodCxzKTtjYXNlXCJ3Y19zZXNzaW9uUmVxdWVzdFwiOnJldHVybiB0aGlzLm9uU2Vzc2lvblJlcXVlc3RSZXNwb25zZSh0LHMpO2Nhc2VcIndjX3Nlc3Npb25BdXRoZW50aWNhdGVcIjpyZXR1cm4gdGhpcy5vblNlc3Npb25BdXRoZW50aWNhdGVSZXNwb25zZSh0LHMpO2RlZmF1bHQ6cmV0dXJuIHRoaXMuY2xpZW50LmxvZ2dlci5pbmZvKGBVbnN1cHBvcnRlZCByZXNwb25zZSBtZXRob2QgJHtyfWApfX0sdGhpcy5vblJlbGF5RXZlbnRVbmtub3duUGF5bG9hZD1lPT57Y29uc3R7dG9waWM6dH09ZSx7bWVzc2FnZTpzfT11KFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYERlY29kZWQgcGF5bG9hZCBvbiB0b3BpYyAke3R9IGlzIG5vdCBpZGVudGlmaWFibGUgYXMgYSBKU09OLVJQQyByZXF1ZXN0IG9yIGEgcmVzcG9uc2UuYCk7dGhyb3cgbmV3IEVycm9yKHMpfSx0aGlzLnNob3VsZElnbm9yZVBhaXJpbmdSZXF1ZXN0PWU9Pntjb25zdHt0b3BpYzp0LHJlcXVlc3RNZXRob2Q6c309ZSxpPXRoaXMuZXhwZWN0ZWRQYWlyaW5nTWV0aG9kTWFwLmdldCh0KTtyZXR1cm4haXx8aS5pbmNsdWRlcyhzKT8hMTohIShpLmluY2x1ZGVzKFwid2Nfc2Vzc2lvbkF1dGhlbnRpY2F0ZVwiKSYmdGhpcy5jbGllbnQuZXZlbnRzLmxpc3RlbmVyQ291bnQoXCJzZXNzaW9uX2F1dGhlbnRpY2F0ZVwiKT4wKX0sdGhpcy5vblNlc3Npb25Qcm9wb3NlUmVxdWVzdD1hc3luYyBlPT57Y29uc3R7dG9waWM6dCxwYXlsb2FkOnMsYXR0ZXN0YXRpb246aSxlbmNyeXB0ZWRJZDpyfT1lLHtwYXJhbXM6bixpZDphfT1zO3RyeXtjb25zdCBjPXRoaXMuY2xpZW50LmNvcmUuZXZlbnRDbGllbnQuZ2V0RXZlbnQoe3RvcGljOnR9KTt0aGlzLmlzVmFsaWRDb25uZWN0KEkoe30scy5wYXJhbXMpKTtjb25zdCBoPW4uZXhwaXJ5VGltZXN0YW1wfHxBKHYud2Nfc2Vzc2lvblByb3Bvc2UucmVxLnR0bCkscD1JKHtpZDphLHBhaXJpbmdUb3BpYzp0LGV4cGlyeVRpbWVzdGFtcDpofSxuKTthd2FpdCB0aGlzLnNldFByb3Bvc2FsKGEscCk7Y29uc3QgZD1hd2FpdCB0aGlzLmdldFZlcmlmeUNvbnRleHQoe2F0dGVzdGF0aW9uSWQ6aSxoYXNoOlgoSlNPTi5zdHJpbmdpZnkocykpLGVuY3J5cHRlZElkOnIsbWV0YWRhdGE6cC5wcm9wb3Nlci5tZXRhZGF0YX0pO3RoaXMuY2xpZW50LmV2ZW50cy5saXN0ZW5lckNvdW50KFwic2Vzc2lvbl9wcm9wb3NhbFwiKT09PTAmJihjb25zb2xlLndhcm4oXCJObyBsaXN0ZW5lciBmb3Igc2Vzc2lvbl9wcm9wb3NhbCBldmVudFwiKSxjPy5zZXRFcnJvcihSdC5wcm9wb3NhbF9saXN0ZW5lcl9ub3RfZm91bmQpKSxjPy5hZGRUcmFjZShTdC5lbWl0X3Nlc3Npb25fcHJvcG9zYWwpLHRoaXMuY2xpZW50LmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9wcm9wb3NhbFwiLHtpZDphLHBhcmFtczpwLHZlcmlmeUNvbnRleHQ6ZH0pfWNhdGNoKGMpe2F3YWl0IHRoaXMuc2VuZEVycm9yKHtpZDphLHRvcGljOnQsZXJyb3I6YyxycGNPcHRzOnYud2Nfc2Vzc2lvblByb3Bvc2UuYXV0b1JlamVjdH0pLHRoaXMuY2xpZW50LmxvZ2dlci5lcnJvcihjKX19LHRoaXMub25TZXNzaW9uUHJvcG9zZVJlc3BvbnNlPWFzeW5jKGUsdCxzKT0+e2NvbnN0e2lkOml9PXQ7aWYoSyh0KSl7Y29uc3R7cmVzdWx0OnJ9PXQ7dGhpcy5jbGllbnQubG9nZ2VyLnRyYWNlKHt0eXBlOlwibWV0aG9kXCIsbWV0aG9kOlwib25TZXNzaW9uUHJvcG9zZVJlc3BvbnNlXCIscmVzdWx0OnJ9KTtjb25zdCBuPXRoaXMuY2xpZW50LnByb3Bvc2FsLmdldChpKTt0aGlzLmNsaWVudC5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJvblNlc3Npb25Qcm9wb3NlUmVzcG9uc2VcIixwcm9wb3NhbDpufSk7Y29uc3QgYT1uLnByb3Bvc2VyLnB1YmxpY0tleTt0aGlzLmNsaWVudC5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJvblNlc3Npb25Qcm9wb3NlUmVzcG9uc2VcIixzZWxmUHVibGljS2V5OmF9KTtjb25zdCBjPXIucmVzcG9uZGVyUHVibGljS2V5O3RoaXMuY2xpZW50LmxvZ2dlci50cmFjZSh7dHlwZTpcIm1ldGhvZFwiLG1ldGhvZDpcIm9uU2Vzc2lvblByb3Bvc2VSZXNwb25zZVwiLHBlZXJQdWJsaWNLZXk6Y30pO2NvbnN0IGg9YXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZ2VuZXJhdGVTaGFyZWRLZXkoYSxjKTt0aGlzLmNsaWVudC5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJvblNlc3Npb25Qcm9wb3NlUmVzcG9uc2VcIixzZXNzaW9uVG9waWM6aH0pO2NvbnN0IHA9YXdhaXQgdGhpcy5jbGllbnQuY29yZS5yZWxheWVyLnN1YnNjcmliZShoLHt0cmFuc3BvcnRUeXBlOnN9KTt0aGlzLmNsaWVudC5sb2dnZXIudHJhY2Uoe3R5cGU6XCJtZXRob2RcIixtZXRob2Q6XCJvblNlc3Npb25Qcm9wb3NlUmVzcG9uc2VcIixzdWJzY3JpcHRpb25JZDpwfSksYXdhaXQgdGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLmFjdGl2YXRlKHt0b3BpYzplfSl9ZWxzZSBpZihVKHQpKXthd2FpdCB0aGlzLmNsaWVudC5wcm9wb3NhbC5kZWxldGUoaSxQKFwiVVNFUl9ESVNDT05ORUNURURcIikpO2NvbnN0IHI9ZyhcInNlc3Npb25fY29ubmVjdFwiKTtpZih0aGlzLmV2ZW50cy5saXN0ZW5lckNvdW50KHIpPT09MCl0aHJvdyBuZXcgRXJyb3IoYGVtaXR0aW5nICR7cn0gd2l0aG91dCBhbnkgbGlzdGVuZXJzLCA5NTRgKTt0aGlzLmV2ZW50cy5lbWl0KGcoXCJzZXNzaW9uX2Nvbm5lY3RcIikse2Vycm9yOnQuZXJyb3J9KX19LHRoaXMub25TZXNzaW9uU2V0dGxlUmVxdWVzdD1hc3luYyhlLHQpPT57Y29uc3R7aWQ6cyxwYXJhbXM6aX09dDt0cnl7dGhpcy5pc1ZhbGlkU2Vzc2lvblNldHRsZVJlcXVlc3QoaSk7Y29uc3R7cmVsYXk6cixjb250cm9sbGVyOm4sZXhwaXJ5OmEsbmFtZXNwYWNlczpjLHNlc3Npb25Qcm9wZXJ0aWVzOmgsc2Vzc2lvbkNvbmZpZzpwfT10LnBhcmFtcyxkPUQoSShJKHt0b3BpYzplLHJlbGF5OnIsZXhwaXJ5OmEsbmFtZXNwYWNlczpjLGFja25vd2xlZGdlZDohMCxwYWlyaW5nVG9waWM6XCJcIixyZXF1aXJlZE5hbWVzcGFjZXM6e30sb3B0aW9uYWxOYW1lc3BhY2VzOnt9LGNvbnRyb2xsZXI6bi5wdWJsaWNLZXksc2VsZjp7cHVibGljS2V5OlwiXCIsbWV0YWRhdGE6dGhpcy5jbGllbnQubWV0YWRhdGF9LHBlZXI6e3B1YmxpY0tleTpuLnB1YmxpY0tleSxtZXRhZGF0YTpuLm1ldGFkYXRhfX0saCYme3Nlc3Npb25Qcm9wZXJ0aWVzOmh9KSxwJiZ7c2Vzc2lvbkNvbmZpZzpwfSkse3RyYW5zcG9ydFR5cGU6Zi5yZWxheX0pLGw9ZyhcInNlc3Npb25fY29ubmVjdFwiKTtpZih0aGlzLmV2ZW50cy5saXN0ZW5lckNvdW50KGwpPT09MCl0aHJvdyBuZXcgRXJyb3IoYGVtaXR0aW5nICR7bH0gd2l0aG91dCBhbnkgbGlzdGVuZXJzIDk5N2ApO3RoaXMuZXZlbnRzLmVtaXQoZyhcInNlc3Npb25fY29ubmVjdFwiKSx7c2Vzc2lvbjpkfSksYXdhaXQgdGhpcy5zZW5kUmVzdWx0KHtpZDp0LmlkLHRvcGljOmUscmVzdWx0OiEwLHRocm93T25GYWlsZWRQdWJsaXNoOiEwfSl9Y2F0Y2gocil7YXdhaXQgdGhpcy5zZW5kRXJyb3Ioe2lkOnMsdG9waWM6ZSxlcnJvcjpyfSksdGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKHIpfX0sdGhpcy5vblNlc3Npb25TZXR0bGVSZXNwb25zZT1hc3luYyhlLHQpPT57Y29uc3R7aWQ6c309dDtLKHQpPyhhd2FpdCB0aGlzLmNsaWVudC5zZXNzaW9uLnVwZGF0ZShlLHthY2tub3dsZWRnZWQ6ITB9KSx0aGlzLmV2ZW50cy5lbWl0KGcoXCJzZXNzaW9uX2FwcHJvdmVcIixzKSx7fSkpOlUodCkmJihhd2FpdCB0aGlzLmNsaWVudC5zZXNzaW9uLmRlbGV0ZShlLFAoXCJVU0VSX0RJU0NPTk5FQ1RFRFwiKSksdGhpcy5ldmVudHMuZW1pdChnKFwic2Vzc2lvbl9hcHByb3ZlXCIscykse2Vycm9yOnQuZXJyb3J9KSl9LHRoaXMub25TZXNzaW9uVXBkYXRlUmVxdWVzdD1hc3luYyhlLHQpPT57Y29uc3R7cGFyYW1zOnMsaWQ6aX09dDt0cnl7Y29uc3Qgcj1gJHtlfV9zZXNzaW9uX3VwZGF0ZWAsbj1yZS5nZXQocik7aWYobiYmdGhpcy5pc1JlcXVlc3RPdXRPZlN5bmMobixpKSl7dGhpcy5jbGllbnQubG9nZ2VyLmluZm8oYERpc2NhcmRpbmcgb3V0IG9mIHN5bmMgcmVxdWVzdCAtICR7aX1gKSx0aGlzLnNlbmRFcnJvcih7aWQ6aSx0b3BpYzplLGVycm9yOlAoXCJJTlZBTElEX1VQREFURV9SRVFVRVNUXCIpfSk7cmV0dXJufXRoaXMuaXNWYWxpZFVwZGF0ZShJKHt0b3BpYzplfSxzKSk7dHJ5e3JlLnNldChyLGkpLGF3YWl0IHRoaXMuY2xpZW50LnNlc3Npb24udXBkYXRlKGUse25hbWVzcGFjZXM6cy5uYW1lc3BhY2VzfSksYXdhaXQgdGhpcy5zZW5kUmVzdWx0KHtpZDppLHRvcGljOmUscmVzdWx0OiEwLHRocm93T25GYWlsZWRQdWJsaXNoOiEwfSl9Y2F0Y2goYSl7dGhyb3cgcmUuZGVsZXRlKHIpLGF9dGhpcy5jbGllbnQuZXZlbnRzLmVtaXQoXCJzZXNzaW9uX3VwZGF0ZVwiLHtpZDppLHRvcGljOmUscGFyYW1zOnN9KX1jYXRjaChyKXthd2FpdCB0aGlzLnNlbmRFcnJvcih7aWQ6aSx0b3BpYzplLGVycm9yOnJ9KSx0aGlzLmNsaWVudC5sb2dnZXIuZXJyb3Iocil9fSx0aGlzLmlzUmVxdWVzdE91dE9mU3luYz0oZSx0KT0+cGFyc2VJbnQodC50b1N0cmluZygpLnNsaWNlKDAsLTMpKTw9cGFyc2VJbnQoZS50b1N0cmluZygpLnNsaWNlKDAsLTMpKSx0aGlzLm9uU2Vzc2lvblVwZGF0ZVJlc3BvbnNlPShlLHQpPT57Y29uc3R7aWQ6c309dCxpPWcoXCJzZXNzaW9uX3VwZGF0ZVwiLHMpO2lmKHRoaXMuZXZlbnRzLmxpc3RlbmVyQ291bnQoaSk9PT0wKXRocm93IG5ldyBFcnJvcihgZW1pdHRpbmcgJHtpfSB3aXRob3V0IGFueSBsaXN0ZW5lcnNgKTtLKHQpP3RoaXMuZXZlbnRzLmVtaXQoZyhcInNlc3Npb25fdXBkYXRlXCIscykse30pOlUodCkmJnRoaXMuZXZlbnRzLmVtaXQoZyhcInNlc3Npb25fdXBkYXRlXCIscykse2Vycm9yOnQuZXJyb3J9KX0sdGhpcy5vblNlc3Npb25FeHRlbmRSZXF1ZXN0PWFzeW5jKGUsdCk9Pntjb25zdHtpZDpzfT10O3RyeXt0aGlzLmlzVmFsaWRFeHRlbmQoe3RvcGljOmV9KSxhd2FpdCB0aGlzLnNldEV4cGlyeShlLEEoeikpLGF3YWl0IHRoaXMuc2VuZFJlc3VsdCh7aWQ6cyx0b3BpYzplLHJlc3VsdDohMCx0aHJvd09uRmFpbGVkUHVibGlzaDohMH0pLHRoaXMuY2xpZW50LmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9leHRlbmRcIix7aWQ6cyx0b3BpYzplfSl9Y2F0Y2goaSl7YXdhaXQgdGhpcy5zZW5kRXJyb3Ioe2lkOnMsdG9waWM6ZSxlcnJvcjppfSksdGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKGkpfX0sdGhpcy5vblNlc3Npb25FeHRlbmRSZXNwb25zZT0oZSx0KT0+e2NvbnN0e2lkOnN9PXQsaT1nKFwic2Vzc2lvbl9leHRlbmRcIixzKTtpZih0aGlzLmV2ZW50cy5saXN0ZW5lckNvdW50KGkpPT09MCl0aHJvdyBuZXcgRXJyb3IoYGVtaXR0aW5nICR7aX0gd2l0aG91dCBhbnkgbGlzdGVuZXJzYCk7Syh0KT90aGlzLmV2ZW50cy5lbWl0KGcoXCJzZXNzaW9uX2V4dGVuZFwiLHMpLHt9KTpVKHQpJiZ0aGlzLmV2ZW50cy5lbWl0KGcoXCJzZXNzaW9uX2V4dGVuZFwiLHMpLHtlcnJvcjp0LmVycm9yfSl9LHRoaXMub25TZXNzaW9uUGluZ1JlcXVlc3Q9YXN5bmMoZSx0KT0+e2NvbnN0e2lkOnN9PXQ7dHJ5e3RoaXMuaXNWYWxpZFBpbmcoe3RvcGljOmV9KSxhd2FpdCB0aGlzLnNlbmRSZXN1bHQoe2lkOnMsdG9waWM6ZSxyZXN1bHQ6ITAsdGhyb3dPbkZhaWxlZFB1Ymxpc2g6ITB9KSx0aGlzLmNsaWVudC5ldmVudHMuZW1pdChcInNlc3Npb25fcGluZ1wiLHtpZDpzLHRvcGljOmV9KX1jYXRjaChpKXthd2FpdCB0aGlzLnNlbmRFcnJvcih7aWQ6cyx0b3BpYzplLGVycm9yOml9KSx0aGlzLmNsaWVudC5sb2dnZXIuZXJyb3IoaSl9fSx0aGlzLm9uU2Vzc2lvblBpbmdSZXNwb25zZT0oZSx0KT0+e2NvbnN0e2lkOnN9PXQsaT1nKFwic2Vzc2lvbl9waW5nXCIscyk7aWYodGhpcy5ldmVudHMubGlzdGVuZXJDb3VudChpKT09PTApdGhyb3cgbmV3IEVycm9yKGBlbWl0dGluZyAke2l9IHdpdGhvdXQgYW55IGxpc3RlbmVyc2ApO3NldFRpbWVvdXQoKCk9PntLKHQpP3RoaXMuZXZlbnRzLmVtaXQoZyhcInNlc3Npb25fcGluZ1wiLHMpLHt9KTpVKHQpJiZ0aGlzLmV2ZW50cy5lbWl0KGcoXCJzZXNzaW9uX3BpbmdcIixzKSx7ZXJyb3I6dC5lcnJvcn0pfSw1MDApfSx0aGlzLm9uU2Vzc2lvbkRlbGV0ZVJlcXVlc3Q9YXN5bmMoZSx0KT0+e2NvbnN0e2lkOnN9PXQ7dHJ5e3RoaXMuaXNWYWxpZERpc2Nvbm5lY3Qoe3RvcGljOmUscmVhc29uOnQucGFyYW1zfSksUHJvbWlzZS5hbGwoW25ldyBQcm9taXNlKGk9Pnt0aGlzLmNsaWVudC5jb3JlLnJlbGF5ZXIub25jZShVZS5wdWJsaXNoLGFzeW5jKCk9PntpKGF3YWl0IHRoaXMuZGVsZXRlU2Vzc2lvbih7dG9waWM6ZSxpZDpzfSkpfSl9KSx0aGlzLnNlbmRSZXN1bHQoe2lkOnMsdG9waWM6ZSxyZXN1bHQ6ITAsdGhyb3dPbkZhaWxlZFB1Ymxpc2g6ITB9KSx0aGlzLmNsZWFudXBQZW5kaW5nU2VudFJlcXVlc3RzRm9yVG9waWMoe3RvcGljOmUsZXJyb3I6UChcIlVTRVJfRElTQ09OTkVDVEVEXCIpfSldKS5jYXRjaChpPT50aGlzLmNsaWVudC5sb2dnZXIuZXJyb3IoaSkpfWNhdGNoKGkpe3RoaXMuY2xpZW50LmxvZ2dlci5lcnJvcihpKX19LHRoaXMub25TZXNzaW9uUmVxdWVzdD1hc3luYyBlPT57dmFyIHQscyxpO2NvbnN0e3RvcGljOnIscGF5bG9hZDpuLGF0dGVzdGF0aW9uOmEsZW5jcnlwdGVkSWQ6Yyx0cmFuc3BvcnRUeXBlOmh9PWUse2lkOnAscGFyYW1zOmR9PW47dHJ5e2F3YWl0IHRoaXMuaXNWYWxpZFJlcXVlc3QoSSh7dG9waWM6cn0sZCkpO2NvbnN0IGw9dGhpcy5jbGllbnQuc2Vzc2lvbi5nZXQociksdz1hd2FpdCB0aGlzLmdldFZlcmlmeUNvbnRleHQoe2F0dGVzdGF0aW9uSWQ6YSxoYXNoOlgoSlNPTi5zdHJpbmdpZnkoZ2UoXCJ3Y19zZXNzaW9uUmVxdWVzdFwiLGQscCkpKSxlbmNyeXB0ZWRJZDpjLG1ldGFkYXRhOmwucGVlci5tZXRhZGF0YSx0cmFuc3BvcnRUeXBlOmh9KSxtPXtpZDpwLHRvcGljOnIscGFyYW1zOmQsdmVyaWZ5Q29udGV4dDp3fTthd2FpdCB0aGlzLnNldFBlbmRpbmdTZXNzaW9uUmVxdWVzdChtKSxoPT09Zi5saW5rX21vZGUmJih0PWwucGVlci5tZXRhZGF0YS5yZWRpcmVjdCkhPW51bGwmJnQudW5pdmVyc2FsJiZ0aGlzLmNsaWVudC5jb3JlLmFkZExpbmtNb2RlU3VwcG9ydGVkQXBwKChzPWwucGVlci5tZXRhZGF0YS5yZWRpcmVjdCk9PW51bGw/dm9pZCAwOnMudW5pdmVyc2FsKSwoaT10aGlzLmNsaWVudC5zaWduQ29uZmlnKSE9bnVsbCYmaS5kaXNhYmxlUmVxdWVzdFF1ZXVlP3RoaXMuZW1pdFNlc3Npb25SZXF1ZXN0KG0pOih0aGlzLmFkZFNlc3Npb25SZXF1ZXN0VG9TZXNzaW9uUmVxdWVzdFF1ZXVlKG0pLHRoaXMucHJvY2Vzc1Nlc3Npb25SZXF1ZXN0UXVldWUoKSl9Y2F0Y2gobCl7YXdhaXQgdGhpcy5zZW5kRXJyb3Ioe2lkOnAsdG9waWM6cixlcnJvcjpsfSksdGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKGwpfX0sdGhpcy5vblNlc3Npb25SZXF1ZXN0UmVzcG9uc2U9KGUsdCk9Pntjb25zdHtpZDpzfT10LGk9ZyhcInNlc3Npb25fcmVxdWVzdFwiLHMpO2lmKHRoaXMuZXZlbnRzLmxpc3RlbmVyQ291bnQoaSk9PT0wKXRocm93IG5ldyBFcnJvcihgZW1pdHRpbmcgJHtpfSB3aXRob3V0IGFueSBsaXN0ZW5lcnNgKTtLKHQpP3RoaXMuZXZlbnRzLmVtaXQoZyhcInNlc3Npb25fcmVxdWVzdFwiLHMpLHtyZXN1bHQ6dC5yZXN1bHR9KTpVKHQpJiZ0aGlzLmV2ZW50cy5lbWl0KGcoXCJzZXNzaW9uX3JlcXVlc3RcIixzKSx7ZXJyb3I6dC5lcnJvcn0pfSx0aGlzLm9uU2Vzc2lvbkV2ZW50UmVxdWVzdD1hc3luYyhlLHQpPT57Y29uc3R7aWQ6cyxwYXJhbXM6aX09dDt0cnl7Y29uc3Qgcj1gJHtlfV9zZXNzaW9uX2V2ZW50XyR7aS5ldmVudC5uYW1lfWAsbj1yZS5nZXQocik7aWYobiYmdGhpcy5pc1JlcXVlc3RPdXRPZlN5bmMobixzKSl7dGhpcy5jbGllbnQubG9nZ2VyLmluZm8oYERpc2NhcmRpbmcgb3V0IG9mIHN5bmMgcmVxdWVzdCAtICR7c31gKTtyZXR1cm59dGhpcy5pc1ZhbGlkRW1pdChJKHt0b3BpYzplfSxpKSksdGhpcy5jbGllbnQuZXZlbnRzLmVtaXQoXCJzZXNzaW9uX2V2ZW50XCIse2lkOnMsdG9waWM6ZSxwYXJhbXM6aX0pLHJlLnNldChyLHMpfWNhdGNoKHIpe2F3YWl0IHRoaXMuc2VuZEVycm9yKHtpZDpzLHRvcGljOmUsZXJyb3I6cn0pLHRoaXMuY2xpZW50LmxvZ2dlci5lcnJvcihyKX19LHRoaXMub25TZXNzaW9uQXV0aGVudGljYXRlUmVzcG9uc2U9KGUsdCk9Pntjb25zdHtpZDpzfT10O3RoaXMuY2xpZW50LmxvZ2dlci50cmFjZSh7dHlwZTpcIm1ldGhvZFwiLG1ldGhvZDpcIm9uU2Vzc2lvbkF1dGhlbnRpY2F0ZVJlc3BvbnNlXCIsdG9waWM6ZSxwYXlsb2FkOnR9KSxLKHQpP3RoaXMuZXZlbnRzLmVtaXQoZyhcInNlc3Npb25fcmVxdWVzdFwiLHMpLHtyZXN1bHQ6dC5yZXN1bHR9KTpVKHQpJiZ0aGlzLmV2ZW50cy5lbWl0KGcoXCJzZXNzaW9uX3JlcXVlc3RcIixzKSx7ZXJyb3I6dC5lcnJvcn0pfSx0aGlzLm9uU2Vzc2lvbkF1dGhlbnRpY2F0ZVJlcXVlc3Q9YXN5bmMgZT0+e3ZhciB0O2NvbnN0e3RvcGljOnMscGF5bG9hZDppLGF0dGVzdGF0aW9uOnIsZW5jcnlwdGVkSWQ6bix0cmFuc3BvcnRUeXBlOmF9PWU7dHJ5e2NvbnN0e3JlcXVlc3RlcjpjLGF1dGhQYXlsb2FkOmgsZXhwaXJ5VGltZXN0YW1wOnB9PWkucGFyYW1zLGQ9YXdhaXQgdGhpcy5nZXRWZXJpZnlDb250ZXh0KHthdHRlc3RhdGlvbklkOnIsaGFzaDpYKEpTT04uc3RyaW5naWZ5KGkpKSxlbmNyeXB0ZWRJZDpuLG1ldGFkYXRhOmMubWV0YWRhdGEsdHJhbnNwb3J0VHlwZTphfSksbD17cmVxdWVzdGVyOmMscGFpcmluZ1RvcGljOnMsaWQ6aS5pZCxhdXRoUGF5bG9hZDpoLHZlcmlmeUNvbnRleHQ6ZCxleHBpcnlUaW1lc3RhbXA6cH07YXdhaXQgdGhpcy5zZXRBdXRoUmVxdWVzdChpLmlkLHtyZXF1ZXN0OmwscGFpcmluZ1RvcGljOnMsdHJhbnNwb3J0VHlwZTphfSksYT09PWYubGlua19tb2RlJiYodD1jLm1ldGFkYXRhLnJlZGlyZWN0KSE9bnVsbCYmdC51bml2ZXJzYWwmJnRoaXMuY2xpZW50LmNvcmUuYWRkTGlua01vZGVTdXBwb3J0ZWRBcHAoYy5tZXRhZGF0YS5yZWRpcmVjdC51bml2ZXJzYWwpLHRoaXMuY2xpZW50LmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9hdXRoZW50aWNhdGVcIix7dG9waWM6cyxwYXJhbXM6aS5wYXJhbXMsaWQ6aS5pZCx2ZXJpZnlDb250ZXh0OmR9KX1jYXRjaChjKXt0aGlzLmNsaWVudC5sb2dnZXIuZXJyb3IoYyk7Y29uc3QgaD1pLnBhcmFtcy5yZXF1ZXN0ZXIucHVibGljS2V5LHA9YXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZ2VuZXJhdGVLZXlQYWlyKCksZD10aGlzLmdldEFwcExpbmtJZkVuYWJsZWQoaS5wYXJhbXMucmVxdWVzdGVyLm1ldGFkYXRhLGEpLGw9e3R5cGU6QWUscmVjZWl2ZXJQdWJsaWNLZXk6aCxzZW5kZXJQdWJsaWNLZXk6cH07YXdhaXQgdGhpcy5zZW5kRXJyb3Ioe2lkOmkuaWQsdG9waWM6cyxlcnJvcjpjLGVuY29kZU9wdHM6bCxycGNPcHRzOnYud2Nfc2Vzc2lvbkF1dGhlbnRpY2F0ZS5hdXRvUmVqZWN0LGFwcExpbms6ZH0pfX0sdGhpcy5hZGRTZXNzaW9uUmVxdWVzdFRvU2Vzc2lvblJlcXVlc3RRdWV1ZT1lPT57dGhpcy5zZXNzaW9uUmVxdWVzdFF1ZXVlLnF1ZXVlLnB1c2goZSl9LHRoaXMuY2xlYW51cEFmdGVyUmVzcG9uc2U9ZT0+e3RoaXMuZGVsZXRlUGVuZGluZ1Nlc3Npb25SZXF1ZXN0KGUucmVzcG9uc2UuaWQse21lc3NhZ2U6XCJmdWxmaWxsZWRcIixjb2RlOjB9KSxzZXRUaW1lb3V0KCgpPT57dGhpcy5zZXNzaW9uUmVxdWVzdFF1ZXVlLnN0YXRlPXguaWRsZSx0aGlzLnByb2Nlc3NTZXNzaW9uUmVxdWVzdFF1ZXVlKCl9LHR0KHRoaXMucmVxdWVzdFF1ZXVlRGVsYXkpKX0sdGhpcy5jbGVhbnVwUGVuZGluZ1NlbnRSZXF1ZXN0c0ZvclRvcGljPSh7dG9waWM6ZSxlcnJvcjp0fSk9Pntjb25zdCBzPXRoaXMuY2xpZW50LmNvcmUuaGlzdG9yeS5wZW5kaW5nO3MubGVuZ3RoPjAmJnMuZmlsdGVyKGk9PmkudG9waWM9PT1lJiZpLnJlcXVlc3QubWV0aG9kPT09XCJ3Y19zZXNzaW9uUmVxdWVzdFwiKS5mb3JFYWNoKGk9Pntjb25zdCByPWkucmVxdWVzdC5pZCxuPWcoXCJzZXNzaW9uX3JlcXVlc3RcIixyKTtpZih0aGlzLmV2ZW50cy5saXN0ZW5lckNvdW50KG4pPT09MCl0aHJvdyBuZXcgRXJyb3IoYGVtaXR0aW5nICR7bn0gd2l0aG91dCBhbnkgbGlzdGVuZXJzYCk7dGhpcy5ldmVudHMuZW1pdChnKFwic2Vzc2lvbl9yZXF1ZXN0XCIsaS5yZXF1ZXN0LmlkKSx7ZXJyb3I6dH0pfSl9LHRoaXMucHJvY2Vzc1Nlc3Npb25SZXF1ZXN0UXVldWU9KCk9PntpZih0aGlzLnNlc3Npb25SZXF1ZXN0UXVldWUuc3RhdGU9PT14LmFjdGl2ZSl7dGhpcy5jbGllbnQubG9nZ2VyLmluZm8oXCJzZXNzaW9uIHJlcXVlc3QgcXVldWUgaXMgYWxyZWFkeSBhY3RpdmUuXCIpO3JldHVybn1jb25zdCBlPXRoaXMuc2Vzc2lvblJlcXVlc3RRdWV1ZS5xdWV1ZVswXTtpZighZSl7dGhpcy5jbGllbnQubG9nZ2VyLmluZm8oXCJzZXNzaW9uIHJlcXVlc3QgcXVldWUgaXMgZW1wdHkuXCIpO3JldHVybn10cnl7dGhpcy5zZXNzaW9uUmVxdWVzdFF1ZXVlLnN0YXRlPXguYWN0aXZlLHRoaXMuZW1pdFNlc3Npb25SZXF1ZXN0KGUpfWNhdGNoKHQpe3RoaXMuY2xpZW50LmxvZ2dlci5lcnJvcih0KX19LHRoaXMuZW1pdFNlc3Npb25SZXF1ZXN0PWU9Pnt0aGlzLmNsaWVudC5ldmVudHMuZW1pdChcInNlc3Npb25fcmVxdWVzdFwiLGUpfSx0aGlzLm9uUGFpcmluZ0NyZWF0ZWQ9ZT0+e2lmKGUubWV0aG9kcyYmdGhpcy5leHBlY3RlZFBhaXJpbmdNZXRob2RNYXAuc2V0KGUudG9waWMsZS5tZXRob2RzKSxlLmFjdGl2ZSlyZXR1cm47Y29uc3QgdD10aGlzLmNsaWVudC5wcm9wb3NhbC5nZXRBbGwoKS5maW5kKHM9PnMucGFpcmluZ1RvcGljPT09ZS50b3BpYyk7dCYmdGhpcy5vblNlc3Npb25Qcm9wb3NlUmVxdWVzdCh7dG9waWM6ZS50b3BpYyxwYXlsb2FkOmdlKFwid2Nfc2Vzc2lvblByb3Bvc2VcIix7cmVxdWlyZWROYW1lc3BhY2VzOnQucmVxdWlyZWROYW1lc3BhY2VzLG9wdGlvbmFsTmFtZXNwYWNlczp0Lm9wdGlvbmFsTmFtZXNwYWNlcyxyZWxheXM6dC5yZWxheXMscHJvcG9zZXI6dC5wcm9wb3NlcixzZXNzaW9uUHJvcGVydGllczp0LnNlc3Npb25Qcm9wZXJ0aWVzfSx0LmlkKX0pfSx0aGlzLmlzVmFsaWRDb25uZWN0PWFzeW5jIGU9PntpZighTChlKSl7Y29uc3R7bWVzc2FnZTphfT11KFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYGNvbm5lY3QoKSBwYXJhbXM6ICR7SlNPTi5zdHJpbmdpZnkoZSl9YCk7dGhyb3cgbmV3IEVycm9yKGEpfWNvbnN0e3BhaXJpbmdUb3BpYzp0LHJlcXVpcmVkTmFtZXNwYWNlczpzLG9wdGlvbmFsTmFtZXNwYWNlczppLHNlc3Npb25Qcm9wZXJ0aWVzOnIscmVsYXlzOm59PWU7aWYobmUodCl8fGF3YWl0IHRoaXMuaXNWYWxpZFBhaXJpbmdUb3BpYyh0KSwha3QobiwhMCkpe2NvbnN0e21lc3NhZ2U6YX09dShcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGBjb25uZWN0KCkgcmVsYXlzOiAke259YCk7dGhyb3cgbmV3IEVycm9yKGEpfSFuZShzKSYmWGUocykhPT0wJiZ0aGlzLnZhbGlkYXRlTmFtZXNwYWNlcyhzLFwicmVxdWlyZWROYW1lc3BhY2VzXCIpLCFuZShpKSYmWGUoaSkhPT0wJiZ0aGlzLnZhbGlkYXRlTmFtZXNwYWNlcyhpLFwib3B0aW9uYWxOYW1lc3BhY2VzXCIpLG5lKHIpfHx0aGlzLnZhbGlkYXRlU2Vzc2lvblByb3BzKHIsXCJzZXNzaW9uUHJvcGVydGllc1wiKX0sdGhpcy52YWxpZGF0ZU5hbWVzcGFjZXM9KGUsdCk9Pntjb25zdCBzPSR0KGUsXCJjb25uZWN0KClcIix0KTtpZihzKXRocm93IG5ldyBFcnJvcihzLm1lc3NhZ2UpfSx0aGlzLmlzVmFsaWRBcHByb3ZlPWFzeW5jIGU9PntpZighTChlKSl0aHJvdyBuZXcgRXJyb3IodShcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGBhcHByb3ZlKCkgcGFyYW1zOiAke2V9YCkubWVzc2FnZSk7Y29uc3R7aWQ6dCxuYW1lc3BhY2VzOnMscmVsYXlQcm90b2NvbDppLHNlc3Npb25Qcm9wZXJ0aWVzOnJ9PWU7dGhpcy5jaGVja1JlY2VudGx5RGVsZXRlZCh0KSxhd2FpdCB0aGlzLmlzVmFsaWRQcm9wb3NhbElkKHQpO2NvbnN0IG49dGhpcy5jbGllbnQucHJvcG9zYWwuZ2V0KHQpLGE9T2UocyxcImFwcHJvdmUoKVwiKTtpZihhKXRocm93IG5ldyBFcnJvcihhLm1lc3NhZ2UpO2NvbnN0IGM9SmUobi5yZXF1aXJlZE5hbWVzcGFjZXMscyxcImFwcHJvdmUoKVwiKTtpZihjKXRocm93IG5ldyBFcnJvcihjLm1lc3NhZ2UpO2lmKCFrKGksITApKXtjb25zdHttZXNzYWdlOmh9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgYXBwcm92ZSgpIHJlbGF5UHJvdG9jb2w6ICR7aX1gKTt0aHJvdyBuZXcgRXJyb3IoaCl9bmUocil8fHRoaXMudmFsaWRhdGVTZXNzaW9uUHJvcHMocixcInNlc3Npb25Qcm9wZXJ0aWVzXCIpfSx0aGlzLmlzVmFsaWRSZWplY3Q9YXN5bmMgZT0+e2lmKCFMKGUpKXtjb25zdHttZXNzYWdlOml9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgcmVqZWN0KCkgcGFyYW1zOiAke2V9YCk7dGhyb3cgbmV3IEVycm9yKGkpfWNvbnN0e2lkOnQscmVhc29uOnN9PWU7aWYodGhpcy5jaGVja1JlY2VudGx5RGVsZXRlZCh0KSxhd2FpdCB0aGlzLmlzVmFsaWRQcm9wb3NhbElkKHQpLCFLdChzKSl7Y29uc3R7bWVzc2FnZTppfT11KFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYHJlamVjdCgpIHJlYXNvbjogJHtKU09OLnN0cmluZ2lmeShzKX1gKTt0aHJvdyBuZXcgRXJyb3IoaSl9fSx0aGlzLmlzVmFsaWRTZXNzaW9uU2V0dGxlUmVxdWVzdD1lPT57aWYoIUwoZSkpe2NvbnN0e21lc3NhZ2U6Y309dShcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGBvblNlc3Npb25TZXR0bGVSZXF1ZXN0KCkgcGFyYW1zOiAke2V9YCk7dGhyb3cgbmV3IEVycm9yKGMpfWNvbnN0e3JlbGF5OnQsY29udHJvbGxlcjpzLG5hbWVzcGFjZXM6aSxleHBpcnk6cn09ZTtpZighVXQodCkpe2NvbnN0e21lc3NhZ2U6Y309dShcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLFwib25TZXNzaW9uU2V0dGxlUmVxdWVzdCgpIHJlbGF5IHByb3RvY29sIHNob3VsZCBiZSBhIHN0cmluZ1wiKTt0aHJvdyBuZXcgRXJyb3IoYyl9Y29uc3Qgbj1HdChzLFwib25TZXNzaW9uU2V0dGxlUmVxdWVzdCgpXCIpO2lmKG4pdGhyb3cgbmV3IEVycm9yKG4ubWVzc2FnZSk7Y29uc3QgYT1PZShpLFwib25TZXNzaW9uU2V0dGxlUmVxdWVzdCgpXCIpO2lmKGEpdGhyb3cgbmV3IEVycm9yKGEubWVzc2FnZSk7aWYoSihyKSl7Y29uc3R7bWVzc2FnZTpjfT11KFwiRVhQSVJFRFwiLFwib25TZXNzaW9uU2V0dGxlUmVxdWVzdCgpXCIpO3Rocm93IG5ldyBFcnJvcihjKX19LHRoaXMuaXNWYWxpZFVwZGF0ZT1hc3luYyBlPT57aWYoIUwoZSkpe2NvbnN0e21lc3NhZ2U6YX09dShcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGB1cGRhdGUoKSBwYXJhbXM6ICR7ZX1gKTt0aHJvdyBuZXcgRXJyb3IoYSl9Y29uc3R7dG9waWM6dCxuYW1lc3BhY2VzOnN9PWU7dGhpcy5jaGVja1JlY2VudGx5RGVsZXRlZCh0KSxhd2FpdCB0aGlzLmlzVmFsaWRTZXNzaW9uVG9waWModCk7Y29uc3QgaT10aGlzLmNsaWVudC5zZXNzaW9uLmdldCh0KSxyPU9lKHMsXCJ1cGRhdGUoKVwiKTtpZihyKXRocm93IG5ldyBFcnJvcihyLm1lc3NhZ2UpO2NvbnN0IG49SmUoaS5yZXF1aXJlZE5hbWVzcGFjZXMscyxcInVwZGF0ZSgpXCIpO2lmKG4pdGhyb3cgbmV3IEVycm9yKG4ubWVzc2FnZSl9LHRoaXMuaXNWYWxpZEV4dGVuZD1hc3luYyBlPT57aWYoIUwoZSkpe2NvbnN0e21lc3NhZ2U6c309dShcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGBleHRlbmQoKSBwYXJhbXM6ICR7ZX1gKTt0aHJvdyBuZXcgRXJyb3Iocyl9Y29uc3R7dG9waWM6dH09ZTt0aGlzLmNoZWNrUmVjZW50bHlEZWxldGVkKHQpLGF3YWl0IHRoaXMuaXNWYWxpZFNlc3Npb25Ub3BpYyh0KX0sdGhpcy5pc1ZhbGlkUmVxdWVzdD1hc3luYyBlPT57aWYoIUwoZSkpe2NvbnN0e21lc3NhZ2U6YX09dShcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGByZXF1ZXN0KCkgcGFyYW1zOiAke2V9YCk7dGhyb3cgbmV3IEVycm9yKGEpfWNvbnN0e3RvcGljOnQscmVxdWVzdDpzLGNoYWluSWQ6aSxleHBpcnk6cn09ZTt0aGlzLmNoZWNrUmVjZW50bHlEZWxldGVkKHQpLGF3YWl0IHRoaXMuaXNWYWxpZFNlc3Npb25Ub3BpYyh0KTtjb25zdHtuYW1lc3BhY2VzOm59PXRoaXMuY2xpZW50LnNlc3Npb24uZ2V0KHQpO2lmKCFCZShuLGkpKXtjb25zdHttZXNzYWdlOmF9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgcmVxdWVzdCgpIGNoYWluSWQ6ICR7aX1gKTt0aHJvdyBuZXcgRXJyb3IoYSl9aWYoIWp0KHMpKXtjb25zdHttZXNzYWdlOmF9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgcmVxdWVzdCgpICR7SlNPTi5zdHJpbmdpZnkocyl9YCk7dGhyb3cgbmV3IEVycm9yKGEpfWlmKCFGdChuLGkscy5tZXRob2QpKXtjb25zdHttZXNzYWdlOmF9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgcmVxdWVzdCgpIG1ldGhvZDogJHtzLm1ldGhvZH1gKTt0aHJvdyBuZXcgRXJyb3IoYSl9aWYociYmIVF0KHIsbWUpKXtjb25zdHttZXNzYWdlOmF9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgcmVxdWVzdCgpIGV4cGlyeTogJHtyfS4gRXhwaXJ5IG11c3QgYmUgYSBudW1iZXIgKGluIHNlY29uZHMpIGJldHdlZW4gJHttZS5taW59IGFuZCAke21lLm1heH1gKTt0aHJvdyBuZXcgRXJyb3IoYSl9fSx0aGlzLmlzVmFsaWRSZXNwb25kPWFzeW5jIGU9Pnt2YXIgdDtpZighTChlKSl7Y29uc3R7bWVzc2FnZTpyfT11KFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYHJlc3BvbmQoKSBwYXJhbXM6ICR7ZX1gKTt0aHJvdyBuZXcgRXJyb3Iocil9Y29uc3R7dG9waWM6cyxyZXNwb25zZTppfT1lO3RyeXthd2FpdCB0aGlzLmlzVmFsaWRTZXNzaW9uVG9waWMocyl9Y2F0Y2gocil7dGhyb3codD1lPy5yZXNwb25zZSkhPW51bGwmJnQuaWQmJnRoaXMuY2xlYW51cEFmdGVyUmVzcG9uc2UoZSkscn1pZighenQoaSkpe2NvbnN0e21lc3NhZ2U6cn09dShcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGByZXNwb25kKCkgcmVzcG9uc2U6ICR7SlNPTi5zdHJpbmdpZnkoaSl9YCk7dGhyb3cgbmV3IEVycm9yKHIpfX0sdGhpcy5pc1ZhbGlkUGluZz1hc3luYyBlPT57aWYoIUwoZSkpe2NvbnN0e21lc3NhZ2U6c309dShcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGBwaW5nKCkgcGFyYW1zOiAke2V9YCk7dGhyb3cgbmV3IEVycm9yKHMpfWNvbnN0e3RvcGljOnR9PWU7YXdhaXQgdGhpcy5pc1ZhbGlkU2Vzc2lvbk9yUGFpcmluZ1RvcGljKHQpfSx0aGlzLmlzVmFsaWRFbWl0PWFzeW5jIGU9PntpZighTChlKSl7Y29uc3R7bWVzc2FnZTpufT11KFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYGVtaXQoKSBwYXJhbXM6ICR7ZX1gKTt0aHJvdyBuZXcgRXJyb3Iobil9Y29uc3R7dG9waWM6dCxldmVudDpzLGNoYWluSWQ6aX09ZTthd2FpdCB0aGlzLmlzVmFsaWRTZXNzaW9uVG9waWModCk7Y29uc3R7bmFtZXNwYWNlczpyfT10aGlzLmNsaWVudC5zZXNzaW9uLmdldCh0KTtpZighQmUocixpKSl7Y29uc3R7bWVzc2FnZTpufT11KFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYGVtaXQoKSBjaGFpbklkOiAke2l9YCk7dGhyb3cgbmV3IEVycm9yKG4pfWlmKCFIdChzKSl7Y29uc3R7bWVzc2FnZTpufT11KFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYGVtaXQoKSBldmVudDogJHtKU09OLnN0cmluZ2lmeShzKX1gKTt0aHJvdyBuZXcgRXJyb3Iobil9aWYoIVl0KHIsaSxzLm5hbWUpKXtjb25zdHttZXNzYWdlOm59PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgZW1pdCgpIGV2ZW50OiAke0pTT04uc3RyaW5naWZ5KHMpfWApO3Rocm93IG5ldyBFcnJvcihuKX19LHRoaXMuaXNWYWxpZERpc2Nvbm5lY3Q9YXN5bmMgZT0+e2lmKCFMKGUpKXtjb25zdHttZXNzYWdlOnN9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgZGlzY29ubmVjdCgpIHBhcmFtczogJHtlfWApO3Rocm93IG5ldyBFcnJvcihzKX1jb25zdHt0b3BpYzp0fT1lO2F3YWl0IHRoaXMuaXNWYWxpZFNlc3Npb25PclBhaXJpbmdUb3BpYyh0KX0sdGhpcy5pc1ZhbGlkQXV0aGVudGljYXRlPWU9Pntjb25zdHtjaGFpbnM6dCx1cmk6cyxkb21haW46aSxub25jZTpyfT1lO2lmKCFBcnJheS5pc0FycmF5KHQpfHx0Lmxlbmd0aD09PTApdGhyb3cgbmV3IEVycm9yKFwiY2hhaW5zIGlzIHJlcXVpcmVkIGFuZCBtdXN0IGJlIGEgbm9uLWVtcHR5IGFycmF5XCIpO2lmKCFrKHMsITEpKXRocm93IG5ldyBFcnJvcihcInVyaSBpcyByZXF1aXJlZCBwYXJhbWV0ZXJcIik7aWYoIWsoaSwhMSkpdGhyb3cgbmV3IEVycm9yKFwiZG9tYWluIGlzIHJlcXVpcmVkIHBhcmFtZXRlclwiKTtpZighayhyLCExKSl0aHJvdyBuZXcgRXJyb3IoXCJub25jZSBpcyByZXF1aXJlZCBwYXJhbWV0ZXJcIik7aWYoWy4uLm5ldyBTZXQodC5tYXAoYT0+TmUoYSkubmFtZXNwYWNlKSldLmxlbmd0aD4xKXRocm93IG5ldyBFcnJvcihcIk11bHRpLW5hbWVzcGFjZSByZXF1ZXN0cyBhcmUgbm90IHN1cHBvcnRlZC4gUGxlYXNlIHJlcXVlc3Qgc2luZ2xlIG5hbWVzcGFjZSBvbmx5LlwiKTtjb25zdHtuYW1lc3BhY2U6bn09TmUodFswXSk7aWYobiE9PVwiZWlwMTU1XCIpdGhyb3cgbmV3IEVycm9yKFwiT25seSBlaXAxNTUgbmFtZXNwYWNlIGlzIHN1cHBvcnRlZCBmb3IgYXV0aGVudGljYXRlZCBzZXNzaW9ucy4gUGxlYXNlIHVzZSAuY29ubmVjdCgpIGZvciBub24tZWlwMTU1IGNoYWlucy5cIil9LHRoaXMuZ2V0VmVyaWZ5Q29udGV4dD1hc3luYyBlPT57Y29uc3R7YXR0ZXN0YXRpb25JZDp0LGhhc2g6cyxlbmNyeXB0ZWRJZDppLG1ldGFkYXRhOnIsdHJhbnNwb3J0VHlwZTpufT1lLGE9e3ZlcmlmaWVkOnt2ZXJpZnlVcmw6ci52ZXJpZnlVcmx8fEl0LHZhbGlkYXRpb246XCJVTktOT1dOXCIsb3JpZ2luOnIudXJsfHxcIlwifX07dHJ5e2lmKG49PT1mLmxpbmtfbW9kZSl7Y29uc3QgaD10aGlzLmdldEFwcExpbmtJZkVuYWJsZWQocixuKTtyZXR1cm4gYS52ZXJpZmllZC52YWxpZGF0aW9uPWgmJm5ldyBVUkwoaCkub3JpZ2luPT09bmV3IFVSTChyLnVybCkub3JpZ2luP1wiVkFMSURcIjpcIklOVkFMSURcIixhfWNvbnN0IGM9YXdhaXQgdGhpcy5jbGllbnQuY29yZS52ZXJpZnkucmVzb2x2ZSh7YXR0ZXN0YXRpb25JZDp0LGhhc2g6cyxlbmNyeXB0ZWRJZDppLHZlcmlmeVVybDpyLnZlcmlmeVVybH0pO2MmJihhLnZlcmlmaWVkLm9yaWdpbj1jLm9yaWdpbixhLnZlcmlmaWVkLmlzU2NhbT1jLmlzU2NhbSxhLnZlcmlmaWVkLnZhbGlkYXRpb249Yy5vcmlnaW49PT1uZXcgVVJMKHIudXJsKS5vcmlnaW4/XCJWQUxJRFwiOlwiSU5WQUxJRFwiKX1jYXRjaChjKXt0aGlzLmNsaWVudC5sb2dnZXIud2FybihjKX1yZXR1cm4gdGhpcy5jbGllbnQubG9nZ2VyLmRlYnVnKGBWZXJpZnkgY29udGV4dDogJHtKU09OLnN0cmluZ2lmeShhKX1gKSxhfSx0aGlzLnZhbGlkYXRlU2Vzc2lvblByb3BzPShlLHQpPT57T2JqZWN0LnZhbHVlcyhlKS5mb3JFYWNoKHM9PntpZighayhzLCExKSl7Y29uc3R7bWVzc2FnZTppfT11KFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYCR7dH0gbXVzdCBiZSBpbiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IGZvcm1hdC4gUmVjZWl2ZWQ6ICR7SlNPTi5zdHJpbmdpZnkocyl9YCk7dGhyb3cgbmV3IEVycm9yKGkpfX0pfSx0aGlzLmdldFBlbmRpbmdBdXRoUmVxdWVzdD1lPT57Y29uc3QgdD10aGlzLmNsaWVudC5hdXRoLnJlcXVlc3RzLmdldChlKTtyZXR1cm4gdHlwZW9mIHQ9PVwib2JqZWN0XCI/dDp2b2lkIDB9LHRoaXMuYWRkVG9SZWNlbnRseURlbGV0ZWQ9KGUsdCk9PntpZih0aGlzLnJlY2VudGx5RGVsZXRlZE1hcC5zZXQoZSx0KSx0aGlzLnJlY2VudGx5RGVsZXRlZE1hcC5zaXplPj10aGlzLnJlY2VudGx5RGVsZXRlZExpbWl0KXtsZXQgcz0wO2NvbnN0IGk9dGhpcy5yZWNlbnRseURlbGV0ZWRMaW1pdC8yO2Zvcihjb25zdCByIG9mIHRoaXMucmVjZW50bHlEZWxldGVkTWFwLmtleXMoKSl7aWYocysrPj1pKWJyZWFrO3RoaXMucmVjZW50bHlEZWxldGVkTWFwLmRlbGV0ZShyKX19fSx0aGlzLmNoZWNrUmVjZW50bHlEZWxldGVkPWU9Pntjb25zdCB0PXRoaXMucmVjZW50bHlEZWxldGVkTWFwLmdldChlKTtpZih0KXtjb25zdHttZXNzYWdlOnN9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgUmVjb3JkIHdhcyByZWNlbnRseSBkZWxldGVkIC0gJHt0fTogJHtlfWApO3Rocm93IG5ldyBFcnJvcihzKX19LHRoaXMuaXNMaW5rTW9kZUVuYWJsZWQ9KGUsdCk9Pnt2YXIgcyxpLHIsbixhLGMsaCxwLGQ7cmV0dXJuIWV8fHQhPT1mLmxpbmtfbW9kZT8hMTooKGk9KHM9dGhpcy5jbGllbnQubWV0YWRhdGEpPT1udWxsP3ZvaWQgMDpzLnJlZGlyZWN0KT09bnVsbD92b2lkIDA6aS5saW5rTW9kZSk9PT0hMCYmKChuPShyPXRoaXMuY2xpZW50Lm1ldGFkYXRhKT09bnVsbD92b2lkIDA6ci5yZWRpcmVjdCk9PW51bGw/dm9pZCAwOm4udW5pdmVyc2FsKSE9PXZvaWQgMCYmKChjPShhPXRoaXMuY2xpZW50Lm1ldGFkYXRhKT09bnVsbD92b2lkIDA6YS5yZWRpcmVjdCk9PW51bGw/dm9pZCAwOmMudW5pdmVyc2FsKSE9PVwiXCImJigoaD1lPy5yZWRpcmVjdCk9PW51bGw/dm9pZCAwOmgudW5pdmVyc2FsKSE9PXZvaWQgMCYmKChwPWU/LnJlZGlyZWN0KT09bnVsbD92b2lkIDA6cC51bml2ZXJzYWwpIT09XCJcIiYmKChkPWU/LnJlZGlyZWN0KT09bnVsbD92b2lkIDA6ZC5saW5rTW9kZSk9PT0hMCYmdGhpcy5jbGllbnQuY29yZS5saW5rTW9kZVN1cHBvcnRlZEFwcHMuaW5jbHVkZXMoZS5yZWRpcmVjdC51bml2ZXJzYWwpJiZ0eXBlb2YoZ2xvYmFsPT1udWxsP3ZvaWQgMDpnbG9iYWwuTGlua2luZyk8XCJ1XCJ9LHRoaXMuZ2V0QXBwTGlua0lmRW5hYmxlZD0oZSx0KT0+e3ZhciBzO3JldHVybiB0aGlzLmlzTGlua01vZGVFbmFibGVkKGUsdCk/KHM9ZT8ucmVkaXJlY3QpPT1udWxsP3ZvaWQgMDpzLnVuaXZlcnNhbDp2b2lkIDB9LHRoaXMuaGFuZGxlTGlua01vZGVNZXNzYWdlPSh7dXJsOmV9KT0+e2lmKCFlfHwhZS5pbmNsdWRlcyhcIndjX2V2XCIpfHwhZS5pbmNsdWRlcyhcInRvcGljXCIpKXJldHVybjtjb25zdCB0PVdlKGUsXCJ0b3BpY1wiKXx8XCJcIixzPWRlY29kZVVSSUNvbXBvbmVudChXZShlLFwid2NfZXZcIil8fFwiXCIpLGk9dGhpcy5jbGllbnQuc2Vzc2lvbi5rZXlzLmluY2x1ZGVzKHQpO2kmJnRoaXMuY2xpZW50LnNlc3Npb24udXBkYXRlKHQse3RyYW5zcG9ydFR5cGU6Zi5saW5rX21vZGV9KSx0aGlzLmNsaWVudC5jb3JlLmRpc3BhdGNoRW52ZWxvcGUoe3RvcGljOnQsbWVzc2FnZTpzLHNlc3Npb25FeGlzdHM6aX0pfSx0aGlzLnJlZ2lzdGVyTGlua01vZGVMaXN0ZW5lcnM9YXN5bmMoKT0+e3ZhciBlO2lmKFh0KCl8fEp0KCkmJihlPXRoaXMuY2xpZW50Lm1ldGFkYXRhLnJlZGlyZWN0KSE9bnVsbCYmZS5saW5rTW9kZSl7Y29uc3QgdD1nbG9iYWw9PW51bGw/dm9pZCAwOmdsb2JhbC5MaW5raW5nO2lmKHR5cGVvZiB0PFwidVwiKXt0LmFkZEV2ZW50TGlzdGVuZXIoXCJ1cmxcIix0aGlzLmhhbmRsZUxpbmtNb2RlTWVzc2FnZSx0aGlzLmNsaWVudC5uYW1lKTtjb25zdCBzPWF3YWl0IHQuZ2V0SW5pdGlhbFVSTCgpO3MmJnNldFRpbWVvdXQoKCk9Pnt0aGlzLmhhbmRsZUxpbmtNb2RlTWVzc2FnZSh7dXJsOnN9KX0sNTApfX19fWlzSW5pdGlhbGl6ZWQoKXtpZighdGhpcy5pbml0aWFsaXplZCl7Y29uc3R7bWVzc2FnZTpvfT11KFwiTk9UX0lOSVRJQUxJWkVEXCIsdGhpcy5uYW1lKTt0aHJvdyBuZXcgRXJyb3Iobyl9fWFzeW5jIGNvbmZpcm1PbmxpbmVTdGF0ZU9yVGhyb3coKXthd2FpdCB0aGlzLmNsaWVudC5jb3JlLnJlbGF5ZXIuY29uZmlybU9ubGluZVN0YXRlT3JUaHJvdygpfXJlZ2lzdGVyUmVsYXllckV2ZW50cygpe3RoaXMuY2xpZW50LmNvcmUucmVsYXllci5vbihVZS5tZXNzYWdlLG89PnshdGhpcy5pbml0aWFsaXplZHx8dGhpcy5yZWxheU1lc3NhZ2VDYWNoZS5sZW5ndGg+MD90aGlzLnJlbGF5TWVzc2FnZUNhY2hlLnB1c2gobyk6dGhpcy5vblJlbGF5TWVzc2FnZShvKX0pfWFzeW5jIG9uUmVsYXlNZXNzYWdlKG8pe2NvbnN0e3RvcGljOmUsbWVzc2FnZTp0LGF0dGVzdGF0aW9uOnMsdHJhbnNwb3J0VHlwZTppfT1vLHtwdWJsaWNLZXk6cn09dGhpcy5jbGllbnQuYXV0aC5hdXRoS2V5cy5rZXlzLmluY2x1ZGVzKGFlKT90aGlzLmNsaWVudC5hdXRoLmF1dGhLZXlzLmdldChhZSk6e3Jlc3BvbnNlVG9waWM6dm9pZCAwLHB1YmxpY0tleTp2b2lkIDB9LG49YXdhaXQgdGhpcy5jbGllbnQuY29yZS5jcnlwdG8uZGVjb2RlKGUsdCx7cmVjZWl2ZXJQdWJsaWNLZXk6cixlbmNvZGluZzppPT09Zi5saW5rX21vZGU/aWU6ZGV9KTt0cnl7b3Mobik/KHRoaXMuY2xpZW50LmNvcmUuaGlzdG9yeS5zZXQoZSxuKSx0aGlzLm9uUmVsYXlFdmVudFJlcXVlc3Qoe3RvcGljOmUscGF5bG9hZDpuLGF0dGVzdGF0aW9uOnMsdHJhbnNwb3J0VHlwZTppLGVuY3J5cHRlZElkOlgodCl9KSk6YXMobik/KGF3YWl0IHRoaXMuY2xpZW50LmNvcmUuaGlzdG9yeS5yZXNvbHZlKG4pLGF3YWl0IHRoaXMub25SZWxheUV2ZW50UmVzcG9uc2Uoe3RvcGljOmUscGF5bG9hZDpuLHRyYW5zcG9ydFR5cGU6aX0pLHRoaXMuY2xpZW50LmNvcmUuaGlzdG9yeS5kZWxldGUoZSxuLmlkKSk6dGhpcy5vblJlbGF5RXZlbnRVbmtub3duUGF5bG9hZCh7dG9waWM6ZSxwYXlsb2FkOm4sdHJhbnNwb3J0VHlwZTppfSl9Y2F0Y2goYSl7dGhpcy5jbGllbnQubG9nZ2VyLmVycm9yKGEpfX1yZWdpc3RlckV4cGlyZXJFdmVudHMoKXt0aGlzLmNsaWVudC5jb3JlLmV4cGlyZXIub24oZnQuZXhwaXJlZCxhc3luYyBvPT57Y29uc3R7dG9waWM6ZSxpZDp0fT1CdChvLnRhcmdldCk7aWYodCYmdGhpcy5jbGllbnQucGVuZGluZ1JlcXVlc3Qua2V5cy5pbmNsdWRlcyh0KSlyZXR1cm4gYXdhaXQgdGhpcy5kZWxldGVQZW5kaW5nU2Vzc2lvblJlcXVlc3QodCx1KFwiRVhQSVJFRFwiKSwhMCk7aWYodCYmdGhpcy5jbGllbnQuYXV0aC5yZXF1ZXN0cy5rZXlzLmluY2x1ZGVzKHQpKXJldHVybiBhd2FpdCB0aGlzLmRlbGV0ZVBlbmRpbmdBdXRoUmVxdWVzdCh0LHUoXCJFWFBJUkVEXCIpLCEwKTtlP3RoaXMuY2xpZW50LnNlc3Npb24ua2V5cy5pbmNsdWRlcyhlKSYmKGF3YWl0IHRoaXMuZGVsZXRlU2Vzc2lvbih7dG9waWM6ZSxleHBpcmVySGFzRGVsZXRlZDohMH0pLHRoaXMuY2xpZW50LmV2ZW50cy5lbWl0KFwic2Vzc2lvbl9leHBpcmVcIix7dG9waWM6ZX0pKTp0JiYoYXdhaXQgdGhpcy5kZWxldGVQcm9wb3NhbCh0LCEwKSx0aGlzLmNsaWVudC5ldmVudHMuZW1pdChcInByb3Bvc2FsX2V4cGlyZVwiLHtpZDp0fSkpfSl9cmVnaXN0ZXJQYWlyaW5nRXZlbnRzKCl7dGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLmV2ZW50cy5vbihHZS5jcmVhdGUsbz0+dGhpcy5vblBhaXJpbmdDcmVhdGVkKG8pKSx0aGlzLmNsaWVudC5jb3JlLnBhaXJpbmcuZXZlbnRzLm9uKEdlLmRlbGV0ZSxvPT57dGhpcy5hZGRUb1JlY2VudGx5RGVsZXRlZChvLnRvcGljLFwicGFpcmluZ1wiKX0pfWlzVmFsaWRQYWlyaW5nVG9waWMobyl7aWYoIWsobywhMSkpe2NvbnN0e21lc3NhZ2U6ZX09dShcIk1JU1NJTkdfT1JfSU5WQUxJRFwiLGBwYWlyaW5nIHRvcGljIHNob3VsZCBiZSBhIHN0cmluZzogJHtvfWApO3Rocm93IG5ldyBFcnJvcihlKX1pZighdGhpcy5jbGllbnQuY29yZS5wYWlyaW5nLnBhaXJpbmdzLmtleXMuaW5jbHVkZXMobykpe2NvbnN0e21lc3NhZ2U6ZX09dShcIk5PX01BVENISU5HX0tFWVwiLGBwYWlyaW5nIHRvcGljIGRvZXNuJ3QgZXhpc3Q6ICR7b31gKTt0aHJvdyBuZXcgRXJyb3IoZSl9aWYoSih0aGlzLmNsaWVudC5jb3JlLnBhaXJpbmcucGFpcmluZ3MuZ2V0KG8pLmV4cGlyeSkpe2NvbnN0e21lc3NhZ2U6ZX09dShcIkVYUElSRURcIixgcGFpcmluZyB0b3BpYzogJHtvfWApO3Rocm93IG5ldyBFcnJvcihlKX19YXN5bmMgaXNWYWxpZFNlc3Npb25Ub3BpYyhvKXtpZighayhvLCExKSl7Y29uc3R7bWVzc2FnZTplfT11KFwiTUlTU0lOR19PUl9JTlZBTElEXCIsYHNlc3Npb24gdG9waWMgc2hvdWxkIGJlIGEgc3RyaW5nOiAke299YCk7dGhyb3cgbmV3IEVycm9yKGUpfWlmKHRoaXMuY2hlY2tSZWNlbnRseURlbGV0ZWQobyksIXRoaXMuY2xpZW50LnNlc3Npb24ua2V5cy5pbmNsdWRlcyhvKSl7Y29uc3R7bWVzc2FnZTplfT11KFwiTk9fTUFUQ0hJTkdfS0VZXCIsYHNlc3Npb24gdG9waWMgZG9lc24ndCBleGlzdDogJHtvfWApO3Rocm93IG5ldyBFcnJvcihlKX1pZihKKHRoaXMuY2xpZW50LnNlc3Npb24uZ2V0KG8pLmV4cGlyeSkpe2F3YWl0IHRoaXMuZGVsZXRlU2Vzc2lvbih7dG9waWM6b30pO2NvbnN0e21lc3NhZ2U6ZX09dShcIkVYUElSRURcIixgc2Vzc2lvbiB0b3BpYzogJHtvfWApO3Rocm93IG5ldyBFcnJvcihlKX1pZighdGhpcy5jbGllbnQuY29yZS5jcnlwdG8ua2V5Y2hhaW4uaGFzKG8pKXtjb25zdHttZXNzYWdlOmV9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgc2Vzc2lvbiB0b3BpYyBkb2VzIG5vdCBleGlzdCBpbiBrZXljaGFpbjogJHtvfWApO3Rocm93IGF3YWl0IHRoaXMuZGVsZXRlU2Vzc2lvbih7dG9waWM6b30pLG5ldyBFcnJvcihlKX19YXN5bmMgaXNWYWxpZFNlc3Npb25PclBhaXJpbmdUb3BpYyhvKXtpZih0aGlzLmNoZWNrUmVjZW50bHlEZWxldGVkKG8pLHRoaXMuY2xpZW50LnNlc3Npb24ua2V5cy5pbmNsdWRlcyhvKSlhd2FpdCB0aGlzLmlzVmFsaWRTZXNzaW9uVG9waWMobyk7ZWxzZSBpZih0aGlzLmNsaWVudC5jb3JlLnBhaXJpbmcucGFpcmluZ3Mua2V5cy5pbmNsdWRlcyhvKSl0aGlzLmlzVmFsaWRQYWlyaW5nVG9waWMobyk7ZWxzZSBpZihrKG8sITEpKXtjb25zdHttZXNzYWdlOmV9PXUoXCJOT19NQVRDSElOR19LRVlcIixgc2Vzc2lvbiBvciBwYWlyaW5nIHRvcGljIGRvZXNuJ3QgZXhpc3Q6ICR7b31gKTt0aHJvdyBuZXcgRXJyb3IoZSl9ZWxzZXtjb25zdHttZXNzYWdlOmV9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgc2Vzc2lvbiBvciBwYWlyaW5nIHRvcGljIHNob3VsZCBiZSBhIHN0cmluZzogJHtvfWApO3Rocm93IG5ldyBFcnJvcihlKX19YXN5bmMgaXNWYWxpZFByb3Bvc2FsSWQobyl7aWYoIVd0KG8pKXtjb25zdHttZXNzYWdlOmV9PXUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgcHJvcG9zYWwgaWQgc2hvdWxkIGJlIGEgbnVtYmVyOiAke299YCk7dGhyb3cgbmV3IEVycm9yKGUpfWlmKCF0aGlzLmNsaWVudC5wcm9wb3NhbC5rZXlzLmluY2x1ZGVzKG8pKXtjb25zdHttZXNzYWdlOmV9PXUoXCJOT19NQVRDSElOR19LRVlcIixgcHJvcG9zYWwgaWQgZG9lc24ndCBleGlzdDogJHtvfWApO3Rocm93IG5ldyBFcnJvcihlKX1pZihKKHRoaXMuY2xpZW50LnByb3Bvc2FsLmdldChvKS5leHBpcnlUaW1lc3RhbXApKXthd2FpdCB0aGlzLmRlbGV0ZVByb3Bvc2FsKG8pO2NvbnN0e21lc3NhZ2U6ZX09dShcIkVYUElSRURcIixgcHJvcG9zYWwgaWQ6ICR7b31gKTt0aHJvdyBuZXcgRXJyb3IoZSl9fX1jbGFzcyBTcyBleHRlbmRzIEh7Y29uc3RydWN0b3IobyxlKXtzdXBlcihvLGUsc3QseWUpLHRoaXMuY29yZT1vLHRoaXMubG9nZ2VyPWV9fWNsYXNzIHl0IGV4dGVuZHMgSHtjb25zdHJ1Y3RvcihvLGUpe3N1cGVyKG8sZSxydCx5ZSksdGhpcy5jb3JlPW8sdGhpcy5sb2dnZXI9ZX19Y2xhc3MgSXMgZXh0ZW5kcyBIe2NvbnN0cnVjdG9yKG8sZSl7c3VwZXIobyxlLG90LHllLHQ9PnQuaWQpLHRoaXMuY29yZT1vLHRoaXMubG9nZ2VyPWV9fWNsYXNzIGZzIGV4dGVuZHMgSHtjb25zdHJ1Y3RvcihvLGUpe3N1cGVyKG8sZSxwdCxvZSwoKT0+YWUpLHRoaXMuY29yZT1vLHRoaXMubG9nZ2VyPWV9fWNsYXNzIHZzIGV4dGVuZHMgSHtjb25zdHJ1Y3RvcihvLGUpe3N1cGVyKG8sZSxodCxvZSksdGhpcy5jb3JlPW8sdGhpcy5sb2dnZXI9ZX19Y2xhc3MgcXMgZXh0ZW5kcyBIe2NvbnN0cnVjdG9yKG8sZSl7c3VwZXIobyxlLGR0LG9lLHQ9PnQuaWQpLHRoaXMuY29yZT1vLHRoaXMubG9nZ2VyPWV9fWNsYXNzIFRze2NvbnN0cnVjdG9yKG8sZSl7dGhpcy5jb3JlPW8sdGhpcy5sb2dnZXI9ZSx0aGlzLmF1dGhLZXlzPW5ldyBmcyh0aGlzLmNvcmUsdGhpcy5sb2dnZXIpLHRoaXMucGFpcmluZ1RvcGljcz1uZXcgdnModGhpcy5jb3JlLHRoaXMubG9nZ2VyKSx0aGlzLnJlcXVlc3RzPW5ldyBxcyh0aGlzLmNvcmUsdGhpcy5sb2dnZXIpfWFzeW5jIGluaXQoKXthd2FpdCB0aGlzLmF1dGhLZXlzLmluaXQoKSxhd2FpdCB0aGlzLnBhaXJpbmdUb3BpY3MuaW5pdCgpLGF3YWl0IHRoaXMucmVxdWVzdHMuaW5pdCgpfX1jbGFzcyBfZSBleHRlbmRzIEF0e2NvbnN0cnVjdG9yKG8pe3N1cGVyKG8pLHRoaXMucHJvdG9jb2w9YmUsdGhpcy52ZXJzaW9uPUNlLHRoaXMubmFtZT13ZS5uYW1lLHRoaXMuZXZlbnRzPW5ldyB0cyx0aGlzLm9uPSh0LHMpPT50aGlzLmV2ZW50cy5vbih0LHMpLHRoaXMub25jZT0odCxzKT0+dGhpcy5ldmVudHMub25jZSh0LHMpLHRoaXMub2ZmPSh0LHMpPT50aGlzLmV2ZW50cy5vZmYodCxzKSx0aGlzLnJlbW92ZUxpc3RlbmVyPSh0LHMpPT50aGlzLmV2ZW50cy5yZW1vdmVMaXN0ZW5lcih0LHMpLHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzPXQ9PnRoaXMuZXZlbnRzLnJlbW92ZUFsbExpc3RlbmVycyh0KSx0aGlzLmNvbm5lY3Q9YXN5bmMgdD0+e3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5lbmdpbmUuY29ubmVjdCh0KX1jYXRjaChzKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihzLm1lc3NhZ2UpLHN9fSx0aGlzLnBhaXI9YXN5bmMgdD0+e3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5lbmdpbmUucGFpcih0KX1jYXRjaChzKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihzLm1lc3NhZ2UpLHN9fSx0aGlzLmFwcHJvdmU9YXN5bmMgdD0+e3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5lbmdpbmUuYXBwcm92ZSh0KX1jYXRjaChzKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihzLm1lc3NhZ2UpLHN9fSx0aGlzLnJlamVjdD1hc3luYyB0PT57dHJ5e3JldHVybiBhd2FpdCB0aGlzLmVuZ2luZS5yZWplY3QodCl9Y2F0Y2gocyl7dGhyb3cgdGhpcy5sb2dnZXIuZXJyb3Iocy5tZXNzYWdlKSxzfX0sdGhpcy51cGRhdGU9YXN5bmMgdD0+e3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5lbmdpbmUudXBkYXRlKHQpfWNhdGNoKHMpe3Rocm93IHRoaXMubG9nZ2VyLmVycm9yKHMubWVzc2FnZSksc319LHRoaXMuZXh0ZW5kPWFzeW5jIHQ9Pnt0cnl7cmV0dXJuIGF3YWl0IHRoaXMuZW5naW5lLmV4dGVuZCh0KX1jYXRjaChzKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihzLm1lc3NhZ2UpLHN9fSx0aGlzLnJlcXVlc3Q9YXN5bmMgdD0+e3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5lbmdpbmUucmVxdWVzdCh0KX1jYXRjaChzKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihzLm1lc3NhZ2UpLHN9fSx0aGlzLnJlc3BvbmQ9YXN5bmMgdD0+e3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5lbmdpbmUucmVzcG9uZCh0KX1jYXRjaChzKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihzLm1lc3NhZ2UpLHN9fSx0aGlzLnBpbmc9YXN5bmMgdD0+e3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5lbmdpbmUucGluZyh0KX1jYXRjaChzKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihzLm1lc3NhZ2UpLHN9fSx0aGlzLmVtaXQ9YXN5bmMgdD0+e3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5lbmdpbmUuZW1pdCh0KX1jYXRjaChzKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihzLm1lc3NhZ2UpLHN9fSx0aGlzLmRpc2Nvbm5lY3Q9YXN5bmMgdD0+e3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5lbmdpbmUuZGlzY29ubmVjdCh0KX1jYXRjaChzKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihzLm1lc3NhZ2UpLHN9fSx0aGlzLmZpbmQ9dD0+e3RyeXtyZXR1cm4gdGhpcy5lbmdpbmUuZmluZCh0KX1jYXRjaChzKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihzLm1lc3NhZ2UpLHN9fSx0aGlzLmdldFBlbmRpbmdTZXNzaW9uUmVxdWVzdHM9KCk9Pnt0cnl7cmV0dXJuIHRoaXMuZW5naW5lLmdldFBlbmRpbmdTZXNzaW9uUmVxdWVzdHMoKX1jYXRjaCh0KXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcih0Lm1lc3NhZ2UpLHR9fSx0aGlzLmF1dGhlbnRpY2F0ZT1hc3luYyh0LHMpPT57dHJ5e3JldHVybiBhd2FpdCB0aGlzLmVuZ2luZS5hdXRoZW50aWNhdGUodCxzKX1jYXRjaChpKXt0aHJvdyB0aGlzLmxvZ2dlci5lcnJvcihpLm1lc3NhZ2UpLGl9fSx0aGlzLmZvcm1hdEF1dGhNZXNzYWdlPXQ9Pnt0cnl7cmV0dXJuIHRoaXMuZW5naW5lLmZvcm1hdEF1dGhNZXNzYWdlKHQpfWNhdGNoKHMpe3Rocm93IHRoaXMubG9nZ2VyLmVycm9yKHMubWVzc2FnZSksc319LHRoaXMuYXBwcm92ZVNlc3Npb25BdXRoZW50aWNhdGU9YXN5bmMgdD0+e3RyeXtyZXR1cm4gYXdhaXQgdGhpcy5lbmdpbmUuYXBwcm92ZVNlc3Npb25BdXRoZW50aWNhdGUodCl9Y2F0Y2gocyl7dGhyb3cgdGhpcy5sb2dnZXIuZXJyb3Iocy5tZXNzYWdlKSxzfX0sdGhpcy5yZWplY3RTZXNzaW9uQXV0aGVudGljYXRlPWFzeW5jIHQ9Pnt0cnl7cmV0dXJuIGF3YWl0IHRoaXMuZW5naW5lLnJlamVjdFNlc3Npb25BdXRoZW50aWNhdGUodCl9Y2F0Y2gocyl7dGhyb3cgdGhpcy5sb2dnZXIuZXJyb3Iocy5tZXNzYWdlKSxzfX0sdGhpcy5uYW1lPW8/Lm5hbWV8fHdlLm5hbWUsdGhpcy5tZXRhZGF0YT1vPy5tZXRhZGF0YXx8WnQoKSx0aGlzLnNpZ25Db25maWc9bz8uc2lnbkNvbmZpZztjb25zdCBlPXR5cGVvZiBvPy5sb2dnZXI8XCJ1XCImJnR5cGVvZiBvPy5sb2dnZXIhPVwic3RyaW5nXCI/by5sb2dnZXI6cXQoVHQoe2xldmVsOm8/LmxvZ2dlcnx8d2UubG9nZ2VyfSkpO3RoaXMuY29yZT1vPy5jb3JlfHxuZXcgdnQobyksdGhpcy5sb2dnZXI9TnQoZSx0aGlzLm5hbWUpLHRoaXMuc2Vzc2lvbj1uZXcgeXQodGhpcy5jb3JlLHRoaXMubG9nZ2VyKSx0aGlzLnByb3Bvc2FsPW5ldyBTcyh0aGlzLmNvcmUsdGhpcy5sb2dnZXIpLHRoaXMucGVuZGluZ1JlcXVlc3Q9bmV3IElzKHRoaXMuY29yZSx0aGlzLmxvZ2dlciksdGhpcy5lbmdpbmU9bmV3IFJzKHRoaXMpLHRoaXMuYXV0aD1uZXcgVHModGhpcy5jb3JlLHRoaXMubG9nZ2VyKX1zdGF0aWMgYXN5bmMgaW5pdChvKXtjb25zdCBlPW5ldyBfZShvKTtyZXR1cm4gYXdhaXQgZS5pbml0aWFsaXplKCksZX1nZXQgY29udGV4dCgpe3JldHVybiBQdCh0aGlzLmxvZ2dlcil9Z2V0IHBhaXJpbmcoKXtyZXR1cm4gdGhpcy5jb3JlLnBhaXJpbmcucGFpcmluZ3N9YXN5bmMgaW5pdGlhbGl6ZSgpe3RoaXMubG9nZ2VyLnRyYWNlKFwiSW5pdGlhbGl6ZWRcIik7dHJ5e2F3YWl0IHRoaXMuY29yZS5zdGFydCgpLGF3YWl0IHRoaXMuc2Vzc2lvbi5pbml0KCksYXdhaXQgdGhpcy5wcm9wb3NhbC5pbml0KCksYXdhaXQgdGhpcy5wZW5kaW5nUmVxdWVzdC5pbml0KCksYXdhaXQgdGhpcy5hdXRoLmluaXQoKSxhd2FpdCB0aGlzLmVuZ2luZS5pbml0KCksdGhpcy5sb2dnZXIuaW5mbyhcIlNpZ25DbGllbnQgSW5pdGlhbGl6YXRpb24gU3VjY2Vzc1wiKSx0aGlzLmVuZ2luZS5wcm9jZXNzUmVsYXlNZXNzYWdlQ2FjaGUoKX1jYXRjaChvKXt0aHJvdyB0aGlzLmxvZ2dlci5pbmZvKFwiU2lnbkNsaWVudCBJbml0aWFsaXphdGlvbiBGYWlsdXJlXCIpLHRoaXMubG9nZ2VyLmVycm9yKG8ubWVzc2FnZSksb319fWNvbnN0IE5zPXl0LFBzPV9lO2V4cG9ydHtsdCBhcyBBVVRIX0NPTlRFWFQscHQgYXMgQVVUSF9LRVlTX0NPTlRFWFQsaHQgYXMgQVVUSF9QQUlSSU5HX1RPUElDX0NPTlRFWFQsY3QgYXMgQVVUSF9QUk9UT0NPTCxhZSBhcyBBVVRIX1BVQkxJQ19LRVlfTkFNRSxkdCBhcyBBVVRIX1JFUVVFU1RfQ09OVEVYVCxvZSBhcyBBVVRIX1NUT1JBR0VfUFJFRklYLGdzIGFzIEFVVEhfVkVSU0lPTixudCBhcyBFTkdJTkVfQ09OVEVYVCx4IGFzIEVOR0lORV9RVUVVRV9TVEFURVMsdiBhcyBFTkdJTkVfUlBDX09QVFMsaHMgYXMgSElTVE9SWV9DT05URVhULHBzIGFzIEhJU1RPUllfRVZFTlRTLGRzIGFzIEhJU1RPUllfU1RPUkFHRV9WRVJTSU9OLGF0IGFzIE1FVEhPRFNfVE9fVkVSSUZZLHN0IGFzIFBST1BPU0FMX0NPTlRFWFQsdXMgYXMgUFJPUE9TQUxfRVhQSVJZLGl0IGFzIFBST1BPU0FMX0VYUElSWV9NRVNTQUdFLG90IGFzIFJFUVVFU1RfQ09OVEVYVCxydCBhcyBTRVNTSU9OX0NPTlRFWFQseiBhcyBTRVNTSU9OX0VYUElSWSxtZSBhcyBTRVNTSU9OX1JFUVVFU1RfRVhQSVJZX0JPVU5EQVJJRVMsTGUgYXMgU0lHTl9DTElFTlRfQ09OVEVYVCx3ZSBhcyBTSUdOX0NMSUVOVF9ERUZBVUxULGNzIGFzIFNJR05fQ0xJRU5UX0VWRU5UUyxiZSBhcyBTSUdOX0NMSUVOVF9QUk9UT0NPTCxscyBhcyBTSUdOX0NMSUVOVF9TVE9SQUdFX09QVElPTlMseWUgYXMgU0lHTl9DTElFTlRfU1RPUkFHRV9QUkVGSVgsQ2UgYXMgU0lHTl9DTElFTlRfVkVSU0lPTixOcyBhcyBTZXNzaW9uU3RvcmUsUHMgYXMgU2lnbkNsaWVudCx4ZSBhcyBXQUxMRVRDT05ORUNUX0RFRVBMSU5LX0NIT0lDRSxfZSBhcyBkZWZhdWx0fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbIlJFTEFZRVJfREVGQVVMVF9QUk9UT0NPTCIsIkV0IiwiVFJBTlNQT1JUX1RZUEVTIiwiZiIsIkVWRU5UX0NMSUVOVF9TRVNTSU9OX1RSQUNFUyIsIkMiLCJFVkVOVF9DTElFTlRfU0VTU0lPTl9FUlJPUlMiLCJGIiwiRVZFTlRfQ0xJRU5UX0FVVEhFTlRJQ0FURV9UUkFDRVMiLCJRIiwiRVZFTlRfQ0xJRU5UX0FVVEhFTlRJQ0FURV9FUlJPUlMiLCJzZSIsIkVWRU5UX0NMSUVOVF9QQUlSSU5HX0VSUk9SUyIsIlJ0IiwiRVZFTlRfQ0xJRU5UX1BBSVJJTkdfVFJBQ0VTIiwiU3QiLCJSRUxBWUVSX0VWRU5UUyIsIlVlIiwiVkVSSUZZX1NFUlZFUiIsIkl0IiwiRVhQSVJFUl9FVkVOVFMiLCJmdCIsIlBBSVJJTkdfRVZFTlRTIiwiR2UiLCJTdG9yZSIsIkgiLCJDb3JlIiwidnQiLCJwaW5vIiwicXQiLCJnZXREZWZhdWx0TG9nZ2VyT3B0aW9ucyIsIlR0IiwiZ2VuZXJhdGVDaGlsZExvZ2dlciIsIk50IiwiZ2V0TG9nZ2VyQ29udGV4dCIsIlB0IiwiSUVuZ2luZSIsIk90IiwiSVNpZ25DbGllbnQiLCJBdCIsImdldEludGVybmFsRXJyb3IiLCJ1IiwiY2FsY0V4cGlyeSIsIkEiLCJjcmVhdGVEZWxheWVkUHJvbWlzZSIsIlkiLCJlbmdpbmVFdmVudCIsImciLCJnZXRTZGtFcnJvciIsIlAiLCJnZXREZWVwTGluayIsImJ0IiwiaGFuZGxlRGVlcGxpbmtSZWRpcmVjdCIsIkN0IiwiaXNTZXNzaW9uQ29tcGF0aWJsZSIsIkx0IiwiaGFzaEtleSIsIlRlIiwicGFyc2VDaGFpbklkIiwiTmUiLCJjcmVhdGVFbmNvZGVkUmVjYXAiLCJ4dCIsImdldFJlY2FwRnJvbVJlc291cmNlcyIsIlBlIiwibWVyZ2VFbmNvZGVkUmVjYXBzIiwiRHQiLCJUWVBFXzIiLCJWdCIsIkJBU0U2NFVSTCIsImllIiwiZ2V0TGlua01vZGVVUkwiLCJoZSIsInZhbGlkYXRlU2lnbmVkQ2FjYW8iLCJqZSIsImdldE5hbWVzcGFjZWREaWRDaGFpbklkIiwiRmUiLCJnZXREaWRBZGRyZXNzIiwiUWUiLCJnZXRNZXRob2RzRnJvbVJlY2FwIiwiemUiLCJnZXRDaGFpbnNGcm9tUmVjYXAiLCJIZSIsImJ1aWxkTmFtZXNwYWNlc0Zyb21BdXRoIiwiWWUiLCJmb3JtYXRNZXNzYWdlIiwiTXQiLCJCQVNFNjQiLCJkZSIsImhhc2hNZXNzYWdlIiwiWCIsImlzRXhwaXJlZCIsIkoiLCJNZW1vcnlTdG9yZSIsInJlIiwiaXNWYWxpZFBhcmFtcyIsIkwiLCJpc1VuZGVmaW5lZCIsIm5lIiwiaXNWYWxpZFJlbGF5cyIsImt0IiwiaXNWYWxpZE9iamVjdCIsIlhlIiwiaXNWYWxpZFJlcXVpcmVkTmFtZXNwYWNlcyIsIiR0IiwiaXNWYWxpZE5hbWVzcGFjZXMiLCJPZSIsImlzQ29uZm9ybWluZ05hbWVzcGFjZXMiLCJKZSIsImlzVmFsaWRTdHJpbmciLCJrIiwiaXNWYWxpZEVycm9yUmVhc29uIiwiS3QiLCJpc1ZhbGlkUmVsYXkiLCJVdCIsImlzVmFsaWRDb250cm9sbGVyIiwiR3QiLCJpc1ZhbGlkTmFtZXNwYWNlc0NoYWluSWQiLCJCZSIsImlzVmFsaWRSZXF1ZXN0IiwianQiLCJpc1ZhbGlkTmFtZXNwYWNlc1JlcXVlc3QiLCJGdCIsImlzVmFsaWRSZXF1ZXN0RXhwaXJ5IiwiUXQiLCJpc1ZhbGlkUmVzcG9uc2UiLCJ6dCIsImlzVmFsaWRFdmVudCIsIkh0IiwiaXNWYWxpZE5hbWVzcGFjZXNFdmVudCIsIll0IiwiZ2V0U2VhcmNoUGFyYW1Gcm9tVVJMIiwiV2UiLCJpc1Rlc3RSdW4iLCJYdCIsImlzUmVhY3ROYXRpdmUiLCJKdCIsInBhcnNlRXhwaXJlclRhcmdldCIsIkJ0IiwiaXNWYWxpZElkIiwiV3QiLCJUWVBFXzEiLCJBZSIsImdldEFwcE1ldGFkYXRhIiwiWnQiLCJlcyIsIkV2ZW50RW1pdHRlciIsInRzIiwiVEhJUlRZX0RBWVMiLCJzcyIsIlNFVkVOX0RBWVMiLCJaZSIsIkZJVkVfTUlOVVRFUyIsImIiLCJPTkVfREFZIiwiJCIsIk9ORV9IT1VSIiwiZXQiLCJPTkVfU0VDT05EIiwiaXMiLCJ0b01pbGlzZWNvbmRzIiwidHQiLCJwYXlsb2FkSWQiLCJCIiwiZ2V0QmlnSW50UnBjSWQiLCJ1ZSIsImlzSnNvblJwY1Jlc3VsdCIsIksiLCJpc0pzb25ScGNFcnJvciIsIlUiLCJmb3JtYXRKc29uUnBjUmVxdWVzdCIsImdlIiwiZm9ybWF0SnNvblJwY1Jlc3VsdCIsInJzIiwiZm9ybWF0SnNvblJwY0Vycm9yIiwibnMiLCJpc0pzb25ScGNSZXF1ZXN0Iiwib3MiLCJpc0pzb25ScGNSZXNwb25zZSIsImFzIiwiYmUiLCJDZSIsIkxlIiwieWUiLCJ3ZSIsIm5hbWUiLCJsb2dnZXIiLCJjb250cm9sbGVyIiwicmVsYXlVcmwiLCJjcyIsInNlc3Npb25fcHJvcG9zYWwiLCJzZXNzaW9uX3VwZGF0ZSIsInNlc3Npb25fZXh0ZW5kIiwic2Vzc2lvbl9waW5nIiwic2Vzc2lvbl9kZWxldGUiLCJzZXNzaW9uX2V4cGlyZSIsInNlc3Npb25fcmVxdWVzdCIsInNlc3Npb25fcmVxdWVzdF9zZW50Iiwic2Vzc2lvbl9ldmVudCIsInByb3Bvc2FsX2V4cGlyZSIsInNlc3Npb25fYXV0aGVudGljYXRlIiwic2Vzc2lvbl9yZXF1ZXN0X2V4cGlyZSIsImxzIiwiZGF0YWJhc2UiLCJ4ZSIsInBzIiwiY3JlYXRlZCIsInVwZGF0ZWQiLCJkZWxldGVkIiwic3luYyIsImhzIiwiZHMiLCJzdCIsInVzIiwiaXQiLCJydCIsInoiLCJudCIsInYiLCJ3Y19zZXNzaW9uUHJvcG9zZSIsInJlcSIsInR0bCIsInByb21wdCIsInRhZyIsInJlcyIsInJlamVjdCIsImF1dG9SZWplY3QiLCJ3Y19zZXNzaW9uU2V0dGxlIiwid2Nfc2Vzc2lvblVwZGF0ZSIsIndjX3Nlc3Npb25FeHRlbmQiLCJ3Y19zZXNzaW9uUmVxdWVzdCIsIndjX3Nlc3Npb25FdmVudCIsIndjX3Nlc3Npb25EZWxldGUiLCJ3Y19zZXNzaW9uUGluZyIsIndjX3Nlc3Npb25BdXRoZW50aWNhdGUiLCJtZSIsIm1pbiIsIm1heCIsIngiLCJpZGxlIiwiYWN0aXZlIiwib3QiLCJhdCIsImN0IiwiZ3MiLCJsdCIsInB0IiwiaHQiLCJkdCIsIm9lIiwiYWUiLCJ5cyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwid3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwibXMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwidXQiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJfcyIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiRXMiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImd0IiwicSIsIm8iLCJlIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwidmFsdWUiLCJJIiwiY2FsbCIsIkQiLCJScyIsImNvbnN0cnVjdG9yIiwiZXZlbnRzIiwiaW5pdGlhbGl6ZWQiLCJyZXF1ZXN0UXVldWUiLCJzdGF0ZSIsInF1ZXVlIiwic2Vzc2lvblJlcXVlc3RRdWV1ZSIsInJlcXVlc3RRdWV1ZURlbGF5IiwiZXhwZWN0ZWRQYWlyaW5nTWV0aG9kTWFwIiwiTWFwIiwicmVjZW50bHlEZWxldGVkTWFwIiwicmVjZW50bHlEZWxldGVkTGltaXQiLCJyZWxheU1lc3NhZ2VDYWNoZSIsImluaXQiLCJjbGVhbnVwIiwicmVnaXN0ZXJSZWxheWVyRXZlbnRzIiwicmVnaXN0ZXJFeHBpcmVyRXZlbnRzIiwicmVnaXN0ZXJQYWlyaW5nRXZlbnRzIiwicmVnaXN0ZXJMaW5rTW9kZUxpc3RlbmVycyIsImNsaWVudCIsImNvcmUiLCJwYWlyaW5nIiwicmVnaXN0ZXIiLCJtZXRob2RzIiwia2V5cyIsInNldFRpbWVvdXQiLCJnZXRQZW5kaW5nU2Vzc2lvblJlcXVlc3RzIiwicHJvY2Vzc1Nlc3Npb25SZXF1ZXN0UXVldWUiLCJjb25uZWN0IiwiaXNJbml0aWFsaXplZCIsImNvbmZpcm1PbmxpbmVTdGF0ZU9yVGhyb3ciLCJ0IiwicmVxdWlyZWROYW1lc3BhY2VzIiwib3B0aW9uYWxOYW1lc3BhY2VzIiwiaXNWYWxpZENvbm5lY3QiLCJwYWlyaW5nVG9waWMiLCJzIiwiaSIsInIiLCJzZXNzaW9uUHJvcGVydGllcyIsIm4iLCJyZWxheXMiLCJhIiwiYyIsImgiLCJwIiwicGFpcmluZ3MiLCJnZXQiLCJFIiwiZXJyb3IiLCJ0b3BpYyIsInVyaSIsIlMiLCJjcmVhdGUiLCJtZXNzYWdlIiwiRXJyb3IiLCJkIiwiY3J5cHRvIiwiZ2VuZXJhdGVLZXlQYWlyIiwibCIsInciLCJtIiwicHJvdG9jb2wiLCJwcm9wb3NlciIsInB1YmxpY0tleSIsIm1ldGFkYXRhIiwiZXhwaXJ5VGltZXN0YW1wIiwieSIsInJlc29sdmUiLCJfIiwiZG9uZSIsIlIiLCJvbmNlIiwic2Vzc2lvbiIsInNlbGYiLCJNIiwidHJhbnNwb3J0VHlwZSIsInJlbGF5Iiwic2V0Iiwic2V0RXhwaXJ5IiwiZXhwaXJ5IiwidXBkYXRlTWV0YWRhdGEiLCJwZWVyIiwiY2xlYW51cER1cGxpY2F0ZVBhaXJpbmdzIiwiViIsInNlbmRSZXF1ZXN0IiwibWV0aG9kIiwicGFyYW1zIiwidGhyb3dPbkZhaWxlZFB1Ymxpc2giLCJzZXRQcm9wb3NhbCIsImlkIiwiYXBwcm92YWwiLCJwYWlyIiwiYXBwcm92ZSIsImV2ZW50Q2xpZW50IiwiY3JlYXRlRXZlbnQiLCJwcm9wZXJ0aWVzIiwidG9TdHJpbmciLCJ0cmFjZSIsInNlc3Npb25fYXBwcm92ZV9zdGFydGVkIiwiTiIsInNldEVycm9yIiwibm9faW50ZXJuZXRfY29ubmVjdGlvbiIsImlzVmFsaWRQcm9wb3NhbElkIiwicHJvcG9zYWxfbm90X2ZvdW5kIiwiaXNWYWxpZEFwcHJvdmUiLCJzZXNzaW9uX2FwcHJvdmVfbmFtZXNwYWNlX3ZhbGlkYXRpb25fZmFpbHVyZSIsInJlbGF5UHJvdG9jb2wiLCJuYW1lc3BhY2VzIiwic2Vzc2lvbkNvbmZpZyIsInByb3Bvc2FsIiwiZGVsZXRlRXZlbnQiLCJldmVudElkIiwiZ2V0RXZlbnQiLCJ0eXBlIiwic2Vzc2lvbl9uYW1lc3BhY2VzX3ZhbGlkYXRpb25fc3VjY2VzcyIsImdlbmVyYXRlU2hhcmVkS2V5IiwiYWRkVHJhY2UiLCJzdWJzY3JpYmluZ19zZXNzaW9uX3RvcGljIiwicmVsYXllciIsInN1YnNjcmliZSIsInN1YnNjcmliZV9zZXNzaW9uX3RvcGljX2ZhaWx1cmUiLCJzdWJzY3JpYmVfc2Vzc2lvbl90b3BpY19zdWNjZXNzIiwiVyIsImFja25vd2xlZGdlZCIsInN0b3JlX3Nlc3Npb24iLCJwdWJsaXNoaW5nX3Nlc3Npb25fc2V0dGxlIiwiY2F0Y2giLCJzZXNzaW9uX3NldHRsZV9wdWJsaXNoX2ZhaWx1cmUiLCJzZXNzaW9uX3NldHRsZV9wdWJsaXNoX3N1Y2Nlc3MiLCJwdWJsaXNoaW5nX3Nlc3Npb25fYXBwcm92ZSIsInNlbmRSZXN1bHQiLCJyZXN1bHQiLCJyZXNwb25kZXJQdWJsaWNLZXkiLCJzZXNzaW9uX2FwcHJvdmVfcHVibGlzaF9mYWlsdXJlIiwic2Vzc2lvbl9hcHByb3ZlX3B1Ymxpc2hfc3VjY2VzcyIsImRlbGV0ZSIsInVuc3Vic2NyaWJlIiwiYWN0aXZhdGUiLCJQcm9taXNlIiwiaXNWYWxpZFJlamVjdCIsInJlYXNvbiIsInNlbmRFcnJvciIsInJwY09wdHMiLCJ1cGRhdGUiLCJpc1ZhbGlkVXBkYXRlIiwiY2xpZW50UnBjSWQiLCJyZWxheVJwY0lkIiwiZXh0ZW5kIiwiaXNWYWxpZEV4dGVuZCIsInJlcXVlc3QiLCJjaGFpbklkIiwiZ2V0QXBwTGlua0lmRW5hYmxlZCIsImFwcExpbmsiLCJlbWl0IiwiYWxsIiwiZGlzYWJsZURlZXBMaW5rIiwic3RvcmFnZSIsIndjRGVlcExpbmsiLCJ0aGVuIiwicmVzcG9uZCIsImlzVmFsaWRSZXNwb25kIiwicmVzcG9uc2UiLCJjbGVhbnVwQWZ0ZXJSZXNwb25zZSIsInBpbmciLCJpc1ZhbGlkUGluZyIsImluY2x1ZGVzIiwiaXNWYWxpZEVtaXQiLCJldmVudCIsImRpc2Nvbm5lY3QiLCJpc1ZhbGlkRGlzY29ubmVjdCIsImRlbGV0ZVNlc3Npb24iLCJlbWl0RXZlbnQiLCJmaW5kIiwiZ2V0QWxsIiwiZmlsdGVyIiwicGVuZGluZ1JlcXVlc3QiLCJhdXRoZW50aWNhdGUiLCJpc1ZhbGlkQXV0aGVudGljYXRlIiwibGlua01vZGVTdXBwb3J0ZWRBcHBzIiwicmVkaXJlY3QiLCJsaW5rTW9kZSIsImxpbmtfbW9kZSIsImNoYWlucyIsInN0YXRlbWVudCIsImRvbWFpbiIsIm5vbmNlIiwiZXhwIiwibmJmIiwicmVzb3VyY2VzIiwiaW5mbyIsImF1dGgiLCJhdXRoS2V5cyIsInJlc3BvbnNlVG9waWMiLCJwYWlyaW5nVG9waWNzIiwibGVuZ3RoIiwibmFtZXNwYWNlIiwiTyIsIlQiLCJwb3AiLCJwdXNoIiwiYXV0aFBheWxvYWQiLCJhdWQiLCJ2ZXJzaW9uIiwiaWF0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwicmVxdWVzdGVyIiwiZWlwMTU1IiwiU2V0IiwiRGUiLCJ3dCIsIlZlIiwiRWUiLCJjZSIsIm9mZiIsIkciLCJSZSIsImxlIiwiZGVsZXRlUHJvcG9zYWwiLCJaIiwiTWUiLCJkZWxldGVQZW5kaW5nQXV0aFJlcXVlc3QiLCJjb2RlIiwidGUiLCJjYWNhb3MiLCJrZSIsInJlc3BvbmRlciIsImoiLCJJZSIsIiRlIiwiY2FjYW8iLCJwcm9qZWN0SWQiLCJmZSIsInZlIiwiS2UiLCJpc3MiLCJtdCIsInFlIiwiX3QiLCJlZSIsInBlIiwidW5pdmVyc2FsIiwiYWRkTGlua01vZGVTdXBwb3J0ZWRBcHAiLCJhdXRocyIsIlNlIiwiaGlzdG9yeSIsImVuY29kZSIsImVuY29kaW5nIiwic2V0QXV0aFJlcXVlc3QiLCJ2ZXJpZnlDb250ZXh0IiwiYXBwcm92ZVNlc3Npb25BdXRoZW50aWNhdGUiLCJhdXRoZW50aWNhdGVkX3Nlc3Npb25fYXBwcm92ZV9zdGFydGVkIiwiZ2V0UGVuZGluZ0F1dGhSZXF1ZXN0IiwiYXV0aGVudGljYXRlZF9zZXNzaW9uX3BlbmRpbmdfcmVxdWVzdF9ub3RfZm91bmQiLCJyZWNlaXZlclB1YmxpY0tleSIsInNlbmRlclB1YmxpY0tleSIsImludmFsaWRfY2FjYW8iLCJlbmNvZGVPcHRzIiwiY2FjYW9zX3ZlcmlmaWVkIiwiY3JlYXRlX2F1dGhlbnRpY2F0ZWRfc2Vzc2lvbl90b3BpYyIsImF1dGhlbnRpY2F0aW9uIiwic3Vic2NyaWJpbmdfYXV0aGVudGljYXRlZF9zZXNzaW9uX3RvcGljIiwic3Vic2NyaWJlX2F1dGhlbnRpY2F0ZWRfc2Vzc2lvbl90b3BpY19mYWlsdXJlIiwic3Vic2NyaWJlX2F1dGhlbnRpY2F0ZWRfc2Vzc2lvbl90b3BpY19zdWNjZXNzIiwic3RvcmVfYXV0aGVudGljYXRlZF9zZXNzaW9uIiwicHVibGlzaGluZ19hdXRoZW50aWNhdGVkX3Nlc3Npb25fYXBwcm92ZSIsImF1dGhlbnRpY2F0ZWRfc2Vzc2lvbl9hcHByb3ZlX3B1Ymxpc2hfZmFpbHVyZSIsInJlcXVlc3RzIiwicmVqZWN0U2Vzc2lvbkF1dGhlbnRpY2F0ZSIsImZvcm1hdEF1dGhNZXNzYWdlIiwicHJvY2Vzc1JlbGF5TWVzc2FnZUNhY2hlIiwic2hpZnQiLCJvblJlbGF5TWVzc2FnZSIsInBlZXJNZXRhZGF0YSIsInVybCIsIm1hcCIsImV4cGlyZXJIYXNEZWxldGVkIiwiYWRkVG9SZWNlbnRseURlbGV0ZWQiLCJrZXljaGFpbiIsImhhcyIsImRlbGV0ZUtleVBhaXIiLCJkZWxldGVTeW1LZXkiLCJleHBpcmVyIiwiZGVsIiwicmVtb3ZlSXRlbSIsIndhcm4iLCJmb3JFYWNoIiwiZGVsZXRlUGVuZGluZ1Nlc3Npb25SZXF1ZXN0IiwicHJvcG9zYWxfZXhwaXJlZCIsInNldFBlbmRpbmdTZXNzaW9uUmVxdWVzdCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ2ZXJpZnkiLCJkZWNyeXB0ZWRJZCIsImF0dGVzdGF0aW9uIiwiZ2xvYmFsIiwiTGlua2luZyIsIm9wZW5VUkwiLCJpbnRlcm5hbCIsInB1Ymxpc2giLCJvblJlbGF5RXZlbnRSZXF1ZXN0IiwicHJvY2Vzc1JlcXVlc3RzUXVldWUiLCJwcm9jZXNzUmVxdWVzdCIsInBheWxvYWQiLCJlbmNyeXB0ZWRJZCIsInNob3VsZElnbm9yZVBhaXJpbmdSZXF1ZXN0IiwicmVxdWVzdE1ldGhvZCIsIm9uU2Vzc2lvblByb3Bvc2VSZXF1ZXN0Iiwib25TZXNzaW9uU2V0dGxlUmVxdWVzdCIsIm9uU2Vzc2lvblVwZGF0ZVJlcXVlc3QiLCJvblNlc3Npb25FeHRlbmRSZXF1ZXN0Iiwib25TZXNzaW9uUGluZ1JlcXVlc3QiLCJvblNlc3Npb25EZWxldGVSZXF1ZXN0Iiwib25TZXNzaW9uUmVxdWVzdCIsIm9uU2Vzc2lvbkV2ZW50UmVxdWVzdCIsIm9uU2Vzc2lvbkF1dGhlbnRpY2F0ZVJlcXVlc3QiLCJvblJlbGF5RXZlbnRSZXNwb25zZSIsIm9uU2Vzc2lvblByb3Bvc2VSZXNwb25zZSIsIm9uU2Vzc2lvblNldHRsZVJlc3BvbnNlIiwib25TZXNzaW9uVXBkYXRlUmVzcG9uc2UiLCJvblNlc3Npb25FeHRlbmRSZXNwb25zZSIsIm9uU2Vzc2lvblBpbmdSZXNwb25zZSIsIm9uU2Vzc2lvblJlcXVlc3RSZXNwb25zZSIsIm9uU2Vzc2lvbkF1dGhlbnRpY2F0ZVJlc3BvbnNlIiwib25SZWxheUV2ZW50VW5rbm93blBheWxvYWQiLCJsaXN0ZW5lckNvdW50IiwiZ2V0VmVyaWZ5Q29udGV4dCIsImF0dGVzdGF0aW9uSWQiLCJoYXNoIiwiY29uc29sZSIsInByb3Bvc2FsX2xpc3RlbmVyX25vdF9mb3VuZCIsImVtaXRfc2Vzc2lvbl9wcm9wb3NhbCIsInNlbGZQdWJsaWNLZXkiLCJwZWVyUHVibGljS2V5Iiwic2Vzc2lvblRvcGljIiwic3Vic2NyaXB0aW9uSWQiLCJpc1ZhbGlkU2Vzc2lvblNldHRsZVJlcXVlc3QiLCJpc1JlcXVlc3RPdXRPZlN5bmMiLCJwYXJzZUludCIsInNsaWNlIiwiY2xlYW51cFBlbmRpbmdTZW50UmVxdWVzdHNGb3JUb3BpYyIsInNpZ25Db25maWciLCJkaXNhYmxlUmVxdWVzdFF1ZXVlIiwiZW1pdFNlc3Npb25SZXF1ZXN0IiwiYWRkU2Vzc2lvblJlcXVlc3RUb1Nlc3Npb25SZXF1ZXN0UXVldWUiLCJwZW5kaW5nIiwib25QYWlyaW5nQ3JlYXRlZCIsImlzVmFsaWRQYWlyaW5nVG9waWMiLCJ2YWxpZGF0ZU5hbWVzcGFjZXMiLCJ2YWxpZGF0ZVNlc3Npb25Qcm9wcyIsImNoZWNrUmVjZW50bHlEZWxldGVkIiwiaXNWYWxpZFNlc3Npb25Ub3BpYyIsImlzVmFsaWRTZXNzaW9uT3JQYWlyaW5nVG9waWMiLCJBcnJheSIsImlzQXJyYXkiLCJ2ZXJpZmllZCIsInZlcmlmeVVybCIsInZhbGlkYXRpb24iLCJvcmlnaW4iLCJVUkwiLCJpc1NjYW0iLCJkZWJ1ZyIsInZhbHVlcyIsInNpemUiLCJpc0xpbmtNb2RlRW5hYmxlZCIsImhhbmRsZUxpbmtNb2RlTWVzc2FnZSIsImRlY29kZVVSSUNvbXBvbmVudCIsImRpc3BhdGNoRW52ZWxvcGUiLCJzZXNzaW9uRXhpc3RzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImdldEluaXRpYWxVUkwiLCJvbiIsImRlY29kZSIsImV4cGlyZWQiLCJ0YXJnZXQiLCJTcyIsInl0IiwiSXMiLCJmcyIsInZzIiwicXMiLCJUcyIsIl9lIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJlbmdpbmUiLCJsZXZlbCIsImluaXRpYWxpemUiLCJjb250ZXh0Iiwic3RhcnQiLCJOcyIsIlBzIiwiQVVUSF9DT05URVhUIiwiQVVUSF9LRVlTX0NPTlRFWFQiLCJBVVRIX1BBSVJJTkdfVE9QSUNfQ09OVEVYVCIsIkFVVEhfUFJPVE9DT0wiLCJBVVRIX1BVQkxJQ19LRVlfTkFNRSIsIkFVVEhfUkVRVUVTVF9DT05URVhUIiwiQVVUSF9TVE9SQUdFX1BSRUZJWCIsIkFVVEhfVkVSU0lPTiIsIkVOR0lORV9DT05URVhUIiwiRU5HSU5FX1FVRVVFX1NUQVRFUyIsIkVOR0lORV9SUENfT1BUUyIsIkhJU1RPUllfQ09OVEVYVCIsIkhJU1RPUllfRVZFTlRTIiwiSElTVE9SWV9TVE9SQUdFX1ZFUlNJT04iLCJNRVRIT0RTX1RPX1ZFUklGWSIsIlBST1BPU0FMX0NPTlRFWFQiLCJQUk9QT1NBTF9FWFBJUlkiLCJQUk9QT1NBTF9FWFBJUllfTUVTU0FHRSIsIlJFUVVFU1RfQ09OVEVYVCIsIlNFU1NJT05fQ09OVEVYVCIsIlNFU1NJT05fRVhQSVJZIiwiU0VTU0lPTl9SRVFVRVNUX0VYUElSWV9CT1VOREFSSUVTIiwiU0lHTl9DTElFTlRfQ09OVEVYVCIsIlNJR05fQ0xJRU5UX0RFRkFVTFQiLCJTSUdOX0NMSUVOVF9FVkVOVFMiLCJTSUdOX0NMSUVOVF9QUk9UT0NPTCIsIlNJR05fQ0xJRU5UX1NUT1JBR0VfT1BUSU9OUyIsIlNJR05fQ0xJRU5UX1NUT1JBR0VfUFJFRklYIiwiU0lHTl9DTElFTlRfVkVSU0lPTiIsIlNlc3Npb25TdG9yZSIsIlNpZ25DbGllbnQiLCJXQUxMRVRDT05ORUNUX0RFRVBMSU5LX0NIT0lDRSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./misc */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsdUZBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsbUZBQVEsR0FBR0g7QUFDeENFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsbUZBQVEsR0FBR0gsVUFDeEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL2NvbnN0YW50cy9pbmRleC5qcz8yZWUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL21pc2NcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdGltZVwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/misc.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;\nexports.ONE_HUNDRED = 100;\nexports.ONE_THOUSAND = 1000; //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvbWlzYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0JBQW9CLEdBQUdBLG1CQUFtQixHQUFHLEtBQUs7QUFDbERBLG1CQUFtQixHQUFHO0FBQ3RCQSxvQkFBb0IsR0FBRyxNQUN2QixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL21pc2MuanM/YjQzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT05FX1RIT1VTQU5EID0gZXhwb3J0cy5PTkVfSFVORFJFRCA9IHZvaWQgMDtcbmV4cG9ydHMuT05FX0hVTkRSRUQgPSAxMDA7XG5leHBvcnRzLk9ORV9USE9VU0FORCA9IDEwMDA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taXNjLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk9ORV9USE9VU0FORCIsIk9ORV9IVU5EUkVEIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/time.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;\nexports.ONE_SECOND = 1;\nexports.FIVE_SECONDS = 5;\nexports.TEN_SECONDS = 10;\nexports.THIRTY_SECONDS = 30;\nexports.SIXTY_SECONDS = 60;\nexports.ONE_MINUTE = exports.SIXTY_SECONDS;\nexports.FIVE_MINUTES = exports.ONE_MINUTE * 5;\nexports.TEN_MINUTES = exports.ONE_MINUTE * 10;\nexports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;\nexports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;\nexports.ONE_HOUR = exports.SIXTY_MINUTES;\nexports.THREE_HOURS = exports.ONE_HOUR * 3;\nexports.SIX_HOURS = exports.ONE_HOUR * 6;\nexports.TWELVE_HOURS = exports.ONE_HOUR * 12;\nexports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;\nexports.ONE_DAY = exports.TWENTY_FOUR_HOURS;\nexports.THREE_DAYS = exports.ONE_DAY * 3;\nexports.FIVE_DAYS = exports.ONE_DAY * 5;\nexports.SEVEN_DAYS = exports.ONE_DAY * 7;\nexports.THIRTY_DAYS = exports.ONE_DAY * 30;\nexports.ONE_WEEK = exports.SEVEN_DAYS;\nexports.TWO_WEEKS = exports.ONE_WEEK * 2;\nexports.THREE_WEEKS = exports.ONE_WEEK * 3;\nexports.FOUR_WEEKS = exports.ONE_WEEK * 4;\nexports.ONE_YEAR = exports.ONE_DAY * 365; //# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvdGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0JBQWdCLEdBQUdBLGtCQUFrQixHQUFHQSxtQkFBbUIsR0FBR0EsaUJBQWlCLEdBQUdBLGdCQUFnQixHQUFHQSxtQkFBbUIsR0FBR0Esa0JBQWtCLEdBQUdBLGlCQUFpQixHQUFHQSxrQkFBa0IsR0FBR0EsZUFBZSxHQUFHQSx5QkFBeUIsR0FBR0Esb0JBQW9CLEdBQUdBLGlCQUFpQixHQUFHQSxtQkFBbUIsR0FBR0EsZ0JBQWdCLEdBQUdBLHFCQUFxQixHQUFHQSxzQkFBc0IsR0FBR0EsbUJBQW1CLEdBQUdBLG9CQUFvQixHQUFHQSxrQkFBa0IsR0FBR0EscUJBQXFCLEdBQUdBLHNCQUFzQixHQUFHQSxtQkFBbUIsR0FBR0Esb0JBQW9CLEdBQUdBLGtCQUFrQixHQUFHLEtBQUs7QUFDdGlCQSxrQkFBa0IsR0FBRztBQUNyQkEsb0JBQW9CLEdBQUc7QUFDdkJBLG1CQUFtQixHQUFHO0FBQ3RCQSxzQkFBc0IsR0FBRztBQUN6QkEscUJBQXFCLEdBQUc7QUFDeEJBLGtCQUFrQixHQUFHQSxRQUFRc0IsYUFBYTtBQUMxQ3RCLG9CQUFvQixHQUFHQSxRQUFRcUIsVUFBVSxHQUFHO0FBQzVDckIsbUJBQW1CLEdBQUdBLFFBQVFxQixVQUFVLEdBQUc7QUFDM0NyQixzQkFBc0IsR0FBR0EsUUFBUXFCLFVBQVUsR0FBRztBQUM5Q3JCLHFCQUFxQixHQUFHQSxRQUFRcUIsVUFBVSxHQUFHO0FBQzdDckIsZ0JBQWdCLEdBQUdBLFFBQVFpQixhQUFhO0FBQ3hDakIsbUJBQW1CLEdBQUdBLFFBQVFnQixRQUFRLEdBQUc7QUFDekNoQixpQkFBaUIsR0FBR0EsUUFBUWdCLFFBQVEsR0FBRztBQUN2Q2hCLG9CQUFvQixHQUFHQSxRQUFRZ0IsUUFBUSxHQUFHO0FBQzFDaEIseUJBQXlCLEdBQUdBLFFBQVFnQixRQUFRLEdBQUc7QUFDL0NoQixlQUFlLEdBQUdBLFFBQVFZLGlCQUFpQjtBQUMzQ1osa0JBQWtCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN2Q1gsaUJBQWlCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN0Q1gsa0JBQWtCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN2Q1gsbUJBQW1CLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN4Q1gsZ0JBQWdCLEdBQUdBLFFBQVFRLFVBQVU7QUFDckNSLGlCQUFpQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDdkNOLG1CQUFtQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDekNOLGtCQUFrQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDeENOLGdCQUFnQixHQUFHQSxRQUFRVyxPQUFPLEdBQUcsS0FDckMsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL2NvbnN0YW50cy90aW1lLmpzP2RkZDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk9ORV9ZRUFSID0gZXhwb3J0cy5GT1VSX1dFRUtTID0gZXhwb3J0cy5USFJFRV9XRUVLUyA9IGV4cG9ydHMuVFdPX1dFRUtTID0gZXhwb3J0cy5PTkVfV0VFSyA9IGV4cG9ydHMuVEhJUlRZX0RBWVMgPSBleHBvcnRzLlNFVkVOX0RBWVMgPSBleHBvcnRzLkZJVkVfREFZUyA9IGV4cG9ydHMuVEhSRUVfREFZUyA9IGV4cG9ydHMuT05FX0RBWSA9IGV4cG9ydHMuVFdFTlRZX0ZPVVJfSE9VUlMgPSBleHBvcnRzLlRXRUxWRV9IT1VSUyA9IGV4cG9ydHMuU0lYX0hPVVJTID0gZXhwb3J0cy5USFJFRV9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgPSBleHBvcnRzLlNJWFRZX01JTlVURVMgPSBleHBvcnRzLlRISVJUWV9NSU5VVEVTID0gZXhwb3J0cy5URU5fTUlOVVRFUyA9IGV4cG9ydHMuRklWRV9NSU5VVEVTID0gZXhwb3J0cy5PTkVfTUlOVVRFID0gZXhwb3J0cy5TSVhUWV9TRUNPTkRTID0gZXhwb3J0cy5USElSVFlfU0VDT05EUyA9IGV4cG9ydHMuVEVOX1NFQ09ORFMgPSBleHBvcnRzLkZJVkVfU0VDT05EUyA9IGV4cG9ydHMuT05FX1NFQ09ORCA9IHZvaWQgMDtcbmV4cG9ydHMuT05FX1NFQ09ORCA9IDE7XG5leHBvcnRzLkZJVkVfU0VDT05EUyA9IDU7XG5leHBvcnRzLlRFTl9TRUNPTkRTID0gMTA7XG5leHBvcnRzLlRISVJUWV9TRUNPTkRTID0gMzA7XG5leHBvcnRzLlNJWFRZX1NFQ09ORFMgPSA2MDtcbmV4cG9ydHMuT05FX01JTlVURSA9IGV4cG9ydHMuU0lYVFlfU0VDT05EUztcbmV4cG9ydHMuRklWRV9NSU5VVEVTID0gZXhwb3J0cy5PTkVfTUlOVVRFICogNTtcbmV4cG9ydHMuVEVOX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgKiAxMDtcbmV4cG9ydHMuVEhJUlRZX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgKiAzMDtcbmV4cG9ydHMuU0lYVFlfTUlOVVRFUyA9IGV4cG9ydHMuT05FX01JTlVURSAqIDYwO1xuZXhwb3J0cy5PTkVfSE9VUiA9IGV4cG9ydHMuU0lYVFlfTUlOVVRFUztcbmV4cG9ydHMuVEhSRUVfSE9VUlMgPSBleHBvcnRzLk9ORV9IT1VSICogMztcbmV4cG9ydHMuU0lYX0hPVVJTID0gZXhwb3J0cy5PTkVfSE9VUiAqIDY7XG5leHBvcnRzLlRXRUxWRV9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgKiAxMjtcbmV4cG9ydHMuVFdFTlRZX0ZPVVJfSE9VUlMgPSBleHBvcnRzLk9ORV9IT1VSICogMjQ7XG5leHBvcnRzLk9ORV9EQVkgPSBleHBvcnRzLlRXRU5UWV9GT1VSX0hPVVJTO1xuZXhwb3J0cy5USFJFRV9EQVlTID0gZXhwb3J0cy5PTkVfREFZICogMztcbmV4cG9ydHMuRklWRV9EQVlTID0gZXhwb3J0cy5PTkVfREFZICogNTtcbmV4cG9ydHMuU0VWRU5fREFZUyA9IGV4cG9ydHMuT05FX0RBWSAqIDc7XG5leHBvcnRzLlRISVJUWV9EQVlTID0gZXhwb3J0cy5PTkVfREFZICogMzA7XG5leHBvcnRzLk9ORV9XRUVLID0gZXhwb3J0cy5TRVZFTl9EQVlTO1xuZXhwb3J0cy5UV09fV0VFS1MgPSBleHBvcnRzLk9ORV9XRUVLICogMjtcbmV4cG9ydHMuVEhSRUVfV0VFS1MgPSBleHBvcnRzLk9ORV9XRUVLICogMztcbmV4cG9ydHMuRk9VUl9XRUVLUyA9IGV4cG9ydHMuT05FX1dFRUsgKiA0O1xuZXhwb3J0cy5PTkVfWUVBUiA9IGV4cG9ydHMuT05FX0RBWSAqIDM2NTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpbWUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiT05FX1lFQVIiLCJGT1VSX1dFRUtTIiwiVEhSRUVfV0VFS1MiLCJUV09fV0VFS1MiLCJPTkVfV0VFSyIsIlRISVJUWV9EQVlTIiwiU0VWRU5fREFZUyIsIkZJVkVfREFZUyIsIlRIUkVFX0RBWVMiLCJPTkVfREFZIiwiVFdFTlRZX0ZPVVJfSE9VUlMiLCJUV0VMVkVfSE9VUlMiLCJTSVhfSE9VUlMiLCJUSFJFRV9IT1VSUyIsIk9ORV9IT1VSIiwiU0lYVFlfTUlOVVRFUyIsIlRISVJUWV9NSU5VVEVTIiwiVEVOX01JTlVURVMiLCJGSVZFX01JTlVURVMiLCJPTkVfTUlOVVRFIiwiU0lYVFlfU0VDT05EUyIsIlRISVJUWV9TRUNPTkRTIiwiVEVOX1NFQ09ORFMiLCJGSVZFX1NFQ09ORFMiLCJPTkVfU0VDT05EIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyx1RkFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywyRUFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx5RkFBYSxHQUFHSCxVQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvaW5kZXguanM/MjliNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93YXRjaFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/types/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyx1RkFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSCxVQUN6QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdHlwZXMvaW5kZXguanM/MzYyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93YXRjaFwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/types/watch.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.IWatch = void 0;\nclass IWatch {\n}\nexports.IWatch = IWatch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy93YXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsY0FBYyxHQUFHLEtBQUs7QUFDdEIsTUFBTUU7QUFDTjtBQUNBRixjQUFjLEdBQUdFLFFBQ2pCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy93YXRjaC5qcz80YmNkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JV2F0Y2ggPSB2b2lkIDA7XG5jbGFzcyBJV2F0Y2gge1xufVxuZXhwb3J0cy5JV2F0Y2ggPSBJV2F0Y2g7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJJV2F0Y2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/convert.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromMiliseconds = exports.toMiliseconds = void 0;\nconst constants_1 = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\");\nfunction toMiliseconds(seconds) {\n    return seconds * constants_1.ONE_THOUSAND;\n}\nexports.toMiliseconds = toMiliseconds;\nfunction fromMiliseconds(miliseconds) {\n    return Math.floor(miliseconds / constants_1.ONE_THOUSAND);\n}\nexports.fromMiliseconds = fromMiliseconds; //# sourceMappingURL=convert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9jb252ZXJ0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUN2RCxNQUFNSSxjQUFjQyxtQkFBT0EsQ0FBQywwRkFBYztBQUMxQyxTQUFTRixjQUFjRyxPQUFPO0lBQzFCLE9BQU9BLFVBQVVGLFlBQVlHLFlBQVk7QUFDN0M7QUFDQVAscUJBQXFCLEdBQUdHO0FBQ3hCLFNBQVNELGdCQUFnQk0sV0FBVztJQUNoQyxPQUFPQyxLQUFLQyxLQUFLLENBQUNGLGNBQWNKLFlBQVlHLFlBQVk7QUFDNUQ7QUFDQVAsdUJBQXVCLEdBQUdFLGlCQUMxQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvY29udmVydC5qcz85OTFkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mcm9tTWlsaXNlY29uZHMgPSBleHBvcnRzLnRvTWlsaXNlY29uZHMgPSB2b2lkIDA7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuLi9jb25zdGFudHNcIik7XG5mdW5jdGlvbiB0b01pbGlzZWNvbmRzKHNlY29uZHMpIHtcbiAgICByZXR1cm4gc2Vjb25kcyAqIGNvbnN0YW50c18xLk9ORV9USE9VU0FORDtcbn1cbmV4cG9ydHMudG9NaWxpc2Vjb25kcyA9IHRvTWlsaXNlY29uZHM7XG5mdW5jdGlvbiBmcm9tTWlsaXNlY29uZHMobWlsaXNlY29uZHMpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihtaWxpc2Vjb25kcyAvIGNvbnN0YW50c18xLk9ORV9USE9VU0FORCk7XG59XG5leHBvcnRzLmZyb21NaWxpc2Vjb25kcyA9IGZyb21NaWxpc2Vjb25kcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnZlcnQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZnJvbU1pbGlzZWNvbmRzIiwidG9NaWxpc2Vjb25kcyIsImNvbnN0YW50c18xIiwicmVxdWlyZSIsInNlY29uZHMiLCJPTkVfVEhPVVNBTkQiLCJtaWxpc2Vjb25kcyIsIk1hdGgiLCJmbG9vciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/delay.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.delay = void 0;\nfunction delay(timeout) {\n    return new Promise((resolve)=>{\n        setTimeout(()=>{\n            resolve(true);\n        }, timeout);\n    });\n}\nexports.delay = delay; //# sourceMappingURL=delay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9kZWxheS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsYUFBYSxHQUFHLEtBQUs7QUFDckIsU0FBU0UsTUFBTUMsT0FBTztJQUNsQixPQUFPLElBQUlDLFFBQVFDLENBQUFBO1FBQ2ZDLFdBQVc7WUFDUEQsUUFBUTtRQUNaLEdBQUdGO0lBQ1A7QUFDSjtBQUNBSCxhQUFhLEdBQUdFLE9BQ2hCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9kZWxheS5qcz85Yjk4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWxheSA9IHZvaWQgMDtcbmZ1bmN0aW9uIGRlbGF5KHRpbWVvdXQpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgfSwgdGltZW91dCk7XG4gICAgfSk7XG59XG5leHBvcnRzLmRlbGF5ID0gZGVsYXk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxheS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWxheSIsInRpbWVvdXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./delay */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./convert */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyx1RkFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxxRkFBVyxHQUFHSCxVQUMzQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvaW5kZXguanM/YjdjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9kZWxheVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb252ZXJ0XCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/watch.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Watch = void 0;\nclass Watch {\n    constructor(){\n        this.timestamps = new Map();\n    }\n    start(label) {\n        if (this.timestamps.has(label)) {\n            throw new Error(`Watch already started for label: ${label}`);\n        }\n        this.timestamps.set(label, {\n            started: Date.now()\n        });\n    }\n    stop(label) {\n        const timestamp = this.get(label);\n        if (typeof timestamp.elapsed !== \"undefined\") {\n            throw new Error(`Watch already stopped for label: ${label}`);\n        }\n        const elapsed = Date.now() - timestamp.started;\n        this.timestamps.set(label, {\n            started: timestamp.started,\n            elapsed\n        });\n    }\n    get(label) {\n        const timestamp = this.timestamps.get(label);\n        if (typeof timestamp === \"undefined\") {\n            throw new Error(`No timestamp found for label: ${label}`);\n        }\n        return timestamp;\n    }\n    elapsed(label) {\n        const timestamp = this.get(label);\n        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n        return elapsed;\n    }\n}\nexports.Watch = Watch;\nexports[\"default\"] = Watch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy93YXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsYUFBYSxHQUFHLEtBQUs7QUFDckIsTUFBTUU7SUFDRkMsYUFBYztRQUNWLElBQUksQ0FBQ0MsVUFBVSxHQUFHLElBQUlDO0lBQzFCO0lBQ0FDLE1BQU1DLEtBQUssRUFBRTtRQUNULElBQUksSUFBSSxDQUFDSCxVQUFVLENBQUNJLEdBQUcsQ0FBQ0QsUUFBUTtZQUM1QixNQUFNLElBQUlFLE1BQU0sQ0FBQyxpQ0FBaUMsRUFBRUYsTUFBTSxDQUFDO1FBQy9EO1FBQ0EsSUFBSSxDQUFDSCxVQUFVLENBQUNNLEdBQUcsQ0FBQ0gsT0FBTztZQUFFSSxTQUFTQyxLQUFLQyxHQUFHO1FBQUc7SUFDckQ7SUFDQUMsS0FBS1AsS0FBSyxFQUFFO1FBQ1IsTUFBTVEsWUFBWSxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Q7UUFDM0IsSUFBSSxPQUFPUSxVQUFVRSxPQUFPLEtBQUssYUFBYTtZQUMxQyxNQUFNLElBQUlSLE1BQU0sQ0FBQyxpQ0FBaUMsRUFBRUYsTUFBTSxDQUFDO1FBQy9EO1FBQ0EsTUFBTVUsVUFBVUwsS0FBS0MsR0FBRyxLQUFLRSxVQUFVSixPQUFPO1FBQzlDLElBQUksQ0FBQ1AsVUFBVSxDQUFDTSxHQUFHLENBQUNILE9BQU87WUFBRUksU0FBU0ksVUFBVUosT0FBTztZQUFFTTtRQUFRO0lBQ3JFO0lBQ0FELElBQUlULEtBQUssRUFBRTtRQUNQLE1BQU1RLFlBQVksSUFBSSxDQUFDWCxVQUFVLENBQUNZLEdBQUcsQ0FBQ1Q7UUFDdEMsSUFBSSxPQUFPUSxjQUFjLGFBQWE7WUFDbEMsTUFBTSxJQUFJTixNQUFNLENBQUMsOEJBQThCLEVBQUVGLE1BQU0sQ0FBQztRQUM1RDtRQUNBLE9BQU9RO0lBQ1g7SUFDQUUsUUFBUVYsS0FBSyxFQUFFO1FBQ1gsTUFBTVEsWUFBWSxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Q7UUFDM0IsTUFBTVUsVUFBVUYsVUFBVUUsT0FBTyxJQUFJTCxLQUFLQyxHQUFHLEtBQUtFLFVBQVVKLE9BQU87UUFDbkUsT0FBT007SUFDWDtBQUNKO0FBQ0FqQixhQUFhLEdBQUdFO0FBQ2hCRixrQkFBZSxHQUFHRSxPQUNsQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvd2F0Y2guanM/MmRjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2F0Y2ggPSB2b2lkIDA7XG5jbGFzcyBXYXRjaCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudGltZXN0YW1wcyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgc3RhcnQobGFiZWwpIHtcbiAgICAgICAgaWYgKHRoaXMudGltZXN0YW1wcy5oYXMobGFiZWwpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFdhdGNoIGFscmVhZHkgc3RhcnRlZCBmb3IgbGFiZWw6ICR7bGFiZWx9YCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50aW1lc3RhbXBzLnNldChsYWJlbCwgeyBzdGFydGVkOiBEYXRlLm5vdygpIH0pO1xuICAgIH1cbiAgICBzdG9wKGxhYmVsKSB7XG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IHRoaXMuZ2V0KGxhYmVsKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aW1lc3RhbXAuZWxhcHNlZCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBXYXRjaCBhbHJlYWR5IHN0b3BwZWQgZm9yIGxhYmVsOiAke2xhYmVsfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVsYXBzZWQgPSBEYXRlLm5vdygpIC0gdGltZXN0YW1wLnN0YXJ0ZWQ7XG4gICAgICAgIHRoaXMudGltZXN0YW1wcy5zZXQobGFiZWwsIHsgc3RhcnRlZDogdGltZXN0YW1wLnN0YXJ0ZWQsIGVsYXBzZWQgfSk7XG4gICAgfVxuICAgIGdldChsYWJlbCkge1xuICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSB0aGlzLnRpbWVzdGFtcHMuZ2V0KGxhYmVsKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aW1lc3RhbXAgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gdGltZXN0YW1wIGZvdW5kIGZvciBsYWJlbDogJHtsYWJlbH1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGltZXN0YW1wO1xuICAgIH1cbiAgICBlbGFwc2VkKGxhYmVsKSB7XG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IHRoaXMuZ2V0KGxhYmVsKTtcbiAgICAgICAgY29uc3QgZWxhcHNlZCA9IHRpbWVzdGFtcC5lbGFwc2VkIHx8IERhdGUubm93KCkgLSB0aW1lc3RhbXAuc3RhcnRlZDtcbiAgICAgICAgcmV0dXJuIGVsYXBzZWQ7XG4gICAgfVxufVxuZXhwb3J0cy5XYXRjaCA9IFdhdGNoO1xuZXhwb3J0cy5kZWZhdWx0ID0gV2F0Y2g7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJXYXRjaCIsImNvbnN0cnVjdG9yIiwidGltZXN0YW1wcyIsIk1hcCIsInN0YXJ0IiwibGFiZWwiLCJoYXMiLCJFcnJvciIsInNldCIsInN0YXJ0ZWQiLCJEYXRlIiwibm93Iiwic3RvcCIsInRpbWVzdGFtcCIsImdldCIsImVsYXBzZWQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nfunction __createBinding(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}\nfunction __exportStar(m, exports) {\n    for(var p in m)if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n;\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/types/dist/index.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/types/dist/index.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ICore: () => (/* binding */ n),\n/* harmony export */   ICrypto: () => (/* binding */ l),\n/* harmony export */   IEchoClient: () => (/* binding */ v),\n/* harmony export */   IEngine: () => (/* binding */ M),\n/* harmony export */   IEngineEvents: () => (/* binding */ w),\n/* harmony export */   IEventClient: () => (/* binding */ C),\n/* harmony export */   IExpirer: () => (/* binding */ x),\n/* harmony export */   IJsonRpcHistory: () => (/* binding */ h),\n/* harmony export */   IKeyChain: () => (/* binding */ E),\n/* harmony export */   IMessageTracker: () => (/* binding */ a),\n/* harmony export */   IPairing: () => (/* binding */ m),\n/* harmony export */   IPublisher: () => (/* binding */ g),\n/* harmony export */   IRelayer: () => (/* binding */ u),\n/* harmony export */   ISignClient: () => (/* binding */ S),\n/* harmony export */   ISignClientEvents: () => (/* binding */ b),\n/* harmony export */   IStore: () => (/* binding */ p),\n/* harmony export */   ISubscriber: () => (/* binding */ d),\n/* harmony export */   ISubscriberTopicMap: () => (/* binding */ I),\n/* harmony export */   IVerify: () => (/* binding */ y)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super(), this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass l {\n    constructor(s, t, e){\n        this.core = s, this.logger = t;\n    }\n}\nclass h extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t, this.records = new Map;\n    }\n}\nclass a {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass g extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass u extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super();\n    }\n}\nclass p {\n    constructor(s, t, e, f){\n        this.core = s, this.logger = t, this.name = e;\n    }\n}\nclass I {\n    constructor(){\n        this.map = new Map;\n    }\n}\nclass d extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass E {\n    constructor(s, t){\n        this.core = s, this.logger = t;\n    }\n}\nclass x extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t;\n    }\n}\nclass m {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass y {\n    constructor(s, t, e){\n        this.core = s, this.logger = t, this.store = e;\n    }\n}\nclass v {\n    constructor(s, t){\n        this.projectId = s, this.logger = t;\n    }\n}\nclass C {\n    constructor(s, t, e){\n        this.core = s, this.logger = t, this.telemetryEnabled = e;\n    }\n}\nclass b extends (events__WEBPACK_IMPORTED_MODULE_1___default()) {\n    constructor(){\n        super();\n    }\n}\nclass S {\n    constructor(s){\n        this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass w extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    constructor(){\n        super();\n    }\n}\nclass M {\n    constructor(s){\n        this.client = s;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdHlwZXMvZGlzdC9pbmRleC5lcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQXlDO0FBQUEsTUFBTUssVUFBVUosMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssSUFBRyxJQUFJLENBQUNDLElBQUksR0FBQ0QsR0FBRSxJQUFJLENBQUNFLFFBQVEsR0FBQyxNQUFLLElBQUksQ0FBQ0MsT0FBTyxHQUFDO0lBQUM7QUFBQztBQUFDLE1BQU1DO0lBQUVMLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLElBQUksR0FBQ1AsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0g7SUFBQztBQUFDO0FBQUMsTUFBTUksVUFBVWYsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ0UsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ0ssT0FBTyxHQUFDLElBQUlDO0lBQUc7QUFBQztBQUFDLE1BQU1DO0lBQUViLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRyxNQUFNLEdBQUNSLEdBQUUsSUFBSSxDQUFDTyxJQUFJLEdBQUNGO0lBQUM7QUFBQztBQUFDLE1BQU1RLFVBQVVuQiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxLQUFLLElBQUcsSUFBSSxDQUFDUyxPQUFPLEdBQUNkLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1VLFVBQVVyQiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxDQUFDO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNZ0I7SUFBRWpCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLEVBQUNXLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ1YsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ2EsSUFBSSxHQUFDWjtJQUFDO0FBQUM7QUFBQyxNQUFNYTtJQUFFcEIsYUFBYTtRQUFDLElBQUksQ0FBQ3FCLEdBQUcsR0FBQyxJQUFJVDtJQUFHO0FBQUM7QUFBQyxNQUFNVSxVQUFVM0IsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ1MsT0FBTyxHQUFDZCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNaUI7SUFBRXZCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRSxJQUFJLEdBQUNQLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1rQixVQUFVN0IsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ0UsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNbUI7SUFBRXpCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRyxNQUFNLEdBQUNSLEdBQUUsSUFBSSxDQUFDTyxJQUFJLEdBQUNGO0lBQUM7QUFBQztBQUFDLE1BQU1vQjtJQUFFMUIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLEVBQUNDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ0MsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ3FCLEtBQUssR0FBQ3BCO0lBQUM7QUFBQztBQUFDLE1BQU1xQjtJQUFFNUIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUN1QixTQUFTLEdBQUM1QixHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNd0I7SUFBRTlCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLElBQUksR0FBQ1AsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0gsR0FBRSxJQUFJLENBQUN5QixnQkFBZ0IsR0FBQ3hCO0lBQUM7QUFBQztBQUFDLE1BQU15QixVQUFVcEMsK0NBQUNBO0lBQUNJLGFBQWE7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUFDLE1BQU1pQztJQUFFakMsWUFBWUMsQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDQyxJQUFJLEdBQUNELEdBQUUsSUFBSSxDQUFDRSxRQUFRLEdBQUMsTUFBSyxJQUFJLENBQUNDLE9BQU8sR0FBQztJQUFDO0FBQUM7QUFBQyxNQUFNOEIsVUFBVXBDLGdEQUFDQTtJQUFDRSxhQUFhO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNbUM7SUFBRW5DLFlBQVlDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ21DLE1BQU0sR0FBQ25DO0lBQUM7QUFBQztBQUFrVSxDQUNyaEQsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90eXBlcy9kaXN0L2luZGV4LmVzLmpzPzYwYTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0e0lFdmVudHMgYXMgb31mcm9tXCJAd2FsbGV0Y29ubmVjdC9ldmVudHNcIjtpbXBvcnQgYyx7RXZlbnRFbWl0dGVyIGFzIGl9ZnJvbVwiZXZlbnRzXCI7Y2xhc3MgbiBleHRlbmRzIG97Y29uc3RydWN0b3Iocyl7c3VwZXIoKSx0aGlzLm9wdHM9cyx0aGlzLnByb3RvY29sPVwid2NcIix0aGlzLnZlcnNpb249Mn19Y2xhc3MgbHtjb25zdHJ1Y3RvcihzLHQsZSl7dGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dH19Y2xhc3MgaCBleHRlbmRzIG97Y29uc3RydWN0b3Iocyx0KXtzdXBlcigpLHRoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXQsdGhpcy5yZWNvcmRzPW5ldyBNYXB9fWNsYXNzIGF7Y29uc3RydWN0b3Iocyx0KXt0aGlzLmxvZ2dlcj1zLHRoaXMuY29yZT10fX1jbGFzcyBnIGV4dGVuZHMgb3tjb25zdHJ1Y3RvcihzLHQpe3N1cGVyKCksdGhpcy5yZWxheWVyPXMsdGhpcy5sb2dnZXI9dH19Y2xhc3MgdSBleHRlbmRzIG97Y29uc3RydWN0b3Iocyl7c3VwZXIoKX19Y2xhc3MgcHtjb25zdHJ1Y3RvcihzLHQsZSxmKXt0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10LHRoaXMubmFtZT1lfX1jbGFzcyBJe2NvbnN0cnVjdG9yKCl7dGhpcy5tYXA9bmV3IE1hcH19Y2xhc3MgZCBleHRlbmRzIG97Y29uc3RydWN0b3Iocyx0KXtzdXBlcigpLHRoaXMucmVsYXllcj1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIEV7Y29uc3RydWN0b3Iocyx0KXt0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyB4IGV4dGVuZHMgb3tjb25zdHJ1Y3RvcihzLHQpe3N1cGVyKCksdGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dH19Y2xhc3MgbXtjb25zdHJ1Y3RvcihzLHQpe3RoaXMubG9nZ2VyPXMsdGhpcy5jb3JlPXR9fWNsYXNzIHl7Y29uc3RydWN0b3Iocyx0LGUpe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXQsdGhpcy5zdG9yZT1lfX1jbGFzcyB2e2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5wcm9qZWN0SWQ9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyBDe2NvbnN0cnVjdG9yKHMsdCxlKXt0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10LHRoaXMudGVsZW1ldHJ5RW5hYmxlZD1lfX1jbGFzcyBiIGV4dGVuZHMgY3tjb25zdHJ1Y3Rvcigpe3N1cGVyKCl9fWNsYXNzIFN7Y29uc3RydWN0b3Iocyl7dGhpcy5vcHRzPXMsdGhpcy5wcm90b2NvbD1cIndjXCIsdGhpcy52ZXJzaW9uPTJ9fWNsYXNzIHcgZXh0ZW5kcyBpe2NvbnN0cnVjdG9yKCl7c3VwZXIoKX19Y2xhc3MgTXtjb25zdHJ1Y3RvcihzKXt0aGlzLmNsaWVudD1zfX1leHBvcnR7biBhcyBJQ29yZSxsIGFzIElDcnlwdG8sdiBhcyBJRWNob0NsaWVudCxNIGFzIElFbmdpbmUsdyBhcyBJRW5naW5lRXZlbnRzLEMgYXMgSUV2ZW50Q2xpZW50LHggYXMgSUV4cGlyZXIsaCBhcyBJSnNvblJwY0hpc3RvcnksRSBhcyBJS2V5Q2hhaW4sYSBhcyBJTWVzc2FnZVRyYWNrZXIsbSBhcyBJUGFpcmluZyxnIGFzIElQdWJsaXNoZXIsdSBhcyBJUmVsYXllcixTIGFzIElTaWduQ2xpZW50LGIgYXMgSVNpZ25DbGllbnRFdmVudHMscCBhcyBJU3RvcmUsZCBhcyBJU3Vic2NyaWJlcixJIGFzIElTdWJzY3JpYmVyVG9waWNNYXAseSBhcyBJVmVyaWZ5fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbIklFdmVudHMiLCJvIiwiYyIsIkV2ZW50RW1pdHRlciIsImkiLCJuIiwiY29uc3RydWN0b3IiLCJzIiwib3B0cyIsInByb3RvY29sIiwidmVyc2lvbiIsImwiLCJ0IiwiZSIsImNvcmUiLCJsb2dnZXIiLCJoIiwicmVjb3JkcyIsIk1hcCIsImEiLCJnIiwicmVsYXllciIsInUiLCJwIiwiZiIsIm5hbWUiLCJJIiwibWFwIiwiZCIsIkUiLCJ4IiwibSIsInkiLCJzdG9yZSIsInYiLCJwcm9qZWN0SWQiLCJDIiwidGVsZW1ldHJ5RW5hYmxlZCIsImIiLCJTIiwidyIsIk0iLCJjbGllbnQiLCJJQ29yZSIsIklDcnlwdG8iLCJJRWNob0NsaWVudCIsIklFbmdpbmUiLCJJRW5naW5lRXZlbnRzIiwiSUV2ZW50Q2xpZW50IiwiSUV4cGlyZXIiLCJJSnNvblJwY0hpc3RvcnkiLCJJS2V5Q2hhaW4iLCJJTWVzc2FnZVRyYWNrZXIiLCJJUGFpcmluZyIsIklQdWJsaXNoZXIiLCJJUmVsYXllciIsIklTaWduQ2xpZW50IiwiSVNpZ25DbGllbnRFdmVudHMiLCJJU3RvcmUiLCJJU3Vic2NyaWJlciIsIklTdWJzY3JpYmVyVG9waWNNYXAiLCJJVmVyaWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/universal-provider/dist/index.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/dist/index.es.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniversalProvider: () => (/* binding */ Ev),\n/* harmony export */   \"default\": () => (/* binding */ dr)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/sign-client */ \"(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-http-connection */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\nconst ya = \"error\", Yg = \"wss://relay.walletconnect.org\", Zg = \"wc\", Xg = \"universal_provider\", Sa = `${Zg}@2:${Xg}:`, Oa = \"https://rpc.walletconnect.org/v1/\", ze = \"generic\", Qg = `${Oa}bundler`, Tt = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\"\n};\nvar _n = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, qi = {\n    exports: {}\n}; /**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */ \n(function(P, s) {\n    (function() {\n        var i, p = \"4.17.21\", w = 200, I = \"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\", y = \"Expected a function\", J = \"Invalid `variable` option passed into `_.template`\", Ht = \"__lodash_hash_undefined__\", Ke = 500, Ie = \"__lodash_placeholder__\", Dt = 1, Bt = 2, xe = 4, Ee = 1, mn = 2, vt = 1, he = 2, Gi = 4, Nt = 8, ye = 16, $t = 32, Se = 64, Gt = 128, Je = 256, gr = 512, Ma = 30, Ba = \"...\", Ga = 800, za = 16, zi = 1, Ka = 2, Ja = 3, le = 1 / 0, ee = 9007199254740991, Ya = 17976931348623157e292, wn = 0 / 0, Ut = 4294967295, Za = Ut - 1, Xa = Ut >>> 1, Qa = [\n            [\n                \"ary\",\n                Gt\n            ],\n            [\n                \"bind\",\n                vt\n            ],\n            [\n                \"bindKey\",\n                he\n            ],\n            [\n                \"curry\",\n                Nt\n            ],\n            [\n                \"curryRight\",\n                ye\n            ],\n            [\n                \"flip\",\n                gr\n            ],\n            [\n                \"partial\",\n                $t\n            ],\n            [\n                \"partialRight\",\n                Se\n            ],\n            [\n                \"rearg\",\n                Je\n            ]\n        ], Oe = \"[object Arguments]\", Pn = \"[object Array]\", Va = \"[object AsyncFunction]\", Ye = \"[object Boolean]\", Ze = \"[object Date]\", ka = \"[object DOMException]\", Cn = \"[object Error]\", An = \"[object Function]\", Ki = \"[object GeneratorFunction]\", Et = \"[object Map]\", Xe = \"[object Number]\", ja = \"[object Null]\", zt = \"[object Object]\", Ji = \"[object Promise]\", to = \"[object Proxy]\", Qe = \"[object RegExp]\", yt = \"[object Set]\", Ve = \"[object String]\", In = \"[object Symbol]\", eo = \"[object Undefined]\", ke = \"[object WeakMap]\", no = \"[object WeakSet]\", je = \"[object ArrayBuffer]\", Re = \"[object DataView]\", vr = \"[object Float32Array]\", _r = \"[object Float64Array]\", mr = \"[object Int8Array]\", wr = \"[object Int16Array]\", Pr = \"[object Int32Array]\", Cr = \"[object Uint8Array]\", Ar = \"[object Uint8ClampedArray]\", Ir = \"[object Uint16Array]\", xr = \"[object Uint32Array]\", ro = /\\b__p \\+= '';/g, io = /\\b(__p \\+=) '' \\+/g, so = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g, Yi = /&(?:amp|lt|gt|quot|#39);/g, Zi = /[&<>\"']/g, uo = RegExp(Yi.source), ao = RegExp(Zi.source), oo = /<%-([\\s\\S]+?)%>/g, co = /<%([\\s\\S]+?)%>/g, Xi = /<%=([\\s\\S]+?)%>/g, fo = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/, ho = /^\\w*$/, lo = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, Er = /[\\\\^$.*+?()[\\]{}|]/g, po = RegExp(Er.source), yr = /^\\s+/, go = /\\s/, vo = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/, _o = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/, mo = /,? & /, wo = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g, Po = /[()=,{}\\[\\]\\/\\s]/, Co = /\\\\(\\\\)?/g, Ao = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g, Qi = /\\w*$/, Io = /^[-+]0x[0-9a-f]+$/i, xo = /^0b[01]+$/i, Eo = /^\\[object .+?Constructor\\]$/, yo = /^0o[0-7]+$/i, So = /^(?:0|[1-9]\\d*)$/, Oo = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g, xn = /($^)/, Ro = /['\\n\\r\\u2028\\u2029\\\\]/g, En = \"\\ud800-\\udfff\", bo = \"\\\\u0300-\\\\u036f\", To = \"\\\\ufe20-\\\\ufe2f\", Lo = \"\\\\u20d0-\\\\u20ff\", Vi = bo + To + Lo, ki = \"\\\\u2700-\\\\u27bf\", ji = \"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\", Ho = \"\\\\xac\\\\xb1\\\\xd7\\\\xf7\", Do = \"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\", No = \"\\\\u2000-\\\\u206f\", $o = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\", ts = \"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\", es = \"\\\\ufe0e\\\\ufe0f\", ns = Ho + Do + No + $o, Sr = \"['’]\", Uo = \"[\" + En + \"]\", rs = \"[\" + ns + \"]\", yn = \"[\" + Vi + \"]\", is = \"\\\\d+\", qo = \"[\" + ki + \"]\", ss = \"[\" + ji + \"]\", us = \"[^\" + En + ns + is + ki + ji + ts + \"]\", Or = \"\\ud83c[\\udffb-\\udfff]\", Fo = \"(?:\" + yn + \"|\" + Or + \")\", as = \"[^\" + En + \"]\", Rr = \"(?:\\ud83c[\\udde6-\\uddff]){2}\", br = \"[\\ud800-\\udbff][\\udc00-\\udfff]\", be = \"[\" + ts + \"]\", os = \"\\\\u200d\", cs = \"(?:\" + ss + \"|\" + us + \")\", Wo = \"(?:\" + be + \"|\" + us + \")\", fs = \"(?:\" + Sr + \"(?:d|ll|m|re|s|t|ve))?\", hs = \"(?:\" + Sr + \"(?:D|LL|M|RE|S|T|VE))?\", ls = Fo + \"?\", ps = \"[\" + es + \"]?\", Mo = \"(?:\" + os + \"(?:\" + [\n            as,\n            Rr,\n            br\n        ].join(\"|\") + \")\" + ps + ls + \")*\", Bo = \"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\", Go = \"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\", ds = ps + ls + Mo, zo = \"(?:\" + [\n            qo,\n            Rr,\n            br\n        ].join(\"|\") + \")\" + ds, Ko = \"(?:\" + [\n            as + yn + \"?\",\n            yn,\n            Rr,\n            br,\n            Uo\n        ].join(\"|\") + \")\", Jo = RegExp(Sr, \"g\"), Yo = RegExp(yn, \"g\"), Tr = RegExp(Or + \"(?=\" + Or + \")|\" + Ko + ds, \"g\"), Zo = RegExp([\n            be + \"?\" + ss + \"+\" + fs + \"(?=\" + [\n                rs,\n                be,\n                \"$\"\n            ].join(\"|\") + \")\",\n            Wo + \"+\" + hs + \"(?=\" + [\n                rs,\n                be + cs,\n                \"$\"\n            ].join(\"|\") + \")\",\n            be + \"?\" + cs + \"+\" + fs,\n            be + \"+\" + hs,\n            Go,\n            Bo,\n            is,\n            zo\n        ].join(\"|\"), \"g\"), Xo = RegExp(\"[\" + os + En + Vi + es + \"]\"), Qo = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Vo = [\n            \"Array\",\n            \"Buffer\",\n            \"DataView\",\n            \"Date\",\n            \"Error\",\n            \"Float32Array\",\n            \"Float64Array\",\n            \"Function\",\n            \"Int8Array\",\n            \"Int16Array\",\n            \"Int32Array\",\n            \"Map\",\n            \"Math\",\n            \"Object\",\n            \"Promise\",\n            \"RegExp\",\n            \"Set\",\n            \"String\",\n            \"Symbol\",\n            \"TypeError\",\n            \"Uint8Array\",\n            \"Uint8ClampedArray\",\n            \"Uint16Array\",\n            \"Uint32Array\",\n            \"WeakMap\",\n            \"_\",\n            \"clearTimeout\",\n            \"isFinite\",\n            \"parseInt\",\n            \"setTimeout\"\n        ], ko = -1, G = {};\n        G[vr] = G[_r] = G[mr] = G[wr] = G[Pr] = G[Cr] = G[Ar] = G[Ir] = G[xr] = !0, G[Oe] = G[Pn] = G[je] = G[Ye] = G[Re] = G[Ze] = G[Cn] = G[An] = G[Et] = G[Xe] = G[zt] = G[Qe] = G[yt] = G[Ve] = G[ke] = !1;\n        var B = {};\n        B[Oe] = B[Pn] = B[je] = B[Re] = B[Ye] = B[Ze] = B[vr] = B[_r] = B[mr] = B[wr] = B[Pr] = B[Et] = B[Xe] = B[zt] = B[Qe] = B[yt] = B[Ve] = B[In] = B[Cr] = B[Ar] = B[Ir] = B[xr] = !0, B[Cn] = B[An] = B[ke] = !1;\n        var jo = {\n            À: \"A\",\n            Á: \"A\",\n            Â: \"A\",\n            Ã: \"A\",\n            Ä: \"A\",\n            Å: \"A\",\n            à: \"a\",\n            á: \"a\",\n            â: \"a\",\n            ã: \"a\",\n            ä: \"a\",\n            å: \"a\",\n            Ç: \"C\",\n            ç: \"c\",\n            Ð: \"D\",\n            ð: \"d\",\n            È: \"E\",\n            É: \"E\",\n            Ê: \"E\",\n            Ë: \"E\",\n            è: \"e\",\n            é: \"e\",\n            ê: \"e\",\n            ë: \"e\",\n            Ì: \"I\",\n            Í: \"I\",\n            Î: \"I\",\n            Ï: \"I\",\n            ì: \"i\",\n            í: \"i\",\n            î: \"i\",\n            ï: \"i\",\n            Ñ: \"N\",\n            ñ: \"n\",\n            Ò: \"O\",\n            Ó: \"O\",\n            Ô: \"O\",\n            Õ: \"O\",\n            Ö: \"O\",\n            Ø: \"O\",\n            ò: \"o\",\n            ó: \"o\",\n            ô: \"o\",\n            õ: \"o\",\n            ö: \"o\",\n            ø: \"o\",\n            Ù: \"U\",\n            Ú: \"U\",\n            Û: \"U\",\n            Ü: \"U\",\n            ù: \"u\",\n            ú: \"u\",\n            û: \"u\",\n            ü: \"u\",\n            Ý: \"Y\",\n            ý: \"y\",\n            ÿ: \"y\",\n            Æ: \"Ae\",\n            æ: \"ae\",\n            Þ: \"Th\",\n            þ: \"th\",\n            ß: \"ss\",\n            Ā: \"A\",\n            Ă: \"A\",\n            Ą: \"A\",\n            ā: \"a\",\n            ă: \"a\",\n            ą: \"a\",\n            Ć: \"C\",\n            Ĉ: \"C\",\n            Ċ: \"C\",\n            Č: \"C\",\n            ć: \"c\",\n            ĉ: \"c\",\n            ċ: \"c\",\n            č: \"c\",\n            Ď: \"D\",\n            Đ: \"D\",\n            ď: \"d\",\n            đ: \"d\",\n            Ē: \"E\",\n            Ĕ: \"E\",\n            Ė: \"E\",\n            Ę: \"E\",\n            Ě: \"E\",\n            ē: \"e\",\n            ĕ: \"e\",\n            ė: \"e\",\n            ę: \"e\",\n            ě: \"e\",\n            Ĝ: \"G\",\n            Ğ: \"G\",\n            Ġ: \"G\",\n            Ģ: \"G\",\n            ĝ: \"g\",\n            ğ: \"g\",\n            ġ: \"g\",\n            ģ: \"g\",\n            Ĥ: \"H\",\n            Ħ: \"H\",\n            ĥ: \"h\",\n            ħ: \"h\",\n            Ĩ: \"I\",\n            Ī: \"I\",\n            Ĭ: \"I\",\n            Į: \"I\",\n            İ: \"I\",\n            ĩ: \"i\",\n            ī: \"i\",\n            ĭ: \"i\",\n            į: \"i\",\n            ı: \"i\",\n            Ĵ: \"J\",\n            ĵ: \"j\",\n            Ķ: \"K\",\n            ķ: \"k\",\n            ĸ: \"k\",\n            Ĺ: \"L\",\n            Ļ: \"L\",\n            Ľ: \"L\",\n            Ŀ: \"L\",\n            Ł: \"L\",\n            ĺ: \"l\",\n            ļ: \"l\",\n            ľ: \"l\",\n            ŀ: \"l\",\n            ł: \"l\",\n            Ń: \"N\",\n            Ņ: \"N\",\n            Ň: \"N\",\n            Ŋ: \"N\",\n            ń: \"n\",\n            ņ: \"n\",\n            ň: \"n\",\n            ŋ: \"n\",\n            Ō: \"O\",\n            Ŏ: \"O\",\n            Ő: \"O\",\n            ō: \"o\",\n            ŏ: \"o\",\n            ő: \"o\",\n            Ŕ: \"R\",\n            Ŗ: \"R\",\n            Ř: \"R\",\n            ŕ: \"r\",\n            ŗ: \"r\",\n            ř: \"r\",\n            Ś: \"S\",\n            Ŝ: \"S\",\n            Ş: \"S\",\n            Š: \"S\",\n            ś: \"s\",\n            ŝ: \"s\",\n            ş: \"s\",\n            š: \"s\",\n            Ţ: \"T\",\n            Ť: \"T\",\n            Ŧ: \"T\",\n            ţ: \"t\",\n            ť: \"t\",\n            ŧ: \"t\",\n            Ũ: \"U\",\n            Ū: \"U\",\n            Ŭ: \"U\",\n            Ů: \"U\",\n            Ű: \"U\",\n            Ų: \"U\",\n            ũ: \"u\",\n            ū: \"u\",\n            ŭ: \"u\",\n            ů: \"u\",\n            ű: \"u\",\n            ų: \"u\",\n            Ŵ: \"W\",\n            ŵ: \"w\",\n            Ŷ: \"Y\",\n            ŷ: \"y\",\n            Ÿ: \"Y\",\n            Ź: \"Z\",\n            Ż: \"Z\",\n            Ž: \"Z\",\n            ź: \"z\",\n            ż: \"z\",\n            ž: \"z\",\n            Ĳ: \"IJ\",\n            ĳ: \"ij\",\n            Œ: \"Oe\",\n            œ: \"oe\",\n            ŉ: \"'n\",\n            ſ: \"s\"\n        }, tc = {\n            \"&\": \"&amp;\",\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&#39;\"\n        }, ec = {\n            \"&amp;\": \"&\",\n            \"&lt;\": \"<\",\n            \"&gt;\": \">\",\n            \"&quot;\": '\"',\n            \"&#39;\": \"'\"\n        }, nc = {\n            \"\\\\\": \"\\\\\",\n            \"'\": \"'\",\n            \"\\n\": \"n\",\n            \"\\r\": \"r\",\n            \"\\u2028\": \"u2028\",\n            \"\\u2029\": \"u2029\"\n        }, rc = parseFloat, ic = parseInt, gs = typeof _n == \"object\" && _n && _n.Object === Object && _n, sc = typeof self == \"object\" && self && self.Object === Object && self, j = gs || sc || Function(\"return this\")(), Lr = s && !s.nodeType && s, pe = Lr && !0 && P && !P.nodeType && P, vs = pe && pe.exports === Lr, Hr = vs && gs.process, _t = function() {\n            try {\n                var h = pe && pe.require && pe.require(\"util\").types;\n                return h || Hr && Hr.binding && Hr.binding(\"util\");\n            } catch  {}\n        }(), _s = _t && _t.isArrayBuffer, ms = _t && _t.isDate, ws = _t && _t.isMap, Ps = _t && _t.isRegExp, Cs = _t && _t.isSet, As = _t && _t.isTypedArray;\n        function ft(h, g, d) {\n            switch(d.length){\n                case 0:\n                    return h.call(g);\n                case 1:\n                    return h.call(g, d[0]);\n                case 2:\n                    return h.call(g, d[0], d[1]);\n                case 3:\n                    return h.call(g, d[0], d[1], d[2]);\n            }\n            return h.apply(g, d);\n        }\n        function uc(h, g, d, A) {\n            for(var R = -1, U = h == null ? 0 : h.length; ++R < U;){\n                var Q = h[R];\n                g(A, Q, d(Q), h);\n            }\n            return A;\n        }\n        function mt(h, g) {\n            for(var d = -1, A = h == null ? 0 : h.length; ++d < A && g(h[d], d, h) !== !1;);\n            return h;\n        }\n        function ac(h, g) {\n            for(var d = h == null ? 0 : h.length; d-- && g(h[d], d, h) !== !1;);\n            return h;\n        }\n        function Is(h, g) {\n            for(var d = -1, A = h == null ? 0 : h.length; ++d < A;)if (!g(h[d], d, h)) return !1;\n            return !0;\n        }\n        function ne(h, g) {\n            for(var d = -1, A = h == null ? 0 : h.length, R = 0, U = []; ++d < A;){\n                var Q = h[d];\n                g(Q, d, h) && (U[R++] = Q);\n            }\n            return U;\n        }\n        function Sn(h, g) {\n            var d = h == null ? 0 : h.length;\n            return !!d && Te(h, g, 0) > -1;\n        }\n        function Dr(h, g, d) {\n            for(var A = -1, R = h == null ? 0 : h.length; ++A < R;)if (d(g, h[A])) return !0;\n            return !1;\n        }\n        function z(h, g) {\n            for(var d = -1, A = h == null ? 0 : h.length, R = Array(A); ++d < A;)R[d] = g(h[d], d, h);\n            return R;\n        }\n        function re(h, g) {\n            for(var d = -1, A = g.length, R = h.length; ++d < A;)h[R + d] = g[d];\n            return h;\n        }\n        function Nr(h, g, d, A) {\n            var R = -1, U = h == null ? 0 : h.length;\n            for(A && U && (d = h[++R]); ++R < U;)d = g(d, h[R], R, h);\n            return d;\n        }\n        function oc(h, g, d, A) {\n            var R = h == null ? 0 : h.length;\n            for(A && R && (d = h[--R]); R--;)d = g(d, h[R], R, h);\n            return d;\n        }\n        function $r(h, g) {\n            for(var d = -1, A = h == null ? 0 : h.length; ++d < A;)if (g(h[d], d, h)) return !0;\n            return !1;\n        }\n        var cc = Ur(\"length\");\n        function fc(h) {\n            return h.split(\"\");\n        }\n        function hc(h) {\n            return h.match(wo) || [];\n        }\n        function xs(h, g, d) {\n            var A;\n            return d(h, function(R, U, Q) {\n                if (g(R, U, Q)) return A = U, !1;\n            }), A;\n        }\n        function On(h, g, d, A) {\n            for(var R = h.length, U = d + (A ? 1 : -1); A ? U-- : ++U < R;)if (g(h[U], U, h)) return U;\n            return -1;\n        }\n        function Te(h, g, d) {\n            return g === g ? Ic(h, g, d) : On(h, Es, d);\n        }\n        function lc(h, g, d, A) {\n            for(var R = d - 1, U = h.length; ++R < U;)if (A(h[R], g)) return R;\n            return -1;\n        }\n        function Es(h) {\n            return h !== h;\n        }\n        function ys(h, g) {\n            var d = h == null ? 0 : h.length;\n            return d ? Fr(h, g) / d : wn;\n        }\n        function Ur(h) {\n            return function(g) {\n                return g == null ? i : g[h];\n            };\n        }\n        function qr(h) {\n            return function(g) {\n                return h == null ? i : h[g];\n            };\n        }\n        function Ss(h, g, d, A, R) {\n            return R(h, function(U, Q, M) {\n                d = A ? (A = !1, U) : g(d, U, Q, M);\n            }), d;\n        }\n        function pc(h, g) {\n            var d = h.length;\n            for(h.sort(g); d--;)h[d] = h[d].value;\n            return h;\n        }\n        function Fr(h, g) {\n            for(var d, A = -1, R = h.length; ++A < R;){\n                var U = g(h[A]);\n                U !== i && (d = d === i ? U : d + U);\n            }\n            return d;\n        }\n        function Wr(h, g) {\n            for(var d = -1, A = Array(h); ++d < h;)A[d] = g(d);\n            return A;\n        }\n        function dc(h, g) {\n            return z(g, function(d) {\n                return [\n                    d,\n                    h[d]\n                ];\n            });\n        }\n        function Os(h) {\n            return h && h.slice(0, Ls(h) + 1).replace(yr, \"\");\n        }\n        function ht(h) {\n            return function(g) {\n                return h(g);\n            };\n        }\n        function Mr(h, g) {\n            return z(g, function(d) {\n                return h[d];\n            });\n        }\n        function tn(h, g) {\n            return h.has(g);\n        }\n        function Rs(h, g) {\n            for(var d = -1, A = h.length; ++d < A && Te(g, h[d], 0) > -1;);\n            return d;\n        }\n        function bs(h, g) {\n            for(var d = h.length; d-- && Te(g, h[d], 0) > -1;);\n            return d;\n        }\n        function gc(h, g) {\n            for(var d = h.length, A = 0; d--;)h[d] === g && ++A;\n            return A;\n        }\n        var vc = qr(jo), _c = qr(tc);\n        function mc(h) {\n            return \"\\\\\" + nc[h];\n        }\n        function wc(h, g) {\n            return h == null ? i : h[g];\n        }\n        function Le(h) {\n            return Xo.test(h);\n        }\n        function Pc(h) {\n            return Qo.test(h);\n        }\n        function Cc(h) {\n            for(var g, d = []; !(g = h.next()).done;)d.push(g.value);\n            return d;\n        }\n        function Br(h) {\n            var g = -1, d = Array(h.size);\n            return h.forEach(function(A, R) {\n                d[++g] = [\n                    R,\n                    A\n                ];\n            }), d;\n        }\n        function Ts(h, g) {\n            return function(d) {\n                return h(g(d));\n            };\n        }\n        function ie(h, g) {\n            for(var d = -1, A = h.length, R = 0, U = []; ++d < A;){\n                var Q = h[d];\n                (Q === g || Q === Ie) && (h[d] = Ie, U[R++] = d);\n            }\n            return U;\n        }\n        function Rn(h) {\n            var g = -1, d = Array(h.size);\n            return h.forEach(function(A) {\n                d[++g] = A;\n            }), d;\n        }\n        function Ac(h) {\n            var g = -1, d = Array(h.size);\n            return h.forEach(function(A) {\n                d[++g] = [\n                    A,\n                    A\n                ];\n            }), d;\n        }\n        function Ic(h, g, d) {\n            for(var A = d - 1, R = h.length; ++A < R;)if (h[A] === g) return A;\n            return -1;\n        }\n        function xc(h, g, d) {\n            for(var A = d + 1; A--;)if (h[A] === g) return A;\n            return A;\n        }\n        function He(h) {\n            return Le(h) ? yc(h) : cc(h);\n        }\n        function St(h) {\n            return Le(h) ? Sc(h) : fc(h);\n        }\n        function Ls(h) {\n            for(var g = h.length; g-- && go.test(h.charAt(g)););\n            return g;\n        }\n        var Ec = qr(ec);\n        function yc(h) {\n            for(var g = Tr.lastIndex = 0; Tr.test(h);)++g;\n            return g;\n        }\n        function Sc(h) {\n            return h.match(Tr) || [];\n        }\n        function Oc(h) {\n            return h.match(Zo) || [];\n        }\n        var Rc = function h(g) {\n            g = g == null ? j : De.defaults(j.Object(), g, De.pick(j, Vo));\n            var d = g.Array, A = g.Date, R = g.Error, U = g.Function, Q = g.Math, M = g.Object, Gr = g.RegExp, bc = g.String, wt = g.TypeError, bn = d.prototype, Tc = U.prototype, Ne = M.prototype, Tn = g[\"__core-js_shared__\"], Ln = Tc.toString, W = Ne.hasOwnProperty, Lc = 0, Hs = function() {\n                var t = /[^.]+$/.exec(Tn && Tn.keys && Tn.keys.IE_PROTO || \"\");\n                return t ? \"Symbol(src)_1.\" + t : \"\";\n            }(), Hn = Ne.toString, Hc = Ln.call(M), Dc = j._, Nc = Gr(\"^\" + Ln.call(W).replace(Er, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"), Dn = vs ? g.Buffer : i, se = g.Symbol, Nn = g.Uint8Array, Ds = Dn ? Dn.allocUnsafe : i, $n = Ts(M.getPrototypeOf, M), Ns = M.create, $s = Ne.propertyIsEnumerable, Un = bn.splice, Us = se ? se.isConcatSpreadable : i, en = se ? se.iterator : i, de = se ? se.toStringTag : i, qn = function() {\n                try {\n                    var t = we(M, \"defineProperty\");\n                    return t({}, \"\", {}), t;\n                } catch  {}\n            }(), $c = g.clearTimeout !== j.clearTimeout && g.clearTimeout, Uc = A && A.now !== j.Date.now && A.now, qc = g.setTimeout !== j.setTimeout && g.setTimeout, Fn = Q.ceil, Wn = Q.floor, zr = M.getOwnPropertySymbols, Fc = Dn ? Dn.isBuffer : i, qs = g.isFinite, Wc = bn.join, Mc = Ts(M.keys, M), V = Q.max, et = Q.min, Bc = A.now, Gc = g.parseInt, Fs = Q.random, zc = bn.reverse, Kr = we(g, \"DataView\"), nn = we(g, \"Map\"), Jr = we(g, \"Promise\"), $e = we(g, \"Set\"), rn = we(g, \"WeakMap\"), sn = we(M, \"create\"), Mn = rn && new rn, Ue = {}, Kc = Pe(Kr), Jc = Pe(nn), Yc = Pe(Jr), Zc = Pe($e), Xc = Pe(rn), Bn = se ? se.prototype : i, un = Bn ? Bn.valueOf : i, Ws = Bn ? Bn.toString : i;\n            function a(t) {\n                if (Y(t) && !b(t) && !(t instanceof N)) {\n                    if (t instanceof Pt) return t;\n                    if (W.call(t, \"__wrapped__\")) return Mu(t);\n                }\n                return new Pt(t);\n            }\n            var qe = function() {\n                function t() {}\n                return function(e) {\n                    if (!K(e)) return {};\n                    if (Ns) return Ns(e);\n                    t.prototype = e;\n                    var n = new t;\n                    return t.prototype = i, n;\n                };\n            }();\n            function Gn() {}\n            function Pt(t, e) {\n                this.__wrapped__ = t, this.__actions__ = [], this.__chain__ = !!e, this.__index__ = 0, this.__values__ = i;\n            }\n            a.templateSettings = {\n                escape: oo,\n                evaluate: co,\n                interpolate: Xi,\n                variable: \"\",\n                imports: {\n                    _: a\n                }\n            }, a.prototype = Gn.prototype, a.prototype.constructor = a, Pt.prototype = qe(Gn.prototype), Pt.prototype.constructor = Pt;\n            function N(t) {\n                this.__wrapped__ = t, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Ut, this.__views__ = [];\n            }\n            function Qc() {\n                var t = new N(this.__wrapped__);\n                return t.__actions__ = ut(this.__actions__), t.__dir__ = this.__dir__, t.__filtered__ = this.__filtered__, t.__iteratees__ = ut(this.__iteratees__), t.__takeCount__ = this.__takeCount__, t.__views__ = ut(this.__views__), t;\n            }\n            function Vc() {\n                if (this.__filtered__) {\n                    var t = new N(this);\n                    t.__dir__ = -1, t.__filtered__ = !0;\n                } else t = this.clone(), t.__dir__ *= -1;\n                return t;\n            }\n            function kc() {\n                var t = this.__wrapped__.value(), e = this.__dir__, n = b(t), r = e < 0, u = n ? t.length : 0, o = hh(0, u, this.__views__), c = o.start, f = o.end, l = f - c, v = r ? f : c - 1, _ = this.__iteratees__, m = _.length, C = 0, x = et(l, this.__takeCount__);\n                if (!n || !r && u == l && x == l) return fu(t, this.__actions__);\n                var S = [];\n                t: for(; l-- && C < x;){\n                    v += e;\n                    for(var L = -1, O = t[v]; ++L < m;){\n                        var D = _[L], $ = D.iteratee, dt = D.type, st = $(O);\n                        if (dt == Ka) O = st;\n                        else if (!st) {\n                            if (dt == zi) continue t;\n                            break t;\n                        }\n                    }\n                    S[C++] = O;\n                }\n                return S;\n            }\n            N.prototype = qe(Gn.prototype), N.prototype.constructor = N;\n            function ge(t) {\n                var e = -1, n = t == null ? 0 : t.length;\n                for(this.clear(); ++e < n;){\n                    var r = t[e];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function jc() {\n                this.__data__ = sn ? sn(null) : {}, this.size = 0;\n            }\n            function tf(t) {\n                var e = this.has(t) && delete this.__data__[t];\n                return this.size -= e ? 1 : 0, e;\n            }\n            function ef(t) {\n                var e = this.__data__;\n                if (sn) {\n                    var n = e[t];\n                    return n === Ht ? i : n;\n                }\n                return W.call(e, t) ? e[t] : i;\n            }\n            function nf(t) {\n                var e = this.__data__;\n                return sn ? e[t] !== i : W.call(e, t);\n            }\n            function rf(t, e) {\n                var n = this.__data__;\n                return this.size += this.has(t) ? 0 : 1, n[t] = sn && e === i ? Ht : e, this;\n            }\n            ge.prototype.clear = jc, ge.prototype.delete = tf, ge.prototype.get = ef, ge.prototype.has = nf, ge.prototype.set = rf;\n            function Kt(t) {\n                var e = -1, n = t == null ? 0 : t.length;\n                for(this.clear(); ++e < n;){\n                    var r = t[e];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function sf() {\n                this.__data__ = [], this.size = 0;\n            }\n            function uf(t) {\n                var e = this.__data__, n = zn(e, t);\n                if (n < 0) return !1;\n                var r = e.length - 1;\n                return n == r ? e.pop() : Un.call(e, n, 1), --this.size, !0;\n            }\n            function af(t) {\n                var e = this.__data__, n = zn(e, t);\n                return n < 0 ? i : e[n][1];\n            }\n            function of(t) {\n                return zn(this.__data__, t) > -1;\n            }\n            function cf(t, e) {\n                var n = this.__data__, r = zn(n, t);\n                return r < 0 ? (++this.size, n.push([\n                    t,\n                    e\n                ])) : n[r][1] = e, this;\n            }\n            Kt.prototype.clear = sf, Kt.prototype.delete = uf, Kt.prototype.get = af, Kt.prototype.has = of, Kt.prototype.set = cf;\n            function Jt(t) {\n                var e = -1, n = t == null ? 0 : t.length;\n                for(this.clear(); ++e < n;){\n                    var r = t[e];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function ff() {\n                this.size = 0, this.__data__ = {\n                    hash: new ge,\n                    map: new (nn || Kt),\n                    string: new ge\n                };\n            }\n            function hf(t) {\n                var e = nr(this, t).delete(t);\n                return this.size -= e ? 1 : 0, e;\n            }\n            function lf(t) {\n                return nr(this, t).get(t);\n            }\n            function pf(t) {\n                return nr(this, t).has(t);\n            }\n            function df(t, e) {\n                var n = nr(this, t), r = n.size;\n                return n.set(t, e), this.size += n.size == r ? 0 : 1, this;\n            }\n            Jt.prototype.clear = ff, Jt.prototype.delete = hf, Jt.prototype.get = lf, Jt.prototype.has = pf, Jt.prototype.set = df;\n            function ve(t) {\n                var e = -1, n = t == null ? 0 : t.length;\n                for(this.__data__ = new Jt; ++e < n;)this.add(t[e]);\n            }\n            function gf(t) {\n                return this.__data__.set(t, Ht), this;\n            }\n            function vf(t) {\n                return this.__data__.has(t);\n            }\n            ve.prototype.add = ve.prototype.push = gf, ve.prototype.has = vf;\n            function Ot(t) {\n                var e = this.__data__ = new Kt(t);\n                this.size = e.size;\n            }\n            function _f() {\n                this.__data__ = new Kt, this.size = 0;\n            }\n            function mf(t) {\n                var e = this.__data__, n = e.delete(t);\n                return this.size = e.size, n;\n            }\n            function wf(t) {\n                return this.__data__.get(t);\n            }\n            function Pf(t) {\n                return this.__data__.has(t);\n            }\n            function Cf(t, e) {\n                var n = this.__data__;\n                if (n instanceof Kt) {\n                    var r = n.__data__;\n                    if (!nn || r.length < w - 1) return r.push([\n                        t,\n                        e\n                    ]), this.size = ++n.size, this;\n                    n = this.__data__ = new Jt(r);\n                }\n                return n.set(t, e), this.size = n.size, this;\n            }\n            Ot.prototype.clear = _f, Ot.prototype.delete = mf, Ot.prototype.get = wf, Ot.prototype.has = Pf, Ot.prototype.set = Cf;\n            function Ms(t, e) {\n                var n = b(t), r = !n && Ce(t), u = !n && !r && fe(t), o = !n && !r && !u && Be(t), c = n || r || u || o, f = c ? Wr(t.length, bc) : [], l = f.length;\n                for(var v in t)(e || W.call(t, v)) && !(c && (v == \"length\" || u && (v == \"offset\" || v == \"parent\") || o && (v == \"buffer\" || v == \"byteLength\" || v == \"byteOffset\") || Qt(v, l))) && f.push(v);\n                return f;\n            }\n            function Bs(t) {\n                var e = t.length;\n                return e ? t[ri(0, e - 1)] : i;\n            }\n            function Af(t, e) {\n                return rr(ut(t), _e(e, 0, t.length));\n            }\n            function If(t) {\n                return rr(ut(t));\n            }\n            function Yr(t, e, n) {\n                (n !== i && !Rt(t[e], n) || n === i && !(e in t)) && Yt(t, e, n);\n            }\n            function an(t, e, n) {\n                var r = t[e];\n                (!(W.call(t, e) && Rt(r, n)) || n === i && !(e in t)) && Yt(t, e, n);\n            }\n            function zn(t, e) {\n                for(var n = t.length; n--;)if (Rt(t[n][0], e)) return n;\n                return -1;\n            }\n            function xf(t, e, n, r) {\n                return ue(t, function(u, o, c) {\n                    e(r, u, n(u), c);\n                }), r;\n            }\n            function Gs(t, e) {\n                return t && Ft(e, k(e), t);\n            }\n            function Ef(t, e) {\n                return t && Ft(e, ot(e), t);\n            }\n            function Yt(t, e, n) {\n                e == \"__proto__\" && qn ? qn(t, e, {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: n,\n                    writable: !0\n                }) : t[e] = n;\n            }\n            function Zr(t, e) {\n                for(var n = -1, r = e.length, u = d(r), o = t == null; ++n < r;)u[n] = o ? i : Oi(t, e[n]);\n                return u;\n            }\n            function _e(t, e, n) {\n                return t === t && (n !== i && (t = t <= n ? t : n), e !== i && (t = t >= e ? t : e)), t;\n            }\n            function Ct(t, e, n, r, u, o) {\n                var c, f = e & Dt, l = e & Bt, v = e & xe;\n                if (n && (c = u ? n(t, r, u, o) : n(t)), c !== i) return c;\n                if (!K(t)) return t;\n                var _ = b(t);\n                if (_) {\n                    if (c = ph(t), !f) return ut(t, c);\n                } else {\n                    var m = nt(t), C = m == An || m == Ki;\n                    if (fe(t)) return pu(t, f);\n                    if (m == zt || m == Oe || C && !u) {\n                        if (c = l || C ? {} : Lu(t), !f) return l ? nh(t, Ef(c, t)) : eh(t, Gs(c, t));\n                    } else {\n                        if (!B[m]) return u ? t : {};\n                        c = dh(t, m, f);\n                    }\n                }\n                o || (o = new Ot);\n                var x = o.get(t);\n                if (x) return x;\n                o.set(t, c), aa(t) ? t.forEach(function(O) {\n                    c.add(Ct(O, e, n, O, t, o));\n                }) : sa(t) && t.forEach(function(O, D) {\n                    c.set(D, Ct(O, e, n, D, t, o));\n                });\n                var S = v ? l ? di : pi : l ? ot : k, L = _ ? i : S(t);\n                return mt(L || t, function(O, D) {\n                    L && (D = O, O = t[D]), an(c, D, Ct(O, e, n, D, t, o));\n                }), c;\n            }\n            function yf(t) {\n                var e = k(t);\n                return function(n) {\n                    return zs(n, t, e);\n                };\n            }\n            function zs(t, e, n) {\n                var r = n.length;\n                if (t == null) return !r;\n                for(t = M(t); r--;){\n                    var u = n[r], o = e[u], c = t[u];\n                    if (c === i && !(u in t) || !o(c)) return !1;\n                }\n                return !0;\n            }\n            function Ks(t, e, n) {\n                if (typeof t != \"function\") throw new wt(y);\n                return dn(function() {\n                    t.apply(i, n);\n                }, e);\n            }\n            function on(t, e, n, r) {\n                var u = -1, o = Sn, c = !0, f = t.length, l = [], v = e.length;\n                if (!f) return l;\n                n && (e = z(e, ht(n))), r ? (o = Dr, c = !1) : e.length >= w && (o = tn, c = !1, e = new ve(e));\n                t: for(; ++u < f;){\n                    var _ = t[u], m = n == null ? _ : n(_);\n                    if (_ = r || _ !== 0 ? _ : 0, c && m === m) {\n                        for(var C = v; C--;)if (e[C] === m) continue t;\n                        l.push(_);\n                    } else o(e, m, r) || l.push(_);\n                }\n                return l;\n            }\n            var ue = mu(qt), Js = mu(Qr, !0);\n            function Sf(t, e) {\n                var n = !0;\n                return ue(t, function(r, u, o) {\n                    return n = !!e(r, u, o), n;\n                }), n;\n            }\n            function Kn(t, e, n) {\n                for(var r = -1, u = t.length; ++r < u;){\n                    var o = t[r], c = e(o);\n                    if (c != null && (f === i ? c === c && !pt(c) : n(c, f))) var f = c, l = o;\n                }\n                return l;\n            }\n            function Of(t, e, n, r) {\n                var u = t.length;\n                for(n = T(n), n < 0 && (n = -n > u ? 0 : u + n), r = r === i || r > u ? u : T(r), r < 0 && (r += u), r = n > r ? 0 : ca(r); n < r;)t[n++] = e;\n                return t;\n            }\n            function Ys(t, e) {\n                var n = [];\n                return ue(t, function(r, u, o) {\n                    e(r, u, o) && n.push(r);\n                }), n;\n            }\n            function tt(t, e, n, r, u) {\n                var o = -1, c = t.length;\n                for(n || (n = vh), u || (u = []); ++o < c;){\n                    var f = t[o];\n                    e > 0 && n(f) ? e > 1 ? tt(f, e - 1, n, r, u) : re(u, f) : r || (u[u.length] = f);\n                }\n                return u;\n            }\n            var Xr = wu(), Zs = wu(!0);\n            function qt(t, e) {\n                return t && Xr(t, e, k);\n            }\n            function Qr(t, e) {\n                return t && Zs(t, e, k);\n            }\n            function Jn(t, e) {\n                return ne(e, function(n) {\n                    return Vt(t[n]);\n                });\n            }\n            function me(t, e) {\n                e = oe(e, t);\n                for(var n = 0, r = e.length; t != null && n < r;)t = t[Wt(e[n++])];\n                return n && n == r ? t : i;\n            }\n            function Xs(t, e, n) {\n                var r = e(t);\n                return b(t) ? r : re(r, n(t));\n            }\n            function rt(t) {\n                return t == null ? t === i ? eo : ja : de && de in M(t) ? fh(t) : Ih(t);\n            }\n            function Vr(t, e) {\n                return t > e;\n            }\n            function Rf(t, e) {\n                return t != null && W.call(t, e);\n            }\n            function bf(t, e) {\n                return t != null && e in M(t);\n            }\n            function Tf(t, e, n) {\n                return t >= et(e, n) && t < V(e, n);\n            }\n            function kr(t, e, n) {\n                for(var r = n ? Dr : Sn, u = t[0].length, o = t.length, c = o, f = d(o), l = 1 / 0, v = []; c--;){\n                    var _ = t[c];\n                    c && e && (_ = z(_, ht(e))), l = et(_.length, l), f[c] = !n && (e || u >= 120 && _.length >= 120) ? new ve(c && _) : i;\n                }\n                _ = t[0];\n                var m = -1, C = f[0];\n                t: for(; ++m < u && v.length < l;){\n                    var x = _[m], S = e ? e(x) : x;\n                    if (x = n || x !== 0 ? x : 0, !(C ? tn(C, S) : r(v, S, n))) {\n                        for(c = o; --c;){\n                            var L = f[c];\n                            if (!(L ? tn(L, S) : r(t[c], S, n))) continue t;\n                        }\n                        C && C.push(S), v.push(x);\n                    }\n                }\n                return v;\n            }\n            function Lf(t, e, n, r) {\n                return qt(t, function(u, o, c) {\n                    e(r, n(u), o, c);\n                }), r;\n            }\n            function cn(t, e, n) {\n                e = oe(e, t), t = $u(t, e);\n                var r = t == null ? t : t[Wt(It(e))];\n                return r == null ? i : ft(r, t, n);\n            }\n            function Qs(t) {\n                return Y(t) && rt(t) == Oe;\n            }\n            function Hf(t) {\n                return Y(t) && rt(t) == je;\n            }\n            function Df(t) {\n                return Y(t) && rt(t) == Ze;\n            }\n            function fn(t, e, n, r, u) {\n                return t === e ? !0 : t == null || e == null || !Y(t) && !Y(e) ? t !== t && e !== e : Nf(t, e, n, r, fn, u);\n            }\n            function Nf(t, e, n, r, u, o) {\n                var c = b(t), f = b(e), l = c ? Pn : nt(t), v = f ? Pn : nt(e);\n                l = l == Oe ? zt : l, v = v == Oe ? zt : v;\n                var _ = l == zt, m = v == zt, C = l == v;\n                if (C && fe(t)) {\n                    if (!fe(e)) return !1;\n                    c = !0, _ = !1;\n                }\n                if (C && !_) return o || (o = new Ot), c || Be(t) ? Ru(t, e, n, r, u, o) : oh(t, e, l, n, r, u, o);\n                if (!(n & Ee)) {\n                    var x = _ && W.call(t, \"__wrapped__\"), S = m && W.call(e, \"__wrapped__\");\n                    if (x || S) {\n                        var L = x ? t.value() : t, O = S ? e.value() : e;\n                        return o || (o = new Ot), u(L, O, n, r, o);\n                    }\n                }\n                return C ? (o || (o = new Ot), ch(t, e, n, r, u, o)) : !1;\n            }\n            function $f(t) {\n                return Y(t) && nt(t) == Et;\n            }\n            function jr(t, e, n, r) {\n                var u = n.length, o = u, c = !r;\n                if (t == null) return !o;\n                for(t = M(t); u--;){\n                    var f = n[u];\n                    if (c && f[2] ? f[1] !== t[f[0]] : !(f[0] in t)) return !1;\n                }\n                for(; ++u < o;){\n                    f = n[u];\n                    var l = f[0], v = t[l], _ = f[1];\n                    if (c && f[2]) {\n                        if (v === i && !(l in t)) return !1;\n                    } else {\n                        var m = new Ot;\n                        if (r) var C = r(v, _, l, t, e, m);\n                        if (!(C === i ? fn(_, v, Ee | mn, r, m) : C)) return !1;\n                    }\n                }\n                return !0;\n            }\n            function Vs(t) {\n                if (!K(t) || mh(t)) return !1;\n                var e = Vt(t) ? Nc : Eo;\n                return e.test(Pe(t));\n            }\n            function Uf(t) {\n                return Y(t) && rt(t) == Qe;\n            }\n            function qf(t) {\n                return Y(t) && nt(t) == yt;\n            }\n            function Ff(t) {\n                return Y(t) && cr(t.length) && !!G[rt(t)];\n            }\n            function ks(t) {\n                return typeof t == \"function\" ? t : t == null ? ct : typeof t == \"object\" ? b(t) ? eu(t[0], t[1]) : tu(t) : Pa(t);\n            }\n            function ti(t) {\n                if (!pn(t)) return Mc(t);\n                var e = [];\n                for(var n in M(t))W.call(t, n) && n != \"constructor\" && e.push(n);\n                return e;\n            }\n            function Wf(t) {\n                if (!K(t)) return Ah(t);\n                var e = pn(t), n = [];\n                for(var r in t)r == \"constructor\" && (e || !W.call(t, r)) || n.push(r);\n                return n;\n            }\n            function ei(t, e) {\n                return t < e;\n            }\n            function js(t, e) {\n                var n = -1, r = at(t) ? d(t.length) : [];\n                return ue(t, function(u, o, c) {\n                    r[++n] = e(u, o, c);\n                }), r;\n            }\n            function tu(t) {\n                var e = vi(t);\n                return e.length == 1 && e[0][2] ? Du(e[0][0], e[0][1]) : function(n) {\n                    return n === t || jr(n, t, e);\n                };\n            }\n            function eu(t, e) {\n                return mi(t) && Hu(e) ? Du(Wt(t), e) : function(n) {\n                    var r = Oi(n, t);\n                    return r === i && r === e ? Ri(n, t) : fn(e, r, Ee | mn);\n                };\n            }\n            function Yn(t, e, n, r, u) {\n                t !== e && Xr(e, function(o, c) {\n                    if (u || (u = new Ot), K(o)) Mf(t, e, c, n, Yn, r, u);\n                    else {\n                        var f = r ? r(Pi(t, c), o, c + \"\", t, e, u) : i;\n                        f === i && (f = o), Yr(t, c, f);\n                    }\n                }, ot);\n            }\n            function Mf(t, e, n, r, u, o, c) {\n                var f = Pi(t, n), l = Pi(e, n), v = c.get(l);\n                if (v) {\n                    Yr(t, n, v);\n                    return;\n                }\n                var _ = o ? o(f, l, n + \"\", t, e, c) : i, m = _ === i;\n                if (m) {\n                    var C = b(l), x = !C && fe(l), S = !C && !x && Be(l);\n                    _ = l, C || x || S ? b(f) ? _ = f : Z(f) ? _ = ut(f) : x ? (m = !1, _ = pu(l, !0)) : S ? (m = !1, _ = du(l, !0)) : _ = [] : gn(l) || Ce(l) ? (_ = f, Ce(f) ? _ = fa(f) : (!K(f) || Vt(f)) && (_ = Lu(l))) : m = !1;\n                }\n                m && (c.set(l, _), u(_, l, r, o, c), c.delete(l)), Yr(t, n, _);\n            }\n            function nu(t, e) {\n                var n = t.length;\n                if (n) return e += e < 0 ? n : 0, Qt(e, n) ? t[e] : i;\n            }\n            function ru(t, e, n) {\n                e.length ? e = z(e, function(o) {\n                    return b(o) ? function(c) {\n                        return me(c, o.length === 1 ? o[0] : o);\n                    } : o;\n                }) : e = [\n                    ct\n                ];\n                var r = -1;\n                e = z(e, ht(E()));\n                var u = js(t, function(o, c, f) {\n                    var l = z(e, function(v) {\n                        return v(o);\n                    });\n                    return {\n                        criteria: l,\n                        index: ++r,\n                        value: o\n                    };\n                });\n                return pc(u, function(o, c) {\n                    return th(o, c, n);\n                });\n            }\n            function Bf(t, e) {\n                return iu(t, e, function(n, r) {\n                    return Ri(t, r);\n                });\n            }\n            function iu(t, e, n) {\n                for(var r = -1, u = e.length, o = {}; ++r < u;){\n                    var c = e[r], f = me(t, c);\n                    n(f, c) && hn(o, oe(c, t), f);\n                }\n                return o;\n            }\n            function Gf(t) {\n                return function(e) {\n                    return me(e, t);\n                };\n            }\n            function ni(t, e, n, r) {\n                var u = r ? lc : Te, o = -1, c = e.length, f = t;\n                for(t === e && (e = ut(e)), n && (f = z(t, ht(n))); ++o < c;)for(var l = 0, v = e[o], _ = n ? n(v) : v; (l = u(f, _, l, r)) > -1;)f !== t && Un.call(f, l, 1), Un.call(t, l, 1);\n                return t;\n            }\n            function su(t, e) {\n                for(var n = t ? e.length : 0, r = n - 1; n--;){\n                    var u = e[n];\n                    if (n == r || u !== o) {\n                        var o = u;\n                        Qt(u) ? Un.call(t, u, 1) : ui(t, u);\n                    }\n                }\n                return t;\n            }\n            function ri(t, e) {\n                return t + Wn(Fs() * (e - t + 1));\n            }\n            function zf(t, e, n, r) {\n                for(var u = -1, o = V(Fn((e - t) / (n || 1)), 0), c = d(o); o--;)c[r ? o : ++u] = t, t += n;\n                return c;\n            }\n            function ii(t, e) {\n                var n = \"\";\n                if (!t || e < 1 || e > ee) return n;\n                do e % 2 && (n += t), e = Wn(e / 2), e && (t += t);\n                while (e);\n                return n;\n            }\n            function H(t, e) {\n                return Ci(Nu(t, e, ct), t + \"\");\n            }\n            function Kf(t) {\n                return Bs(Ge(t));\n            }\n            function Jf(t, e) {\n                var n = Ge(t);\n                return rr(n, _e(e, 0, n.length));\n            }\n            function hn(t, e, n, r) {\n                if (!K(t)) return t;\n                e = oe(e, t);\n                for(var u = -1, o = e.length, c = o - 1, f = t; f != null && ++u < o;){\n                    var l = Wt(e[u]), v = n;\n                    if (l === \"__proto__\" || l === \"constructor\" || l === \"prototype\") return t;\n                    if (u != c) {\n                        var _ = f[l];\n                        v = r ? r(_, l, f) : i, v === i && (v = K(_) ? _ : Qt(e[u + 1]) ? [] : {});\n                    }\n                    an(f, l, v), f = f[l];\n                }\n                return t;\n            }\n            var uu = Mn ? function(t, e) {\n                return Mn.set(t, e), t;\n            } : ct, Yf = qn ? function(t, e) {\n                return qn(t, \"toString\", {\n                    configurable: !0,\n                    enumerable: !1,\n                    value: Ti(e),\n                    writable: !0\n                });\n            } : ct;\n            function Zf(t) {\n                return rr(Ge(t));\n            }\n            function At(t, e, n) {\n                var r = -1, u = t.length;\n                e < 0 && (e = -e > u ? 0 : u + e), n = n > u ? u : n, n < 0 && (n += u), u = e > n ? 0 : n - e >>> 0, e >>>= 0;\n                for(var o = d(u); ++r < u;)o[r] = t[r + e];\n                return o;\n            }\n            function Xf(t, e) {\n                var n;\n                return ue(t, function(r, u, o) {\n                    return n = e(r, u, o), !n;\n                }), !!n;\n            }\n            function Zn(t, e, n) {\n                var r = 0, u = t == null ? r : t.length;\n                if (typeof e == \"number\" && e === e && u <= Xa) {\n                    for(; r < u;){\n                        var o = r + u >>> 1, c = t[o];\n                        c !== null && !pt(c) && (n ? c <= e : c < e) ? r = o + 1 : u = o;\n                    }\n                    return u;\n                }\n                return si(t, e, ct, n);\n            }\n            function si(t, e, n, r) {\n                var u = 0, o = t == null ? 0 : t.length;\n                if (o === 0) return 0;\n                e = n(e);\n                for(var c = e !== e, f = e === null, l = pt(e), v = e === i; u < o;){\n                    var _ = Wn((u + o) / 2), m = n(t[_]), C = m !== i, x = m === null, S = m === m, L = pt(m);\n                    if (c) var O = r || S;\n                    else v ? O = S && (r || C) : f ? O = S && C && (r || !x) : l ? O = S && C && !x && (r || !L) : x || L ? O = !1 : O = r ? m <= e : m < e;\n                    O ? u = _ + 1 : o = _;\n                }\n                return et(o, Za);\n            }\n            function au(t, e) {\n                for(var n = -1, r = t.length, u = 0, o = []; ++n < r;){\n                    var c = t[n], f = e ? e(c) : c;\n                    if (!n || !Rt(f, l)) {\n                        var l = f;\n                        o[u++] = c === 0 ? 0 : c;\n                    }\n                }\n                return o;\n            }\n            function ou(t) {\n                return typeof t == \"number\" ? t : pt(t) ? wn : +t;\n            }\n            function lt(t) {\n                if (typeof t == \"string\") return t;\n                if (b(t)) return z(t, lt) + \"\";\n                if (pt(t)) return Ws ? Ws.call(t) : \"\";\n                var e = t + \"\";\n                return e == \"0\" && 1 / t == -le ? \"-0\" : e;\n            }\n            function ae(t, e, n) {\n                var r = -1, u = Sn, o = t.length, c = !0, f = [], l = f;\n                if (n) c = !1, u = Dr;\n                else if (o >= w) {\n                    var v = e ? null : uh(t);\n                    if (v) return Rn(v);\n                    c = !1, u = tn, l = new ve;\n                } else l = e ? [] : f;\n                t: for(; ++r < o;){\n                    var _ = t[r], m = e ? e(_) : _;\n                    if (_ = n || _ !== 0 ? _ : 0, c && m === m) {\n                        for(var C = l.length; C--;)if (l[C] === m) continue t;\n                        e && l.push(m), f.push(_);\n                    } else u(l, m, n) || (l !== f && l.push(m), f.push(_));\n                }\n                return f;\n            }\n            function ui(t, e) {\n                return e = oe(e, t), t = $u(t, e), t == null || delete t[Wt(It(e))];\n            }\n            function cu(t, e, n, r) {\n                return hn(t, e, n(me(t, e)), r);\n            }\n            function Xn(t, e, n, r) {\n                for(var u = t.length, o = r ? u : -1; (r ? o-- : ++o < u) && e(t[o], o, t););\n                return n ? At(t, r ? 0 : o, r ? o + 1 : u) : At(t, r ? o + 1 : 0, r ? u : o);\n            }\n            function fu(t, e) {\n                var n = t;\n                return n instanceof N && (n = n.value()), Nr(e, function(r, u) {\n                    return u.func.apply(u.thisArg, re([\n                        r\n                    ], u.args));\n                }, n);\n            }\n            function ai(t, e, n) {\n                var r = t.length;\n                if (r < 2) return r ? ae(t[0]) : [];\n                for(var u = -1, o = d(r); ++u < r;)for(var c = t[u], f = -1; ++f < r;)f != u && (o[u] = on(o[u] || c, t[f], e, n));\n                return ae(tt(o, 1), e, n);\n            }\n            function hu(t, e, n) {\n                for(var r = -1, u = t.length, o = e.length, c = {}; ++r < u;){\n                    var f = r < o ? e[r] : i;\n                    n(c, t[r], f);\n                }\n                return c;\n            }\n            function oi(t) {\n                return Z(t) ? t : [];\n            }\n            function ci(t) {\n                return typeof t == \"function\" ? t : ct;\n            }\n            function oe(t, e) {\n                return b(t) ? t : mi(t, e) ? [\n                    t\n                ] : Wu(q(t));\n            }\n            var Qf = H;\n            function ce(t, e, n) {\n                var r = t.length;\n                return n = n === i ? r : n, !e && n >= r ? t : At(t, e, n);\n            }\n            var lu = $c || function(t) {\n                return j.clearTimeout(t);\n            };\n            function pu(t, e) {\n                if (e) return t.slice();\n                var n = t.length, r = Ds ? Ds(n) : new t.constructor(n);\n                return t.copy(r), r;\n            }\n            function fi(t) {\n                var e = new t.constructor(t.byteLength);\n                return new Nn(e).set(new Nn(t)), e;\n            }\n            function Vf(t, e) {\n                var n = e ? fi(t.buffer) : t.buffer;\n                return new t.constructor(n, t.byteOffset, t.byteLength);\n            }\n            function kf(t) {\n                var e = new t.constructor(t.source, Qi.exec(t));\n                return e.lastIndex = t.lastIndex, e;\n            }\n            function jf(t) {\n                return un ? M(un.call(t)) : {};\n            }\n            function du(t, e) {\n                var n = e ? fi(t.buffer) : t.buffer;\n                return new t.constructor(n, t.byteOffset, t.length);\n            }\n            function gu(t, e) {\n                if (t !== e) {\n                    var n = t !== i, r = t === null, u = t === t, o = pt(t), c = e !== i, f = e === null, l = e === e, v = pt(e);\n                    if (!f && !v && !o && t > e || o && c && l && !f && !v || r && c && l || !n && l || !u) return 1;\n                    if (!r && !o && !v && t < e || v && n && u && !r && !o || f && n && u || !c && u || !l) return -1;\n                }\n                return 0;\n            }\n            function th(t, e, n) {\n                for(var r = -1, u = t.criteria, o = e.criteria, c = u.length, f = n.length; ++r < c;){\n                    var l = gu(u[r], o[r]);\n                    if (l) {\n                        if (r >= f) return l;\n                        var v = n[r];\n                        return l * (v == \"desc\" ? -1 : 1);\n                    }\n                }\n                return t.index - e.index;\n            }\n            function vu(t, e, n, r) {\n                for(var u = -1, o = t.length, c = n.length, f = -1, l = e.length, v = V(o - c, 0), _ = d(l + v), m = !r; ++f < l;)_[f] = e[f];\n                for(; ++u < c;)(m || u < o) && (_[n[u]] = t[u]);\n                for(; v--;)_[f++] = t[u++];\n                return _;\n            }\n            function _u(t, e, n, r) {\n                for(var u = -1, o = t.length, c = -1, f = n.length, l = -1, v = e.length, _ = V(o - f, 0), m = d(_ + v), C = !r; ++u < _;)m[u] = t[u];\n                for(var x = u; ++l < v;)m[x + l] = e[l];\n                for(; ++c < f;)(C || u < o) && (m[x + n[c]] = t[u++]);\n                return m;\n            }\n            function ut(t, e) {\n                var n = -1, r = t.length;\n                for(e || (e = d(r)); ++n < r;)e[n] = t[n];\n                return e;\n            }\n            function Ft(t, e, n, r) {\n                var u = !n;\n                n || (n = {});\n                for(var o = -1, c = e.length; ++o < c;){\n                    var f = e[o], l = r ? r(n[f], t[f], f, n, t) : i;\n                    l === i && (l = t[f]), u ? Yt(n, f, l) : an(n, f, l);\n                }\n                return n;\n            }\n            function eh(t, e) {\n                return Ft(t, _i(t), e);\n            }\n            function nh(t, e) {\n                return Ft(t, bu(t), e);\n            }\n            function Qn(t, e) {\n                return function(n, r) {\n                    var u = b(n) ? uc : xf, o = e ? e() : {};\n                    return u(n, t, E(r, 2), o);\n                };\n            }\n            function Fe(t) {\n                return H(function(e, n) {\n                    var r = -1, u = n.length, o = u > 1 ? n[u - 1] : i, c = u > 2 ? n[2] : i;\n                    for(o = t.length > 3 && typeof o == \"function\" ? (u--, o) : i, c && it(n[0], n[1], c) && (o = u < 3 ? i : o, u = 1), e = M(e); ++r < u;){\n                        var f = n[r];\n                        f && t(e, f, r, o);\n                    }\n                    return e;\n                });\n            }\n            function mu(t, e) {\n                return function(n, r) {\n                    if (n == null) return n;\n                    if (!at(n)) return t(n, r);\n                    for(var u = n.length, o = e ? u : -1, c = M(n); (e ? o-- : ++o < u) && r(c[o], o, c) !== !1;);\n                    return n;\n                };\n            }\n            function wu(t) {\n                return function(e, n, r) {\n                    for(var u = -1, o = M(e), c = r(e), f = c.length; f--;){\n                        var l = c[t ? f : ++u];\n                        if (n(o[l], l, o) === !1) break;\n                    }\n                    return e;\n                };\n            }\n            function rh(t, e, n) {\n                var r = e & vt, u = ln(t);\n                function o() {\n                    var c = this && this !== j && this instanceof o ? u : t;\n                    return c.apply(r ? n : this, arguments);\n                }\n                return o;\n            }\n            function Pu(t) {\n                return function(e) {\n                    e = q(e);\n                    var n = Le(e) ? St(e) : i, r = n ? n[0] : e.charAt(0), u = n ? ce(n, 1).join(\"\") : e.slice(1);\n                    return r[t]() + u;\n                };\n            }\n            function We(t) {\n                return function(e) {\n                    return Nr(ma(_a(e).replace(Jo, \"\")), t, \"\");\n                };\n            }\n            function ln(t) {\n                return function() {\n                    var e = arguments;\n                    switch(e.length){\n                        case 0:\n                            return new t;\n                        case 1:\n                            return new t(e[0]);\n                        case 2:\n                            return new t(e[0], e[1]);\n                        case 3:\n                            return new t(e[0], e[1], e[2]);\n                        case 4:\n                            return new t(e[0], e[1], e[2], e[3]);\n                        case 5:\n                            return new t(e[0], e[1], e[2], e[3], e[4]);\n                        case 6:\n                            return new t(e[0], e[1], e[2], e[3], e[4], e[5]);\n                        case 7:\n                            return new t(e[0], e[1], e[2], e[3], e[4], e[5], e[6]);\n                    }\n                    var n = qe(t.prototype), r = t.apply(n, e);\n                    return K(r) ? r : n;\n                };\n            }\n            function ih(t, e, n) {\n                var r = ln(t);\n                function u() {\n                    for(var o = arguments.length, c = d(o), f = o, l = Me(u); f--;)c[f] = arguments[f];\n                    var v = o < 3 && c[0] !== l && c[o - 1] !== l ? [] : ie(c, l);\n                    if (o -= v.length, o < n) return Eu(t, e, Vn, u.placeholder, i, c, v, i, i, n - o);\n                    var _ = this && this !== j && this instanceof u ? r : t;\n                    return ft(_, this, c);\n                }\n                return u;\n            }\n            function Cu(t) {\n                return function(e, n, r) {\n                    var u = M(e);\n                    if (!at(e)) {\n                        var o = E(n, 3);\n                        e = k(e), n = function(f) {\n                            return o(u[f], f, u);\n                        };\n                    }\n                    var c = t(e, n, r);\n                    return c > -1 ? u[o ? e[c] : c] : i;\n                };\n            }\n            function Au(t) {\n                return Xt(function(e) {\n                    var n = e.length, r = n, u = Pt.prototype.thru;\n                    for(t && e.reverse(); r--;){\n                        var o = e[r];\n                        if (typeof o != \"function\") throw new wt(y);\n                        if (u && !c && er(o) == \"wrapper\") var c = new Pt([], !0);\n                    }\n                    for(r = c ? r : n; ++r < n;){\n                        o = e[r];\n                        var f = er(o), l = f == \"wrapper\" ? gi(o) : i;\n                        l && wi(l[0]) && l[1] == (Gt | Nt | $t | Je) && !l[4].length && l[9] == 1 ? c = c[er(l[0])].apply(c, l[3]) : c = o.length == 1 && wi(o) ? c[f]() : c.thru(o);\n                    }\n                    return function() {\n                        var v = arguments, _ = v[0];\n                        if (c && v.length == 1 && b(_)) return c.plant(_).value();\n                        for(var m = 0, C = n ? e[m].apply(this, v) : _; ++m < n;)C = e[m].call(this, C);\n                        return C;\n                    };\n                });\n            }\n            function Vn(t, e, n, r, u, o, c, f, l, v) {\n                var _ = e & Gt, m = e & vt, C = e & he, x = e & (Nt | ye), S = e & gr, L = C ? i : ln(t);\n                function O() {\n                    for(var D = arguments.length, $ = d(D), dt = D; dt--;)$[dt] = arguments[dt];\n                    if (x) var st = Me(O), gt = gc($, st);\n                    if (r && ($ = vu($, r, u, x)), o && ($ = _u($, o, c, x)), D -= gt, x && D < v) {\n                        var X = ie($, st);\n                        return Eu(t, e, Vn, O.placeholder, n, $, X, f, l, v - D);\n                    }\n                    var bt = m ? n : this, jt = C ? bt[t] : t;\n                    return D = $.length, f ? $ = xh($, f) : S && D > 1 && $.reverse(), _ && l < D && ($.length = l), this && this !== j && this instanceof O && (jt = L || ln(jt)), jt.apply(bt, $);\n                }\n                return O;\n            }\n            function Iu(t, e) {\n                return function(n, r) {\n                    return Lf(n, t, e(r), {});\n                };\n            }\n            function kn(t, e) {\n                return function(n, r) {\n                    var u;\n                    if (n === i && r === i) return e;\n                    if (n !== i && (u = n), r !== i) {\n                        if (u === i) return r;\n                        typeof n == \"string\" || typeof r == \"string\" ? (n = lt(n), r = lt(r)) : (n = ou(n), r = ou(r)), u = t(n, r);\n                    }\n                    return u;\n                };\n            }\n            function hi(t) {\n                return Xt(function(e) {\n                    return e = z(e, ht(E())), H(function(n) {\n                        var r = this;\n                        return t(e, function(u) {\n                            return ft(u, r, n);\n                        });\n                    });\n                });\n            }\n            function jn(t, e) {\n                e = e === i ? \" \" : lt(e);\n                var n = e.length;\n                if (n < 2) return n ? ii(e, t) : e;\n                var r = ii(e, Fn(t / He(e)));\n                return Le(e) ? ce(St(r), 0, t).join(\"\") : r.slice(0, t);\n            }\n            function sh(t, e, n, r) {\n                var u = e & vt, o = ln(t);\n                function c() {\n                    for(var f = -1, l = arguments.length, v = -1, _ = r.length, m = d(_ + l), C = this && this !== j && this instanceof c ? o : t; ++v < _;)m[v] = r[v];\n                    for(; l--;)m[v++] = arguments[++f];\n                    return ft(C, u ? n : this, m);\n                }\n                return c;\n            }\n            function xu(t) {\n                return function(e, n, r) {\n                    return r && typeof r != \"number\" && it(e, n, r) && (n = r = i), e = kt(e), n === i ? (n = e, e = 0) : n = kt(n), r = r === i ? e < n ? 1 : -1 : kt(r), zf(e, n, r, t);\n                };\n            }\n            function tr(t) {\n                return function(e, n) {\n                    return typeof e == \"string\" && typeof n == \"string\" || (e = xt(e), n = xt(n)), t(e, n);\n                };\n            }\n            function Eu(t, e, n, r, u, o, c, f, l, v) {\n                var _ = e & Nt, m = _ ? c : i, C = _ ? i : c, x = _ ? o : i, S = _ ? i : o;\n                e |= _ ? $t : Se, e &= ~(_ ? Se : $t), e & Gi || (e &= ~(vt | he));\n                var L = [\n                    t,\n                    e,\n                    u,\n                    x,\n                    m,\n                    S,\n                    C,\n                    f,\n                    l,\n                    v\n                ], O = n.apply(i, L);\n                return wi(t) && Uu(O, L), O.placeholder = r, qu(O, t, e);\n            }\n            function li(t) {\n                var e = Q[t];\n                return function(n, r) {\n                    if (n = xt(n), r = r == null ? 0 : et(T(r), 292), r && qs(n)) {\n                        var u = (q(n) + \"e\").split(\"e\"), o = e(u[0] + \"e\" + (+u[1] + r));\n                        return u = (q(o) + \"e\").split(\"e\"), +(u[0] + \"e\" + (+u[1] - r));\n                    }\n                    return e(n);\n                };\n            }\n            var uh = $e && 1 / Rn(new $e([\n                ,\n                -0\n            ]))[1] == le ? function(t) {\n                return new $e(t);\n            } : Di;\n            function yu(t) {\n                return function(e) {\n                    var n = nt(e);\n                    return n == Et ? Br(e) : n == yt ? Ac(e) : dc(e, t(e));\n                };\n            }\n            function Zt(t, e, n, r, u, o, c, f) {\n                var l = e & he;\n                if (!l && typeof t != \"function\") throw new wt(y);\n                var v = r ? r.length : 0;\n                if (v || (e &= ~($t | Se), r = u = i), c = c === i ? c : V(T(c), 0), f = f === i ? f : T(f), v -= u ? u.length : 0, e & Se) {\n                    var _ = r, m = u;\n                    r = u = i;\n                }\n                var C = l ? i : gi(t), x = [\n                    t,\n                    e,\n                    n,\n                    r,\n                    u,\n                    _,\n                    m,\n                    o,\n                    c,\n                    f\n                ];\n                if (C && Ch(x, C), t = x[0], e = x[1], n = x[2], r = x[3], u = x[4], f = x[9] = x[9] === i ? l ? 0 : t.length : V(x[9] - v, 0), !f && e & (Nt | ye) && (e &= ~(Nt | ye)), !e || e == vt) var S = rh(t, e, n);\n                else e == Nt || e == ye ? S = ih(t, e, f) : (e == $t || e == (vt | $t)) && !u.length ? S = sh(t, e, n, r) : S = Vn.apply(i, x);\n                var L = C ? uu : Uu;\n                return qu(L(S, x), t, e);\n            }\n            function Su(t, e, n, r) {\n                return t === i || Rt(t, Ne[n]) && !W.call(r, n) ? e : t;\n            }\n            function Ou(t, e, n, r, u, o) {\n                return K(t) && K(e) && (o.set(e, t), Yn(t, e, i, Ou, o), o.delete(e)), t;\n            }\n            function ah(t) {\n                return gn(t) ? i : t;\n            }\n            function Ru(t, e, n, r, u, o) {\n                var c = n & Ee, f = t.length, l = e.length;\n                if (f != l && !(c && l > f)) return !1;\n                var v = o.get(t), _ = o.get(e);\n                if (v && _) return v == e && _ == t;\n                var m = -1, C = !0, x = n & mn ? new ve : i;\n                for(o.set(t, e), o.set(e, t); ++m < f;){\n                    var S = t[m], L = e[m];\n                    if (r) var O = c ? r(L, S, m, e, t, o) : r(S, L, m, t, e, o);\n                    if (O !== i) {\n                        if (O) continue;\n                        C = !1;\n                        break;\n                    }\n                    if (x) {\n                        if (!$r(e, function(D, $) {\n                            if (!tn(x, $) && (S === D || u(S, D, n, r, o))) return x.push($);\n                        })) {\n                            C = !1;\n                            break;\n                        }\n                    } else if (!(S === L || u(S, L, n, r, o))) {\n                        C = !1;\n                        break;\n                    }\n                }\n                return o.delete(t), o.delete(e), C;\n            }\n            function oh(t, e, n, r, u, o, c) {\n                switch(n){\n                    case Re:\n                        if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset) return !1;\n                        t = t.buffer, e = e.buffer;\n                    case je:\n                        return !(t.byteLength != e.byteLength || !o(new Nn(t), new Nn(e)));\n                    case Ye:\n                    case Ze:\n                    case Xe:\n                        return Rt(+t, +e);\n                    case Cn:\n                        return t.name == e.name && t.message == e.message;\n                    case Qe:\n                    case Ve:\n                        return t == e + \"\";\n                    case Et:\n                        var f = Br;\n                    case yt:\n                        var l = r & Ee;\n                        if (f || (f = Rn), t.size != e.size && !l) return !1;\n                        var v = c.get(t);\n                        if (v) return v == e;\n                        r |= mn, c.set(t, e);\n                        var _ = Ru(f(t), f(e), r, u, o, c);\n                        return c.delete(t), _;\n                    case In:\n                        if (un) return un.call(t) == un.call(e);\n                }\n                return !1;\n            }\n            function ch(t, e, n, r, u, o) {\n                var c = n & Ee, f = pi(t), l = f.length, v = pi(e), _ = v.length;\n                if (l != _ && !c) return !1;\n                for(var m = l; m--;){\n                    var C = f[m];\n                    if (!(c ? C in e : W.call(e, C))) return !1;\n                }\n                var x = o.get(t), S = o.get(e);\n                if (x && S) return x == e && S == t;\n                var L = !0;\n                o.set(t, e), o.set(e, t);\n                for(var O = c; ++m < l;){\n                    C = f[m];\n                    var D = t[C], $ = e[C];\n                    if (r) var dt = c ? r($, D, C, e, t, o) : r(D, $, C, t, e, o);\n                    if (!(dt === i ? D === $ || u(D, $, n, r, o) : dt)) {\n                        L = !1;\n                        break;\n                    }\n                    O || (O = C == \"constructor\");\n                }\n                if (L && !O) {\n                    var st = t.constructor, gt = e.constructor;\n                    st != gt && \"constructor\" in t && \"constructor\" in e && !(typeof st == \"function\" && st instanceof st && typeof gt == \"function\" && gt instanceof gt) && (L = !1);\n                }\n                return o.delete(t), o.delete(e), L;\n            }\n            function Xt(t) {\n                return Ci(Nu(t, i, zu), t + \"\");\n            }\n            function pi(t) {\n                return Xs(t, k, _i);\n            }\n            function di(t) {\n                return Xs(t, ot, bu);\n            }\n            var gi = Mn ? function(t) {\n                return Mn.get(t);\n            } : Di;\n            function er(t) {\n                for(var e = t.name + \"\", n = Ue[e], r = W.call(Ue, e) ? n.length : 0; r--;){\n                    var u = n[r], o = u.func;\n                    if (o == null || o == t) return u.name;\n                }\n                return e;\n            }\n            function Me(t) {\n                var e = W.call(a, \"placeholder\") ? a : t;\n                return e.placeholder;\n            }\n            function E() {\n                var t = a.iteratee || Li;\n                return t = t === Li ? ks : t, arguments.length ? t(arguments[0], arguments[1]) : t;\n            }\n            function nr(t, e) {\n                var n = t.__data__;\n                return _h(e) ? n[typeof e == \"string\" ? \"string\" : \"hash\"] : n.map;\n            }\n            function vi(t) {\n                for(var e = k(t), n = e.length; n--;){\n                    var r = e[n], u = t[r];\n                    e[n] = [\n                        r,\n                        u,\n                        Hu(u)\n                    ];\n                }\n                return e;\n            }\n            function we(t, e) {\n                var n = wc(t, e);\n                return Vs(n) ? n : i;\n            }\n            function fh(t) {\n                var e = W.call(t, de), n = t[de];\n                try {\n                    t[de] = i;\n                    var r = !0;\n                } catch  {}\n                var u = Hn.call(t);\n                return r && (e ? t[de] = n : delete t[de]), u;\n            }\n            var _i = zr ? function(t) {\n                return t == null ? [] : (t = M(t), ne(zr(t), function(e) {\n                    return $s.call(t, e);\n                }));\n            } : Ni, bu = zr ? function(t) {\n                for(var e = []; t;)re(e, _i(t)), t = $n(t);\n                return e;\n            } : Ni, nt = rt;\n            (Kr && nt(new Kr(new ArrayBuffer(1))) != Re || nn && nt(new nn) != Et || Jr && nt(Jr.resolve()) != Ji || $e && nt(new $e) != yt || rn && nt(new rn) != ke) && (nt = function(t) {\n                var e = rt(t), n = e == zt ? t.constructor : i, r = n ? Pe(n) : \"\";\n                if (r) switch(r){\n                    case Kc:\n                        return Re;\n                    case Jc:\n                        return Et;\n                    case Yc:\n                        return Ji;\n                    case Zc:\n                        return yt;\n                    case Xc:\n                        return ke;\n                }\n                return e;\n            });\n            function hh(t, e, n) {\n                for(var r = -1, u = n.length; ++r < u;){\n                    var o = n[r], c = o.size;\n                    switch(o.type){\n                        case \"drop\":\n                            t += c;\n                            break;\n                        case \"dropRight\":\n                            e -= c;\n                            break;\n                        case \"take\":\n                            e = et(e, t + c);\n                            break;\n                        case \"takeRight\":\n                            t = V(t, e - c);\n                            break;\n                    }\n                }\n                return {\n                    start: t,\n                    end: e\n                };\n            }\n            function lh(t) {\n                var e = t.match(_o);\n                return e ? e[1].split(mo) : [];\n            }\n            function Tu(t, e, n) {\n                e = oe(e, t);\n                for(var r = -1, u = e.length, o = !1; ++r < u;){\n                    var c = Wt(e[r]);\n                    if (!(o = t != null && n(t, c))) break;\n                    t = t[c];\n                }\n                return o || ++r != u ? o : (u = t == null ? 0 : t.length, !!u && cr(u) && Qt(c, u) && (b(t) || Ce(t)));\n            }\n            function ph(t) {\n                var e = t.length, n = new t.constructor(e);\n                return e && typeof t[0] == \"string\" && W.call(t, \"index\") && (n.index = t.index, n.input = t.input), n;\n            }\n            function Lu(t) {\n                return typeof t.constructor == \"function\" && !pn(t) ? qe($n(t)) : {};\n            }\n            function dh(t, e, n) {\n                var r = t.constructor;\n                switch(e){\n                    case je:\n                        return fi(t);\n                    case Ye:\n                    case Ze:\n                        return new r(+t);\n                    case Re:\n                        return Vf(t, n);\n                    case vr:\n                    case _r:\n                    case mr:\n                    case wr:\n                    case Pr:\n                    case Cr:\n                    case Ar:\n                    case Ir:\n                    case xr:\n                        return du(t, n);\n                    case Et:\n                        return new r;\n                    case Xe:\n                    case Ve:\n                        return new r(t);\n                    case Qe:\n                        return kf(t);\n                    case yt:\n                        return new r;\n                    case In:\n                        return jf(t);\n                }\n            }\n            function gh(t, e) {\n                var n = e.length;\n                if (!n) return t;\n                var r = n - 1;\n                return e[r] = (n > 1 ? \"& \" : \"\") + e[r], e = e.join(n > 2 ? \", \" : \" \"), t.replace(vo, `{\n/* [wrapped with ` + e + `] */\n`);\n            }\n            function vh(t) {\n                return b(t) || Ce(t) || !!(Us && t && t[Us]);\n            }\n            function Qt(t, e) {\n                var n = typeof t;\n                return e = e ?? ee, !!e && (n == \"number\" || n != \"symbol\" && So.test(t)) && t > -1 && t % 1 == 0 && t < e;\n            }\n            function it(t, e, n) {\n                if (!K(n)) return !1;\n                var r = typeof e;\n                return (r == \"number\" ? at(n) && Qt(e, n.length) : r == \"string\" && e in n) ? Rt(n[e], t) : !1;\n            }\n            function mi(t, e) {\n                if (b(t)) return !1;\n                var n = typeof t;\n                return n == \"number\" || n == \"symbol\" || n == \"boolean\" || t == null || pt(t) ? !0 : ho.test(t) || !fo.test(t) || e != null && t in M(e);\n            }\n            function _h(t) {\n                var e = typeof t;\n                return e == \"string\" || e == \"number\" || e == \"symbol\" || e == \"boolean\" ? t !== \"__proto__\" : t === null;\n            }\n            function wi(t) {\n                var e = er(t), n = a[e];\n                if (typeof n != \"function\" || !(e in N.prototype)) return !1;\n                if (t === n) return !0;\n                var r = gi(n);\n                return !!r && t === r[0];\n            }\n            function mh(t) {\n                return !!Hs && Hs in t;\n            }\n            var wh = Tn ? Vt : $i;\n            function pn(t) {\n                var e = t && t.constructor, n = typeof e == \"function\" && e.prototype || Ne;\n                return t === n;\n            }\n            function Hu(t) {\n                return t === t && !K(t);\n            }\n            function Du(t, e) {\n                return function(n) {\n                    return n == null ? !1 : n[t] === e && (e !== i || t in M(n));\n                };\n            }\n            function Ph(t) {\n                var e = ar(t, function(r) {\n                    return n.size === Ke && n.clear(), r;\n                }), n = e.cache;\n                return e;\n            }\n            function Ch(t, e) {\n                var n = t[1], r = e[1], u = n | r, o = u < (vt | he | Gt), c = r == Gt && n == Nt || r == Gt && n == Je && t[7].length <= e[8] || r == (Gt | Je) && e[7].length <= e[8] && n == Nt;\n                if (!(o || c)) return t;\n                r & vt && (t[2] = e[2], u |= n & vt ? 0 : Gi);\n                var f = e[3];\n                if (f) {\n                    var l = t[3];\n                    t[3] = l ? vu(l, f, e[4]) : f, t[4] = l ? ie(t[3], Ie) : e[4];\n                }\n                return f = e[5], f && (l = t[5], t[5] = l ? _u(l, f, e[6]) : f, t[6] = l ? ie(t[5], Ie) : e[6]), f = e[7], f && (t[7] = f), r & Gt && (t[8] = t[8] == null ? e[8] : et(t[8], e[8])), t[9] == null && (t[9] = e[9]), t[0] = e[0], t[1] = u, t;\n            }\n            function Ah(t) {\n                var e = [];\n                if (t != null) for(var n in M(t))e.push(n);\n                return e;\n            }\n            function Ih(t) {\n                return Hn.call(t);\n            }\n            function Nu(t, e, n) {\n                return e = V(e === i ? t.length - 1 : e, 0), function() {\n                    for(var r = arguments, u = -1, o = V(r.length - e, 0), c = d(o); ++u < o;)c[u] = r[e + u];\n                    u = -1;\n                    for(var f = d(e + 1); ++u < e;)f[u] = r[u];\n                    return f[e] = n(c), ft(t, this, f);\n                };\n            }\n            function $u(t, e) {\n                return e.length < 2 ? t : me(t, At(e, 0, -1));\n            }\n            function xh(t, e) {\n                for(var n = t.length, r = et(e.length, n), u = ut(t); r--;){\n                    var o = e[r];\n                    t[r] = Qt(o, n) ? u[o] : i;\n                }\n                return t;\n            }\n            function Pi(t, e) {\n                if (!(e === \"constructor\" && typeof t[e] == \"function\") && e != \"__proto__\") return t[e];\n            }\n            var Uu = Fu(uu), dn = qc || function(t, e) {\n                return j.setTimeout(t, e);\n            }, Ci = Fu(Yf);\n            function qu(t, e, n) {\n                var r = e + \"\";\n                return Ci(t, gh(r, Eh(lh(r), n)));\n            }\n            function Fu(t) {\n                var e = 0, n = 0;\n                return function() {\n                    var r = Bc(), u = za - (r - n);\n                    if (n = r, u > 0) {\n                        if (++e >= Ga) return arguments[0];\n                    } else e = 0;\n                    return t.apply(i, arguments);\n                };\n            }\n            function rr(t, e) {\n                var n = -1, r = t.length, u = r - 1;\n                for(e = e === i ? r : e; ++n < e;){\n                    var o = ri(n, u), c = t[o];\n                    t[o] = t[n], t[n] = c;\n                }\n                return t.length = e, t;\n            }\n            var Wu = Ph(function(t) {\n                var e = [];\n                return t.charCodeAt(0) === 46 && e.push(\"\"), t.replace(lo, function(n, r, u, o) {\n                    e.push(u ? o.replace(Co, \"$1\") : r || n);\n                }), e;\n            });\n            function Wt(t) {\n                if (typeof t == \"string\" || pt(t)) return t;\n                var e = t + \"\";\n                return e == \"0\" && 1 / t == -le ? \"-0\" : e;\n            }\n            function Pe(t) {\n                if (t != null) {\n                    try {\n                        return Ln.call(t);\n                    } catch  {}\n                    try {\n                        return t + \"\";\n                    } catch  {}\n                }\n                return \"\";\n            }\n            function Eh(t, e) {\n                return mt(Qa, function(n) {\n                    var r = \"_.\" + n[0];\n                    e & n[1] && !Sn(t, r) && t.push(r);\n                }), t.sort();\n            }\n            function Mu(t) {\n                if (t instanceof N) return t.clone();\n                var e = new Pt(t.__wrapped__, t.__chain__);\n                return e.__actions__ = ut(t.__actions__), e.__index__ = t.__index__, e.__values__ = t.__values__, e;\n            }\n            function yh(t, e, n) {\n                (n ? it(t, e, n) : e === i) ? e = 1 : e = V(T(e), 0);\n                var r = t == null ? 0 : t.length;\n                if (!r || e < 1) return [];\n                for(var u = 0, o = 0, c = d(Fn(r / e)); u < r;)c[o++] = At(t, u, u += e);\n                return c;\n            }\n            function Sh(t) {\n                for(var e = -1, n = t == null ? 0 : t.length, r = 0, u = []; ++e < n;){\n                    var o = t[e];\n                    o && (u[r++] = o);\n                }\n                return u;\n            }\n            function Oh() {\n                var t = arguments.length;\n                if (!t) return [];\n                for(var e = d(t - 1), n = arguments[0], r = t; r--;)e[r - 1] = arguments[r];\n                return re(b(n) ? ut(n) : [\n                    n\n                ], tt(e, 1));\n            }\n            var Rh = H(function(t, e) {\n                return Z(t) ? on(t, tt(e, 1, Z, !0)) : [];\n            }), bh = H(function(t, e) {\n                var n = It(e);\n                return Z(n) && (n = i), Z(t) ? on(t, tt(e, 1, Z, !0), E(n, 2)) : [];\n            }), Th = H(function(t, e) {\n                var n = It(e);\n                return Z(n) && (n = i), Z(t) ? on(t, tt(e, 1, Z, !0), i, n) : [];\n            });\n            function Lh(t, e, n) {\n                var r = t == null ? 0 : t.length;\n                return r ? (e = n || e === i ? 1 : T(e), At(t, e < 0 ? 0 : e, r)) : [];\n            }\n            function Hh(t, e, n) {\n                var r = t == null ? 0 : t.length;\n                return r ? (e = n || e === i ? 1 : T(e), e = r - e, At(t, 0, e < 0 ? 0 : e)) : [];\n            }\n            function Dh(t, e) {\n                return t && t.length ? Xn(t, E(e, 3), !0, !0) : [];\n            }\n            function Nh(t, e) {\n                return t && t.length ? Xn(t, E(e, 3), !0) : [];\n            }\n            function $h(t, e, n, r) {\n                var u = t == null ? 0 : t.length;\n                return u ? (n && typeof n != \"number\" && it(t, e, n) && (n = 0, r = u), Of(t, e, n, r)) : [];\n            }\n            function Bu(t, e, n) {\n                var r = t == null ? 0 : t.length;\n                if (!r) return -1;\n                var u = n == null ? 0 : T(n);\n                return u < 0 && (u = V(r + u, 0)), On(t, E(e, 3), u);\n            }\n            function Gu(t, e, n) {\n                var r = t == null ? 0 : t.length;\n                if (!r) return -1;\n                var u = r - 1;\n                return n !== i && (u = T(n), u = n < 0 ? V(r + u, 0) : et(u, r - 1)), On(t, E(e, 3), u, !0);\n            }\n            function zu(t) {\n                var e = t == null ? 0 : t.length;\n                return e ? tt(t, 1) : [];\n            }\n            function Uh(t) {\n                var e = t == null ? 0 : t.length;\n                return e ? tt(t, le) : [];\n            }\n            function qh(t, e) {\n                var n = t == null ? 0 : t.length;\n                return n ? (e = e === i ? 1 : T(e), tt(t, e)) : [];\n            }\n            function Fh(t) {\n                for(var e = -1, n = t == null ? 0 : t.length, r = {}; ++e < n;){\n                    var u = t[e];\n                    r[u[0]] = u[1];\n                }\n                return r;\n            }\n            function Ku(t) {\n                return t && t.length ? t[0] : i;\n            }\n            function Wh(t, e, n) {\n                var r = t == null ? 0 : t.length;\n                if (!r) return -1;\n                var u = n == null ? 0 : T(n);\n                return u < 0 && (u = V(r + u, 0)), Te(t, e, u);\n            }\n            function Mh(t) {\n                var e = t == null ? 0 : t.length;\n                return e ? At(t, 0, -1) : [];\n            }\n            var Bh = H(function(t) {\n                var e = z(t, oi);\n                return e.length && e[0] === t[0] ? kr(e) : [];\n            }), Gh = H(function(t) {\n                var e = It(t), n = z(t, oi);\n                return e === It(n) ? e = i : n.pop(), n.length && n[0] === t[0] ? kr(n, E(e, 2)) : [];\n            }), zh = H(function(t) {\n                var e = It(t), n = z(t, oi);\n                return e = typeof e == \"function\" ? e : i, e && n.pop(), n.length && n[0] === t[0] ? kr(n, i, e) : [];\n            });\n            function Kh(t, e) {\n                return t == null ? \"\" : Wc.call(t, e);\n            }\n            function It(t) {\n                var e = t == null ? 0 : t.length;\n                return e ? t[e - 1] : i;\n            }\n            function Jh(t, e, n) {\n                var r = t == null ? 0 : t.length;\n                if (!r) return -1;\n                var u = r;\n                return n !== i && (u = T(n), u = u < 0 ? V(r + u, 0) : et(u, r - 1)), e === e ? xc(t, e, u) : On(t, Es, u, !0);\n            }\n            function Yh(t, e) {\n                return t && t.length ? nu(t, T(e)) : i;\n            }\n            var Zh = H(Ju);\n            function Ju(t, e) {\n                return t && t.length && e && e.length ? ni(t, e) : t;\n            }\n            function Xh(t, e, n) {\n                return t && t.length && e && e.length ? ni(t, e, E(n, 2)) : t;\n            }\n            function Qh(t, e, n) {\n                return t && t.length && e && e.length ? ni(t, e, i, n) : t;\n            }\n            var Vh = Xt(function(t, e) {\n                var n = t == null ? 0 : t.length, r = Zr(t, e);\n                return su(t, z(e, function(u) {\n                    return Qt(u, n) ? +u : u;\n                }).sort(gu)), r;\n            });\n            function kh(t, e) {\n                var n = [];\n                if (!(t && t.length)) return n;\n                var r = -1, u = [], o = t.length;\n                for(e = E(e, 3); ++r < o;){\n                    var c = t[r];\n                    e(c, r, t) && (n.push(c), u.push(r));\n                }\n                return su(t, u), n;\n            }\n            function Ai(t) {\n                return t == null ? t : zc.call(t);\n            }\n            function jh(t, e, n) {\n                var r = t == null ? 0 : t.length;\n                return r ? (n && typeof n != \"number\" && it(t, e, n) ? (e = 0, n = r) : (e = e == null ? 0 : T(e), n = n === i ? r : T(n)), At(t, e, n)) : [];\n            }\n            function tl(t, e) {\n                return Zn(t, e);\n            }\n            function el(t, e, n) {\n                return si(t, e, E(n, 2));\n            }\n            function nl(t, e) {\n                var n = t == null ? 0 : t.length;\n                if (n) {\n                    var r = Zn(t, e);\n                    if (r < n && Rt(t[r], e)) return r;\n                }\n                return -1;\n            }\n            function rl(t, e) {\n                return Zn(t, e, !0);\n            }\n            function il(t, e, n) {\n                return si(t, e, E(n, 2), !0);\n            }\n            function sl(t, e) {\n                var n = t == null ? 0 : t.length;\n                if (n) {\n                    var r = Zn(t, e, !0) - 1;\n                    if (Rt(t[r], e)) return r;\n                }\n                return -1;\n            }\n            function ul(t) {\n                return t && t.length ? au(t) : [];\n            }\n            function al(t, e) {\n                return t && t.length ? au(t, E(e, 2)) : [];\n            }\n            function ol(t) {\n                var e = t == null ? 0 : t.length;\n                return e ? At(t, 1, e) : [];\n            }\n            function cl(t, e, n) {\n                return t && t.length ? (e = n || e === i ? 1 : T(e), At(t, 0, e < 0 ? 0 : e)) : [];\n            }\n            function fl(t, e, n) {\n                var r = t == null ? 0 : t.length;\n                return r ? (e = n || e === i ? 1 : T(e), e = r - e, At(t, e < 0 ? 0 : e, r)) : [];\n            }\n            function hl(t, e) {\n                return t && t.length ? Xn(t, E(e, 3), !1, !0) : [];\n            }\n            function ll(t, e) {\n                return t && t.length ? Xn(t, E(e, 3)) : [];\n            }\n            var pl = H(function(t) {\n                return ae(tt(t, 1, Z, !0));\n            }), dl = H(function(t) {\n                var e = It(t);\n                return Z(e) && (e = i), ae(tt(t, 1, Z, !0), E(e, 2));\n            }), gl = H(function(t) {\n                var e = It(t);\n                return e = typeof e == \"function\" ? e : i, ae(tt(t, 1, Z, !0), i, e);\n            });\n            function vl(t) {\n                return t && t.length ? ae(t) : [];\n            }\n            function _l(t, e) {\n                return t && t.length ? ae(t, E(e, 2)) : [];\n            }\n            function ml(t, e) {\n                return e = typeof e == \"function\" ? e : i, t && t.length ? ae(t, i, e) : [];\n            }\n            function Ii(t) {\n                if (!(t && t.length)) return [];\n                var e = 0;\n                return t = ne(t, function(n) {\n                    if (Z(n)) return e = V(n.length, e), !0;\n                }), Wr(e, function(n) {\n                    return z(t, Ur(n));\n                });\n            }\n            function Yu(t, e) {\n                if (!(t && t.length)) return [];\n                var n = Ii(t);\n                return e == null ? n : z(n, function(r) {\n                    return ft(e, i, r);\n                });\n            }\n            var wl = H(function(t, e) {\n                return Z(t) ? on(t, e) : [];\n            }), Pl = H(function(t) {\n                return ai(ne(t, Z));\n            }), Cl = H(function(t) {\n                var e = It(t);\n                return Z(e) && (e = i), ai(ne(t, Z), E(e, 2));\n            }), Al = H(function(t) {\n                var e = It(t);\n                return e = typeof e == \"function\" ? e : i, ai(ne(t, Z), i, e);\n            }), Il = H(Ii);\n            function xl(t, e) {\n                return hu(t || [], e || [], an);\n            }\n            function El(t, e) {\n                return hu(t || [], e || [], hn);\n            }\n            var yl = H(function(t) {\n                var e = t.length, n = e > 1 ? t[e - 1] : i;\n                return n = typeof n == \"function\" ? (t.pop(), n) : i, Yu(t, n);\n            });\n            function Zu(t) {\n                var e = a(t);\n                return e.__chain__ = !0, e;\n            }\n            function Sl(t, e) {\n                return e(t), t;\n            }\n            function ir(t, e) {\n                return e(t);\n            }\n            var Ol = Xt(function(t) {\n                var e = t.length, n = e ? t[0] : 0, r = this.__wrapped__, u = function(o) {\n                    return Zr(o, t);\n                };\n                return e > 1 || this.__actions__.length || !(r instanceof N) || !Qt(n) ? this.thru(u) : (r = r.slice(n, +n + (e ? 1 : 0)), r.__actions__.push({\n                    func: ir,\n                    args: [\n                        u\n                    ],\n                    thisArg: i\n                }), new Pt(r, this.__chain__).thru(function(o) {\n                    return e && !o.length && o.push(i), o;\n                }));\n            });\n            function Rl() {\n                return Zu(this);\n            }\n            function bl() {\n                return new Pt(this.value(), this.__chain__);\n            }\n            function Tl() {\n                this.__values__ === i && (this.__values__ = oa(this.value()));\n                var t = this.__index__ >= this.__values__.length, e = t ? i : this.__values__[this.__index__++];\n                return {\n                    done: t,\n                    value: e\n                };\n            }\n            function Ll() {\n                return this;\n            }\n            function Hl(t) {\n                for(var e, n = this; n instanceof Gn;){\n                    var r = Mu(n);\n                    r.__index__ = 0, r.__values__ = i, e ? u.__wrapped__ = r : e = r;\n                    var u = r;\n                    n = n.__wrapped__;\n                }\n                return u.__wrapped__ = t, e;\n            }\n            function Dl() {\n                var t = this.__wrapped__;\n                if (t instanceof N) {\n                    var e = t;\n                    return this.__actions__.length && (e = new N(this)), e = e.reverse(), e.__actions__.push({\n                        func: ir,\n                        args: [\n                            Ai\n                        ],\n                        thisArg: i\n                    }), new Pt(e, this.__chain__);\n                }\n                return this.thru(Ai);\n            }\n            function Nl() {\n                return fu(this.__wrapped__, this.__actions__);\n            }\n            var $l = Qn(function(t, e, n) {\n                W.call(t, n) ? ++t[n] : Yt(t, n, 1);\n            });\n            function Ul(t, e, n) {\n                var r = b(t) ? Is : Sf;\n                return n && it(t, e, n) && (e = i), r(t, E(e, 3));\n            }\n            function ql(t, e) {\n                var n = b(t) ? ne : Ys;\n                return n(t, E(e, 3));\n            }\n            var Fl = Cu(Bu), Wl = Cu(Gu);\n            function Ml(t, e) {\n                return tt(sr(t, e), 1);\n            }\n            function Bl(t, e) {\n                return tt(sr(t, e), le);\n            }\n            function Gl(t, e, n) {\n                return n = n === i ? 1 : T(n), tt(sr(t, e), n);\n            }\n            function Xu(t, e) {\n                var n = b(t) ? mt : ue;\n                return n(t, E(e, 3));\n            }\n            function Qu(t, e) {\n                var n = b(t) ? ac : Js;\n                return n(t, E(e, 3));\n            }\n            var zl = Qn(function(t, e, n) {\n                W.call(t, n) ? t[n].push(e) : Yt(t, n, [\n                    e\n                ]);\n            });\n            function Kl(t, e, n, r) {\n                t = at(t) ? t : Ge(t), n = n && !r ? T(n) : 0;\n                var u = t.length;\n                return n < 0 && (n = V(u + n, 0)), fr(t) ? n <= u && t.indexOf(e, n) > -1 : !!u && Te(t, e, n) > -1;\n            }\n            var Jl = H(function(t, e, n) {\n                var r = -1, u = typeof e == \"function\", o = at(t) ? d(t.length) : [];\n                return ue(t, function(c) {\n                    o[++r] = u ? ft(e, c, n) : cn(c, e, n);\n                }), o;\n            }), Yl = Qn(function(t, e, n) {\n                Yt(t, n, e);\n            });\n            function sr(t, e) {\n                var n = b(t) ? z : js;\n                return n(t, E(e, 3));\n            }\n            function Zl(t, e, n, r) {\n                return t == null ? [] : (b(e) || (e = e == null ? [] : [\n                    e\n                ]), n = r ? i : n, b(n) || (n = n == null ? [] : [\n                    n\n                ]), ru(t, e, n));\n            }\n            var Xl = Qn(function(t, e, n) {\n                t[n ? 0 : 1].push(e);\n            }, function() {\n                return [\n                    [],\n                    []\n                ];\n            });\n            function Ql(t, e, n) {\n                var r = b(t) ? Nr : Ss, u = arguments.length < 3;\n                return r(t, E(e, 4), n, u, ue);\n            }\n            function Vl(t, e, n) {\n                var r = b(t) ? oc : Ss, u = arguments.length < 3;\n                return r(t, E(e, 4), n, u, Js);\n            }\n            function kl(t, e) {\n                var n = b(t) ? ne : Ys;\n                return n(t, or(E(e, 3)));\n            }\n            function jl(t) {\n                var e = b(t) ? Bs : Kf;\n                return e(t);\n            }\n            function tp(t, e, n) {\n                (n ? it(t, e, n) : e === i) ? e = 1 : e = T(e);\n                var r = b(t) ? Af : Jf;\n                return r(t, e);\n            }\n            function ep(t) {\n                var e = b(t) ? If : Zf;\n                return e(t);\n            }\n            function np(t) {\n                if (t == null) return 0;\n                if (at(t)) return fr(t) ? He(t) : t.length;\n                var e = nt(t);\n                return e == Et || e == yt ? t.size : ti(t).length;\n            }\n            function rp(t, e, n) {\n                var r = b(t) ? $r : Xf;\n                return n && it(t, e, n) && (e = i), r(t, E(e, 3));\n            }\n            var ip = H(function(t, e) {\n                if (t == null) return [];\n                var n = e.length;\n                return n > 1 && it(t, e[0], e[1]) ? e = [] : n > 2 && it(e[0], e[1], e[2]) && (e = [\n                    e[0]\n                ]), ru(t, tt(e, 1), []);\n            }), ur = Uc || function() {\n                return j.Date.now();\n            };\n            function sp(t, e) {\n                if (typeof e != \"function\") throw new wt(y);\n                return t = T(t), function() {\n                    if (--t < 1) return e.apply(this, arguments);\n                };\n            }\n            function Vu(t, e, n) {\n                return e = n ? i : e, e = t && e == null ? t.length : e, Zt(t, Gt, i, i, i, i, e);\n            }\n            function ku(t, e) {\n                var n;\n                if (typeof e != \"function\") throw new wt(y);\n                return t = T(t), function() {\n                    return --t > 0 && (n = e.apply(this, arguments)), t <= 1 && (e = i), n;\n                };\n            }\n            var xi = H(function(t, e, n) {\n                var r = vt;\n                if (n.length) {\n                    var u = ie(n, Me(xi));\n                    r |= $t;\n                }\n                return Zt(t, r, e, n, u);\n            }), ju = H(function(t, e, n) {\n                var r = vt | he;\n                if (n.length) {\n                    var u = ie(n, Me(ju));\n                    r |= $t;\n                }\n                return Zt(e, r, t, n, u);\n            });\n            function ta(t, e, n) {\n                e = n ? i : e;\n                var r = Zt(t, Nt, i, i, i, i, i, e);\n                return r.placeholder = ta.placeholder, r;\n            }\n            function ea(t, e, n) {\n                e = n ? i : e;\n                var r = Zt(t, ye, i, i, i, i, i, e);\n                return r.placeholder = ea.placeholder, r;\n            }\n            function na(t, e, n) {\n                var r, u, o, c, f, l, v = 0, _ = !1, m = !1, C = !0;\n                if (typeof t != \"function\") throw new wt(y);\n                e = xt(e) || 0, K(n) && (_ = !!n.leading, m = \"maxWait\" in n, o = m ? V(xt(n.maxWait) || 0, e) : o, C = \"trailing\" in n ? !!n.trailing : C);\n                function x(X) {\n                    var bt = r, jt = u;\n                    return r = u = i, v = X, c = t.apply(jt, bt), c;\n                }\n                function S(X) {\n                    return v = X, f = dn(D, e), _ ? x(X) : c;\n                }\n                function L(X) {\n                    var bt = X - l, jt = X - v, Ca = e - bt;\n                    return m ? et(Ca, o - jt) : Ca;\n                }\n                function O(X) {\n                    var bt = X - l, jt = X - v;\n                    return l === i || bt >= e || bt < 0 || m && jt >= o;\n                }\n                function D() {\n                    var X = ur();\n                    if (O(X)) return $(X);\n                    f = dn(D, L(X));\n                }\n                function $(X) {\n                    return f = i, C && r ? x(X) : (r = u = i, c);\n                }\n                function dt() {\n                    f !== i && lu(f), v = 0, r = l = u = f = i;\n                }\n                function st() {\n                    return f === i ? c : $(ur());\n                }\n                function gt() {\n                    var X = ur(), bt = O(X);\n                    if (r = arguments, u = this, l = X, bt) {\n                        if (f === i) return S(l);\n                        if (m) return lu(f), f = dn(D, e), x(l);\n                    }\n                    return f === i && (f = dn(D, e)), c;\n                }\n                return gt.cancel = dt, gt.flush = st, gt;\n            }\n            var up = H(function(t, e) {\n                return Ks(t, 1, e);\n            }), ap = H(function(t, e, n) {\n                return Ks(t, xt(e) || 0, n);\n            });\n            function op(t) {\n                return Zt(t, gr);\n            }\n            function ar(t, e) {\n                if (typeof t != \"function\" || e != null && typeof e != \"function\") throw new wt(y);\n                var n = function() {\n                    var r = arguments, u = e ? e.apply(this, r) : r[0], o = n.cache;\n                    if (o.has(u)) return o.get(u);\n                    var c = t.apply(this, r);\n                    return n.cache = o.set(u, c) || o, c;\n                };\n                return n.cache = new (ar.Cache || Jt), n;\n            }\n            ar.Cache = Jt;\n            function or(t) {\n                if (typeof t != \"function\") throw new wt(y);\n                return function() {\n                    var e = arguments;\n                    switch(e.length){\n                        case 0:\n                            return !t.call(this);\n                        case 1:\n                            return !t.call(this, e[0]);\n                        case 2:\n                            return !t.call(this, e[0], e[1]);\n                        case 3:\n                            return !t.call(this, e[0], e[1], e[2]);\n                    }\n                    return !t.apply(this, e);\n                };\n            }\n            function cp(t) {\n                return ku(2, t);\n            }\n            var fp = Qf(function(t, e) {\n                e = e.length == 1 && b(e[0]) ? z(e[0], ht(E())) : z(tt(e, 1), ht(E()));\n                var n = e.length;\n                return H(function(r) {\n                    for(var u = -1, o = et(r.length, n); ++u < o;)r[u] = e[u].call(this, r[u]);\n                    return ft(t, this, r);\n                });\n            }), Ei = H(function(t, e) {\n                var n = ie(e, Me(Ei));\n                return Zt(t, $t, i, e, n);\n            }), ra = H(function(t, e) {\n                var n = ie(e, Me(ra));\n                return Zt(t, Se, i, e, n);\n            }), hp = Xt(function(t, e) {\n                return Zt(t, Je, i, i, i, e);\n            });\n            function lp(t, e) {\n                if (typeof t != \"function\") throw new wt(y);\n                return e = e === i ? e : T(e), H(t, e);\n            }\n            function pp(t, e) {\n                if (typeof t != \"function\") throw new wt(y);\n                return e = e == null ? 0 : V(T(e), 0), H(function(n) {\n                    var r = n[e], u = ce(n, 0, e);\n                    return r && re(u, r), ft(t, this, u);\n                });\n            }\n            function dp(t, e, n) {\n                var r = !0, u = !0;\n                if (typeof t != \"function\") throw new wt(y);\n                return K(n) && (r = \"leading\" in n ? !!n.leading : r, u = \"trailing\" in n ? !!n.trailing : u), na(t, e, {\n                    leading: r,\n                    maxWait: e,\n                    trailing: u\n                });\n            }\n            function gp(t) {\n                return Vu(t, 1);\n            }\n            function vp(t, e) {\n                return Ei(ci(e), t);\n            }\n            function _p() {\n                if (!arguments.length) return [];\n                var t = arguments[0];\n                return b(t) ? t : [\n                    t\n                ];\n            }\n            function mp(t) {\n                return Ct(t, xe);\n            }\n            function wp(t, e) {\n                return e = typeof e == \"function\" ? e : i, Ct(t, xe, e);\n            }\n            function Pp(t) {\n                return Ct(t, Dt | xe);\n            }\n            function Cp(t, e) {\n                return e = typeof e == \"function\" ? e : i, Ct(t, Dt | xe, e);\n            }\n            function Ap(t, e) {\n                return e == null || zs(t, e, k(e));\n            }\n            function Rt(t, e) {\n                return t === e || t !== t && e !== e;\n            }\n            var Ip = tr(Vr), xp = tr(function(t, e) {\n                return t >= e;\n            }), Ce = Qs(function() {\n                return arguments;\n            }()) ? Qs : function(t) {\n                return Y(t) && W.call(t, \"callee\") && !$s.call(t, \"callee\");\n            }, b = d.isArray, Ep = _s ? ht(_s) : Hf;\n            function at(t) {\n                return t != null && cr(t.length) && !Vt(t);\n            }\n            function Z(t) {\n                return Y(t) && at(t);\n            }\n            function yp(t) {\n                return t === !0 || t === !1 || Y(t) && rt(t) == Ye;\n            }\n            var fe = Fc || $i, Sp = ms ? ht(ms) : Df;\n            function Op(t) {\n                return Y(t) && t.nodeType === 1 && !gn(t);\n            }\n            function Rp(t) {\n                if (t == null) return !0;\n                if (at(t) && (b(t) || typeof t == \"string\" || typeof t.splice == \"function\" || fe(t) || Be(t) || Ce(t))) return !t.length;\n                var e = nt(t);\n                if (e == Et || e == yt) return !t.size;\n                if (pn(t)) return !ti(t).length;\n                for(var n in t)if (W.call(t, n)) return !1;\n                return !0;\n            }\n            function bp(t, e) {\n                return fn(t, e);\n            }\n            function Tp(t, e, n) {\n                n = typeof n == \"function\" ? n : i;\n                var r = n ? n(t, e) : i;\n                return r === i ? fn(t, e, i, n) : !!r;\n            }\n            function yi(t) {\n                if (!Y(t)) return !1;\n                var e = rt(t);\n                return e == Cn || e == ka || typeof t.message == \"string\" && typeof t.name == \"string\" && !gn(t);\n            }\n            function Lp(t) {\n                return typeof t == \"number\" && qs(t);\n            }\n            function Vt(t) {\n                if (!K(t)) return !1;\n                var e = rt(t);\n                return e == An || e == Ki || e == Va || e == to;\n            }\n            function ia(t) {\n                return typeof t == \"number\" && t == T(t);\n            }\n            function cr(t) {\n                return typeof t == \"number\" && t > -1 && t % 1 == 0 && t <= ee;\n            }\n            function K(t) {\n                var e = typeof t;\n                return t != null && (e == \"object\" || e == \"function\");\n            }\n            function Y(t) {\n                return t != null && typeof t == \"object\";\n            }\n            var sa = ws ? ht(ws) : $f;\n            function Hp(t, e) {\n                return t === e || jr(t, e, vi(e));\n            }\n            function Dp(t, e, n) {\n                return n = typeof n == \"function\" ? n : i, jr(t, e, vi(e), n);\n            }\n            function Np(t) {\n                return ua(t) && t != +t;\n            }\n            function $p(t) {\n                if (wh(t)) throw new R(I);\n                return Vs(t);\n            }\n            function Up(t) {\n                return t === null;\n            }\n            function qp(t) {\n                return t == null;\n            }\n            function ua(t) {\n                return typeof t == \"number\" || Y(t) && rt(t) == Xe;\n            }\n            function gn(t) {\n                if (!Y(t) || rt(t) != zt) return !1;\n                var e = $n(t);\n                if (e === null) return !0;\n                var n = W.call(e, \"constructor\") && e.constructor;\n                return typeof n == \"function\" && n instanceof n && Ln.call(n) == Hc;\n            }\n            var Si = Ps ? ht(Ps) : Uf;\n            function Fp(t) {\n                return ia(t) && t >= -ee && t <= ee;\n            }\n            var aa = Cs ? ht(Cs) : qf;\n            function fr(t) {\n                return typeof t == \"string\" || !b(t) && Y(t) && rt(t) == Ve;\n            }\n            function pt(t) {\n                return typeof t == \"symbol\" || Y(t) && rt(t) == In;\n            }\n            var Be = As ? ht(As) : Ff;\n            function Wp(t) {\n                return t === i;\n            }\n            function Mp(t) {\n                return Y(t) && nt(t) == ke;\n            }\n            function Bp(t) {\n                return Y(t) && rt(t) == no;\n            }\n            var Gp = tr(ei), zp = tr(function(t, e) {\n                return t <= e;\n            });\n            function oa(t) {\n                if (!t) return [];\n                if (at(t)) return fr(t) ? St(t) : ut(t);\n                if (en && t[en]) return Cc(t[en]());\n                var e = nt(t), n = e == Et ? Br : e == yt ? Rn : Ge;\n                return n(t);\n            }\n            function kt(t) {\n                if (!t) return t === 0 ? t : 0;\n                if (t = xt(t), t === le || t === -le) {\n                    var e = t < 0 ? -1 : 1;\n                    return e * Ya;\n                }\n                return t === t ? t : 0;\n            }\n            function T(t) {\n                var e = kt(t), n = e % 1;\n                return e === e ? n ? e - n : e : 0;\n            }\n            function ca(t) {\n                return t ? _e(T(t), 0, Ut) : 0;\n            }\n            function xt(t) {\n                if (typeof t == \"number\") return t;\n                if (pt(t)) return wn;\n                if (K(t)) {\n                    var e = typeof t.valueOf == \"function\" ? t.valueOf() : t;\n                    t = K(e) ? e + \"\" : e;\n                }\n                if (typeof t != \"string\") return t === 0 ? t : +t;\n                t = Os(t);\n                var n = xo.test(t);\n                return n || yo.test(t) ? ic(t.slice(2), n ? 2 : 8) : Io.test(t) ? wn : +t;\n            }\n            function fa(t) {\n                return Ft(t, ot(t));\n            }\n            function Kp(t) {\n                return t ? _e(T(t), -ee, ee) : t === 0 ? t : 0;\n            }\n            function q(t) {\n                return t == null ? \"\" : lt(t);\n            }\n            var Jp = Fe(function(t, e) {\n                if (pn(e) || at(e)) {\n                    Ft(e, k(e), t);\n                    return;\n                }\n                for(var n in e)W.call(e, n) && an(t, n, e[n]);\n            }), ha = Fe(function(t, e) {\n                Ft(e, ot(e), t);\n            }), hr = Fe(function(t, e, n, r) {\n                Ft(e, ot(e), t, r);\n            }), Yp = Fe(function(t, e, n, r) {\n                Ft(e, k(e), t, r);\n            }), Zp = Xt(Zr);\n            function Xp(t, e) {\n                var n = qe(t);\n                return e == null ? n : Gs(n, e);\n            }\n            var Qp = H(function(t, e) {\n                t = M(t);\n                var n = -1, r = e.length, u = r > 2 ? e[2] : i;\n                for(u && it(e[0], e[1], u) && (r = 1); ++n < r;)for(var o = e[n], c = ot(o), f = -1, l = c.length; ++f < l;){\n                    var v = c[f], _ = t[v];\n                    (_ === i || Rt(_, Ne[v]) && !W.call(t, v)) && (t[v] = o[v]);\n                }\n                return t;\n            }), Vp = H(function(t) {\n                return t.push(i, Ou), ft(la, i, t);\n            });\n            function kp(t, e) {\n                return xs(t, E(e, 3), qt);\n            }\n            function jp(t, e) {\n                return xs(t, E(e, 3), Qr);\n            }\n            function td(t, e) {\n                return t == null ? t : Xr(t, E(e, 3), ot);\n            }\n            function ed(t, e) {\n                return t == null ? t : Zs(t, E(e, 3), ot);\n            }\n            function nd(t, e) {\n                return t && qt(t, E(e, 3));\n            }\n            function rd(t, e) {\n                return t && Qr(t, E(e, 3));\n            }\n            function id(t) {\n                return t == null ? [] : Jn(t, k(t));\n            }\n            function sd(t) {\n                return t == null ? [] : Jn(t, ot(t));\n            }\n            function Oi(t, e, n) {\n                var r = t == null ? i : me(t, e);\n                return r === i ? n : r;\n            }\n            function ud(t, e) {\n                return t != null && Tu(t, e, Rf);\n            }\n            function Ri(t, e) {\n                return t != null && Tu(t, e, bf);\n            }\n            var ad = Iu(function(t, e, n) {\n                e != null && typeof e.toString != \"function\" && (e = Hn.call(e)), t[e] = n;\n            }, Ti(ct)), od = Iu(function(t, e, n) {\n                e != null && typeof e.toString != \"function\" && (e = Hn.call(e)), W.call(t, e) ? t[e].push(n) : t[e] = [\n                    n\n                ];\n            }, E), cd = H(cn);\n            function k(t) {\n                return at(t) ? Ms(t) : ti(t);\n            }\n            function ot(t) {\n                return at(t) ? Ms(t, !0) : Wf(t);\n            }\n            function fd(t, e) {\n                var n = {};\n                return e = E(e, 3), qt(t, function(r, u, o) {\n                    Yt(n, e(r, u, o), r);\n                }), n;\n            }\n            function hd(t, e) {\n                var n = {};\n                return e = E(e, 3), qt(t, function(r, u, o) {\n                    Yt(n, u, e(r, u, o));\n                }), n;\n            }\n            var ld = Fe(function(t, e, n) {\n                Yn(t, e, n);\n            }), la = Fe(function(t, e, n, r) {\n                Yn(t, e, n, r);\n            }), pd = Xt(function(t, e) {\n                var n = {};\n                if (t == null) return n;\n                var r = !1;\n                e = z(e, function(o) {\n                    return o = oe(o, t), r || (r = o.length > 1), o;\n                }), Ft(t, di(t), n), r && (n = Ct(n, Dt | Bt | xe, ah));\n                for(var u = e.length; u--;)ui(n, e[u]);\n                return n;\n            });\n            function dd(t, e) {\n                return pa(t, or(E(e)));\n            }\n            var gd = Xt(function(t, e) {\n                return t == null ? {} : Bf(t, e);\n            });\n            function pa(t, e) {\n                if (t == null) return {};\n                var n = z(di(t), function(r) {\n                    return [\n                        r\n                    ];\n                });\n                return e = E(e), iu(t, n, function(r, u) {\n                    return e(r, u[0]);\n                });\n            }\n            function vd(t, e, n) {\n                e = oe(e, t);\n                var r = -1, u = e.length;\n                for(u || (u = 1, t = i); ++r < u;){\n                    var o = t == null ? i : t[Wt(e[r])];\n                    o === i && (r = u, o = n), t = Vt(o) ? o.call(t) : o;\n                }\n                return t;\n            }\n            function _d(t, e, n) {\n                return t == null ? t : hn(t, e, n);\n            }\n            function md(t, e, n, r) {\n                return r = typeof r == \"function\" ? r : i, t == null ? t : hn(t, e, n, r);\n            }\n            var da = yu(k), ga = yu(ot);\n            function wd(t, e, n) {\n                var r = b(t), u = r || fe(t) || Be(t);\n                if (e = E(e, 4), n == null) {\n                    var o = t && t.constructor;\n                    u ? n = r ? new o : [] : K(t) ? n = Vt(o) ? qe($n(t)) : {} : n = {};\n                }\n                return (u ? mt : qt)(t, function(c, f, l) {\n                    return e(n, c, f, l);\n                }), n;\n            }\n            function Pd(t, e) {\n                return t == null ? !0 : ui(t, e);\n            }\n            function Cd(t, e, n) {\n                return t == null ? t : cu(t, e, ci(n));\n            }\n            function Ad(t, e, n, r) {\n                return r = typeof r == \"function\" ? r : i, t == null ? t : cu(t, e, ci(n), r);\n            }\n            function Ge(t) {\n                return t == null ? [] : Mr(t, k(t));\n            }\n            function Id(t) {\n                return t == null ? [] : Mr(t, ot(t));\n            }\n            function xd(t, e, n) {\n                return n === i && (n = e, e = i), n !== i && (n = xt(n), n = n === n ? n : 0), e !== i && (e = xt(e), e = e === e ? e : 0), _e(xt(t), e, n);\n            }\n            function Ed(t, e, n) {\n                return e = kt(e), n === i ? (n = e, e = 0) : n = kt(n), t = xt(t), Tf(t, e, n);\n            }\n            function yd(t, e, n) {\n                if (n && typeof n != \"boolean\" && it(t, e, n) && (e = n = i), n === i && (typeof e == \"boolean\" ? (n = e, e = i) : typeof t == \"boolean\" && (n = t, t = i)), t === i && e === i ? (t = 0, e = 1) : (t = kt(t), e === i ? (e = t, t = 0) : e = kt(e)), t > e) {\n                    var r = t;\n                    t = e, e = r;\n                }\n                if (n || t % 1 || e % 1) {\n                    var u = Fs();\n                    return et(t + u * (e - t + rc(\"1e-\" + ((u + \"\").length - 1))), e);\n                }\n                return ri(t, e);\n            }\n            var Sd = We(function(t, e, n) {\n                return e = e.toLowerCase(), t + (n ? va(e) : e);\n            });\n            function va(t) {\n                return bi(q(t).toLowerCase());\n            }\n            function _a(t) {\n                return t = q(t), t && t.replace(Oo, vc).replace(Yo, \"\");\n            }\n            function Od(t, e, n) {\n                t = q(t), e = lt(e);\n                var r = t.length;\n                n = n === i ? r : _e(T(n), 0, r);\n                var u = n;\n                return n -= e.length, n >= 0 && t.slice(n, u) == e;\n            }\n            function Rd(t) {\n                return t = q(t), t && ao.test(t) ? t.replace(Zi, _c) : t;\n            }\n            function bd(t) {\n                return t = q(t), t && po.test(t) ? t.replace(Er, \"\\\\$&\") : t;\n            }\n            var Td = We(function(t, e, n) {\n                return t + (n ? \"-\" : \"\") + e.toLowerCase();\n            }), Ld = We(function(t, e, n) {\n                return t + (n ? \" \" : \"\") + e.toLowerCase();\n            }), Hd = Pu(\"toLowerCase\");\n            function Dd(t, e, n) {\n                t = q(t), e = T(e);\n                var r = e ? He(t) : 0;\n                if (!e || r >= e) return t;\n                var u = (e - r) / 2;\n                return jn(Wn(u), n) + t + jn(Fn(u), n);\n            }\n            function Nd(t, e, n) {\n                t = q(t), e = T(e);\n                var r = e ? He(t) : 0;\n                return e && r < e ? t + jn(e - r, n) : t;\n            }\n            function $d(t, e, n) {\n                t = q(t), e = T(e);\n                var r = e ? He(t) : 0;\n                return e && r < e ? jn(e - r, n) + t : t;\n            }\n            function Ud(t, e, n) {\n                return n || e == null ? e = 0 : e && (e = +e), Gc(q(t).replace(yr, \"\"), e || 0);\n            }\n            function qd(t, e, n) {\n                return (n ? it(t, e, n) : e === i) ? e = 1 : e = T(e), ii(q(t), e);\n            }\n            function Fd() {\n                var t = arguments, e = q(t[0]);\n                return t.length < 3 ? e : e.replace(t[1], t[2]);\n            }\n            var Wd = We(function(t, e, n) {\n                return t + (n ? \"_\" : \"\") + e.toLowerCase();\n            });\n            function Md(t, e, n) {\n                return n && typeof n != \"number\" && it(t, e, n) && (e = n = i), n = n === i ? Ut : n >>> 0, n ? (t = q(t), t && (typeof e == \"string\" || e != null && !Si(e)) && (e = lt(e), !e && Le(t)) ? ce(St(t), 0, n) : t.split(e, n)) : [];\n            }\n            var Bd = We(function(t, e, n) {\n                return t + (n ? \" \" : \"\") + bi(e);\n            });\n            function Gd(t, e, n) {\n                return t = q(t), n = n == null ? 0 : _e(T(n), 0, t.length), e = lt(e), t.slice(n, n + e.length) == e;\n            }\n            function zd(t, e, n) {\n                var r = a.templateSettings;\n                n && it(t, e, n) && (e = i), t = q(t), e = hr({}, e, r, Su);\n                var u = hr({}, e.imports, r.imports, Su), o = k(u), c = Mr(u, o), f, l, v = 0, _ = e.interpolate || xn, m = \"__p += '\", C = Gr((e.escape || xn).source + \"|\" + _.source + \"|\" + (_ === Xi ? Ao : xn).source + \"|\" + (e.evaluate || xn).source + \"|$\", \"g\"), x = \"//# sourceURL=\" + (W.call(e, \"sourceURL\") ? (e.sourceURL + \"\").replace(/\\s/g, \" \") : \"lodash.templateSources[\" + ++ko + \"]\") + `\n`;\n                t.replace(C, function(O, D, $, dt, st, gt) {\n                    return $ || ($ = dt), m += t.slice(v, gt).replace(Ro, mc), D && (f = !0, m += `' +\n__e(` + D + `) +\n'`), st && (l = !0, m += `';\n` + st + `;\n__p += '`), $ && (m += `' +\n((__t = (` + $ + `)) == null ? '' : __t) +\n'`), v = gt + O.length, O;\n                }), m += `';\n`;\n                var S = W.call(e, \"variable\") && e.variable;\n                if (!S) m = `with (obj) {\n` + m + `\n}\n`;\n                else if (Po.test(S)) throw new R(J);\n                m = (l ? m.replace(ro, \"\") : m).replace(io, \"$1\").replace(so, \"$1;\"), m = \"function(\" + (S || \"obj\") + `) {\n` + (S ? \"\" : `obj || (obj = {});\n`) + \"var __t, __p = ''\" + (f ? \", __e = _.escape\" : \"\") + (l ? `, __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n` : `;\n`) + m + `return __p\n}`;\n                var L = wa(function() {\n                    return U(o, x + \"return \" + m).apply(i, c);\n                });\n                if (L.source = m, yi(L)) throw L;\n                return L;\n            }\n            function Kd(t) {\n                return q(t).toLowerCase();\n            }\n            function Jd(t) {\n                return q(t).toUpperCase();\n            }\n            function Yd(t, e, n) {\n                if (t = q(t), t && (n || e === i)) return Os(t);\n                if (!t || !(e = lt(e))) return t;\n                var r = St(t), u = St(e), o = Rs(r, u), c = bs(r, u) + 1;\n                return ce(r, o, c).join(\"\");\n            }\n            function Zd(t, e, n) {\n                if (t = q(t), t && (n || e === i)) return t.slice(0, Ls(t) + 1);\n                if (!t || !(e = lt(e))) return t;\n                var r = St(t), u = bs(r, St(e)) + 1;\n                return ce(r, 0, u).join(\"\");\n            }\n            function Xd(t, e, n) {\n                if (t = q(t), t && (n || e === i)) return t.replace(yr, \"\");\n                if (!t || !(e = lt(e))) return t;\n                var r = St(t), u = Rs(r, St(e));\n                return ce(r, u).join(\"\");\n            }\n            function Qd(t, e) {\n                var n = Ma, r = Ba;\n                if (K(e)) {\n                    var u = \"separator\" in e ? e.separator : u;\n                    n = \"length\" in e ? T(e.length) : n, r = \"omission\" in e ? lt(e.omission) : r;\n                }\n                t = q(t);\n                var o = t.length;\n                if (Le(t)) {\n                    var c = St(t);\n                    o = c.length;\n                }\n                if (n >= o) return t;\n                var f = n - He(r);\n                if (f < 1) return r;\n                var l = c ? ce(c, 0, f).join(\"\") : t.slice(0, f);\n                if (u === i) return l + r;\n                if (c && (f += l.length - f), Si(u)) {\n                    if (t.slice(f).search(u)) {\n                        var v, _ = l;\n                        for(u.global || (u = Gr(u.source, q(Qi.exec(u)) + \"g\")), u.lastIndex = 0; v = u.exec(_);)var m = v.index;\n                        l = l.slice(0, m === i ? f : m);\n                    }\n                } else if (t.indexOf(lt(u), f) != f) {\n                    var C = l.lastIndexOf(u);\n                    C > -1 && (l = l.slice(0, C));\n                }\n                return l + r;\n            }\n            function Vd(t) {\n                return t = q(t), t && uo.test(t) ? t.replace(Yi, Ec) : t;\n            }\n            var kd = We(function(t, e, n) {\n                return t + (n ? \" \" : \"\") + e.toUpperCase();\n            }), bi = Pu(\"toUpperCase\");\n            function ma(t, e, n) {\n                return t = q(t), e = n ? i : e, e === i ? Pc(t) ? Oc(t) : hc(t) : t.match(e) || [];\n            }\n            var wa = H(function(t, e) {\n                try {\n                    return ft(t, i, e);\n                } catch (n) {\n                    return yi(n) ? n : new R(n);\n                }\n            }), jd = Xt(function(t, e) {\n                return mt(e, function(n) {\n                    n = Wt(n), Yt(t, n, xi(t[n], t));\n                }), t;\n            });\n            function tg(t) {\n                var e = t == null ? 0 : t.length, n = E();\n                return t = e ? z(t, function(r) {\n                    if (typeof r[1] != \"function\") throw new wt(y);\n                    return [\n                        n(r[0]),\n                        r[1]\n                    ];\n                }) : [], H(function(r) {\n                    for(var u = -1; ++u < e;){\n                        var o = t[u];\n                        if (ft(o[0], this, r)) return ft(o[1], this, r);\n                    }\n                });\n            }\n            function eg(t) {\n                return yf(Ct(t, Dt));\n            }\n            function Ti(t) {\n                return function() {\n                    return t;\n                };\n            }\n            function ng(t, e) {\n                return t == null || t !== t ? e : t;\n            }\n            var rg = Au(), ig = Au(!0);\n            function ct(t) {\n                return t;\n            }\n            function Li(t) {\n                return ks(typeof t == \"function\" ? t : Ct(t, Dt));\n            }\n            function sg(t) {\n                return tu(Ct(t, Dt));\n            }\n            function ug(t, e) {\n                return eu(t, Ct(e, Dt));\n            }\n            var ag = H(function(t, e) {\n                return function(n) {\n                    return cn(n, t, e);\n                };\n            }), og = H(function(t, e) {\n                return function(n) {\n                    return cn(t, n, e);\n                };\n            });\n            function Hi(t, e, n) {\n                var r = k(e), u = Jn(e, r);\n                n == null && !(K(e) && (u.length || !r.length)) && (n = e, e = t, t = this, u = Jn(e, k(e)));\n                var o = !(K(n) && \"chain\" in n) || !!n.chain, c = Vt(t);\n                return mt(u, function(f) {\n                    var l = e[f];\n                    t[f] = l, c && (t.prototype[f] = function() {\n                        var v = this.__chain__;\n                        if (o || v) {\n                            var _ = t(this.__wrapped__), m = _.__actions__ = ut(this.__actions__);\n                            return m.push({\n                                func: l,\n                                args: arguments,\n                                thisArg: t\n                            }), _.__chain__ = v, _;\n                        }\n                        return l.apply(t, re([\n                            this.value()\n                        ], arguments));\n                    });\n                }), t;\n            }\n            function cg() {\n                return j._ === this && (j._ = Dc), this;\n            }\n            function Di() {}\n            function fg(t) {\n                return t = T(t), H(function(e) {\n                    return nu(e, t);\n                });\n            }\n            var hg = hi(z), lg = hi(Is), pg = hi($r);\n            function Pa(t) {\n                return mi(t) ? Ur(Wt(t)) : Gf(t);\n            }\n            function dg(t) {\n                return function(e) {\n                    return t == null ? i : me(t, e);\n                };\n            }\n            var gg = xu(), vg = xu(!0);\n            function Ni() {\n                return [];\n            }\n            function $i() {\n                return !1;\n            }\n            function _g() {\n                return {};\n            }\n            function mg() {\n                return \"\";\n            }\n            function wg() {\n                return !0;\n            }\n            function Pg(t, e) {\n                if (t = T(t), t < 1 || t > ee) return [];\n                var n = Ut, r = et(t, Ut);\n                e = E(e), t -= Ut;\n                for(var u = Wr(r, e); ++n < t;)e(n);\n                return u;\n            }\n            function Cg(t) {\n                return b(t) ? z(t, Wt) : pt(t) ? [\n                    t\n                ] : ut(Wu(q(t)));\n            }\n            function Ag(t) {\n                var e = ++Lc;\n                return q(t) + e;\n            }\n            var Ig = kn(function(t, e) {\n                return t + e;\n            }, 0), xg = li(\"ceil\"), Eg = kn(function(t, e) {\n                return t / e;\n            }, 1), yg = li(\"floor\");\n            function Sg(t) {\n                return t && t.length ? Kn(t, ct, Vr) : i;\n            }\n            function Og(t, e) {\n                return t && t.length ? Kn(t, E(e, 2), Vr) : i;\n            }\n            function Rg(t) {\n                return ys(t, ct);\n            }\n            function bg(t, e) {\n                return ys(t, E(e, 2));\n            }\n            function Tg(t) {\n                return t && t.length ? Kn(t, ct, ei) : i;\n            }\n            function Lg(t, e) {\n                return t && t.length ? Kn(t, E(e, 2), ei) : i;\n            }\n            var Hg = kn(function(t, e) {\n                return t * e;\n            }, 1), Dg = li(\"round\"), Ng = kn(function(t, e) {\n                return t - e;\n            }, 0);\n            function $g(t) {\n                return t && t.length ? Fr(t, ct) : 0;\n            }\n            function Ug(t, e) {\n                return t && t.length ? Fr(t, E(e, 2)) : 0;\n            }\n            return a.after = sp, a.ary = Vu, a.assign = Jp, a.assignIn = ha, a.assignInWith = hr, a.assignWith = Yp, a.at = Zp, a.before = ku, a.bind = xi, a.bindAll = jd, a.bindKey = ju, a.castArray = _p, a.chain = Zu, a.chunk = yh, a.compact = Sh, a.concat = Oh, a.cond = tg, a.conforms = eg, a.constant = Ti, a.countBy = $l, a.create = Xp, a.curry = ta, a.curryRight = ea, a.debounce = na, a.defaults = Qp, a.defaultsDeep = Vp, a.defer = up, a.delay = ap, a.difference = Rh, a.differenceBy = bh, a.differenceWith = Th, a.drop = Lh, a.dropRight = Hh, a.dropRightWhile = Dh, a.dropWhile = Nh, a.fill = $h, a.filter = ql, a.flatMap = Ml, a.flatMapDeep = Bl, a.flatMapDepth = Gl, a.flatten = zu, a.flattenDeep = Uh, a.flattenDepth = qh, a.flip = op, a.flow = rg, a.flowRight = ig, a.fromPairs = Fh, a.functions = id, a.functionsIn = sd, a.groupBy = zl, a.initial = Mh, a.intersection = Bh, a.intersectionBy = Gh, a.intersectionWith = zh, a.invert = ad, a.invertBy = od, a.invokeMap = Jl, a.iteratee = Li, a.keyBy = Yl, a.keys = k, a.keysIn = ot, a.map = sr, a.mapKeys = fd, a.mapValues = hd, a.matches = sg, a.matchesProperty = ug, a.memoize = ar, a.merge = ld, a.mergeWith = la, a.method = ag, a.methodOf = og, a.mixin = Hi, a.negate = or, a.nthArg = fg, a.omit = pd, a.omitBy = dd, a.once = cp, a.orderBy = Zl, a.over = hg, a.overArgs = fp, a.overEvery = lg, a.overSome = pg, a.partial = Ei, a.partialRight = ra, a.partition = Xl, a.pick = gd, a.pickBy = pa, a.property = Pa, a.propertyOf = dg, a.pull = Zh, a.pullAll = Ju, a.pullAllBy = Xh, a.pullAllWith = Qh, a.pullAt = Vh, a.range = gg, a.rangeRight = vg, a.rearg = hp, a.reject = kl, a.remove = kh, a.rest = lp, a.reverse = Ai, a.sampleSize = tp, a.set = _d, a.setWith = md, a.shuffle = ep, a.slice = jh, a.sortBy = ip, a.sortedUniq = ul, a.sortedUniqBy = al, a.split = Md, a.spread = pp, a.tail = ol, a.take = cl, a.takeRight = fl, a.takeRightWhile = hl, a.takeWhile = ll, a.tap = Sl, a.throttle = dp, a.thru = ir, a.toArray = oa, a.toPairs = da, a.toPairsIn = ga, a.toPath = Cg, a.toPlainObject = fa, a.transform = wd, a.unary = gp, a.union = pl, a.unionBy = dl, a.unionWith = gl, a.uniq = vl, a.uniqBy = _l, a.uniqWith = ml, a.unset = Pd, a.unzip = Ii, a.unzipWith = Yu, a.update = Cd, a.updateWith = Ad, a.values = Ge, a.valuesIn = Id, a.without = wl, a.words = ma, a.wrap = vp, a.xor = Pl, a.xorBy = Cl, a.xorWith = Al, a.zip = Il, a.zipObject = xl, a.zipObjectDeep = El, a.zipWith = yl, a.entries = da, a.entriesIn = ga, a.extend = ha, a.extendWith = hr, Hi(a, a), a.add = Ig, a.attempt = wa, a.camelCase = Sd, a.capitalize = va, a.ceil = xg, a.clamp = xd, a.clone = mp, a.cloneDeep = Pp, a.cloneDeepWith = Cp, a.cloneWith = wp, a.conformsTo = Ap, a.deburr = _a, a.defaultTo = ng, a.divide = Eg, a.endsWith = Od, a.eq = Rt, a.escape = Rd, a.escapeRegExp = bd, a.every = Ul, a.find = Fl, a.findIndex = Bu, a.findKey = kp, a.findLast = Wl, a.findLastIndex = Gu, a.findLastKey = jp, a.floor = yg, a.forEach = Xu, a.forEachRight = Qu, a.forIn = td, a.forInRight = ed, a.forOwn = nd, a.forOwnRight = rd, a.get = Oi, a.gt = Ip, a.gte = xp, a.has = ud, a.hasIn = Ri, a.head = Ku, a.identity = ct, a.includes = Kl, a.indexOf = Wh, a.inRange = Ed, a.invoke = cd, a.isArguments = Ce, a.isArray = b, a.isArrayBuffer = Ep, a.isArrayLike = at, a.isArrayLikeObject = Z, a.isBoolean = yp, a.isBuffer = fe, a.isDate = Sp, a.isElement = Op, a.isEmpty = Rp, a.isEqual = bp, a.isEqualWith = Tp, a.isError = yi, a.isFinite = Lp, a.isFunction = Vt, a.isInteger = ia, a.isLength = cr, a.isMap = sa, a.isMatch = Hp, a.isMatchWith = Dp, a.isNaN = Np, a.isNative = $p, a.isNil = qp, a.isNull = Up, a.isNumber = ua, a.isObject = K, a.isObjectLike = Y, a.isPlainObject = gn, a.isRegExp = Si, a.isSafeInteger = Fp, a.isSet = aa, a.isString = fr, a.isSymbol = pt, a.isTypedArray = Be, a.isUndefined = Wp, a.isWeakMap = Mp, a.isWeakSet = Bp, a.join = Kh, a.kebabCase = Td, a.last = It, a.lastIndexOf = Jh, a.lowerCase = Ld, a.lowerFirst = Hd, a.lt = Gp, a.lte = zp, a.max = Sg, a.maxBy = Og, a.mean = Rg, a.meanBy = bg, a.min = Tg, a.minBy = Lg, a.stubArray = Ni, a.stubFalse = $i, a.stubObject = _g, a.stubString = mg, a.stubTrue = wg, a.multiply = Hg, a.nth = Yh, a.noConflict = cg, a.noop = Di, a.now = ur, a.pad = Dd, a.padEnd = Nd, a.padStart = $d, a.parseInt = Ud, a.random = yd, a.reduce = Ql, a.reduceRight = Vl, a.repeat = qd, a.replace = Fd, a.result = vd, a.round = Dg, a.runInContext = h, a.sample = jl, a.size = np, a.snakeCase = Wd, a.some = rp, a.sortedIndex = tl, a.sortedIndexBy = el, a.sortedIndexOf = nl, a.sortedLastIndex = rl, a.sortedLastIndexBy = il, a.sortedLastIndexOf = sl, a.startCase = Bd, a.startsWith = Gd, a.subtract = Ng, a.sum = $g, a.sumBy = Ug, a.template = zd, a.times = Pg, a.toFinite = kt, a.toInteger = T, a.toLength = ca, a.toLower = Kd, a.toNumber = xt, a.toSafeInteger = Kp, a.toString = q, a.toUpper = Jd, a.trim = Yd, a.trimEnd = Zd, a.trimStart = Xd, a.truncate = Qd, a.unescape = Vd, a.uniqueId = Ag, a.upperCase = kd, a.upperFirst = bi, a.each = Xu, a.eachRight = Qu, a.first = Ku, Hi(a, function() {\n                var t = {};\n                return qt(a, function(e, n) {\n                    W.call(a.prototype, n) || (t[n] = e);\n                }), t;\n            }(), {\n                chain: !1\n            }), a.VERSION = p, mt([\n                \"bind\",\n                \"bindKey\",\n                \"curry\",\n                \"curryRight\",\n                \"partial\",\n                \"partialRight\"\n            ], function(t) {\n                a[t].placeholder = a;\n            }), mt([\n                \"drop\",\n                \"take\"\n            ], function(t, e) {\n                N.prototype[t] = function(n) {\n                    n = n === i ? 1 : V(T(n), 0);\n                    var r = this.__filtered__ && !e ? new N(this) : this.clone();\n                    return r.__filtered__ ? r.__takeCount__ = et(n, r.__takeCount__) : r.__views__.push({\n                        size: et(n, Ut),\n                        type: t + (r.__dir__ < 0 ? \"Right\" : \"\")\n                    }), r;\n                }, N.prototype[t + \"Right\"] = function(n) {\n                    return this.reverse()[t](n).reverse();\n                };\n            }), mt([\n                \"filter\",\n                \"map\",\n                \"takeWhile\"\n            ], function(t, e) {\n                var n = e + 1, r = n == zi || n == Ja;\n                N.prototype[t] = function(u) {\n                    var o = this.clone();\n                    return o.__iteratees__.push({\n                        iteratee: E(u, 3),\n                        type: n\n                    }), o.__filtered__ = o.__filtered__ || r, o;\n                };\n            }), mt([\n                \"head\",\n                \"last\"\n            ], function(t, e) {\n                var n = \"take\" + (e ? \"Right\" : \"\");\n                N.prototype[t] = function() {\n                    return this[n](1).value()[0];\n                };\n            }), mt([\n                \"initial\",\n                \"tail\"\n            ], function(t, e) {\n                var n = \"drop\" + (e ? \"\" : \"Right\");\n                N.prototype[t] = function() {\n                    return this.__filtered__ ? new N(this) : this[n](1);\n                };\n            }), N.prototype.compact = function() {\n                return this.filter(ct);\n            }, N.prototype.find = function(t) {\n                return this.filter(t).head();\n            }, N.prototype.findLast = function(t) {\n                return this.reverse().find(t);\n            }, N.prototype.invokeMap = H(function(t, e) {\n                return typeof t == \"function\" ? new N(this) : this.map(function(n) {\n                    return cn(n, t, e);\n                });\n            }), N.prototype.reject = function(t) {\n                return this.filter(or(E(t)));\n            }, N.prototype.slice = function(t, e) {\n                t = T(t);\n                var n = this;\n                return n.__filtered__ && (t > 0 || e < 0) ? new N(n) : (t < 0 ? n = n.takeRight(-t) : t && (n = n.drop(t)), e !== i && (e = T(e), n = e < 0 ? n.dropRight(-e) : n.take(e - t)), n);\n            }, N.prototype.takeRightWhile = function(t) {\n                return this.reverse().takeWhile(t).reverse();\n            }, N.prototype.toArray = function() {\n                return this.take(Ut);\n            }, qt(N.prototype, function(t, e) {\n                var n = /^(?:filter|find|map|reject)|While$/.test(e), r = /^(?:head|last)$/.test(e), u = a[r ? \"take\" + (e == \"last\" ? \"Right\" : \"\") : e], o = r || /^find/.test(e);\n                u && (a.prototype[e] = function() {\n                    var c = this.__wrapped__, f = r ? [\n                        1\n                    ] : arguments, l = c instanceof N, v = f[0], _ = l || b(c), m = function(D) {\n                        var $ = u.apply(a, re([\n                            D\n                        ], f));\n                        return r && C ? $[0] : $;\n                    };\n                    _ && n && typeof v == \"function\" && v.length != 1 && (l = _ = !1);\n                    var C = this.__chain__, x = !!this.__actions__.length, S = o && !C, L = l && !x;\n                    if (!o && _) {\n                        c = L ? c : new N(this);\n                        var O = t.apply(c, f);\n                        return O.__actions__.push({\n                            func: ir,\n                            args: [\n                                m\n                            ],\n                            thisArg: i\n                        }), new Pt(O, C);\n                    }\n                    return S && L ? t.apply(this, f) : (O = this.thru(m), S ? r ? O.value()[0] : O.value() : O);\n                });\n            }), mt([\n                \"pop\",\n                \"push\",\n                \"shift\",\n                \"sort\",\n                \"splice\",\n                \"unshift\"\n            ], function(t) {\n                var e = bn[t], n = /^(?:push|sort|unshift)$/.test(t) ? \"tap\" : \"thru\", r = /^(?:pop|shift)$/.test(t);\n                a.prototype[t] = function() {\n                    var u = arguments;\n                    if (r && !this.__chain__) {\n                        var o = this.value();\n                        return e.apply(b(o) ? o : [], u);\n                    }\n                    return this[n](function(c) {\n                        return e.apply(b(c) ? c : [], u);\n                    });\n                };\n            }), qt(N.prototype, function(t, e) {\n                var n = a[e];\n                if (n) {\n                    var r = n.name + \"\";\n                    W.call(Ue, r) || (Ue[r] = []), Ue[r].push({\n                        name: e,\n                        func: n\n                    });\n                }\n            }), Ue[Vn(i, he).name] = [\n                {\n                    name: \"wrapper\",\n                    func: i\n                }\n            ], N.prototype.clone = Qc, N.prototype.reverse = Vc, N.prototype.value = kc, a.prototype.at = Ol, a.prototype.chain = Rl, a.prototype.commit = bl, a.prototype.next = Tl, a.prototype.plant = Hl, a.prototype.reverse = Dl, a.prototype.toJSON = a.prototype.valueOf = a.prototype.value = Nl, a.prototype.first = a.prototype.head, en && (a.prototype[en] = Ll), a;\n        }, De = Rc();\n        pe ? ((pe.exports = De)._ = De, Lr._ = De) : j._ = De;\n    }).call(_n);\n})(qi, qi.exports);\nvar Vg = Object.defineProperty, kg = Object.defineProperties, jg = Object.getOwnPropertyDescriptors, Ra = Object.getOwnPropertySymbols, tv = Object.prototype.hasOwnProperty, ev = Object.prototype.propertyIsEnumerable, ba = (P, s, i)=>s in P ? Vg(P, s, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : P[s] = i, lr = (P, s)=>{\n    for(var i in s || (s = {}))tv.call(s, i) && ba(P, i, s[i]);\n    if (Ra) for (var i of Ra(s))ev.call(s, i) && ba(P, i, s[i]);\n    return P;\n}, nv = (P, s)=>kg(P, jg(s));\nfunction Lt(P, s, i) {\n    var p;\n    const w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(P);\n    return ((p = s.rpcMap) == null ? void 0 : p[w.reference]) || `${Oa}?chainId=${w.namespace}:${w.reference}&projectId=${i}`;\n}\nfunction Ae(P) {\n    return P.includes(\":\") ? P.split(\":\")[1] : P;\n}\nfunction Ta(P) {\n    return P.map((s)=>`${s.split(\":\")[0]}:${s.split(\":\")[1]}`);\n}\nfunction rv(P, s) {\n    const i = Object.keys(s.namespaces).filter((w)=>w.includes(P));\n    if (!i.length) return [];\n    const p = [];\n    return i.forEach((w)=>{\n        const I = s.namespaces[w].accounts;\n        p.push(...I);\n    }), p;\n}\nfunction Fi(P = {}, s = {}) {\n    const i = La(P), p = La(s);\n    return qi.exports.merge(i, p);\n}\nfunction La(P) {\n    var s, i, p, w;\n    const I = {};\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(P)) return I;\n    for (const [y, J] of Object.entries(P)){\n        const Ht = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isCaipNamespace)(y) ? [\n            y\n        ] : J.chains, Ke = J.methods || [], Ie = J.events || [], Dt = J.rpcMap || {}, Bt = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(y);\n        I[Bt] = nv(lr(lr({}, I[Bt]), J), {\n            chains: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(Ht, (s = I[Bt]) == null ? void 0 : s.chains),\n            methods: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(Ke, (i = I[Bt]) == null ? void 0 : i.methods),\n            events: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(Ie, (p = I[Bt]) == null ? void 0 : p.events),\n            rpcMap: lr(lr({}, Dt), (w = I[Bt]) == null ? void 0 : w.rpcMap)\n        });\n    }\n    return I;\n}\nfunction iv(P) {\n    return P.includes(\":\") ? P.split(\":\")[2] : P;\n}\nfunction Ha(P) {\n    const s = {};\n    for (const [i, p] of Object.entries(P)){\n        const w = p.methods || [], I = p.events || [], y = p.accounts || [], J = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isCaipNamespace)(i) ? [\n            i\n        ] : p.chains ? p.chains : Ta(p.accounts);\n        s[i] = {\n            chains: J,\n            methods: w,\n            events: I,\n            accounts: y\n        };\n    }\n    return s;\n}\nfunction Wi(P) {\n    return typeof P == \"number\" ? P : P.includes(\"0x\") ? parseInt(P, 16) : (P = P.includes(\":\") ? P.split(\":\")[1] : P, isNaN(Number(P)) ? P : Number(P));\n}\nconst Da = {}, F = (P)=>Da[P], Mi = (P, s)=>{\n    Da[P] = s;\n};\nclass sv {\n    constructor(s){\n        this.name = \"polkadot\", this.namespace = s.namespace, this.events = F(\"events\"), this.client = F(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(s) {\n        this.namespace = Object.assign(this.namespace, s);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const s = this.namespace.chains[0];\n        if (!s) throw new Error(\"ChainId not found\");\n        return s.split(\":\")[1];\n    }\n    request(s) {\n        return this.namespace.methods.includes(s.request.method) ? this.client.request(s) : this.getHttpProvider().request(s.request);\n    }\n    setDefaultChain(s, i) {\n        this.httpProviders[s] || this.setHttpProvider(s, i), this.chainId = s, this.events.emit(Tt.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);\n    }\n    getAccounts() {\n        const s = this.namespace.accounts;\n        return s ? s.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const s = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = Ae(i);\n            s[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), s;\n    }\n    getHttpProvider() {\n        const s = `${this.name}:${this.chainId}`, i = this.httpProviders[s];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${s} not found`);\n        return i;\n    }\n    setHttpProvider(s, i) {\n        const p = this.createHttpProvider(s, i);\n        p && (this.httpProviders[s] = p);\n    }\n    createHttpProvider(s, i) {\n        const p = i || Lt(s, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${s}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, F(\"disableProviderPing\")));\n    }\n}\nvar uv = Object.defineProperty, av = Object.defineProperties, ov = Object.getOwnPropertyDescriptors, Na = Object.getOwnPropertySymbols, cv = Object.prototype.hasOwnProperty, fv = Object.prototype.propertyIsEnumerable, $a = (P, s, i)=>s in P ? uv(P, s, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : P[s] = i, Ua = (P, s)=>{\n    for(var i in s || (s = {}))cv.call(s, i) && $a(P, i, s[i]);\n    if (Na) for (var i of Na(s))fv.call(s, i) && $a(P, i, s[i]);\n    return P;\n}, qa = (P, s)=>av(P, ov(s));\nclass hv {\n    constructor(s){\n        this.name = \"eip155\", this.namespace = s.namespace, this.events = F(\"events\"), this.client = F(\"client\"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());\n    }\n    async request(s) {\n        switch(s.request.method){\n            case \"eth_requestAccounts\":\n                return this.getAccounts();\n            case \"eth_accounts\":\n                return this.getAccounts();\n            case \"wallet_switchEthereumChain\":\n                return await this.handleSwitchChain(s);\n            case \"eth_chainId\":\n                return parseInt(this.getDefaultChain());\n            case \"wallet_getCapabilities\":\n                return await this.getCapabilities(s);\n            case \"wallet_getCallsStatus\":\n                return await this.getCallStatus(s);\n        }\n        return this.namespace.methods.includes(s.request.method) ? await this.client.request(s) : this.getHttpProvider().request(s.request);\n    }\n    updateNamespace(s) {\n        this.namespace = Object.assign(this.namespace, s);\n    }\n    setDefaultChain(s, i) {\n        this.httpProviders[s] || this.setHttpProvider(parseInt(s), i), this.chainId = parseInt(s), this.events.emit(Tt.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId.toString();\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const s = this.namespace.chains[0];\n        if (!s) throw new Error(\"ChainId not found\");\n        return s.split(\":\")[1];\n    }\n    createHttpProvider(s, i) {\n        const p = i || Lt(`${this.name}:${s}`, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${s}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__.HttpConnection(p, F(\"disableProviderPing\")));\n    }\n    setHttpProvider(s, i) {\n        const p = this.createHttpProvider(s, i);\n        p && (this.httpProviders[s] = p);\n    }\n    createHttpProviders() {\n        const s = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = parseInt(Ae(i));\n            s[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), s;\n    }\n    getAccounts() {\n        const s = this.namespace.accounts;\n        return s ? [\n            ...new Set(s.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    getHttpProvider() {\n        const s = this.chainId, i = this.httpProviders[s];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${s} not found`);\n        return i;\n    }\n    async handleSwitchChain(s) {\n        var i, p;\n        let w = s.request.params ? (i = s.request.params[0]) == null ? void 0 : i.chainId : \"0x0\";\n        w = w.startsWith(\"0x\") ? w : `0x${w}`;\n        const I = parseInt(w, 16);\n        if (this.isChainApproved(I)) this.setDefaultChain(`${I}`);\n        else if (this.namespace.methods.includes(\"wallet_switchEthereumChain\")) await this.client.request({\n            topic: s.topic,\n            request: {\n                method: s.request.method,\n                params: [\n                    {\n                        chainId: w\n                    }\n                ]\n            },\n            chainId: (p = this.namespace.chains) == null ? void 0 : p[0]\n        }), this.setDefaultChain(`${I}`);\n        else throw new Error(`Failed to switch to chain 'eip155:${I}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);\n        return null;\n    }\n    isChainApproved(s) {\n        return this.namespace.chains.includes(`${this.name}:${s}`);\n    }\n    async getCapabilities(s) {\n        var i, p, w;\n        const I = (p = (i = s.request) == null ? void 0 : i.params) == null ? void 0 : p[0];\n        if (!I) throw new Error(\"Missing address parameter in `wallet_getCapabilities` request\");\n        const y = this.client.session.get(s.topic), J = ((w = y?.sessionProperties) == null ? void 0 : w.capabilities) || {};\n        if (J != null && J[I]) return J?.[I];\n        const Ht = await this.client.request(s);\n        try {\n            await this.client.session.update(s.topic, {\n                sessionProperties: qa(Ua({}, y.sessionProperties || {}), {\n                    capabilities: qa(Ua({}, J || {}), {\n                        [I]: Ht\n                    })\n                })\n            });\n        } catch (Ke) {\n            console.warn(\"Failed to update session with capabilities\", Ke);\n        }\n        return Ht;\n    }\n    async getCallStatus(s) {\n        var i, p;\n        const w = this.client.session.get(s.topic), I = (i = w.sessionProperties) == null ? void 0 : i.bundler_name;\n        if (I) {\n            const J = this.getBundlerUrl(s.chainId, I);\n            try {\n                return await this.getUserOperationReceipt(J, s);\n            } catch (Ht) {\n                console.warn(\"Failed to fetch call status from bundler\", Ht, J);\n            }\n        }\n        const y = (p = w.sessionProperties) == null ? void 0 : p.bundler_url;\n        if (y) try {\n            return await this.getUserOperationReceipt(y, s);\n        } catch (J) {\n            console.warn(\"Failed to fetch call status from custom bundler\", J, y);\n        }\n        if (this.namespace.methods.includes(s.request.method)) return await this.client.request(s);\n        throw new Error(\"Fetching call status not approved by the wallet.\");\n    }\n    async getUserOperationReceipt(s, i) {\n        var p;\n        const w = new URL(s), I = await fetch(w, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"eth_getUserOperationReceipt\", [\n                (p = i.request.params) == null ? void 0 : p[0]\n            ]))\n        });\n        if (!I.ok) throw new Error(`Failed to fetch user operation receipt - ${I.status}`);\n        return await I.json();\n    }\n    getBundlerUrl(s, i) {\n        return `${Qg}?projectId=${this.client.core.projectId}&chainId=${s}&bundler=${i}`;\n    }\n}\nclass lv {\n    constructor(s){\n        this.name = \"solana\", this.namespace = s.namespace, this.events = F(\"events\"), this.client = F(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(s) {\n        this.namespace = Object.assign(this.namespace, s);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(s) {\n        return this.namespace.methods.includes(s.request.method) ? this.client.request(s) : this.getHttpProvider().request(s.request);\n    }\n    setDefaultChain(s, i) {\n        this.httpProviders[s] || this.setHttpProvider(s, i), this.chainId = s, this.events.emit(Tt.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const s = this.namespace.chains[0];\n        if (!s) throw new Error(\"ChainId not found\");\n        return s.split(\":\")[1];\n    }\n    getAccounts() {\n        const s = this.namespace.accounts;\n        return s ? [\n            ...new Set(s.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const s = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = Ae(i);\n            s[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), s;\n    }\n    getHttpProvider() {\n        const s = `${this.name}:${this.chainId}`, i = this.httpProviders[s];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${s} not found`);\n        return i;\n    }\n    setHttpProvider(s, i) {\n        const p = this.createHttpProvider(s, i);\n        p && (this.httpProviders[s] = p);\n    }\n    createHttpProvider(s, i) {\n        const p = i || Lt(s, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${s}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, F(\"disableProviderPing\")));\n    }\n}\nclass pv {\n    constructor(s){\n        this.name = \"cosmos\", this.namespace = s.namespace, this.events = F(\"events\"), this.client = F(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(s) {\n        this.namespace = Object.assign(this.namespace, s);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const s = this.namespace.chains[0];\n        if (!s) throw new Error(\"ChainId not found\");\n        return s.split(\":\")[1];\n    }\n    request(s) {\n        return this.namespace.methods.includes(s.request.method) ? this.client.request(s) : this.getHttpProvider().request(s.request);\n    }\n    setDefaultChain(s, i) {\n        this.httpProviders[s] || this.setHttpProvider(s, i), this.chainId = s, this.events.emit(Tt.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const s = this.namespace.accounts;\n        return s ? [\n            ...new Set(s.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const s = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = Ae(i);\n            s[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), s;\n    }\n    getHttpProvider() {\n        const s = `${this.name}:${this.chainId}`, i = this.httpProviders[s];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${s} not found`);\n        return i;\n    }\n    setHttpProvider(s, i) {\n        const p = this.createHttpProvider(s, i);\n        p && (this.httpProviders[s] = p);\n    }\n    createHttpProvider(s, i) {\n        const p = i || Lt(s, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${s}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, F(\"disableProviderPing\")));\n    }\n}\nclass dv {\n    constructor(s){\n        this.name = \"algorand\", this.namespace = s.namespace, this.events = F(\"events\"), this.client = F(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(s) {\n        this.namespace = Object.assign(this.namespace, s);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(s) {\n        return this.namespace.methods.includes(s.request.method) ? this.client.request(s) : this.getHttpProvider().request(s.request);\n    }\n    setDefaultChain(s, i) {\n        if (!this.httpProviders[s]) {\n            const p = i || Lt(`${this.name}:${s}`, this.namespace, this.client.core.projectId);\n            if (!p) throw new Error(`No RPC url provided for chainId: ${s}`);\n            this.setHttpProvider(s, p);\n        }\n        this.chainId = s, this.events.emit(Tt.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const s = this.namespace.chains[0];\n        if (!s) throw new Error(\"ChainId not found\");\n        return s.split(\":\")[1];\n    }\n    getAccounts() {\n        const s = this.namespace.accounts;\n        return s ? [\n            ...new Set(s.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const s = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            s[i] = this.createHttpProvider(i, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), s;\n    }\n    getHttpProvider() {\n        const s = `${this.name}:${this.chainId}`, i = this.httpProviders[s];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${s} not found`);\n        return i;\n    }\n    setHttpProvider(s, i) {\n        const p = this.createHttpProvider(s, i);\n        p && (this.httpProviders[s] = p);\n    }\n    createHttpProvider(s, i) {\n        const p = i || Lt(s, this.namespace, this.client.core.projectId);\n        return typeof p > \"u\" ? void 0 : new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, F(\"disableProviderPing\")));\n    }\n}\nclass gv {\n    constructor(s){\n        this.name = \"cip34\", this.namespace = s.namespace, this.events = F(\"events\"), this.client = F(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(s) {\n        this.namespace = Object.assign(this.namespace, s);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const s = this.namespace.chains[0];\n        if (!s) throw new Error(\"ChainId not found\");\n        return s.split(\":\")[1];\n    }\n    request(s) {\n        return this.namespace.methods.includes(s.request.method) ? this.client.request(s) : this.getHttpProvider().request(s.request);\n    }\n    setDefaultChain(s, i) {\n        this.httpProviders[s] || this.setHttpProvider(s, i), this.chainId = s, this.events.emit(Tt.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const s = this.namespace.accounts;\n        return s ? [\n            ...new Set(s.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const s = {};\n        return this.namespace.chains.forEach((i)=>{\n            const p = this.getCardanoRPCUrl(i), w = Ae(i);\n            s[w] = this.createHttpProvider(w, p);\n        }), s;\n    }\n    getHttpProvider() {\n        const s = `${this.name}:${this.chainId}`, i = this.httpProviders[s];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${s} not found`);\n        return i;\n    }\n    getCardanoRPCUrl(s) {\n        const i = this.namespace.rpcMap;\n        if (i) return i[s];\n    }\n    setHttpProvider(s, i) {\n        const p = this.createHttpProvider(s, i);\n        p && (this.httpProviders[s] = p);\n    }\n    createHttpProvider(s, i) {\n        const p = i || this.getCardanoRPCUrl(s);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${s}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, F(\"disableProviderPing\")));\n    }\n}\nclass vv {\n    constructor(s){\n        this.name = \"elrond\", this.namespace = s.namespace, this.events = F(\"events\"), this.client = F(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(s) {\n        this.namespace = Object.assign(this.namespace, s);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(s) {\n        return this.namespace.methods.includes(s.request.method) ? this.client.request(s) : this.getHttpProvider().request(s.request);\n    }\n    setDefaultChain(s, i) {\n        this.httpProviders[s] || this.setHttpProvider(s, i), this.chainId = s, this.events.emit(Tt.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const s = this.namespace.chains[0];\n        if (!s) throw new Error(\"ChainId not found\");\n        return s.split(\":\")[1];\n    }\n    getAccounts() {\n        const s = this.namespace.accounts;\n        return s ? [\n            ...new Set(s.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const s = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = Ae(i);\n            s[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), s;\n    }\n    getHttpProvider() {\n        const s = `${this.name}:${this.chainId}`, i = this.httpProviders[s];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${s} not found`);\n        return i;\n    }\n    setHttpProvider(s, i) {\n        const p = this.createHttpProvider(s, i);\n        p && (this.httpProviders[s] = p);\n    }\n    createHttpProvider(s, i) {\n        const p = i || Lt(s, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${s}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, F(\"disableProviderPing\")));\n    }\n}\nclass _v {\n    constructor(s){\n        this.name = \"multiversx\", this.namespace = s.namespace, this.events = F(\"events\"), this.client = F(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(s) {\n        this.namespace = Object.assign(this.namespace, s);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(s) {\n        return this.namespace.methods.includes(s.request.method) ? this.client.request(s) : this.getHttpProvider().request(s.request);\n    }\n    setDefaultChain(s, i) {\n        this.httpProviders[s] || this.setHttpProvider(s, i), this.chainId = s, this.events.emit(Tt.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const s = this.namespace.chains[0];\n        if (!s) throw new Error(\"ChainId not found\");\n        return s.split(\":\")[1];\n    }\n    getAccounts() {\n        const s = this.namespace.accounts;\n        return s ? [\n            ...new Set(s.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const s = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            const w = Ae(i);\n            s[w] = this.createHttpProvider(w, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), s;\n    }\n    getHttpProvider() {\n        const s = `${this.name}:${this.chainId}`, i = this.httpProviders[s];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${s} not found`);\n        return i;\n    }\n    setHttpProvider(s, i) {\n        const p = this.createHttpProvider(s, i);\n        p && (this.httpProviders[s] = p);\n    }\n    createHttpProvider(s, i) {\n        const p = i || Lt(s, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${s}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, F(\"disableProviderPing\")));\n    }\n}\nclass mv {\n    constructor(s){\n        this.name = \"near\", this.namespace = s.namespace, this.events = F(\"events\"), this.client = F(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(s) {\n        this.namespace = Object.assign(this.namespace, s);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const s = this.namespace.chains[0];\n        if (!s) throw new Error(\"ChainId not found\");\n        return s.split(\":\")[1];\n    }\n    request(s) {\n        return this.namespace.methods.includes(s.request.method) ? this.client.request(s) : this.getHttpProvider().request(s.request);\n    }\n    setDefaultChain(s, i) {\n        if (this.chainId = s, !this.httpProviders[s]) {\n            const p = i || Lt(`${this.name}:${s}`, this.namespace);\n            if (!p) throw new Error(`No RPC url provided for chainId: ${s}`);\n            this.setHttpProvider(s, p);\n        }\n        this.events.emit(Tt.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const s = this.namespace.accounts;\n        return s ? s.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const s = {};\n        return this.namespace.chains.forEach((i)=>{\n            var p;\n            s[i] = this.createHttpProvider(i, (p = this.namespace.rpcMap) == null ? void 0 : p[i]);\n        }), s;\n    }\n    getHttpProvider() {\n        const s = `${this.name}:${this.chainId}`, i = this.httpProviders[s];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${s} not found`);\n        return i;\n    }\n    setHttpProvider(s, i) {\n        const p = this.createHttpProvider(s, i);\n        p && (this.httpProviders[s] = p);\n    }\n    createHttpProvider(s, i) {\n        const p = i || Lt(s, this.namespace);\n        return typeof p > \"u\" ? void 0 : new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, F(\"disableProviderPing\")));\n    }\n}\nclass wv {\n    constructor(s){\n        this.name = ze, this.namespace = s.namespace, this.events = F(\"events\"), this.client = F(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(s) {\n        this.namespace.chains = [\n            ...new Set((this.namespace.chains || []).concat(s.chains || []))\n        ], this.namespace.accounts = [\n            ...new Set((this.namespace.accounts || []).concat(s.accounts || []))\n        ], this.namespace.methods = [\n            ...new Set((this.namespace.methods || []).concat(s.methods || []))\n        ], this.namespace.events = [\n            ...new Set((this.namespace.events || []).concat(s.events || []))\n        ], this.httpProviders = this.createHttpProviders();\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(s) {\n        return this.namespace.methods.includes(s.request.method) ? this.client.request(s) : this.getHttpProvider(s.chainId).request(s.request);\n    }\n    setDefaultChain(s, i) {\n        this.httpProviders[s] || this.setHttpProvider(s, i), this.chainId = s, this.events.emit(Tt.DEFAULT_CHAIN_CHANGED, `${this.name}:${s}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const s = this.namespace.chains[0];\n        if (!s) throw new Error(\"ChainId not found\");\n        return s.split(\":\")[1];\n    }\n    getAccounts() {\n        const s = this.namespace.accounts;\n        return s ? [\n            ...new Set(s.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        var s, i;\n        const p = {};\n        return (i = (s = this.namespace) == null ? void 0 : s.accounts) == null || i.forEach((w)=>{\n            const I = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(w);\n            p[`${I.namespace}:${I.reference}`] = this.createHttpProvider(w);\n        }), p;\n    }\n    getHttpProvider(s) {\n        const i = this.httpProviders[s];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${s} not found`);\n        return i;\n    }\n    setHttpProvider(s, i) {\n        const p = this.createHttpProvider(s, i);\n        p && (this.httpProviders[s] = p);\n    }\n    createHttpProvider(s, i) {\n        const p = i || Lt(s, this.namespace, this.client.core.projectId);\n        if (!p) throw new Error(`No RPC url provided for chainId: ${s}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](p, F(\"disableProviderPing\")));\n    }\n}\nvar Pv = Object.defineProperty, Cv = Object.defineProperties, Av = Object.getOwnPropertyDescriptors, Fa = Object.getOwnPropertySymbols, Iv = Object.prototype.hasOwnProperty, xv = Object.prototype.propertyIsEnumerable, Wa = (P, s, i)=>s in P ? Pv(P, s, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : P[s] = i, pr = (P, s)=>{\n    for(var i in s || (s = {}))Iv.call(s, i) && Wa(P, i, s[i]);\n    if (Fa) for (var i of Fa(s))xv.call(s, i) && Wa(P, i, s[i]);\n    return P;\n}, Bi = (P, s)=>Cv(P, Av(s));\nclass dr {\n    constructor(s){\n        this.events = new (events__WEBPACK_IMPORTED_MODULE_4___default()), this.rpcProviders = {}, this.shouldAbortPairingAttempt = !1, this.maxPairingAttempts = 10, this.disableProviderPing = !1, this.providerOpts = s, this.logger = typeof s?.logger < \"u\" && typeof s?.logger != \"string\" ? s.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: s?.logger || ya\n        })), this.disableProviderPing = s?.disableProviderPing || !1;\n    }\n    static async init(s) {\n        const i = new dr(s);\n        return await i.initialize(), i;\n    }\n    async request(s, i, p) {\n        const [w, I] = this.validateChain(i);\n        if (!this.session) throw new Error(\"Please call connect() before request()\");\n        return await this.getProvider(w).request({\n            request: pr({}, s),\n            chainId: `${w}:${I}`,\n            topic: this.session.topic,\n            expiry: p\n        });\n    }\n    sendAsync(s, i, p, w) {\n        const I = new Date().getTime();\n        this.request(s, p, w).then((y)=>i(null, (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult)(I, y))).catch((y)=>i(y, void 0));\n    }\n    async enable() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        return this.session || await this.connect({\n            namespaces: this.namespaces,\n            optionalNamespaces: this.optionalNamespaces,\n            sessionProperties: this.sessionProperties\n        }), await this.requestAccounts();\n    }\n    async disconnect() {\n        var s;\n        if (!this.session) throw new Error(\"Please call connect() before enable()\");\n        await this.client.disconnect({\n            topic: (s = this.session) == null ? void 0 : s.topic,\n            reason: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")\n        }), await this.cleanup();\n    }\n    async connect(s) {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (this.setNamespaces(s), await this.cleanupPendingPairings(), !s.skipPairing) return await this.pair(s.pairingTopic);\n    }\n    async authenticate(s, i) {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        this.setNamespaces(s), await this.cleanupPendingPairings();\n        const { uri: p, response: w } = await this.client.authenticate(s, i);\n        p && (this.uri = p, this.events.emit(\"display_uri\", p));\n        const I = await w();\n        if (this.session = I.session, this.session) {\n            const y = Ha(this.session.namespaces);\n            this.namespaces = Fi(this.namespaces, y), this.persist(\"namespaces\", this.namespaces), this.onConnect();\n        }\n        return I;\n    }\n    on(s, i) {\n        this.events.on(s, i);\n    }\n    once(s, i) {\n        this.events.once(s, i);\n    }\n    removeListener(s, i) {\n        this.events.removeListener(s, i);\n    }\n    off(s, i) {\n        this.events.off(s, i);\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    async pair(s) {\n        this.shouldAbortPairingAttempt = !1;\n        let i = 0;\n        do {\n            if (this.shouldAbortPairingAttempt) throw new Error(\"Pairing aborted\");\n            if (i >= this.maxPairingAttempts) throw new Error(\"Max auto pairing attempts reached\");\n            const { uri: p, approval: w } = await this.client.connect({\n                pairingTopic: s,\n                requiredNamespaces: this.namespaces,\n                optionalNamespaces: this.optionalNamespaces,\n                sessionProperties: this.sessionProperties\n            });\n            p && (this.uri = p, this.events.emit(\"display_uri\", p)), await w().then((I)=>{\n                this.session = I;\n                const y = Ha(I.namespaces);\n                this.namespaces = Fi(this.namespaces, y), this.persist(\"namespaces\", this.namespaces);\n            }).catch((I)=>{\n                if (I.message !== _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__.PROPOSAL_EXPIRY_MESSAGE) throw I;\n                i++;\n            });\n        }while (!this.session);\n        return this.onConnect(), this.session;\n    }\n    setDefaultChain(s, i) {\n        try {\n            if (!this.session) return;\n            const [p, w] = this.validateChain(s), I = this.getProvider(p);\n            I.name === ze ? I.setDefaultChain(`${p}:${w}`, i) : I.setDefaultChain(w, i);\n        } catch (p) {\n            if (!/Please call connect/.test(p.message)) throw p;\n        }\n    }\n    async cleanupPendingPairings(s = {}) {\n        this.logger.info(\"Cleaning up inactive pairings...\");\n        const i = this.client.pairing.getAll();\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidArray)(i)) {\n            for (const p of i)s.deletePairings ? this.client.core.expirer.set(p.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(p.topic);\n            this.logger.info(`Inactive pairings cleared: ${i.length}`);\n        }\n    }\n    abortPairingAttempt() {\n        this.shouldAbortPairingAttempt = !0;\n    }\n    async checkStorage() {\n        if (this.namespaces = await this.getFromStore(\"namespaces\"), this.optionalNamespaces = await this.getFromStore(\"optionalNamespaces\") || {}, this.client.session.length) {\n            const s = this.client.session.keys.length - 1;\n            this.session = this.client.session.get(this.client.session.keys[s]), this.createProviders();\n        }\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();\n    }\n    async createClient() {\n        this.client = this.providerOpts.client || await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__[\"default\"].init({\n            core: this.providerOpts.core,\n            logger: this.providerOpts.logger || ya,\n            relayUrl: this.providerOpts.relayUrl || Yg,\n            projectId: this.providerOpts.projectId,\n            metadata: this.providerOpts.metadata,\n            storageOptions: this.providerOpts.storageOptions,\n            storage: this.providerOpts.storage,\n            name: this.providerOpts.name,\n            customStoragePrefix: this.providerOpts.customStoragePrefix,\n            telemetryEnabled: this.providerOpts.telemetryEnabled\n        }), this.logger.trace(\"SignClient Initialized\");\n    }\n    createProviders() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (!this.session) throw new Error(\"Session not initialized. Please call connect() before enable()\");\n        const s = [\n            ...new Set(Object.keys(this.session.namespaces).map((i)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(i)))\n        ];\n        Mi(\"client\", this.client), Mi(\"events\", this.events), Mi(\"disableProviderPing\", this.disableProviderPing), s.forEach((i)=>{\n            if (!this.session) return;\n            const p = rv(i, this.session), w = Ta(p), I = Fi(this.namespaces, this.optionalNamespaces), y = Bi(pr({}, I[i]), {\n                accounts: p,\n                chains: w\n            });\n            switch(i){\n                case \"eip155\":\n                    this.rpcProviders[i] = new hv({\n                        namespace: y\n                    });\n                    break;\n                case \"algorand\":\n                    this.rpcProviders[i] = new dv({\n                        namespace: y\n                    });\n                    break;\n                case \"solana\":\n                    this.rpcProviders[i] = new lv({\n                        namespace: y\n                    });\n                    break;\n                case \"cosmos\":\n                    this.rpcProviders[i] = new pv({\n                        namespace: y\n                    });\n                    break;\n                case \"polkadot\":\n                    this.rpcProviders[i] = new sv({\n                        namespace: y\n                    });\n                    break;\n                case \"cip34\":\n                    this.rpcProviders[i] = new gv({\n                        namespace: y\n                    });\n                    break;\n                case \"elrond\":\n                    this.rpcProviders[i] = new vv({\n                        namespace: y\n                    });\n                    break;\n                case \"multiversx\":\n                    this.rpcProviders[i] = new _v({\n                        namespace: y\n                    });\n                    break;\n                case \"near\":\n                    this.rpcProviders[i] = new mv({\n                        namespace: y\n                    });\n                    break;\n                default:\n                    this.rpcProviders[ze] ? this.rpcProviders[ze].updateNamespace(y) : this.rpcProviders[ze] = new wv({\n                        namespace: y\n                    });\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client > \"u\") throw new Error(\"Sign Client is not initialized\");\n        this.client.on(\"session_ping\", (s)=>{\n            this.events.emit(\"session_ping\", s);\n        }), this.client.on(\"session_event\", (s)=>{\n            const { params: i } = s, { event: p } = i;\n            if (p.name === \"accountsChanged\") {\n                const w = p.data;\n                w && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidArray)(w) && this.events.emit(\"accountsChanged\", w.map(iv));\n            } else if (p.name === \"chainChanged\") {\n                const w = i.chainId, I = i.event.data, y = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(w), J = Wi(w) !== Wi(I) ? `${y}:${Wi(I)}` : w;\n                this.onChainChanged(J);\n            } else this.events.emit(p.name, p.data);\n            this.events.emit(\"session_event\", s);\n        }), this.client.on(\"session_update\", ({ topic: s, params: i })=>{\n            var p;\n            const { namespaces: w } = i, I = (p = this.client) == null ? void 0 : p.session.get(s);\n            this.session = Bi(pr({}, I), {\n                namespaces: w\n            }), this.onSessionUpdate(), this.events.emit(\"session_update\", {\n                topic: s,\n                params: i\n            });\n        }), this.client.on(\"session_delete\", async (s)=>{\n            await this.cleanup(), this.events.emit(\"session_delete\", s), this.events.emit(\"disconnect\", Bi(pr({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: s.topic\n            }));\n        }), this.on(Tt.DEFAULT_CHAIN_CHANGED, (s)=>{\n            this.onChainChanged(s, !0);\n        });\n    }\n    getProvider(s) {\n        return this.rpcProviders[s] || this.rpcProviders[ze];\n    }\n    onSessionUpdate() {\n        Object.keys(this.rpcProviders).forEach((s)=>{\n            var i;\n            this.getProvider(s).updateNamespace((i = this.session) == null ? void 0 : i.namespaces[s]);\n        });\n    }\n    setNamespaces(s) {\n        const { namespaces: i, optionalNamespaces: p, sessionProperties: w } = s;\n        i && Object.keys(i).length && (this.namespaces = i), p && Object.keys(p).length && (this.optionalNamespaces = p), this.sessionProperties = w, this.persist(\"namespaces\", i), this.persist(\"optionalNamespaces\", p);\n    }\n    validateChain(s) {\n        const [i, p] = s?.split(\":\") || [\n            \"\",\n            \"\"\n        ];\n        if (!this.namespaces || !Object.keys(this.namespaces).length) return [\n            i,\n            p\n        ];\n        if (i && !Object.keys(this.namespaces || {}).map((y)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(y)).includes(i)) throw new Error(`Namespace '${i}' is not configured. Please call connect() first with namespace config.`);\n        if (i && p) return [\n            i,\n            p\n        ];\n        const w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(Object.keys(this.namespaces)[0]), I = this.rpcProviders[w].getDefaultChain();\n        return [\n            w,\n            I\n        ];\n    }\n    async requestAccounts() {\n        const [s] = this.validateChain();\n        return await this.getProvider(s).requestAccounts();\n    }\n    onChainChanged(s, i = !1) {\n        if (!this.namespaces) return;\n        const [p, w] = this.validateChain(s);\n        w && (i || this.getProvider(p).setDefaultChain(w), this.namespaces[p] ? this.namespaces[p].defaultChain = w : this.namespaces[`${p}:${w}`] ? this.namespaces[`${p}:${w}`].defaultChain = w : this.namespaces[`${p}:${w}`] = {\n            defaultChain: w\n        }, this.persist(\"namespaces\", this.namespaces), this.events.emit(\"chainChanged\", w));\n    }\n    onConnect() {\n        this.createProviders(), this.events.emit(\"connect\", {\n            session: this.session\n        });\n    }\n    async cleanup() {\n        this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist(\"namespaces\", void 0), this.persist(\"optionalNamespaces\", void 0), this.persist(\"sessionProperties\", void 0), await this.cleanupPendingPairings({\n            deletePairings: !0\n        });\n    }\n    persist(s, i) {\n        this.client.core.storage.setItem(`${Sa}/${s}`, i);\n    }\n    async getFromStore(s) {\n        return await this.client.core.storage.getItem(`${Sa}/${s}`);\n    }\n}\nconst Ev = dr;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/universal-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/dist/index.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE10: () => (/* binding */ Zi),\n/* harmony export */   BASE16: () => (/* binding */ Lt),\n/* harmony export */   BASE64: () => (/* binding */ tn),\n/* harmony export */   BASE64URL: () => (/* binding */ Iu),\n/* harmony export */   COLON: () => (/* binding */ rs),\n/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ Ai),\n/* harmony export */   EMPTY_SPACE: () => (/* binding */ Pr),\n/* harmony export */   ENV_MAP: () => (/* binding */ qt),\n/* harmony export */   INTERNAL_ERRORS: () => (/* binding */ So),\n/* harmony export */   MemoryStore: () => (/* binding */ Rh),\n/* harmony export */   ONE_THOUSAND: () => (/* binding */ is),\n/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ Nn),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ uo),\n/* harmony export */   SDK_ERRORS: () => (/* binding */ Eo),\n/* harmony export */   SDK_TYPE: () => (/* binding */ Bn),\n/* harmony export */   SLASH: () => (/* binding */ _n),\n/* harmony export */   TYPE_0: () => (/* binding */ en),\n/* harmony export */   TYPE_1: () => (/* binding */ pr),\n/* harmony export */   TYPE_2: () => (/* binding */ Sr),\n/* harmony export */   UTF8: () => (/* binding */ dr),\n/* harmony export */   addResourceToRecap: () => (/* binding */ io),\n/* harmony export */   appendToQueryString: () => (/* binding */ Cn),\n/* harmony export */   assertType: () => (/* binding */ us),\n/* harmony export */   assignAbilityToActions: () => (/* binding */ Wi),\n/* harmony export */   base64Decode: () => (/* binding */ eo),\n/* harmony export */   base64Encode: () => (/* binding */ to),\n/* harmony export */   buildApprovedNamespaces: () => (/* binding */ ah),\n/* harmony export */   buildAuthObject: () => (/* binding */ Au),\n/* harmony export */   buildNamespacesFromAuth: () => (/* binding */ uh),\n/* harmony export */   buildRecapStatement: () => (/* binding */ fo),\n/* harmony export */   calcExpiry: () => (/* binding */ ws),\n/* harmony export */   capitalize: () => (/* binding */ vs),\n/* harmony export */   capitalizeWord: () => (/* binding */ Fn),\n/* harmony export */   createDelayedPromise: () => (/* binding */ gs),\n/* harmony export */   createEncodedRecap: () => (/* binding */ xu),\n/* harmony export */   createExpiringPromise: () => (/* binding */ ms),\n/* harmony export */   createRecap: () => (/* binding */ ro),\n/* harmony export */   decodeRecap: () => (/* binding */ Oe),\n/* harmony export */   decodeTypeByte: () => (/* binding */ Ze),\n/* harmony export */   decodeTypeTwoEnvelope: () => (/* binding */ Fu),\n/* harmony export */   decrypt: () => (/* binding */ Du),\n/* harmony export */   deriveSymKey: () => (/* binding */ Cu),\n/* harmony export */   deserialize: () => (/* binding */ Wr),\n/* harmony export */   encodeRecap: () => (/* binding */ Yr),\n/* harmony export */   encodeTypeByte: () => (/* binding */ nn),\n/* harmony export */   encodeTypeTwoEnvelope: () => (/* binding */ Tu),\n/* harmony export */   encrypt: () => (/* binding */ Pu),\n/* harmony export */   engineEvent: () => (/* binding */ Ms),\n/* harmony export */   enumify: () => (/* binding */ ps),\n/* harmony export */   formatAccountId: () => (/* binding */ yn),\n/* harmony export */   formatAccountWithChain: () => (/* binding */ Yo),\n/* harmony export */   formatChainId: () => (/* binding */ bn),\n/* harmony export */   formatDeeplinkUrl: () => (/* binding */ Un),\n/* harmony export */   formatExpirerTarget: () => (/* binding */ yi),\n/* harmony export */   formatIdTarget: () => (/* binding */ bs),\n/* harmony export */   formatMessage: () => (/* binding */ Wf),\n/* harmony export */   formatMessageContext: () => (/* binding */ hs),\n/* harmony export */   formatRelayParams: () => (/* binding */ go),\n/* harmony export */   formatRelayRpcUrl: () => (/* binding */ ss),\n/* harmony export */   formatStatementFromRecap: () => (/* binding */ $i),\n/* harmony export */   formatTopicTarget: () => (/* binding */ As),\n/* harmony export */   formatUA: () => (/* binding */ Pn),\n/* harmony export */   formatUri: () => (/* binding */ $u),\n/* harmony export */   fromBase64: () => (/* binding */ xi),\n/* harmony export */   generateKeyPair: () => (/* binding */ _u),\n/* harmony export */   generateRandomBytes32: () => (/* binding */ Bu),\n/* harmony export */   getAccountsChains: () => (/* binding */ tr),\n/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ Wo),\n/* harmony export */   getAddressFromAccount: () => (/* binding */ wn),\n/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Vo),\n/* harmony export */   getAppMetadata: () => (/* binding */ fs),\n/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ Fo),\n/* harmony export */   getBundleId: () => (/* binding */ ns),\n/* harmony export */   getChainFromAccount: () => (/* binding */ xn),\n/* harmony export */   getChainsFromAccounts: () => (/* binding */ Mn),\n/* harmony export */   getChainsFromNamespace: () => (/* binding */ Or),\n/* harmony export */   getChainsFromNamespaces: () => (/* binding */ Xo),\n/* harmony export */   getChainsFromRecap: () => (/* binding */ Su),\n/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ $o),\n/* harmony export */   getCommonValuesInArrays: () => (/* binding */ wi),\n/* harmony export */   getCryptoKeyFromKeyData: () => (/* binding */ ao),\n/* harmony export */   getDecodedRecapFromResources: () => (/* binding */ Xf),\n/* harmony export */   getDeepLink: () => (/* binding */ Ss),\n/* harmony export */   getDidAddress: () => (/* binding */ Vi),\n/* harmony export */   getDidAddressSegments: () => (/* binding */ Gr),\n/* harmony export */   getDidChainId: () => (/* binding */ Yi),\n/* harmony export */   getEnvironment: () => (/* binding */ We),\n/* harmony export */   getHttpUrl: () => (/* binding */ as),\n/* harmony export */   getInternalError: () => (/* binding */ xe),\n/* harmony export */   getJavascriptID: () => (/* binding */ On),\n/* harmony export */   getJavascriptOS: () => (/* binding */ Rn),\n/* harmony export */   getLastItems: () => (/* binding */ Dn),\n/* harmony export */   getLinkModeURL: () => (/* binding */ Zu),\n/* harmony export */   getMethodsFromRecap: () => (/* binding */ Eu),\n/* harmony export */   getNamespacedDidChainId: () => (/* binding */ gu),\n/* harmony export */   getNamespacesChains: () => (/* binding */ bo),\n/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ wo),\n/* harmony export */   getNamespacesFromAccounts: () => (/* binding */ Mo),\n/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ yo),\n/* harmony export */   getNodeOnlineStatus: () => (/* binding */ ko),\n/* harmony export */   getReCapActions: () => (/* binding */ Zf),\n/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ Uo),\n/* harmony export */   getRecapAbilitiesFromResource: () => (/* binding */ wu),\n/* harmony export */   getRecapFromResources: () => (/* binding */ Vr),\n/* harmony export */   getRecapResource: () => (/* binding */ $f),\n/* harmony export */   getRelayClientMetadata: () => (/* binding */ os),\n/* harmony export */   getRelayProtocolApi: () => (/* binding */ ju),\n/* harmony export */   getRelayProtocolName: () => (/* binding */ zu),\n/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ sh),\n/* harmony export */   getSdkError: () => (/* binding */ er),\n/* harmony export */   getSearchParamFromURL: () => (/* binding */ Is),\n/* harmony export */   getUniqueValues: () => (/* binding */ mi),\n/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ Es),\n/* harmony export */   hasOverlap: () => (/* binding */ _e),\n/* harmony export */   hashKey: () => (/* binding */ Ru),\n/* harmony export */   hashMessage: () => (/* binding */ Ou),\n/* harmony export */   isBrowser: () => (/* binding */ gr),\n/* harmony export */   isCaipNamespace: () => (/* binding */ on),\n/* harmony export */   isConformingNamespaces: () => (/* binding */ To),\n/* harmony export */   isExpired: () => (/* binding */ xs),\n/* harmony export */   isNode: () => (/* binding */ bi),\n/* harmony export */   isOnline: () => (/* binding */ Bh),\n/* harmony export */   isProposalStruct: () => (/* binding */ lh),\n/* harmony export */   isReactNative: () => (/* binding */ rr),\n/* harmony export */   isRecap: () => (/* binding */ Xi),\n/* harmony export */   isSessionCompatible: () => (/* binding */ hh),\n/* harmony export */   isSessionStruct: () => (/* binding */ dh),\n/* harmony export */   isTelegram: () => (/* binding */ kn),\n/* harmony export */   isTestRun: () => (/* binding */ _s),\n/* harmony export */   isTypeOneEnvelope: () => (/* binding */ ku),\n/* harmony export */   isTypeTwoEnvelope: () => (/* binding */ qu),\n/* harmony export */   isUndefined: () => (/* binding */ Pe),\n/* harmony export */   isValidAccountId: () => (/* binding */ Io),\n/* harmony export */   isValidAccounts: () => (/* binding */ Bo),\n/* harmony export */   isValidActions: () => (/* binding */ Ro),\n/* harmony export */   isValidArray: () => (/* binding */ Nr),\n/* harmony export */   isValidChainId: () => (/* binding */ _r),\n/* harmony export */   isValidChains: () => (/* binding */ No),\n/* harmony export */   isValidController: () => (/* binding */ ph),\n/* harmony export */   isValidEip1271Signature: () => (/* binding */ Jf),\n/* harmony export */   isValidEip191Signature: () => (/* binding */ Qf),\n/* harmony export */   isValidErrorReason: () => (/* binding */ bh),\n/* harmony export */   isValidEvent: () => (/* binding */ xh),\n/* harmony export */   isValidId: () => (/* binding */ mh),\n/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ Co),\n/* harmony export */   isValidNamespaceActions: () => (/* binding */ un),\n/* harmony export */   isValidNamespaceChains: () => (/* binding */ _o),\n/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ an),\n/* harmony export */   isValidNamespaces: () => (/* binding */ Oo),\n/* harmony export */   isValidNamespacesChainId: () => (/* binding */ Mh),\n/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Sh),\n/* harmony export */   isValidNamespacesRequest: () => (/* binding */ Eh),\n/* harmony export */   isValidNumber: () => (/* binding */ $r),\n/* harmony export */   isValidObject: () => (/* binding */ Xr),\n/* harmony export */   isValidParams: () => (/* binding */ Ah),\n/* harmony export */   isValidRecap: () => (/* binding */ ge),\n/* harmony export */   isValidRelay: () => (/* binding */ Po),\n/* harmony export */   isValidRelays: () => (/* binding */ gh),\n/* harmony export */   isValidRequest: () => (/* binding */ yh),\n/* harmony export */   isValidRequestExpiry: () => (/* binding */ _h),\n/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ vh),\n/* harmony export */   isValidResponse: () => (/* binding */ wh),\n/* harmony export */   isValidString: () => (/* binding */ Yt),\n/* harmony export */   isValidUrl: () => (/* binding */ ch),\n/* harmony export */   mapEntries: () => (/* binding */ ds),\n/* harmony export */   mapToObj: () => (/* binding */ cs),\n/* harmony export */   mergeArrays: () => (/* binding */ me),\n/* harmony export */   mergeEncodedRecaps: () => (/* binding */ Mu),\n/* harmony export */   mergeRecaps: () => (/* binding */ no),\n/* harmony export */   normalizeNamespaces: () => (/* binding */ sn),\n/* harmony export */   objToMap: () => (/* binding */ ls),\n/* harmony export */   parseAccountId: () => (/* binding */ gi),\n/* harmony export */   parseChainId: () => (/* binding */ An),\n/* harmony export */   parseContextNames: () => (/* binding */ Tn),\n/* harmony export */   parseExpirerTarget: () => (/* binding */ ys),\n/* harmony export */   parseNamespaceKey: () => (/* binding */ xo),\n/* harmony export */   parseRelayParams: () => (/* binding */ po),\n/* harmony export */   parseTopic: () => (/* binding */ vo),\n/* harmony export */   parseUri: () => (/* binding */ Xu),\n/* harmony export */   populateAuthPayload: () => (/* binding */ bu),\n/* harmony export */   recapHasResource: () => (/* binding */ yu),\n/* harmony export */   serialize: () => (/* binding */ fn),\n/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ qo),\n/* harmony export */   subscribeToNetworkChange: () => (/* binding */ Ch),\n/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ Ko),\n/* harmony export */   toBase64: () => (/* binding */ qn),\n/* harmony export */   uuidv4: () => (/* binding */ Ns),\n/* harmony export */   validateDecoding: () => (/* binding */ Uu),\n/* harmony export */   validateEncoding: () => (/* binding */ so),\n/* harmony export */   validateSignedCacao: () => (/* binding */ mu),\n/* harmony export */   verifyP256Jwt: () => (/* binding */ Lu),\n/* harmony export */   verifySignature: () => (/* binding */ jf)\n/* harmony export */ });\n/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! detect-browser */ \"(ssr)/./node_modules/detect-browser/es/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/window-metadata */ \"(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js\");\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! query-string */ \"(ssr)/./node_modules/query-string/index.js\");\n/* harmony import */ var _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stablelib/chacha20poly1305 */ \"(ssr)/./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js\");\n/* harmony import */ var _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stablelib/hkdf */ \"(ssr)/./node_modules/@stablelib/hkdf/lib/hkdf.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/./node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stablelib/sha256 */ \"(ssr)/./node_modules/@stablelib/sha256/lib/sha256.js\");\n/* harmony import */ var _stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stablelib/x25519 */ \"(ssr)/./node_modules/@stablelib/x25519/lib/x25519.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\");\n/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(elliptic__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @walletconnect/relay-api */ \"(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Rr = \":\";\nfunction An(e) {\n    const [t, r] = e.split(Rr);\n    return {\n        namespace: t,\n        reference: r\n    };\n}\nfunction bn(e) {\n    const { namespace: t, reference: r } = e;\n    return [\n        t,\n        r\n    ].join(Rr);\n}\nfunction gi(e) {\n    const [t, r, i] = e.split(Rr);\n    return {\n        namespace: t,\n        reference: r,\n        address: i\n    };\n}\nfunction yn(e) {\n    const { namespace: t, reference: r, address: i } = e;\n    return [\n        t,\n        r,\n        i\n    ].join(Rr);\n}\nfunction mi(e, t) {\n    const r = [];\n    return e.forEach((i)=>{\n        const n = t(i);\n        r.includes(n) || r.push(n);\n    }), r;\n}\nfunction wn(e) {\n    const { address: t } = gi(e);\n    return t;\n}\nfunction xn(e) {\n    const { namespace: t, reference: r } = gi(e);\n    return bn({\n        namespace: t,\n        reference: r\n    });\n}\nfunction Yo(e, t) {\n    const { namespace: r, reference: i } = An(t);\n    return yn({\n        namespace: r,\n        reference: i,\n        address: e\n    });\n}\nfunction Vo(e) {\n    return mi(e, wn);\n}\nfunction Mn(e) {\n    return mi(e, xn);\n}\nfunction Wo(e, t = []) {\n    const r = [];\n    return Object.keys(e).forEach((i)=>{\n        if (t.length && !t.includes(i)) return;\n        const n = e[i];\n        r.push(...n.accounts);\n    }), r;\n}\nfunction Xo(e, t = []) {\n    const r = [];\n    return Object.keys(e).forEach((i)=>{\n        if (t.length && !t.includes(i)) return;\n        const n = e[i];\n        r.push(...Mn(n.accounts));\n    }), r;\n}\nfunction $o(e, t = []) {\n    const r = [];\n    return Object.keys(e).forEach((i)=>{\n        if (t.length && !t.includes(i)) return;\n        const n = e[i];\n        r.push(...Or(i, n));\n    }), r;\n}\nfunction Or(e, t) {\n    return e.includes(\":\") ? [\n        e\n    ] : t.chains || [];\n}\nvar Zo = Object.defineProperty, En = Object.getOwnPropertySymbols, ts = Object.prototype.hasOwnProperty, es = Object.prototype.propertyIsEnumerable, Sn = (e, t, r)=>t in e ? Zo(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, In = (e, t)=>{\n    for(var r in t || (t = {}))ts.call(t, r) && Sn(e, r, t[r]);\n    if (En) for (var r of En(t))es.call(t, r) && Sn(e, r, t[r]);\n    return e;\n};\nconst Nn = \"ReactNative\", qt = {\n    reactNative: \"react-native\",\n    node: \"node\",\n    browser: \"browser\",\n    unknown: \"unknown\"\n}, Pr = \" \", rs = \":\", _n = \"/\", Ai = 2, is = 1e3, Bn = \"js\";\nfunction bi() {\n    return typeof process < \"u\" && typeof process.versions < \"u\" && typeof process.versions.node < \"u\";\n}\nfunction rr() {\n    return !(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)() && navigator.product === Nn;\n}\nfunction gr() {\n    return !bi() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)();\n}\nfunction We() {\n    return rr() ? qt.reactNative : bi() ? qt.node : gr() ? qt.browser : qt.unknown;\n}\nfunction ns() {\n    var e;\n    try {\n        return rr() && typeof global < \"u\" && typeof (global == null ? void 0 : global.Application) < \"u\" ? (e = global.Application) == null ? void 0 : e.applicationId : void 0;\n    } catch  {\n        return;\n    }\n}\nfunction Cn(e, t) {\n    let r = query_string__WEBPACK_IMPORTED_MODULE_3__.parse(e);\n    return r = In(In({}, r), t), e = query_string__WEBPACK_IMPORTED_MODULE_3__.stringify(r), e;\n}\nfunction fs() {\n    return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__.getWindowMetadata)() || {\n        name: \"\",\n        description: \"\",\n        url: \"\",\n        icons: [\n            \"\"\n        ]\n    };\n}\nfunction os(e, t) {\n    var r;\n    const i = We(), n = {\n        protocol: e,\n        version: t,\n        env: i\n    };\n    return i === \"browser\" && (n.host = ((r = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)()) == null ? void 0 : r.host) || \"unknown\"), n;\n}\nfunction Rn() {\n    if (We() === qt.reactNative && typeof global < \"u\" && typeof (global == null ? void 0 : global.Platform) < \"u\") {\n        const { OS: r, Version: i } = global.Platform;\n        return [\n            r,\n            i\n        ].join(\"-\");\n    }\n    const e = (0,detect_browser__WEBPACK_IMPORTED_MODULE_13__.detect)();\n    if (e === null) return \"unknown\";\n    const t = e.os ? e.os.replace(\" \", \"\").toLowerCase() : \"unknown\";\n    return e.type === \"browser\" ? [\n        t,\n        e.name,\n        e.version\n    ].join(\"-\") : [\n        t,\n        e.version\n    ].join(\"-\");\n}\nfunction On() {\n    var e;\n    const t = We();\n    return t === qt.browser ? [\n        t,\n        ((e = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)()) == null ? void 0 : e.host) || \"unknown\"\n    ].join(\":\") : t;\n}\nfunction Pn(e, t, r) {\n    const i = Rn(), n = On();\n    return [\n        [\n            e,\n            t\n        ].join(\"-\"),\n        [\n            Bn,\n            r\n        ].join(\"-\"),\n        i,\n        n\n    ].join(\"/\");\n}\nfunction ss({ protocol: e, version: t, relayUrl: r, sdkVersion: i, auth: n, projectId: o, useOnCloseEvent: h, bundleId: p }) {\n    const A = r.split(\"?\"), v = Pn(e, t, i), w = {\n        auth: n,\n        ua: v,\n        projectId: o,\n        useOnCloseEvent: h || void 0,\n        origin: p || void 0\n    }, y = Cn(A[1] || \"\", w);\n    return A[0] + \"?\" + y;\n}\nfunction as(e) {\n    let t = (e.match(/^[^:]+(?=:\\/\\/)/gi) || [])[0];\n    const r = typeof t < \"u\" ? e.split(\"://\")[1] : e;\n    return t = t === \"wss\" ? \"https\" : \"http\", [\n        t,\n        r\n    ].join(\"://\");\n}\nfunction us(e, t, r) {\n    if (!e[t] || typeof e[t] !== r) throw new Error(`Missing or invalid \"${t}\" param`);\n}\nfunction Tn(e, t = Ai) {\n    return Dn(e.split(_n), t);\n}\nfunction hs(e) {\n    return Tn(e).join(Pr);\n}\nfunction _e(e, t) {\n    return e.filter((r)=>t.includes(r)).length === e.length;\n}\nfunction Dn(e, t = Ai) {\n    return e.slice(Math.max(e.length - t, 0));\n}\nfunction cs(e) {\n    return Object.fromEntries(e.entries());\n}\nfunction ls(e) {\n    return new Map(Object.entries(e));\n}\nfunction ds(e, t) {\n    const r = {};\n    return Object.keys(e).forEach((i)=>{\n        r[i] = t(e[i]);\n    }), r;\n}\nconst ps = (e)=>e;\nfunction Fn(e) {\n    return e.trim().replace(/^\\w/, (t)=>t.toUpperCase());\n}\nfunction vs(e) {\n    return e.split(Pr).map((t)=>Fn(t)).join(Pr);\n}\nfunction gs(e = _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES, t) {\n    const r = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e || _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES);\n    let i, n, o;\n    return {\n        resolve: (h)=>{\n            o && i && (clearTimeout(o), i(h));\n        },\n        reject: (h)=>{\n            o && n && (clearTimeout(o), n(h));\n        },\n        done: ()=>new Promise((h, p)=>{\n                o = setTimeout(()=>{\n                    p(new Error(t));\n                }, r), i = h, n = p;\n            })\n    };\n}\nfunction ms(e, t, r) {\n    return new Promise(async (i, n)=>{\n        const o = setTimeout(()=>n(new Error(r)), t);\n        try {\n            const h = await e;\n            i(h);\n        } catch (h) {\n            n(h);\n        }\n        clearTimeout(o);\n    });\n}\nfunction yi(e, t) {\n    if (typeof t == \"string\" && t.startsWith(`${e}:`)) return t;\n    if (e.toLowerCase() === \"topic\") {\n        if (typeof t != \"string\") throw new Error('Value must be \"string\" for expirer target type: topic');\n        return `topic:${t}`;\n    } else if (e.toLowerCase() === \"id\") {\n        if (typeof t != \"number\") throw new Error('Value must be \"number\" for expirer target type: id');\n        return `id:${t}`;\n    }\n    throw new Error(`Unknown expirer target type: ${e}`);\n}\nfunction As(e) {\n    return yi(\"topic\", e);\n}\nfunction bs(e) {\n    return yi(\"id\", e);\n}\nfunction ys(e) {\n    const [t, r] = e.split(\":\"), i = {\n        id: void 0,\n        topic: void 0\n    };\n    if (t === \"topic\" && typeof r == \"string\") i.topic = r;\n    else if (t === \"id\" && Number.isInteger(Number(r))) i.id = Number(r);\n    else throw new Error(`Invalid target, expected id:number or topic:string, got ${t}:${r}`);\n    return i;\n}\nfunction ws(e, t) {\n    return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.fromMiliseconds)((t || Date.now()) + (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e));\n}\nfunction xs(e) {\n    return Date.now() >= (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e);\n}\nfunction Ms(e, t) {\n    return `${e}${t ? `:${t}` : \"\"}`;\n}\nfunction me(e = [], t = []) {\n    return [\n        ...new Set([\n            ...e,\n            ...t\n        ])\n    ];\n}\nasync function Es({ id: e, topic: t, wcDeepLink: r }) {\n    var i;\n    try {\n        if (!r) return;\n        const n = typeof r == \"string\" ? JSON.parse(r) : r, o = n?.href;\n        if (typeof o != \"string\") return;\n        const h = Un(o, e, t), p = We();\n        if (p === qt.browser) {\n            if (!((i = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()) != null && i.hasFocus())) {\n                console.warn(\"Document does not have focus, skipping deeplink.\");\n                return;\n            }\n            h.startsWith(\"https://\") || h.startsWith(\"http://\") ? window.open(h, \"_blank\", \"noreferrer noopener\") : window.open(h, kn() ? \"_blank\" : \"_self\", \"noreferrer noopener\");\n        } else p === qt.reactNative && typeof (global == null ? void 0 : global.Linking) < \"u\" && await global.Linking.openURL(h);\n    } catch (n) {\n        console.error(n);\n    }\n}\nfunction Un(e, t, r) {\n    const i = `requestId=${t}&sessionTopic=${r}`;\n    e.endsWith(\"/\") && (e = e.slice(0, -1));\n    let n = `${e}`;\n    if (e.startsWith(\"https://t.me\")) {\n        const o = e.includes(\"?\") ? \"&startapp=\" : \"?startapp=\";\n        n = `${n}${o}${qn(i, !0)}`;\n    } else n = `${n}/wc?${i}`;\n    return n;\n}\nasync function Ss(e, t) {\n    let r = \"\";\n    try {\n        if (gr() && (r = localStorage.getItem(t), r)) return r;\n        r = await e.getItem(t);\n    } catch (i) {\n        console.error(i);\n    }\n    return r;\n}\nfunction wi(e, t) {\n    return e.filter((r)=>t.includes(r));\n}\nfunction Is(e, t) {\n    if (!e.includes(t)) return null;\n    const r = e.split(/([&,?,=])/), i = r.indexOf(t);\n    return r[i + 2];\n}\nfunction Ns() {\n    return typeof crypto < \"u\" && crypto != null && crypto.randomUUID ? crypto.randomUUID() : \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/gu, (e)=>{\n        const t = Math.random() * 16 | 0;\n        return (e === \"x\" ? t : t & 3 | 8).toString(16);\n    });\n}\nfunction _s() {\n    return typeof process < \"u\" && process.env.IS_VITEST === \"true\";\n}\nfunction kn() {\n    return  false && (0);\n}\nfunction qn(e, t = !1) {\n    const r = Buffer.from(e).toString(\"base64\");\n    return t ? r.replace(/[=]/g, \"\") : r;\n}\nfunction xi(e) {\n    return Buffer.from(e, \"base64\").toString(\"utf-8\");\n}\nvar Kn = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction Bs(e) {\n    var t = e.default;\n    if (typeof t == \"function\") {\n        var r = function() {\n            return t.apply(this, arguments);\n        };\n        r.prototype = t.prototype;\n    } else r = {};\n    return Object.defineProperty(r, \"__esModule\", {\n        value: !0\n    }), Object.keys(e).forEach(function(i) {\n        var n = Object.getOwnPropertyDescriptor(e, i);\n        Object.defineProperty(r, i, n.get ? n : {\n            enumerable: !0,\n            get: function() {\n                return e[i];\n            }\n        });\n    }), r;\n}\nvar Hn = {\n    exports: {}\n}; /**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */ \n(function(e) {\n    (function() {\n        var t = \"input is invalid type\", r = \"finalize already called\", i = \"undefined\" == \"object\", n = i ? window : {};\n        n.JS_SHA3_NO_WINDOW && (i = !1);\n        var o = !i && typeof self == \"object\", h = !n.JS_SHA3_NO_NODE_JS && typeof process == \"object\" && process.versions && process.versions.node;\n        h ? n = Kn : o && (n = self);\n        var p = !n.JS_SHA3_NO_COMMON_JS && !0 && e.exports, A = !n.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < \"u\", v = \"0123456789abcdef\".split(\"\"), w = [\n            31,\n            7936,\n            2031616,\n            520093696\n        ], y = [\n            4,\n            1024,\n            262144,\n            67108864\n        ], S = [\n            1,\n            256,\n            65536,\n            16777216\n        ], N = [\n            6,\n            1536,\n            393216,\n            100663296\n        ], I = [\n            0,\n            8,\n            16,\n            24\n        ], C = [\n            1,\n            0,\n            32898,\n            0,\n            32906,\n            2147483648,\n            2147516416,\n            2147483648,\n            32907,\n            0,\n            2147483649,\n            0,\n            2147516545,\n            2147483648,\n            32777,\n            2147483648,\n            138,\n            0,\n            136,\n            0,\n            2147516425,\n            0,\n            2147483658,\n            0,\n            2147516555,\n            0,\n            139,\n            2147483648,\n            32905,\n            2147483648,\n            32771,\n            2147483648,\n            32770,\n            2147483648,\n            128,\n            2147483648,\n            32778,\n            0,\n            2147483658,\n            2147483648,\n            2147516545,\n            2147483648,\n            32896,\n            2147483648,\n            2147483649,\n            0,\n            2147516424,\n            2147483648\n        ], D = [\n            224,\n            256,\n            384,\n            512\n        ], U = [\n            128,\n            256\n        ], J = [\n            \"hex\",\n            \"buffer\",\n            \"arrayBuffer\",\n            \"array\",\n            \"digest\"\n        ], Bt = {\n            128: 168,\n            256: 136\n        };\n        (n.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(u) {\n            return Object.prototype.toString.call(u) === \"[object Array]\";\n        }), A && (n.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(u) {\n            return typeof u == \"object\" && u.buffer && u.buffer.constructor === ArrayBuffer;\n        });\n        for(var G = function(u, E, _) {\n            return function(B) {\n                return new s(u, E, u).update(B)[_]();\n            };\n        }, H = function(u, E, _) {\n            return function(B, R) {\n                return new s(u, E, R).update(B)[_]();\n            };\n        }, L = function(u, E, _) {\n            return function(B, R, F, P) {\n                return f[\"cshake\" + u].update(B, R, F, P)[_]();\n            };\n        }, Pt = function(u, E, _) {\n            return function(B, R, F, P) {\n                return f[\"kmac\" + u].update(B, R, F, P)[_]();\n            };\n        }, W = function(u, E, _, B) {\n            for(var R = 0; R < J.length; ++R){\n                var F = J[R];\n                u[F] = E(_, B, F);\n            }\n            return u;\n        }, Rt = function(u, E) {\n            var _ = G(u, E, \"hex\");\n            return _.create = function() {\n                return new s(u, E, u);\n            }, _.update = function(B) {\n                return _.create().update(B);\n            }, W(_, G, u, E);\n        }, Vt = function(u, E) {\n            var _ = H(u, E, \"hex\");\n            return _.create = function(B) {\n                return new s(u, E, B);\n            }, _.update = function(B, R) {\n                return _.create(R).update(B);\n            }, W(_, H, u, E);\n        }, Y = function(u, E) {\n            var _ = Bt[u], B = L(u, E, \"hex\");\n            return B.create = function(R, F, P) {\n                return !F && !P ? f[\"shake\" + u].create(R) : new s(u, E, R).bytepad([\n                    F,\n                    P\n                ], _);\n            }, B.update = function(R, F, P, O) {\n                return B.create(F, P, O).update(R);\n            }, W(B, L, u, E);\n        }, Wt = function(u, E) {\n            var _ = Bt[u], B = Pt(u, E, \"hex\");\n            return B.create = function(R, F, P) {\n                return new g(u, E, F).bytepad([\n                    \"KMAC\",\n                    P\n                ], _).bytepad([\n                    R\n                ], _);\n            }, B.update = function(R, F, P, O) {\n                return B.create(R, P, O).update(F);\n            }, W(B, Pt, u, E);\n        }, b = [\n            {\n                name: \"keccak\",\n                padding: S,\n                bits: D,\n                createMethod: Rt\n            },\n            {\n                name: \"sha3\",\n                padding: N,\n                bits: D,\n                createMethod: Rt\n            },\n            {\n                name: \"shake\",\n                padding: w,\n                bits: U,\n                createMethod: Vt\n            },\n            {\n                name: \"cshake\",\n                padding: y,\n                bits: U,\n                createMethod: Y\n            },\n            {\n                name: \"kmac\",\n                padding: y,\n                bits: U,\n                createMethod: Wt\n            }\n        ], f = {}, a = [], c = 0; c < b.length; ++c)for(var d = b[c], m = d.bits, x = 0; x < m.length; ++x){\n            var M = d.name + \"_\" + m[x];\n            if (a.push(M), f[M] = d.createMethod(m[x], d.padding), d.name !== \"sha3\") {\n                var l = d.name + m[x];\n                a.push(l), f[l] = f[M];\n            }\n        }\n        function s(u, E, _) {\n            this.blocks = [], this.s = [], this.padding = E, this.outputBits = _, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (u << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = _ >> 5, this.extraBytes = (_ & 31) >> 3;\n            for(var B = 0; B < 50; ++B)this.s[B] = 0;\n        }\n        s.prototype.update = function(u) {\n            if (this.finalized) throw new Error(r);\n            var E, _ = typeof u;\n            if (_ !== \"string\") {\n                if (_ === \"object\") {\n                    if (u === null) throw new Error(t);\n                    if (A && u.constructor === ArrayBuffer) u = new Uint8Array(u);\n                    else if (!Array.isArray(u) && (!A || !ArrayBuffer.isView(u))) throw new Error(t);\n                } else throw new Error(t);\n                E = !0;\n            }\n            for(var B = this.blocks, R = this.byteCount, F = u.length, P = this.blockCount, O = 0, Ct = this.s, T, q; O < F;){\n                if (this.reset) for(this.reset = !1, B[0] = this.block, T = 1; T < P + 1; ++T)B[T] = 0;\n                if (E) for(T = this.start; O < F && T < R; ++O)B[T >> 2] |= u[O] << I[T++ & 3];\n                else for(T = this.start; O < F && T < R; ++O)q = u.charCodeAt(O), q < 128 ? B[T >> 2] |= q << I[T++ & 3] : q < 2048 ? (B[T >> 2] |= (192 | q >> 6) << I[T++ & 3], B[T >> 2] |= (128 | q & 63) << I[T++ & 3]) : q < 55296 || q >= 57344 ? (B[T >> 2] |= (224 | q >> 12) << I[T++ & 3], B[T >> 2] |= (128 | q >> 6 & 63) << I[T++ & 3], B[T >> 2] |= (128 | q & 63) << I[T++ & 3]) : (q = 65536 + ((q & 1023) << 10 | u.charCodeAt(++O) & 1023), B[T >> 2] |= (240 | q >> 18) << I[T++ & 3], B[T >> 2] |= (128 | q >> 12 & 63) << I[T++ & 3], B[T >> 2] |= (128 | q >> 6 & 63) << I[T++ & 3], B[T >> 2] |= (128 | q & 63) << I[T++ & 3]);\n                if (this.lastByteIndex = T, T >= R) {\n                    for(this.start = T - R, this.block = B[P], T = 0; T < P; ++T)Ct[T] ^= B[T];\n                    k(Ct), this.reset = !0;\n                } else this.start = T;\n            }\n            return this;\n        }, s.prototype.encode = function(u, E) {\n            var _ = u & 255, B = 1, R = [\n                _\n            ];\n            for(u = u >> 8, _ = u & 255; _ > 0;)R.unshift(_), u = u >> 8, _ = u & 255, ++B;\n            return E ? R.push(B) : R.unshift(B), this.update(R), R.length;\n        }, s.prototype.encodeString = function(u) {\n            var E, _ = typeof u;\n            if (_ !== \"string\") {\n                if (_ === \"object\") {\n                    if (u === null) throw new Error(t);\n                    if (A && u.constructor === ArrayBuffer) u = new Uint8Array(u);\n                    else if (!Array.isArray(u) && (!A || !ArrayBuffer.isView(u))) throw new Error(t);\n                } else throw new Error(t);\n                E = !0;\n            }\n            var B = 0, R = u.length;\n            if (E) B = R;\n            else for(var F = 0; F < u.length; ++F){\n                var P = u.charCodeAt(F);\n                P < 128 ? B += 1 : P < 2048 ? B += 2 : P < 55296 || P >= 57344 ? B += 3 : (P = 65536 + ((P & 1023) << 10 | u.charCodeAt(++F) & 1023), B += 4);\n            }\n            return B += this.encode(B * 8), this.update(u), B;\n        }, s.prototype.bytepad = function(u, E) {\n            for(var _ = this.encode(E), B = 0; B < u.length; ++B)_ += this.encodeString(u[B]);\n            var R = E - _ % E, F = [];\n            return F.length = R, this.update(F), this;\n        }, s.prototype.finalize = function() {\n            if (!this.finalized) {\n                this.finalized = !0;\n                var u = this.blocks, E = this.lastByteIndex, _ = this.blockCount, B = this.s;\n                if (u[E >> 2] |= this.padding[E & 3], this.lastByteIndex === this.byteCount) for(u[0] = u[_], E = 1; E < _ + 1; ++E)u[E] = 0;\n                for(u[_ - 1] |= 2147483648, E = 0; E < _; ++E)B[E] ^= u[E];\n                k(B);\n            }\n        }, s.prototype.toString = s.prototype.hex = function() {\n            this.finalize();\n            for(var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, F = 0, P = \"\", O; F < _;){\n                for(R = 0; R < u && F < _; ++R, ++F)O = E[R], P += v[O >> 4 & 15] + v[O & 15] + v[O >> 12 & 15] + v[O >> 8 & 15] + v[O >> 20 & 15] + v[O >> 16 & 15] + v[O >> 28 & 15] + v[O >> 24 & 15];\n                F % u === 0 && (k(E), R = 0);\n            }\n            return B && (O = E[R], P += v[O >> 4 & 15] + v[O & 15], B > 1 && (P += v[O >> 12 & 15] + v[O >> 8 & 15]), B > 2 && (P += v[O >> 20 & 15] + v[O >> 16 & 15])), P;\n        }, s.prototype.arrayBuffer = function() {\n            this.finalize();\n            var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, F = 0, P = this.outputBits >> 3, O;\n            B ? O = new ArrayBuffer(_ + 1 << 2) : O = new ArrayBuffer(P);\n            for(var Ct = new Uint32Array(O); F < _;){\n                for(R = 0; R < u && F < _; ++R, ++F)Ct[F] = E[R];\n                F % u === 0 && k(E);\n            }\n            return B && (Ct[R] = E[R], O = O.slice(0, P)), O;\n        }, s.prototype.buffer = s.prototype.arrayBuffer, s.prototype.digest = s.prototype.array = function() {\n            this.finalize();\n            for(var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, F = 0, P = [], O, Ct; F < _;){\n                for(R = 0; R < u && F < _; ++R, ++F)O = F << 2, Ct = E[R], P[O] = Ct & 255, P[O + 1] = Ct >> 8 & 255, P[O + 2] = Ct >> 16 & 255, P[O + 3] = Ct >> 24 & 255;\n                F % u === 0 && k(E);\n            }\n            return B && (O = F << 2, Ct = E[R], P[O] = Ct & 255, B > 1 && (P[O + 1] = Ct >> 8 & 255), B > 2 && (P[O + 2] = Ct >> 16 & 255)), P;\n        };\n        function g(u, E, _) {\n            s.call(this, u, E, _);\n        }\n        g.prototype = new s, g.prototype.finalize = function() {\n            return this.encode(this.outputBits, !0), s.prototype.finalize.call(this);\n        };\n        var k = function(u) {\n            var E, _, B, R, F, P, O, Ct, T, q, Te, X, $, De, Z, tt, Fe, et, rt, Ue, it, nt, ke, ft, ot, qe, st, at, Ke, ut, ht, He, ct, lt, Le, dt, pt, ze, vt, gt, je, mt, At, Qe, bt, yt, Je, wt, xt, Ge, Mt, Et, Ye, St, It, Ve, Nt, _t, Me, Ee, Se, Ie, Ne;\n            for(B = 0; B < 48; B += 2)R = u[0] ^ u[10] ^ u[20] ^ u[30] ^ u[40], F = u[1] ^ u[11] ^ u[21] ^ u[31] ^ u[41], P = u[2] ^ u[12] ^ u[22] ^ u[32] ^ u[42], O = u[3] ^ u[13] ^ u[23] ^ u[33] ^ u[43], Ct = u[4] ^ u[14] ^ u[24] ^ u[34] ^ u[44], T = u[5] ^ u[15] ^ u[25] ^ u[35] ^ u[45], q = u[6] ^ u[16] ^ u[26] ^ u[36] ^ u[46], Te = u[7] ^ u[17] ^ u[27] ^ u[37] ^ u[47], X = u[8] ^ u[18] ^ u[28] ^ u[38] ^ u[48], $ = u[9] ^ u[19] ^ u[29] ^ u[39] ^ u[49], E = X ^ (P << 1 | O >>> 31), _ = $ ^ (O << 1 | P >>> 31), u[0] ^= E, u[1] ^= _, u[10] ^= E, u[11] ^= _, u[20] ^= E, u[21] ^= _, u[30] ^= E, u[31] ^= _, u[40] ^= E, u[41] ^= _, E = R ^ (Ct << 1 | T >>> 31), _ = F ^ (T << 1 | Ct >>> 31), u[2] ^= E, u[3] ^= _, u[12] ^= E, u[13] ^= _, u[22] ^= E, u[23] ^= _, u[32] ^= E, u[33] ^= _, u[42] ^= E, u[43] ^= _, E = P ^ (q << 1 | Te >>> 31), _ = O ^ (Te << 1 | q >>> 31), u[4] ^= E, u[5] ^= _, u[14] ^= E, u[15] ^= _, u[24] ^= E, u[25] ^= _, u[34] ^= E, u[35] ^= _, u[44] ^= E, u[45] ^= _, E = Ct ^ (X << 1 | $ >>> 31), _ = T ^ ($ << 1 | X >>> 31), u[6] ^= E, u[7] ^= _, u[16] ^= E, u[17] ^= _, u[26] ^= E, u[27] ^= _, u[36] ^= E, u[37] ^= _, u[46] ^= E, u[47] ^= _, E = q ^ (R << 1 | F >>> 31), _ = Te ^ (F << 1 | R >>> 31), u[8] ^= E, u[9] ^= _, u[18] ^= E, u[19] ^= _, u[28] ^= E, u[29] ^= _, u[38] ^= E, u[39] ^= _, u[48] ^= E, u[49] ^= _, De = u[0], Z = u[1], yt = u[11] << 4 | u[10] >>> 28, Je = u[10] << 4 | u[11] >>> 28, at = u[20] << 3 | u[21] >>> 29, Ke = u[21] << 3 | u[20] >>> 29, Ee = u[31] << 9 | u[30] >>> 23, Se = u[30] << 9 | u[31] >>> 23, mt = u[40] << 18 | u[41] >>> 14, At = u[41] << 18 | u[40] >>> 14, lt = u[2] << 1 | u[3] >>> 31, Le = u[3] << 1 | u[2] >>> 31, tt = u[13] << 12 | u[12] >>> 20, Fe = u[12] << 12 | u[13] >>> 20, wt = u[22] << 10 | u[23] >>> 22, xt = u[23] << 10 | u[22] >>> 22, ut = u[33] << 13 | u[32] >>> 19, ht = u[32] << 13 | u[33] >>> 19, Ie = u[42] << 2 | u[43] >>> 30, Ne = u[43] << 2 | u[42] >>> 30, St = u[5] << 30 | u[4] >>> 2, It = u[4] << 30 | u[5] >>> 2, dt = u[14] << 6 | u[15] >>> 26, pt = u[15] << 6 | u[14] >>> 26, et = u[25] << 11 | u[24] >>> 21, rt = u[24] << 11 | u[25] >>> 21, Ge = u[34] << 15 | u[35] >>> 17, Mt = u[35] << 15 | u[34] >>> 17, He = u[45] << 29 | u[44] >>> 3, ct = u[44] << 29 | u[45] >>> 3, ft = u[6] << 28 | u[7] >>> 4, ot = u[7] << 28 | u[6] >>> 4, Ve = u[17] << 23 | u[16] >>> 9, Nt = u[16] << 23 | u[17] >>> 9, ze = u[26] << 25 | u[27] >>> 7, vt = u[27] << 25 | u[26] >>> 7, Ue = u[36] << 21 | u[37] >>> 11, it = u[37] << 21 | u[36] >>> 11, Et = u[47] << 24 | u[46] >>> 8, Ye = u[46] << 24 | u[47] >>> 8, Qe = u[8] << 27 | u[9] >>> 5, bt = u[9] << 27 | u[8] >>> 5, qe = u[18] << 20 | u[19] >>> 12, st = u[19] << 20 | u[18] >>> 12, _t = u[29] << 7 | u[28] >>> 25, Me = u[28] << 7 | u[29] >>> 25, gt = u[38] << 8 | u[39] >>> 24, je = u[39] << 8 | u[38] >>> 24, nt = u[48] << 14 | u[49] >>> 18, ke = u[49] << 14 | u[48] >>> 18, u[0] = De ^ ~tt & et, u[1] = Z ^ ~Fe & rt, u[10] = ft ^ ~qe & at, u[11] = ot ^ ~st & Ke, u[20] = lt ^ ~dt & ze, u[21] = Le ^ ~pt & vt, u[30] = Qe ^ ~yt & wt, u[31] = bt ^ ~Je & xt, u[40] = St ^ ~Ve & _t, u[41] = It ^ ~Nt & Me, u[2] = tt ^ ~et & Ue, u[3] = Fe ^ ~rt & it, u[12] = qe ^ ~at & ut, u[13] = st ^ ~Ke & ht, u[22] = dt ^ ~ze & gt, u[23] = pt ^ ~vt & je, u[32] = yt ^ ~wt & Ge, u[33] = Je ^ ~xt & Mt, u[42] = Ve ^ ~_t & Ee, u[43] = Nt ^ ~Me & Se, u[4] = et ^ ~Ue & nt, u[5] = rt ^ ~it & ke, u[14] = at ^ ~ut & He, u[15] = Ke ^ ~ht & ct, u[24] = ze ^ ~gt & mt, u[25] = vt ^ ~je & At, u[34] = wt ^ ~Ge & Et, u[35] = xt ^ ~Mt & Ye, u[44] = _t ^ ~Ee & Ie, u[45] = Me ^ ~Se & Ne, u[6] = Ue ^ ~nt & De, u[7] = it ^ ~ke & Z, u[16] = ut ^ ~He & ft, u[17] = ht ^ ~ct & ot, u[26] = gt ^ ~mt & lt, u[27] = je ^ ~At & Le, u[36] = Ge ^ ~Et & Qe, u[37] = Mt ^ ~Ye & bt, u[46] = Ee ^ ~Ie & St, u[47] = Se ^ ~Ne & It, u[8] = nt ^ ~De & tt, u[9] = ke ^ ~Z & Fe, u[18] = He ^ ~ft & qe, u[19] = ct ^ ~ot & st, u[28] = mt ^ ~lt & dt, u[29] = At ^ ~Le & pt, u[38] = Et ^ ~Qe & yt, u[39] = Ye ^ ~bt & Je, u[48] = Ie ^ ~St & Ve, u[49] = Ne ^ ~It & Nt, u[0] ^= C[B], u[1] ^= C[B + 1];\n        };\n        if (p) e.exports = f;\n        else for(c = 0; c < a.length; ++c)n[a[c]] = f[a[c]];\n    })();\n})(Hn);\nvar Cs = Hn.exports;\nconst Rs = \"logger/5.7.0\";\nlet Ln = !1, zn = !1;\nconst Tr = {\n    debug: 1,\n    default: 2,\n    info: 2,\n    warning: 3,\n    error: 4,\n    off: 5\n};\nlet jn = Tr.default, Mi = null;\nfunction Os() {\n    try {\n        const e = [];\n        if ([\n            \"NFD\",\n            \"NFC\",\n            \"NFKD\",\n            \"NFKC\"\n        ].forEach((t)=>{\n            try {\n                if (\"test\".normalize(t) !== \"test\") throw new Error(\"bad normalize\");\n            } catch  {\n                e.push(t);\n            }\n        }), e.length) throw new Error(\"missing \" + e.join(\", \"));\n        if (String.fromCharCode(233).normalize(\"NFD\") !== String.fromCharCode(101, 769)) throw new Error(\"broken implementation\");\n    } catch (e) {\n        return e.message;\n    }\n    return null;\n}\nconst Qn = Os();\nvar Ei;\n(function(e) {\n    e.DEBUG = \"DEBUG\", e.INFO = \"INFO\", e.WARNING = \"WARNING\", e.ERROR = \"ERROR\", e.OFF = \"OFF\";\n})(Ei || (Ei = {}));\nvar re;\n(function(e) {\n    e.UNKNOWN_ERROR = \"UNKNOWN_ERROR\", e.NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\", e.UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\", e.NETWORK_ERROR = \"NETWORK_ERROR\", e.SERVER_ERROR = \"SERVER_ERROR\", e.TIMEOUT = \"TIMEOUT\", e.BUFFER_OVERRUN = \"BUFFER_OVERRUN\", e.NUMERIC_FAULT = \"NUMERIC_FAULT\", e.MISSING_NEW = \"MISSING_NEW\", e.INVALID_ARGUMENT = \"INVALID_ARGUMENT\", e.MISSING_ARGUMENT = \"MISSING_ARGUMENT\", e.UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\", e.CALL_EXCEPTION = \"CALL_EXCEPTION\", e.INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\", e.NONCE_EXPIRED = \"NONCE_EXPIRED\", e.REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\", e.UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\", e.TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\", e.ACTION_REJECTED = \"ACTION_REJECTED\";\n})(re || (re = {}));\nconst Jn = \"0123456789abcdef\";\nclass z {\n    constructor(t){\n        Object.defineProperty(this, \"version\", {\n            enumerable: !0,\n            value: t,\n            writable: !1\n        });\n    }\n    _log(t, r) {\n        const i = t.toLowerCase();\n        Tr[i] == null && this.throwArgumentError(\"invalid log level name\", \"logLevel\", t), !(jn > Tr[i]) && console.log.apply(console, r);\n    }\n    debug(...t) {\n        this._log(z.levels.DEBUG, t);\n    }\n    info(...t) {\n        this._log(z.levels.INFO, t);\n    }\n    warn(...t) {\n        this._log(z.levels.WARNING, t);\n    }\n    makeError(t, r, i) {\n        if (zn) return this.makeError(\"censored error\", r, {});\n        r || (r = z.errors.UNKNOWN_ERROR), i || (i = {});\n        const n = [];\n        Object.keys(i).forEach((A)=>{\n            const v = i[A];\n            try {\n                if (v instanceof Uint8Array) {\n                    let w = \"\";\n                    for(let y = 0; y < v.length; y++)w += Jn[v[y] >> 4], w += Jn[v[y] & 15];\n                    n.push(A + \"=Uint8Array(0x\" + w + \")\");\n                } else n.push(A + \"=\" + JSON.stringify(v));\n            } catch  {\n                n.push(A + \"=\" + JSON.stringify(i[A].toString()));\n            }\n        }), n.push(`code=${r}`), n.push(`version=${this.version}`);\n        const o = t;\n        let h = \"\";\n        switch(r){\n            case re.NUMERIC_FAULT:\n                {\n                    h = \"NUMERIC_FAULT\";\n                    const A = t;\n                    switch(A){\n                        case \"overflow\":\n                        case \"underflow\":\n                        case \"division-by-zero\":\n                            h += \"-\" + A;\n                            break;\n                        case \"negative-power\":\n                        case \"negative-width\":\n                            h += \"-unsupported\";\n                            break;\n                        case \"unbound-bitwise-result\":\n                            h += \"-unbound-result\";\n                            break;\n                    }\n                    break;\n                }\n            case re.CALL_EXCEPTION:\n            case re.INSUFFICIENT_FUNDS:\n            case re.MISSING_NEW:\n            case re.NONCE_EXPIRED:\n            case re.REPLACEMENT_UNDERPRICED:\n            case re.TRANSACTION_REPLACED:\n            case re.UNPREDICTABLE_GAS_LIMIT:\n                h = r;\n                break;\n        }\n        h && (t += \" [ See: https://links.ethers.org/v5-errors-\" + h + \" ]\"), n.length && (t += \" (\" + n.join(\", \") + \")\");\n        const p = new Error(t);\n        return p.reason = o, p.code = r, Object.keys(i).forEach(function(A) {\n            p[A] = i[A];\n        }), p;\n    }\n    throwError(t, r, i) {\n        throw this.makeError(t, r, i);\n    }\n    throwArgumentError(t, r, i) {\n        return this.throwError(t, z.errors.INVALID_ARGUMENT, {\n            argument: r,\n            value: i\n        });\n    }\n    assert(t, r, i, n) {\n        t || this.throwError(r, i, n);\n    }\n    assertArgument(t, r, i, n) {\n        t || this.throwArgumentError(r, i, n);\n    }\n    checkNormalize(t) {\n        Qn && this.throwError(\"platform missing String.prototype.normalize\", z.errors.UNSUPPORTED_OPERATION, {\n            operation: \"String.prototype.normalize\",\n            form: Qn\n        });\n    }\n    checkSafeUint53(t, r) {\n        typeof t == \"number\" && (r == null && (r = \"value not safe\"), (t < 0 || t >= 9007199254740991) && this.throwError(r, z.errors.NUMERIC_FAULT, {\n            operation: \"checkSafeInteger\",\n            fault: \"out-of-safe-range\",\n            value: t\n        }), t % 1 && this.throwError(r, z.errors.NUMERIC_FAULT, {\n            operation: \"checkSafeInteger\",\n            fault: \"non-integer\",\n            value: t\n        }));\n    }\n    checkArgumentCount(t, r, i) {\n        i ? i = \": \" + i : i = \"\", t < r && this.throwError(\"missing argument\" + i, z.errors.MISSING_ARGUMENT, {\n            count: t,\n            expectedCount: r\n        }), t > r && this.throwError(\"too many arguments\" + i, z.errors.UNEXPECTED_ARGUMENT, {\n            count: t,\n            expectedCount: r\n        });\n    }\n    checkNew(t, r) {\n        (t === Object || t == null) && this.throwError(\"missing new\", z.errors.MISSING_NEW, {\n            name: r.name\n        });\n    }\n    checkAbstract(t, r) {\n        t === r ? this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(r.name) + \" directly; use a sub-class\", z.errors.UNSUPPORTED_OPERATION, {\n            name: t.name,\n            operation: \"new\"\n        }) : (t === Object || t == null) && this.throwError(\"missing new\", z.errors.MISSING_NEW, {\n            name: r.name\n        });\n    }\n    static globalLogger() {\n        return Mi || (Mi = new z(Rs)), Mi;\n    }\n    static setCensorship(t, r) {\n        if (!t && r && this.globalLogger().throwError(\"cannot permanently disable censorship\", z.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setCensorship\"\n        }), Ln) {\n            if (!t) return;\n            this.globalLogger().throwError(\"error censorship permanent\", z.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        zn = !!t, Ln = !!r;\n    }\n    static setLogLevel(t) {\n        const r = Tr[t.toLowerCase()];\n        if (r == null) {\n            z.globalLogger().warn(\"invalid log level - \" + t);\n            return;\n        }\n        jn = r;\n    }\n    static from(t) {\n        return new z(t);\n    }\n}\nz.errors = re, z.levels = Ei;\nconst Ps = \"bytes/5.7.0\", Tt = new z(Ps);\nfunction Gn(e) {\n    return !!e.toHexString;\n}\nfunction ir(e) {\n    return e.slice || (e.slice = function() {\n        const t = Array.prototype.slice.call(arguments);\n        return ir(new Uint8Array(Array.prototype.slice.apply(e, t)));\n    }), e;\n}\nfunction Ts(e) {\n    return Jt(e) && !(e.length % 2) || nr(e);\n}\nfunction Yn(e) {\n    return typeof e == \"number\" && e == e && e % 1 === 0;\n}\nfunction nr(e) {\n    if (e == null) return !1;\n    if (e.constructor === Uint8Array) return !0;\n    if (typeof e == \"string\" || !Yn(e.length) || e.length < 0) return !1;\n    for(let t = 0; t < e.length; t++){\n        const r = e[t];\n        if (!Yn(r) || r < 0 || r >= 256) return !1;\n    }\n    return !0;\n}\nfunction Ot(e, t) {\n    if (t || (t = {}), typeof e == \"number\") {\n        Tt.checkSafeUint53(e, \"invalid arrayify value\");\n        const r = [];\n        for(; e;)r.unshift(e & 255), e = parseInt(String(e / 256));\n        return r.length === 0 && r.push(0), ir(new Uint8Array(r));\n    }\n    if (t.allowMissingPrefix && typeof e == \"string\" && e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), Gn(e) && (e = e.toHexString()), Jt(e)) {\n        let r = e.substring(2);\n        r.length % 2 && (t.hexPad === \"left\" ? r = \"0\" + r : t.hexPad === \"right\" ? r += \"0\" : Tt.throwArgumentError(\"hex data is odd-length\", \"value\", e));\n        const i = [];\n        for(let n = 0; n < r.length; n += 2)i.push(parseInt(r.substring(n, n + 2), 16));\n        return ir(new Uint8Array(i));\n    }\n    return nr(e) ? ir(new Uint8Array(e)) : Tt.throwArgumentError(\"invalid arrayify value\", \"value\", e);\n}\nfunction Ds(e) {\n    const t = e.map((n)=>Ot(n)), r = t.reduce((n, o)=>n + o.length, 0), i = new Uint8Array(r);\n    return t.reduce((n, o)=>(i.set(o, n), n + o.length), 0), ir(i);\n}\nfunction Fs(e, t) {\n    e = Ot(e), e.length > t && Tt.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    const r = new Uint8Array(t);\n    return r.set(e, t - e.length), ir(r);\n}\nfunction Jt(e, t) {\n    return !(typeof e != \"string\" || !e.match(/^0x[0-9A-Fa-f]*$/) || t && e.length !== 2 + 2 * t);\n}\nconst Si = \"0123456789abcdef\";\nfunction Kt(e, t) {\n    if (t || (t = {}), typeof e == \"number\") {\n        Tt.checkSafeUint53(e, \"invalid hexlify value\");\n        let r = \"\";\n        for(; e;)r = Si[e & 15] + r, e = Math.floor(e / 16);\n        return r.length ? (r.length % 2 && (r = \"0\" + r), \"0x\" + r) : \"0x00\";\n    }\n    if (typeof e == \"bigint\") return e = e.toString(16), e.length % 2 ? \"0x0\" + e : \"0x\" + e;\n    if (t.allowMissingPrefix && typeof e == \"string\" && e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), Gn(e)) return e.toHexString();\n    if (Jt(e)) return e.length % 2 && (t.hexPad === \"left\" ? e = \"0x0\" + e.substring(2) : t.hexPad === \"right\" ? e += \"0\" : Tt.throwArgumentError(\"hex data is odd-length\", \"value\", e)), e.toLowerCase();\n    if (nr(e)) {\n        let r = \"0x\";\n        for(let i = 0; i < e.length; i++){\n            let n = e[i];\n            r += Si[(n & 240) >> 4] + Si[n & 15];\n        }\n        return r;\n    }\n    return Tt.throwArgumentError(\"invalid hexlify value\", \"value\", e);\n}\nfunction Us(e) {\n    if (typeof e != \"string\") e = Kt(e);\n    else if (!Jt(e) || e.length % 2) return null;\n    return (e.length - 2) / 2;\n}\nfunction Vn(e, t, r) {\n    return typeof e != \"string\" ? e = Kt(e) : (!Jt(e) || e.length % 2) && Tt.throwArgumentError(\"invalid hexData\", \"value\", e), t = 2 + 2 * t, r != null ? \"0x\" + e.substring(t, 2 + 2 * r) : \"0x\" + e.substring(t);\n}\nfunction oe(e, t) {\n    for(typeof e != \"string\" ? e = Kt(e) : Jt(e) || Tt.throwArgumentError(\"invalid hex string\", \"value\", e), e.length > 2 * t + 2 && Tt.throwArgumentError(\"value out of range\", \"value\", arguments[1]); e.length < 2 * t + 2;)e = \"0x0\" + e.substring(2);\n    return e;\n}\nfunction Wn(e) {\n    const t = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (Ts(e)) {\n        let r = Ot(e);\n        r.length === 64 ? (t.v = 27 + (r[32] >> 7), r[32] &= 127, t.r = Kt(r.slice(0, 32)), t.s = Kt(r.slice(32, 64))) : r.length === 65 ? (t.r = Kt(r.slice(0, 32)), t.s = Kt(r.slice(32, 64)), t.v = r[64]) : Tt.throwArgumentError(\"invalid signature string\", \"signature\", e), t.v < 27 && (t.v === 0 || t.v === 1 ? t.v += 27 : Tt.throwArgumentError(\"signature invalid v byte\", \"signature\", e)), t.recoveryParam = 1 - t.v % 2, t.recoveryParam && (r[32] |= 128), t._vs = Kt(r.slice(32, 64));\n    } else {\n        if (t.r = e.r, t.s = e.s, t.v = e.v, t.recoveryParam = e.recoveryParam, t._vs = e._vs, t._vs != null) {\n            const n = Fs(Ot(t._vs), 32);\n            t._vs = Kt(n);\n            const o = n[0] >= 128 ? 1 : 0;\n            t.recoveryParam == null ? t.recoveryParam = o : t.recoveryParam !== o && Tt.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", e), n[0] &= 127;\n            const h = Kt(n);\n            t.s == null ? t.s = h : t.s !== h && Tt.throwArgumentError(\"signature v mismatch _vs\", \"signature\", e);\n        }\n        if (t.recoveryParam == null) t.v == null ? Tt.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", e) : t.v === 0 || t.v === 1 ? t.recoveryParam = t.v : t.recoveryParam = 1 - t.v % 2;\n        else if (t.v == null) t.v = 27 + t.recoveryParam;\n        else {\n            const n = t.v === 0 || t.v === 1 ? t.v : 1 - t.v % 2;\n            t.recoveryParam !== n && Tt.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", e);\n        }\n        t.r == null || !Jt(t.r) ? Tt.throwArgumentError(\"signature missing or invalid r\", \"signature\", e) : t.r = oe(t.r, 32), t.s == null || !Jt(t.s) ? Tt.throwArgumentError(\"signature missing or invalid s\", \"signature\", e) : t.s = oe(t.s, 32);\n        const r = Ot(t.s);\n        r[0] >= 128 && Tt.throwArgumentError(\"signature s out of range\", \"signature\", e), t.recoveryParam && (r[0] |= 128);\n        const i = Kt(r);\n        t._vs && (Jt(t._vs) || Tt.throwArgumentError(\"signature invalid _vs\", \"signature\", e), t._vs = oe(t._vs, 32)), t._vs == null ? t._vs = i : t._vs !== i && Tt.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", e);\n    }\n    return t.yParityAndS = t._vs, t.compact = t.r + t.yParityAndS.substring(2), t;\n}\nfunction Ii(e) {\n    return \"0x\" + Cs.keccak_256(Ot(e));\n}\nvar Xn = {\n    exports: {}\n}, ks = {}, qs = Object.freeze({\n    __proto__: null,\n    default: ks\n}), Ks = Bs(qs);\n(function(e) {\n    (function(t, r) {\n        function i(b, f) {\n            if (!b) throw new Error(f || \"Assertion failed\");\n        }\n        function n(b, f) {\n            b.super_ = f;\n            var a = function() {};\n            a.prototype = f.prototype, b.prototype = new a, b.prototype.constructor = b;\n        }\n        function o(b, f, a) {\n            if (o.isBN(b)) return b;\n            this.negative = 0, this.words = null, this.length = 0, this.red = null, b !== null && ((f === \"le\" || f === \"be\") && (a = f, f = 10), this._init(b || 0, f || 10, a || \"be\"));\n        }\n        typeof t == \"object\" ? t.exports = o : r.BN = o, o.BN = o, o.wordSize = 26;\n        var h;\n        try {\n             false ? 0 : h = Ks.Buffer;\n        } catch  {}\n        o.isBN = function(f) {\n            return f instanceof o ? !0 : f !== null && typeof f == \"object\" && f.constructor.wordSize === o.wordSize && Array.isArray(f.words);\n        }, o.max = function(f, a) {\n            return f.cmp(a) > 0 ? f : a;\n        }, o.min = function(f, a) {\n            return f.cmp(a) < 0 ? f : a;\n        }, o.prototype._init = function(f, a, c) {\n            if (typeof f == \"number\") return this._initNumber(f, a, c);\n            if (typeof f == \"object\") return this._initArray(f, a, c);\n            a === \"hex\" && (a = 16), i(a === (a | 0) && a >= 2 && a <= 36), f = f.toString().replace(/\\s+/g, \"\");\n            var d = 0;\n            f[0] === \"-\" && (d++, this.negative = 1), d < f.length && (a === 16 ? this._parseHex(f, d, c) : (this._parseBase(f, a, d), c === \"le\" && this._initArray(this.toArray(), a, c)));\n        }, o.prototype._initNumber = function(f, a, c) {\n            f < 0 && (this.negative = 1, f = -f), f < 67108864 ? (this.words = [\n                f & 67108863\n            ], this.length = 1) : f < 4503599627370496 ? (this.words = [\n                f & 67108863,\n                f / 67108864 & 67108863\n            ], this.length = 2) : (i(f < 9007199254740992), this.words = [\n                f & 67108863,\n                f / 67108864 & 67108863,\n                1\n            ], this.length = 3), c === \"le\" && this._initArray(this.toArray(), a, c);\n        }, o.prototype._initArray = function(f, a, c) {\n            if (i(typeof f.length == \"number\"), f.length <= 0) return this.words = [\n                0\n            ], this.length = 1, this;\n            this.length = Math.ceil(f.length / 3), this.words = new Array(this.length);\n            for(var d = 0; d < this.length; d++)this.words[d] = 0;\n            var m, x, M = 0;\n            if (c === \"be\") for(d = f.length - 1, m = 0; d >= 0; d -= 3)x = f[d] | f[d - 1] << 8 | f[d - 2] << 16, this.words[m] |= x << M & 67108863, this.words[m + 1] = x >>> 26 - M & 67108863, M += 24, M >= 26 && (M -= 26, m++);\n            else if (c === \"le\") for(d = 0, m = 0; d < f.length; d += 3)x = f[d] | f[d + 1] << 8 | f[d + 2] << 16, this.words[m] |= x << M & 67108863, this.words[m + 1] = x >>> 26 - M & 67108863, M += 24, M >= 26 && (M -= 26, m++);\n            return this._strip();\n        };\n        function p(b, f) {\n            var a = b.charCodeAt(f);\n            if (a >= 48 && a <= 57) return a - 48;\n            if (a >= 65 && a <= 70) return a - 55;\n            if (a >= 97 && a <= 102) return a - 87;\n            i(!1, \"Invalid character in \" + b);\n        }\n        function A(b, f, a) {\n            var c = p(b, a);\n            return a - 1 >= f && (c |= p(b, a - 1) << 4), c;\n        }\n        o.prototype._parseHex = function(f, a, c) {\n            this.length = Math.ceil((f.length - a) / 6), this.words = new Array(this.length);\n            for(var d = 0; d < this.length; d++)this.words[d] = 0;\n            var m = 0, x = 0, M;\n            if (c === \"be\") for(d = f.length - 1; d >= a; d -= 2)M = A(f, a, d) << m, this.words[x] |= M & 67108863, m >= 18 ? (m -= 18, x += 1, this.words[x] |= M >>> 26) : m += 8;\n            else {\n                var l = f.length - a;\n                for(d = l % 2 === 0 ? a + 1 : a; d < f.length; d += 2)M = A(f, a, d) << m, this.words[x] |= M & 67108863, m >= 18 ? (m -= 18, x += 1, this.words[x] |= M >>> 26) : m += 8;\n            }\n            this._strip();\n        };\n        function v(b, f, a, c) {\n            for(var d = 0, m = 0, x = Math.min(b.length, a), M = f; M < x; M++){\n                var l = b.charCodeAt(M) - 48;\n                d *= c, l >= 49 ? m = l - 49 + 10 : l >= 17 ? m = l - 17 + 10 : m = l, i(l >= 0 && m < c, \"Invalid character\"), d += m;\n            }\n            return d;\n        }\n        o.prototype._parseBase = function(f, a, c) {\n            this.words = [\n                0\n            ], this.length = 1;\n            for(var d = 0, m = 1; m <= 67108863; m *= a)d++;\n            d--, m = m / a | 0;\n            for(var x = f.length - c, M = x % d, l = Math.min(x, x - M) + c, s = 0, g = c; g < l; g += d)s = v(f, g, g + d, a), this.imuln(m), this.words[0] + s < 67108864 ? this.words[0] += s : this._iaddn(s);\n            if (M !== 0) {\n                var k = 1;\n                for(s = v(f, g, f.length, a), g = 0; g < M; g++)k *= a;\n                this.imuln(k), this.words[0] + s < 67108864 ? this.words[0] += s : this._iaddn(s);\n            }\n            this._strip();\n        }, o.prototype.copy = function(f) {\n            f.words = new Array(this.length);\n            for(var a = 0; a < this.length; a++)f.words[a] = this.words[a];\n            f.length = this.length, f.negative = this.negative, f.red = this.red;\n        };\n        function w(b, f) {\n            b.words = f.words, b.length = f.length, b.negative = f.negative, b.red = f.red;\n        }\n        if (o.prototype._move = function(f) {\n            w(f, this);\n        }, o.prototype.clone = function() {\n            var f = new o(null);\n            return this.copy(f), f;\n        }, o.prototype._expand = function(f) {\n            for(; this.length < f;)this.words[this.length++] = 0;\n            return this;\n        }, o.prototype._strip = function() {\n            for(; this.length > 1 && this.words[this.length - 1] === 0;)this.length--;\n            return this._normSign();\n        }, o.prototype._normSign = function() {\n            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;\n        }, typeof Symbol < \"u\" && typeof Symbol.for == \"function\") try {\n            o.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = y;\n        } catch  {\n            o.prototype.inspect = y;\n        }\n        else o.prototype.inspect = y;\n        function y() {\n            return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n        }\n        var S = [\n            \"\",\n            \"0\",\n            \"00\",\n            \"000\",\n            \"0000\",\n            \"00000\",\n            \"000000\",\n            \"0000000\",\n            \"00000000\",\n            \"000000000\",\n            \"0000000000\",\n            \"00000000000\",\n            \"000000000000\",\n            \"0000000000000\",\n            \"00000000000000\",\n            \"000000000000000\",\n            \"0000000000000000\",\n            \"00000000000000000\",\n            \"000000000000000000\",\n            \"0000000000000000000\",\n            \"00000000000000000000\",\n            \"000000000000000000000\",\n            \"0000000000000000000000\",\n            \"00000000000000000000000\",\n            \"000000000000000000000000\",\n            \"0000000000000000000000000\"\n        ], N = [\n            0,\n            0,\n            25,\n            16,\n            12,\n            11,\n            10,\n            9,\n            8,\n            8,\n            7,\n            7,\n            7,\n            7,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5\n        ], I = [\n            0,\n            0,\n            33554432,\n            43046721,\n            16777216,\n            48828125,\n            60466176,\n            40353607,\n            16777216,\n            43046721,\n            1e7,\n            19487171,\n            35831808,\n            62748517,\n            7529536,\n            11390625,\n            16777216,\n            24137569,\n            34012224,\n            47045881,\n            64e6,\n            4084101,\n            5153632,\n            6436343,\n            7962624,\n            9765625,\n            11881376,\n            14348907,\n            17210368,\n            20511149,\n            243e5,\n            28629151,\n            33554432,\n            39135393,\n            45435424,\n            52521875,\n            60466176\n        ];\n        o.prototype.toString = function(f, a) {\n            f = f || 10, a = a | 0 || 1;\n            var c;\n            if (f === 16 || f === \"hex\") {\n                c = \"\";\n                for(var d = 0, m = 0, x = 0; x < this.length; x++){\n                    var M = this.words[x], l = ((M << d | m) & 16777215).toString(16);\n                    m = M >>> 24 - d & 16777215, d += 2, d >= 26 && (d -= 26, x--), m !== 0 || x !== this.length - 1 ? c = S[6 - l.length] + l + c : c = l + c;\n                }\n                for(m !== 0 && (c = m.toString(16) + c); c.length % a !== 0;)c = \"0\" + c;\n                return this.negative !== 0 && (c = \"-\" + c), c;\n            }\n            if (f === (f | 0) && f >= 2 && f <= 36) {\n                var s = N[f], g = I[f];\n                c = \"\";\n                var k = this.clone();\n                for(k.negative = 0; !k.isZero();){\n                    var u = k.modrn(g).toString(f);\n                    k = k.idivn(g), k.isZero() ? c = u + c : c = S[s - u.length] + u + c;\n                }\n                for(this.isZero() && (c = \"0\" + c); c.length % a !== 0;)c = \"0\" + c;\n                return this.negative !== 0 && (c = \"-\" + c), c;\n            }\n            i(!1, \"Base should be between 2 and 36\");\n        }, o.prototype.toNumber = function() {\n            var f = this.words[0];\n            return this.length === 2 ? f += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? f += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && i(!1, \"Number can only safely store up to 53 bits\"), this.negative !== 0 ? -f : f;\n        }, o.prototype.toJSON = function() {\n            return this.toString(16, 2);\n        }, h && (o.prototype.toBuffer = function(f, a) {\n            return this.toArrayLike(h, f, a);\n        }), o.prototype.toArray = function(f, a) {\n            return this.toArrayLike(Array, f, a);\n        };\n        var C = function(f, a) {\n            return f.allocUnsafe ? f.allocUnsafe(a) : new f(a);\n        };\n        o.prototype.toArrayLike = function(f, a, c) {\n            this._strip();\n            var d = this.byteLength(), m = c || Math.max(1, d);\n            i(d <= m, \"byte array longer than desired length\"), i(m > 0, \"Requested array length <= 0\");\n            var x = C(f, m), M = a === \"le\" ? \"LE\" : \"BE\";\n            return this[\"_toArrayLike\" + M](x, d), x;\n        }, o.prototype._toArrayLikeLE = function(f, a) {\n            for(var c = 0, d = 0, m = 0, x = 0; m < this.length; m++){\n                var M = this.words[m] << x | d;\n                f[c++] = M & 255, c < f.length && (f[c++] = M >> 8 & 255), c < f.length && (f[c++] = M >> 16 & 255), x === 6 ? (c < f.length && (f[c++] = M >> 24 & 255), d = 0, x = 0) : (d = M >>> 24, x += 2);\n            }\n            if (c < f.length) for(f[c++] = d; c < f.length;)f[c++] = 0;\n        }, o.prototype._toArrayLikeBE = function(f, a) {\n            for(var c = f.length - 1, d = 0, m = 0, x = 0; m < this.length; m++){\n                var M = this.words[m] << x | d;\n                f[c--] = M & 255, c >= 0 && (f[c--] = M >> 8 & 255), c >= 0 && (f[c--] = M >> 16 & 255), x === 6 ? (c >= 0 && (f[c--] = M >> 24 & 255), d = 0, x = 0) : (d = M >>> 24, x += 2);\n            }\n            if (c >= 0) for(f[c--] = d; c >= 0;)f[c--] = 0;\n        }, Math.clz32 ? o.prototype._countBits = function(f) {\n            return 32 - Math.clz32(f);\n        } : o.prototype._countBits = function(f) {\n            var a = f, c = 0;\n            return a >= 4096 && (c += 13, a >>>= 13), a >= 64 && (c += 7, a >>>= 7), a >= 8 && (c += 4, a >>>= 4), a >= 2 && (c += 2, a >>>= 2), c + a;\n        }, o.prototype._zeroBits = function(f) {\n            if (f === 0) return 26;\n            var a = f, c = 0;\n            return a & 8191 || (c += 13, a >>>= 13), a & 127 || (c += 7, a >>>= 7), a & 15 || (c += 4, a >>>= 4), a & 3 || (c += 2, a >>>= 2), a & 1 || c++, c;\n        }, o.prototype.bitLength = function() {\n            var f = this.words[this.length - 1], a = this._countBits(f);\n            return (this.length - 1) * 26 + a;\n        };\n        function D(b) {\n            for(var f = new Array(b.bitLength()), a = 0; a < f.length; a++){\n                var c = a / 26 | 0, d = a % 26;\n                f[a] = b.words[c] >>> d & 1;\n            }\n            return f;\n        }\n        o.prototype.zeroBits = function() {\n            if (this.isZero()) return 0;\n            for(var f = 0, a = 0; a < this.length; a++){\n                var c = this._zeroBits(this.words[a]);\n                if (f += c, c !== 26) break;\n            }\n            return f;\n        }, o.prototype.byteLength = function() {\n            return Math.ceil(this.bitLength() / 8);\n        }, o.prototype.toTwos = function(f) {\n            return this.negative !== 0 ? this.abs().inotn(f).iaddn(1) : this.clone();\n        }, o.prototype.fromTwos = function(f) {\n            return this.testn(f - 1) ? this.notn(f).iaddn(1).ineg() : this.clone();\n        }, o.prototype.isNeg = function() {\n            return this.negative !== 0;\n        }, o.prototype.neg = function() {\n            return this.clone().ineg();\n        }, o.prototype.ineg = function() {\n            return this.isZero() || (this.negative ^= 1), this;\n        }, o.prototype.iuor = function(f) {\n            for(; this.length < f.length;)this.words[this.length++] = 0;\n            for(var a = 0; a < f.length; a++)this.words[a] = this.words[a] | f.words[a];\n            return this._strip();\n        }, o.prototype.ior = function(f) {\n            return i((this.negative | f.negative) === 0), this.iuor(f);\n        }, o.prototype.or = function(f) {\n            return this.length > f.length ? this.clone().ior(f) : f.clone().ior(this);\n        }, o.prototype.uor = function(f) {\n            return this.length > f.length ? this.clone().iuor(f) : f.clone().iuor(this);\n        }, o.prototype.iuand = function(f) {\n            var a;\n            this.length > f.length ? a = f : a = this;\n            for(var c = 0; c < a.length; c++)this.words[c] = this.words[c] & f.words[c];\n            return this.length = a.length, this._strip();\n        }, o.prototype.iand = function(f) {\n            return i((this.negative | f.negative) === 0), this.iuand(f);\n        }, o.prototype.and = function(f) {\n            return this.length > f.length ? this.clone().iand(f) : f.clone().iand(this);\n        }, o.prototype.uand = function(f) {\n            return this.length > f.length ? this.clone().iuand(f) : f.clone().iuand(this);\n        }, o.prototype.iuxor = function(f) {\n            var a, c;\n            this.length > f.length ? (a = this, c = f) : (a = f, c = this);\n            for(var d = 0; d < c.length; d++)this.words[d] = a.words[d] ^ c.words[d];\n            if (this !== a) for(; d < a.length; d++)this.words[d] = a.words[d];\n            return this.length = a.length, this._strip();\n        }, o.prototype.ixor = function(f) {\n            return i((this.negative | f.negative) === 0), this.iuxor(f);\n        }, o.prototype.xor = function(f) {\n            return this.length > f.length ? this.clone().ixor(f) : f.clone().ixor(this);\n        }, o.prototype.uxor = function(f) {\n            return this.length > f.length ? this.clone().iuxor(f) : f.clone().iuxor(this);\n        }, o.prototype.inotn = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = Math.ceil(f / 26) | 0, c = f % 26;\n            this._expand(a), c > 0 && a--;\n            for(var d = 0; d < a; d++)this.words[d] = ~this.words[d] & 67108863;\n            return c > 0 && (this.words[d] = ~this.words[d] & 67108863 >> 26 - c), this._strip();\n        }, o.prototype.notn = function(f) {\n            return this.clone().inotn(f);\n        }, o.prototype.setn = function(f, a) {\n            i(typeof f == \"number\" && f >= 0);\n            var c = f / 26 | 0, d = f % 26;\n            return this._expand(c + 1), a ? this.words[c] = this.words[c] | 1 << d : this.words[c] = this.words[c] & ~(1 << d), this._strip();\n        }, o.prototype.iadd = function(f) {\n            var a;\n            if (this.negative !== 0 && f.negative === 0) return this.negative = 0, a = this.isub(f), this.negative ^= 1, this._normSign();\n            if (this.negative === 0 && f.negative !== 0) return f.negative = 0, a = this.isub(f), f.negative = 1, a._normSign();\n            var c, d;\n            this.length > f.length ? (c = this, d = f) : (c = f, d = this);\n            for(var m = 0, x = 0; x < d.length; x++)a = (c.words[x] | 0) + (d.words[x] | 0) + m, this.words[x] = a & 67108863, m = a >>> 26;\n            for(; m !== 0 && x < c.length; x++)a = (c.words[x] | 0) + m, this.words[x] = a & 67108863, m = a >>> 26;\n            if (this.length = c.length, m !== 0) this.words[this.length] = m, this.length++;\n            else if (c !== this) for(; x < c.length; x++)this.words[x] = c.words[x];\n            return this;\n        }, o.prototype.add = function(f) {\n            var a;\n            return f.negative !== 0 && this.negative === 0 ? (f.negative = 0, a = this.sub(f), f.negative ^= 1, a) : f.negative === 0 && this.negative !== 0 ? (this.negative = 0, a = f.sub(this), this.negative = 1, a) : this.length > f.length ? this.clone().iadd(f) : f.clone().iadd(this);\n        }, o.prototype.isub = function(f) {\n            if (f.negative !== 0) {\n                f.negative = 0;\n                var a = this.iadd(f);\n                return f.negative = 1, a._normSign();\n            } else if (this.negative !== 0) return this.negative = 0, this.iadd(f), this.negative = 1, this._normSign();\n            var c = this.cmp(f);\n            if (c === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;\n            var d, m;\n            c > 0 ? (d = this, m = f) : (d = f, m = this);\n            for(var x = 0, M = 0; M < m.length; M++)a = (d.words[M] | 0) - (m.words[M] | 0) + x, x = a >> 26, this.words[M] = a & 67108863;\n            for(; x !== 0 && M < d.length; M++)a = (d.words[M] | 0) + x, x = a >> 26, this.words[M] = a & 67108863;\n            if (x === 0 && M < d.length && d !== this) for(; M < d.length; M++)this.words[M] = d.words[M];\n            return this.length = Math.max(this.length, M), d !== this && (this.negative = 1), this._strip();\n        }, o.prototype.sub = function(f) {\n            return this.clone().isub(f);\n        };\n        function U(b, f, a) {\n            a.negative = f.negative ^ b.negative;\n            var c = b.length + f.length | 0;\n            a.length = c, c = c - 1 | 0;\n            var d = b.words[0] | 0, m = f.words[0] | 0, x = d * m, M = x & 67108863, l = x / 67108864 | 0;\n            a.words[0] = M;\n            for(var s = 1; s < c; s++){\n                for(var g = l >>> 26, k = l & 67108863, u = Math.min(s, f.length - 1), E = Math.max(0, s - b.length + 1); E <= u; E++){\n                    var _ = s - E | 0;\n                    d = b.words[_] | 0, m = f.words[E] | 0, x = d * m + k, g += x / 67108864 | 0, k = x & 67108863;\n                }\n                a.words[s] = k | 0, l = g | 0;\n            }\n            return l !== 0 ? a.words[s] = l | 0 : a.length--, a._strip();\n        }\n        var J = function(f, a, c) {\n            var d = f.words, m = a.words, x = c.words, M = 0, l, s, g, k = d[0] | 0, u = k & 8191, E = k >>> 13, _ = d[1] | 0, B = _ & 8191, R = _ >>> 13, F = d[2] | 0, P = F & 8191, O = F >>> 13, Ct = d[3] | 0, T = Ct & 8191, q = Ct >>> 13, Te = d[4] | 0, X = Te & 8191, $ = Te >>> 13, De = d[5] | 0, Z = De & 8191, tt = De >>> 13, Fe = d[6] | 0, et = Fe & 8191, rt = Fe >>> 13, Ue = d[7] | 0, it = Ue & 8191, nt = Ue >>> 13, ke = d[8] | 0, ft = ke & 8191, ot = ke >>> 13, qe = d[9] | 0, st = qe & 8191, at = qe >>> 13, Ke = m[0] | 0, ut = Ke & 8191, ht = Ke >>> 13, He = m[1] | 0, ct = He & 8191, lt = He >>> 13, Le = m[2] | 0, dt = Le & 8191, pt = Le >>> 13, ze = m[3] | 0, vt = ze & 8191, gt = ze >>> 13, je = m[4] | 0, mt = je & 8191, At = je >>> 13, Qe = m[5] | 0, bt = Qe & 8191, yt = Qe >>> 13, Je = m[6] | 0, wt = Je & 8191, xt = Je >>> 13, Ge = m[7] | 0, Mt = Ge & 8191, Et = Ge >>> 13, Ye = m[8] | 0, St = Ye & 8191, It = Ye >>> 13, Ve = m[9] | 0, Nt = Ve & 8191, _t = Ve >>> 13;\n            c.negative = f.negative ^ a.negative, c.length = 19, l = Math.imul(u, ut), s = Math.imul(u, ht), s = s + Math.imul(E, ut) | 0, g = Math.imul(E, ht);\n            var Me = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, l = Math.imul(B, ut), s = Math.imul(B, ht), s = s + Math.imul(R, ut) | 0, g = Math.imul(R, ht), l = l + Math.imul(u, ct) | 0, s = s + Math.imul(u, lt) | 0, s = s + Math.imul(E, ct) | 0, g = g + Math.imul(E, lt) | 0;\n            var Ee = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, l = Math.imul(P, ut), s = Math.imul(P, ht), s = s + Math.imul(O, ut) | 0, g = Math.imul(O, ht), l = l + Math.imul(B, ct) | 0, s = s + Math.imul(B, lt) | 0, s = s + Math.imul(R, ct) | 0, g = g + Math.imul(R, lt) | 0, l = l + Math.imul(u, dt) | 0, s = s + Math.imul(u, pt) | 0, s = s + Math.imul(E, dt) | 0, g = g + Math.imul(E, pt) | 0;\n            var Se = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, l = Math.imul(T, ut), s = Math.imul(T, ht), s = s + Math.imul(q, ut) | 0, g = Math.imul(q, ht), l = l + Math.imul(P, ct) | 0, s = s + Math.imul(P, lt) | 0, s = s + Math.imul(O, ct) | 0, g = g + Math.imul(O, lt) | 0, l = l + Math.imul(B, dt) | 0, s = s + Math.imul(B, pt) | 0, s = s + Math.imul(R, dt) | 0, g = g + Math.imul(R, pt) | 0, l = l + Math.imul(u, vt) | 0, s = s + Math.imul(u, gt) | 0, s = s + Math.imul(E, vt) | 0, g = g + Math.imul(E, gt) | 0;\n            var Ie = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, l = Math.imul(X, ut), s = Math.imul(X, ht), s = s + Math.imul($, ut) | 0, g = Math.imul($, ht), l = l + Math.imul(T, ct) | 0, s = s + Math.imul(T, lt) | 0, s = s + Math.imul(q, ct) | 0, g = g + Math.imul(q, lt) | 0, l = l + Math.imul(P, dt) | 0, s = s + Math.imul(P, pt) | 0, s = s + Math.imul(O, dt) | 0, g = g + Math.imul(O, pt) | 0, l = l + Math.imul(B, vt) | 0, s = s + Math.imul(B, gt) | 0, s = s + Math.imul(R, vt) | 0, g = g + Math.imul(R, gt) | 0, l = l + Math.imul(u, mt) | 0, s = s + Math.imul(u, At) | 0, s = s + Math.imul(E, mt) | 0, g = g + Math.imul(E, At) | 0;\n            var Ne = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Ne >>> 26) | 0, Ne &= 67108863, l = Math.imul(Z, ut), s = Math.imul(Z, ht), s = s + Math.imul(tt, ut) | 0, g = Math.imul(tt, ht), l = l + Math.imul(X, ct) | 0, s = s + Math.imul(X, lt) | 0, s = s + Math.imul($, ct) | 0, g = g + Math.imul($, lt) | 0, l = l + Math.imul(T, dt) | 0, s = s + Math.imul(T, pt) | 0, s = s + Math.imul(q, dt) | 0, g = g + Math.imul(q, pt) | 0, l = l + Math.imul(P, vt) | 0, s = s + Math.imul(P, gt) | 0, s = s + Math.imul(O, vt) | 0, g = g + Math.imul(O, gt) | 0, l = l + Math.imul(B, mt) | 0, s = s + Math.imul(B, At) | 0, s = s + Math.imul(R, mt) | 0, g = g + Math.imul(R, At) | 0, l = l + Math.imul(u, bt) | 0, s = s + Math.imul(u, yt) | 0, s = s + Math.imul(E, bt) | 0, g = g + Math.imul(E, yt) | 0;\n            var Zr = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, l = Math.imul(et, ut), s = Math.imul(et, ht), s = s + Math.imul(rt, ut) | 0, g = Math.imul(rt, ht), l = l + Math.imul(Z, ct) | 0, s = s + Math.imul(Z, lt) | 0, s = s + Math.imul(tt, ct) | 0, g = g + Math.imul(tt, lt) | 0, l = l + Math.imul(X, dt) | 0, s = s + Math.imul(X, pt) | 0, s = s + Math.imul($, dt) | 0, g = g + Math.imul($, pt) | 0, l = l + Math.imul(T, vt) | 0, s = s + Math.imul(T, gt) | 0, s = s + Math.imul(q, vt) | 0, g = g + Math.imul(q, gt) | 0, l = l + Math.imul(P, mt) | 0, s = s + Math.imul(P, At) | 0, s = s + Math.imul(O, mt) | 0, g = g + Math.imul(O, At) | 0, l = l + Math.imul(B, bt) | 0, s = s + Math.imul(B, yt) | 0, s = s + Math.imul(R, bt) | 0, g = g + Math.imul(R, yt) | 0, l = l + Math.imul(u, wt) | 0, s = s + Math.imul(u, xt) | 0, s = s + Math.imul(E, wt) | 0, g = g + Math.imul(E, xt) | 0;\n            var ti = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ti >>> 26) | 0, ti &= 67108863, l = Math.imul(it, ut), s = Math.imul(it, ht), s = s + Math.imul(nt, ut) | 0, g = Math.imul(nt, ht), l = l + Math.imul(et, ct) | 0, s = s + Math.imul(et, lt) | 0, s = s + Math.imul(rt, ct) | 0, g = g + Math.imul(rt, lt) | 0, l = l + Math.imul(Z, dt) | 0, s = s + Math.imul(Z, pt) | 0, s = s + Math.imul(tt, dt) | 0, g = g + Math.imul(tt, pt) | 0, l = l + Math.imul(X, vt) | 0, s = s + Math.imul(X, gt) | 0, s = s + Math.imul($, vt) | 0, g = g + Math.imul($, gt) | 0, l = l + Math.imul(T, mt) | 0, s = s + Math.imul(T, At) | 0, s = s + Math.imul(q, mt) | 0, g = g + Math.imul(q, At) | 0, l = l + Math.imul(P, bt) | 0, s = s + Math.imul(P, yt) | 0, s = s + Math.imul(O, bt) | 0, g = g + Math.imul(O, yt) | 0, l = l + Math.imul(B, wt) | 0, s = s + Math.imul(B, xt) | 0, s = s + Math.imul(R, wt) | 0, g = g + Math.imul(R, xt) | 0, l = l + Math.imul(u, Mt) | 0, s = s + Math.imul(u, Et) | 0, s = s + Math.imul(E, Mt) | 0, g = g + Math.imul(E, Et) | 0;\n            var ei = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ei >>> 26) | 0, ei &= 67108863, l = Math.imul(ft, ut), s = Math.imul(ft, ht), s = s + Math.imul(ot, ut) | 0, g = Math.imul(ot, ht), l = l + Math.imul(it, ct) | 0, s = s + Math.imul(it, lt) | 0, s = s + Math.imul(nt, ct) | 0, g = g + Math.imul(nt, lt) | 0, l = l + Math.imul(et, dt) | 0, s = s + Math.imul(et, pt) | 0, s = s + Math.imul(rt, dt) | 0, g = g + Math.imul(rt, pt) | 0, l = l + Math.imul(Z, vt) | 0, s = s + Math.imul(Z, gt) | 0, s = s + Math.imul(tt, vt) | 0, g = g + Math.imul(tt, gt) | 0, l = l + Math.imul(X, mt) | 0, s = s + Math.imul(X, At) | 0, s = s + Math.imul($, mt) | 0, g = g + Math.imul($, At) | 0, l = l + Math.imul(T, bt) | 0, s = s + Math.imul(T, yt) | 0, s = s + Math.imul(q, bt) | 0, g = g + Math.imul(q, yt) | 0, l = l + Math.imul(P, wt) | 0, s = s + Math.imul(P, xt) | 0, s = s + Math.imul(O, wt) | 0, g = g + Math.imul(O, xt) | 0, l = l + Math.imul(B, Mt) | 0, s = s + Math.imul(B, Et) | 0, s = s + Math.imul(R, Mt) | 0, g = g + Math.imul(R, Et) | 0, l = l + Math.imul(u, St) | 0, s = s + Math.imul(u, It) | 0, s = s + Math.imul(E, St) | 0, g = g + Math.imul(E, It) | 0;\n            var ri = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ri >>> 26) | 0, ri &= 67108863, l = Math.imul(st, ut), s = Math.imul(st, ht), s = s + Math.imul(at, ut) | 0, g = Math.imul(at, ht), l = l + Math.imul(ft, ct) | 0, s = s + Math.imul(ft, lt) | 0, s = s + Math.imul(ot, ct) | 0, g = g + Math.imul(ot, lt) | 0, l = l + Math.imul(it, dt) | 0, s = s + Math.imul(it, pt) | 0, s = s + Math.imul(nt, dt) | 0, g = g + Math.imul(nt, pt) | 0, l = l + Math.imul(et, vt) | 0, s = s + Math.imul(et, gt) | 0, s = s + Math.imul(rt, vt) | 0, g = g + Math.imul(rt, gt) | 0, l = l + Math.imul(Z, mt) | 0, s = s + Math.imul(Z, At) | 0, s = s + Math.imul(tt, mt) | 0, g = g + Math.imul(tt, At) | 0, l = l + Math.imul(X, bt) | 0, s = s + Math.imul(X, yt) | 0, s = s + Math.imul($, bt) | 0, g = g + Math.imul($, yt) | 0, l = l + Math.imul(T, wt) | 0, s = s + Math.imul(T, xt) | 0, s = s + Math.imul(q, wt) | 0, g = g + Math.imul(q, xt) | 0, l = l + Math.imul(P, Mt) | 0, s = s + Math.imul(P, Et) | 0, s = s + Math.imul(O, Mt) | 0, g = g + Math.imul(O, Et) | 0, l = l + Math.imul(B, St) | 0, s = s + Math.imul(B, It) | 0, s = s + Math.imul(R, St) | 0, g = g + Math.imul(R, It) | 0, l = l + Math.imul(u, Nt) | 0, s = s + Math.imul(u, _t) | 0, s = s + Math.imul(E, Nt) | 0, g = g + Math.imul(E, _t) | 0;\n            var ii = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ii >>> 26) | 0, ii &= 67108863, l = Math.imul(st, ct), s = Math.imul(st, lt), s = s + Math.imul(at, ct) | 0, g = Math.imul(at, lt), l = l + Math.imul(ft, dt) | 0, s = s + Math.imul(ft, pt) | 0, s = s + Math.imul(ot, dt) | 0, g = g + Math.imul(ot, pt) | 0, l = l + Math.imul(it, vt) | 0, s = s + Math.imul(it, gt) | 0, s = s + Math.imul(nt, vt) | 0, g = g + Math.imul(nt, gt) | 0, l = l + Math.imul(et, mt) | 0, s = s + Math.imul(et, At) | 0, s = s + Math.imul(rt, mt) | 0, g = g + Math.imul(rt, At) | 0, l = l + Math.imul(Z, bt) | 0, s = s + Math.imul(Z, yt) | 0, s = s + Math.imul(tt, bt) | 0, g = g + Math.imul(tt, yt) | 0, l = l + Math.imul(X, wt) | 0, s = s + Math.imul(X, xt) | 0, s = s + Math.imul($, wt) | 0, g = g + Math.imul($, xt) | 0, l = l + Math.imul(T, Mt) | 0, s = s + Math.imul(T, Et) | 0, s = s + Math.imul(q, Mt) | 0, g = g + Math.imul(q, Et) | 0, l = l + Math.imul(P, St) | 0, s = s + Math.imul(P, It) | 0, s = s + Math.imul(O, St) | 0, g = g + Math.imul(O, It) | 0, l = l + Math.imul(B, Nt) | 0, s = s + Math.imul(B, _t) | 0, s = s + Math.imul(R, Nt) | 0, g = g + Math.imul(R, _t) | 0;\n            var ni = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ni >>> 26) | 0, ni &= 67108863, l = Math.imul(st, dt), s = Math.imul(st, pt), s = s + Math.imul(at, dt) | 0, g = Math.imul(at, pt), l = l + Math.imul(ft, vt) | 0, s = s + Math.imul(ft, gt) | 0, s = s + Math.imul(ot, vt) | 0, g = g + Math.imul(ot, gt) | 0, l = l + Math.imul(it, mt) | 0, s = s + Math.imul(it, At) | 0, s = s + Math.imul(nt, mt) | 0, g = g + Math.imul(nt, At) | 0, l = l + Math.imul(et, bt) | 0, s = s + Math.imul(et, yt) | 0, s = s + Math.imul(rt, bt) | 0, g = g + Math.imul(rt, yt) | 0, l = l + Math.imul(Z, wt) | 0, s = s + Math.imul(Z, xt) | 0, s = s + Math.imul(tt, wt) | 0, g = g + Math.imul(tt, xt) | 0, l = l + Math.imul(X, Mt) | 0, s = s + Math.imul(X, Et) | 0, s = s + Math.imul($, Mt) | 0, g = g + Math.imul($, Et) | 0, l = l + Math.imul(T, St) | 0, s = s + Math.imul(T, It) | 0, s = s + Math.imul(q, St) | 0, g = g + Math.imul(q, It) | 0, l = l + Math.imul(P, Nt) | 0, s = s + Math.imul(P, _t) | 0, s = s + Math.imul(O, Nt) | 0, g = g + Math.imul(O, _t) | 0;\n            var fi = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (fi >>> 26) | 0, fi &= 67108863, l = Math.imul(st, vt), s = Math.imul(st, gt), s = s + Math.imul(at, vt) | 0, g = Math.imul(at, gt), l = l + Math.imul(ft, mt) | 0, s = s + Math.imul(ft, At) | 0, s = s + Math.imul(ot, mt) | 0, g = g + Math.imul(ot, At) | 0, l = l + Math.imul(it, bt) | 0, s = s + Math.imul(it, yt) | 0, s = s + Math.imul(nt, bt) | 0, g = g + Math.imul(nt, yt) | 0, l = l + Math.imul(et, wt) | 0, s = s + Math.imul(et, xt) | 0, s = s + Math.imul(rt, wt) | 0, g = g + Math.imul(rt, xt) | 0, l = l + Math.imul(Z, Mt) | 0, s = s + Math.imul(Z, Et) | 0, s = s + Math.imul(tt, Mt) | 0, g = g + Math.imul(tt, Et) | 0, l = l + Math.imul(X, St) | 0, s = s + Math.imul(X, It) | 0, s = s + Math.imul($, St) | 0, g = g + Math.imul($, It) | 0, l = l + Math.imul(T, Nt) | 0, s = s + Math.imul(T, _t) | 0, s = s + Math.imul(q, Nt) | 0, g = g + Math.imul(q, _t) | 0;\n            var oi = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (oi >>> 26) | 0, oi &= 67108863, l = Math.imul(st, mt), s = Math.imul(st, At), s = s + Math.imul(at, mt) | 0, g = Math.imul(at, At), l = l + Math.imul(ft, bt) | 0, s = s + Math.imul(ft, yt) | 0, s = s + Math.imul(ot, bt) | 0, g = g + Math.imul(ot, yt) | 0, l = l + Math.imul(it, wt) | 0, s = s + Math.imul(it, xt) | 0, s = s + Math.imul(nt, wt) | 0, g = g + Math.imul(nt, xt) | 0, l = l + Math.imul(et, Mt) | 0, s = s + Math.imul(et, Et) | 0, s = s + Math.imul(rt, Mt) | 0, g = g + Math.imul(rt, Et) | 0, l = l + Math.imul(Z, St) | 0, s = s + Math.imul(Z, It) | 0, s = s + Math.imul(tt, St) | 0, g = g + Math.imul(tt, It) | 0, l = l + Math.imul(X, Nt) | 0, s = s + Math.imul(X, _t) | 0, s = s + Math.imul($, Nt) | 0, g = g + Math.imul($, _t) | 0;\n            var si = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (si >>> 26) | 0, si &= 67108863, l = Math.imul(st, bt), s = Math.imul(st, yt), s = s + Math.imul(at, bt) | 0, g = Math.imul(at, yt), l = l + Math.imul(ft, wt) | 0, s = s + Math.imul(ft, xt) | 0, s = s + Math.imul(ot, wt) | 0, g = g + Math.imul(ot, xt) | 0, l = l + Math.imul(it, Mt) | 0, s = s + Math.imul(it, Et) | 0, s = s + Math.imul(nt, Mt) | 0, g = g + Math.imul(nt, Et) | 0, l = l + Math.imul(et, St) | 0, s = s + Math.imul(et, It) | 0, s = s + Math.imul(rt, St) | 0, g = g + Math.imul(rt, It) | 0, l = l + Math.imul(Z, Nt) | 0, s = s + Math.imul(Z, _t) | 0, s = s + Math.imul(tt, Nt) | 0, g = g + Math.imul(tt, _t) | 0;\n            var ai = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ai >>> 26) | 0, ai &= 67108863, l = Math.imul(st, wt), s = Math.imul(st, xt), s = s + Math.imul(at, wt) | 0, g = Math.imul(at, xt), l = l + Math.imul(ft, Mt) | 0, s = s + Math.imul(ft, Et) | 0, s = s + Math.imul(ot, Mt) | 0, g = g + Math.imul(ot, Et) | 0, l = l + Math.imul(it, St) | 0, s = s + Math.imul(it, It) | 0, s = s + Math.imul(nt, St) | 0, g = g + Math.imul(nt, It) | 0, l = l + Math.imul(et, Nt) | 0, s = s + Math.imul(et, _t) | 0, s = s + Math.imul(rt, Nt) | 0, g = g + Math.imul(rt, _t) | 0;\n            var ui = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ui >>> 26) | 0, ui &= 67108863, l = Math.imul(st, Mt), s = Math.imul(st, Et), s = s + Math.imul(at, Mt) | 0, g = Math.imul(at, Et), l = l + Math.imul(ft, St) | 0, s = s + Math.imul(ft, It) | 0, s = s + Math.imul(ot, St) | 0, g = g + Math.imul(ot, It) | 0, l = l + Math.imul(it, Nt) | 0, s = s + Math.imul(it, _t) | 0, s = s + Math.imul(nt, Nt) | 0, g = g + Math.imul(nt, _t) | 0;\n            var hi = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (hi >>> 26) | 0, hi &= 67108863, l = Math.imul(st, St), s = Math.imul(st, It), s = s + Math.imul(at, St) | 0, g = Math.imul(at, It), l = l + Math.imul(ft, Nt) | 0, s = s + Math.imul(ft, _t) | 0, s = s + Math.imul(ot, Nt) | 0, g = g + Math.imul(ot, _t) | 0;\n            var ci = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ci >>> 26) | 0, ci &= 67108863, l = Math.imul(st, Nt), s = Math.imul(st, _t), s = s + Math.imul(at, Nt) | 0, g = Math.imul(at, _t);\n            var li = (M + l | 0) + ((s & 8191) << 13) | 0;\n            return M = (g + (s >>> 13) | 0) + (li >>> 26) | 0, li &= 67108863, x[0] = Me, x[1] = Ee, x[2] = Se, x[3] = Ie, x[4] = Ne, x[5] = Zr, x[6] = ti, x[7] = ei, x[8] = ri, x[9] = ii, x[10] = ni, x[11] = fi, x[12] = oi, x[13] = si, x[14] = ai, x[15] = ui, x[16] = hi, x[17] = ci, x[18] = li, M !== 0 && (x[19] = M, c.length++), c;\n        };\n        Math.imul || (J = U);\n        function Bt(b, f, a) {\n            a.negative = f.negative ^ b.negative, a.length = b.length + f.length;\n            for(var c = 0, d = 0, m = 0; m < a.length - 1; m++){\n                var x = d;\n                d = 0;\n                for(var M = c & 67108863, l = Math.min(m, f.length - 1), s = Math.max(0, m - b.length + 1); s <= l; s++){\n                    var g = m - s, k = b.words[g] | 0, u = f.words[s] | 0, E = k * u, _ = E & 67108863;\n                    x = x + (E / 67108864 | 0) | 0, _ = _ + M | 0, M = _ & 67108863, x = x + (_ >>> 26) | 0, d += x >>> 26, x &= 67108863;\n                }\n                a.words[m] = M, c = x, x = d;\n            }\n            return c !== 0 ? a.words[m] = c : a.length--, a._strip();\n        }\n        function G(b, f, a) {\n            return Bt(b, f, a);\n        }\n        o.prototype.mulTo = function(f, a) {\n            var c, d = this.length + f.length;\n            return this.length === 10 && f.length === 10 ? c = J(this, f, a) : d < 63 ? c = U(this, f, a) : d < 1024 ? c = Bt(this, f, a) : c = G(this, f, a), c;\n        }, o.prototype.mul = function(f) {\n            var a = new o(null);\n            return a.words = new Array(this.length + f.length), this.mulTo(f, a);\n        }, o.prototype.mulf = function(f) {\n            var a = new o(null);\n            return a.words = new Array(this.length + f.length), G(this, f, a);\n        }, o.prototype.imul = function(f) {\n            return this.clone().mulTo(f, this);\n        }, o.prototype.imuln = function(f) {\n            var a = f < 0;\n            a && (f = -f), i(typeof f == \"number\"), i(f < 67108864);\n            for(var c = 0, d = 0; d < this.length; d++){\n                var m = (this.words[d] | 0) * f, x = (m & 67108863) + (c & 67108863);\n                c >>= 26, c += m / 67108864 | 0, c += x >>> 26, this.words[d] = x & 67108863;\n            }\n            return c !== 0 && (this.words[d] = c, this.length++), a ? this.ineg() : this;\n        }, o.prototype.muln = function(f) {\n            return this.clone().imuln(f);\n        }, o.prototype.sqr = function() {\n            return this.mul(this);\n        }, o.prototype.isqr = function() {\n            return this.imul(this.clone());\n        }, o.prototype.pow = function(f) {\n            var a = D(f);\n            if (a.length === 0) return new o(1);\n            for(var c = this, d = 0; d < a.length && a[d] === 0; d++, c = c.sqr());\n            if (++d < a.length) for(var m = c.sqr(); d < a.length; d++, m = m.sqr())a[d] !== 0 && (c = c.mul(m));\n            return c;\n        }, o.prototype.iushln = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = f % 26, c = (f - a) / 26, d = 67108863 >>> 26 - a << 26 - a, m;\n            if (a !== 0) {\n                var x = 0;\n                for(m = 0; m < this.length; m++){\n                    var M = this.words[m] & d, l = (this.words[m] | 0) - M << a;\n                    this.words[m] = l | x, x = M >>> 26 - a;\n                }\n                x && (this.words[m] = x, this.length++);\n            }\n            if (c !== 0) {\n                for(m = this.length - 1; m >= 0; m--)this.words[m + c] = this.words[m];\n                for(m = 0; m < c; m++)this.words[m] = 0;\n                this.length += c;\n            }\n            return this._strip();\n        }, o.prototype.ishln = function(f) {\n            return i(this.negative === 0), this.iushln(f);\n        }, o.prototype.iushrn = function(f, a, c) {\n            i(typeof f == \"number\" && f >= 0);\n            var d;\n            a ? d = (a - a % 26) / 26 : d = 0;\n            var m = f % 26, x = Math.min((f - m) / 26, this.length), M = 67108863 ^ 67108863 >>> m << m, l = c;\n            if (d -= x, d = Math.max(0, d), l) {\n                for(var s = 0; s < x; s++)l.words[s] = this.words[s];\n                l.length = x;\n            }\n            if (x !== 0) if (this.length > x) for(this.length -= x, s = 0; s < this.length; s++)this.words[s] = this.words[s + x];\n            else this.words[0] = 0, this.length = 1;\n            var g = 0;\n            for(s = this.length - 1; s >= 0 && (g !== 0 || s >= d); s--){\n                var k = this.words[s] | 0;\n                this.words[s] = g << 26 - m | k >>> m, g = k & M;\n            }\n            return l && g !== 0 && (l.words[l.length++] = g), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();\n        }, o.prototype.ishrn = function(f, a, c) {\n            return i(this.negative === 0), this.iushrn(f, a, c);\n        }, o.prototype.shln = function(f) {\n            return this.clone().ishln(f);\n        }, o.prototype.ushln = function(f) {\n            return this.clone().iushln(f);\n        }, o.prototype.shrn = function(f) {\n            return this.clone().ishrn(f);\n        }, o.prototype.ushrn = function(f) {\n            return this.clone().iushrn(f);\n        }, o.prototype.testn = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = f % 26, c = (f - a) / 26, d = 1 << a;\n            if (this.length <= c) return !1;\n            var m = this.words[c];\n            return !!(m & d);\n        }, o.prototype.imaskn = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = f % 26, c = (f - a) / 26;\n            if (i(this.negative === 0, \"imaskn works only with positive numbers\"), this.length <= c) return this;\n            if (a !== 0 && c++, this.length = Math.min(c, this.length), a !== 0) {\n                var d = 67108863 ^ 67108863 >>> a << a;\n                this.words[this.length - 1] &= d;\n            }\n            return this._strip();\n        }, o.prototype.maskn = function(f) {\n            return this.clone().imaskn(f);\n        }, o.prototype.iaddn = function(f) {\n            return i(typeof f == \"number\"), i(f < 67108864), f < 0 ? this.isubn(-f) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= f ? (this.words[0] = f - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(f), this.negative = 1, this) : this._iaddn(f);\n        }, o.prototype._iaddn = function(f) {\n            this.words[0] += f;\n            for(var a = 0; a < this.length && this.words[a] >= 67108864; a++)this.words[a] -= 67108864, a === this.length - 1 ? this.words[a + 1] = 1 : this.words[a + 1]++;\n            return this.length = Math.max(this.length, a + 1), this;\n        }, o.prototype.isubn = function(f) {\n            if (i(typeof f == \"number\"), i(f < 67108864), f < 0) return this.iaddn(-f);\n            if (this.negative !== 0) return this.negative = 0, this.iaddn(f), this.negative = 1, this;\n            if (this.words[0] -= f, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;\n            else for(var a = 0; a < this.length && this.words[a] < 0; a++)this.words[a] += 67108864, this.words[a + 1] -= 1;\n            return this._strip();\n        }, o.prototype.addn = function(f) {\n            return this.clone().iaddn(f);\n        }, o.prototype.subn = function(f) {\n            return this.clone().isubn(f);\n        }, o.prototype.iabs = function() {\n            return this.negative = 0, this;\n        }, o.prototype.abs = function() {\n            return this.clone().iabs();\n        }, o.prototype._ishlnsubmul = function(f, a, c) {\n            var d = f.length + c, m;\n            this._expand(d);\n            var x, M = 0;\n            for(m = 0; m < f.length; m++){\n                x = (this.words[m + c] | 0) + M;\n                var l = (f.words[m] | 0) * a;\n                x -= l & 67108863, M = (x >> 26) - (l / 67108864 | 0), this.words[m + c] = x & 67108863;\n            }\n            for(; m < this.length - c; m++)x = (this.words[m + c] | 0) + M, M = x >> 26, this.words[m + c] = x & 67108863;\n            if (M === 0) return this._strip();\n            for(i(M === -1), M = 0, m = 0; m < this.length; m++)x = -(this.words[m] | 0) + M, M = x >> 26, this.words[m] = x & 67108863;\n            return this.negative = 1, this._strip();\n        }, o.prototype._wordDiv = function(f, a) {\n            var c = this.length - f.length, d = this.clone(), m = f, x = m.words[m.length - 1] | 0, M = this._countBits(x);\n            c = 26 - M, c !== 0 && (m = m.ushln(c), d.iushln(c), x = m.words[m.length - 1] | 0);\n            var l = d.length - m.length, s;\n            if (a !== \"mod\") {\n                s = new o(null), s.length = l + 1, s.words = new Array(s.length);\n                for(var g = 0; g < s.length; g++)s.words[g] = 0;\n            }\n            var k = d.clone()._ishlnsubmul(m, 1, l);\n            k.negative === 0 && (d = k, s && (s.words[l] = 1));\n            for(var u = l - 1; u >= 0; u--){\n                var E = (d.words[m.length + u] | 0) * 67108864 + (d.words[m.length + u - 1] | 0);\n                for(E = Math.min(E / x | 0, 67108863), d._ishlnsubmul(m, E, u); d.negative !== 0;)E--, d.negative = 0, d._ishlnsubmul(m, 1, u), d.isZero() || (d.negative ^= 1);\n                s && (s.words[u] = E);\n            }\n            return s && s._strip(), d._strip(), a !== \"div\" && c !== 0 && d.iushrn(c), {\n                div: s || null,\n                mod: d\n            };\n        }, o.prototype.divmod = function(f, a, c) {\n            if (i(!f.isZero()), this.isZero()) return {\n                div: new o(0),\n                mod: new o(0)\n            };\n            var d, m, x;\n            return this.negative !== 0 && f.negative === 0 ? (x = this.neg().divmod(f, a), a !== \"mod\" && (d = x.div.neg()), a !== \"div\" && (m = x.mod.neg(), c && m.negative !== 0 && m.iadd(f)), {\n                div: d,\n                mod: m\n            }) : this.negative === 0 && f.negative !== 0 ? (x = this.divmod(f.neg(), a), a !== \"mod\" && (d = x.div.neg()), {\n                div: d,\n                mod: x.mod\n            }) : this.negative & f.negative ? (x = this.neg().divmod(f.neg(), a), a !== \"div\" && (m = x.mod.neg(), c && m.negative !== 0 && m.isub(f)), {\n                div: x.div,\n                mod: m\n            }) : f.length > this.length || this.cmp(f) < 0 ? {\n                div: new o(0),\n                mod: this\n            } : f.length === 1 ? a === \"div\" ? {\n                div: this.divn(f.words[0]),\n                mod: null\n            } : a === \"mod\" ? {\n                div: null,\n                mod: new o(this.modrn(f.words[0]))\n            } : {\n                div: this.divn(f.words[0]),\n                mod: new o(this.modrn(f.words[0]))\n            } : this._wordDiv(f, a);\n        }, o.prototype.div = function(f) {\n            return this.divmod(f, \"div\", !1).div;\n        }, o.prototype.mod = function(f) {\n            return this.divmod(f, \"mod\", !1).mod;\n        }, o.prototype.umod = function(f) {\n            return this.divmod(f, \"mod\", !0).mod;\n        }, o.prototype.divRound = function(f) {\n            var a = this.divmod(f);\n            if (a.mod.isZero()) return a.div;\n            var c = a.div.negative !== 0 ? a.mod.isub(f) : a.mod, d = f.ushrn(1), m = f.andln(1), x = c.cmp(d);\n            return x < 0 || m === 1 && x === 0 ? a.div : a.div.negative !== 0 ? a.div.isubn(1) : a.div.iaddn(1);\n        }, o.prototype.modrn = function(f) {\n            var a = f < 0;\n            a && (f = -f), i(f <= 67108863);\n            for(var c = (1 << 26) % f, d = 0, m = this.length - 1; m >= 0; m--)d = (c * d + (this.words[m] | 0)) % f;\n            return a ? -d : d;\n        }, o.prototype.modn = function(f) {\n            return this.modrn(f);\n        }, o.prototype.idivn = function(f) {\n            var a = f < 0;\n            a && (f = -f), i(f <= 67108863);\n            for(var c = 0, d = this.length - 1; d >= 0; d--){\n                var m = (this.words[d] | 0) + c * 67108864;\n                this.words[d] = m / f | 0, c = m % f;\n            }\n            return this._strip(), a ? this.ineg() : this;\n        }, o.prototype.divn = function(f) {\n            return this.clone().idivn(f);\n        }, o.prototype.egcd = function(f) {\n            i(f.negative === 0), i(!f.isZero());\n            var a = this, c = f.clone();\n            a.negative !== 0 ? a = a.umod(f) : a = a.clone();\n            for(var d = new o(1), m = new o(0), x = new o(0), M = new o(1), l = 0; a.isEven() && c.isEven();)a.iushrn(1), c.iushrn(1), ++l;\n            for(var s = c.clone(), g = a.clone(); !a.isZero();){\n                for(var k = 0, u = 1; !(a.words[0] & u) && k < 26; ++k, u <<= 1);\n                if (k > 0) for(a.iushrn(k); k-- > 0;)(d.isOdd() || m.isOdd()) && (d.iadd(s), m.isub(g)), d.iushrn(1), m.iushrn(1);\n                for(var E = 0, _ = 1; !(c.words[0] & _) && E < 26; ++E, _ <<= 1);\n                if (E > 0) for(c.iushrn(E); E-- > 0;)(x.isOdd() || M.isOdd()) && (x.iadd(s), M.isub(g)), x.iushrn(1), M.iushrn(1);\n                a.cmp(c) >= 0 ? (a.isub(c), d.isub(x), m.isub(M)) : (c.isub(a), x.isub(d), M.isub(m));\n            }\n            return {\n                a: x,\n                b: M,\n                gcd: c.iushln(l)\n            };\n        }, o.prototype._invmp = function(f) {\n            i(f.negative === 0), i(!f.isZero());\n            var a = this, c = f.clone();\n            a.negative !== 0 ? a = a.umod(f) : a = a.clone();\n            for(var d = new o(1), m = new o(0), x = c.clone(); a.cmpn(1) > 0 && c.cmpn(1) > 0;){\n                for(var M = 0, l = 1; !(a.words[0] & l) && M < 26; ++M, l <<= 1);\n                if (M > 0) for(a.iushrn(M); M-- > 0;)d.isOdd() && d.iadd(x), d.iushrn(1);\n                for(var s = 0, g = 1; !(c.words[0] & g) && s < 26; ++s, g <<= 1);\n                if (s > 0) for(c.iushrn(s); s-- > 0;)m.isOdd() && m.iadd(x), m.iushrn(1);\n                a.cmp(c) >= 0 ? (a.isub(c), d.isub(m)) : (c.isub(a), m.isub(d));\n            }\n            var k;\n            return a.cmpn(1) === 0 ? k = d : k = m, k.cmpn(0) < 0 && k.iadd(f), k;\n        }, o.prototype.gcd = function(f) {\n            if (this.isZero()) return f.abs();\n            if (f.isZero()) return this.abs();\n            var a = this.clone(), c = f.clone();\n            a.negative = 0, c.negative = 0;\n            for(var d = 0; a.isEven() && c.isEven(); d++)a.iushrn(1), c.iushrn(1);\n            do {\n                for(; a.isEven();)a.iushrn(1);\n                for(; c.isEven();)c.iushrn(1);\n                var m = a.cmp(c);\n                if (m < 0) {\n                    var x = a;\n                    a = c, c = x;\n                } else if (m === 0 || c.cmpn(1) === 0) break;\n                a.isub(c);\n            }while (!0);\n            return c.iushln(d);\n        }, o.prototype.invm = function(f) {\n            return this.egcd(f).a.umod(f);\n        }, o.prototype.isEven = function() {\n            return (this.words[0] & 1) === 0;\n        }, o.prototype.isOdd = function() {\n            return (this.words[0] & 1) === 1;\n        }, o.prototype.andln = function(f) {\n            return this.words[0] & f;\n        }, o.prototype.bincn = function(f) {\n            i(typeof f == \"number\");\n            var a = f % 26, c = (f - a) / 26, d = 1 << a;\n            if (this.length <= c) return this._expand(c + 1), this.words[c] |= d, this;\n            for(var m = d, x = c; m !== 0 && x < this.length; x++){\n                var M = this.words[x] | 0;\n                M += m, m = M >>> 26, M &= 67108863, this.words[x] = M;\n            }\n            return m !== 0 && (this.words[x] = m, this.length++), this;\n        }, o.prototype.isZero = function() {\n            return this.length === 1 && this.words[0] === 0;\n        }, o.prototype.cmpn = function(f) {\n            var a = f < 0;\n            if (this.negative !== 0 && !a) return -1;\n            if (this.negative === 0 && a) return 1;\n            this._strip();\n            var c;\n            if (this.length > 1) c = 1;\n            else {\n                a && (f = -f), i(f <= 67108863, \"Number is too big\");\n                var d = this.words[0] | 0;\n                c = d === f ? 0 : d < f ? -1 : 1;\n            }\n            return this.negative !== 0 ? -c | 0 : c;\n        }, o.prototype.cmp = function(f) {\n            if (this.negative !== 0 && f.negative === 0) return -1;\n            if (this.negative === 0 && f.negative !== 0) return 1;\n            var a = this.ucmp(f);\n            return this.negative !== 0 ? -a | 0 : a;\n        }, o.prototype.ucmp = function(f) {\n            if (this.length > f.length) return 1;\n            if (this.length < f.length) return -1;\n            for(var a = 0, c = this.length - 1; c >= 0; c--){\n                var d = this.words[c] | 0, m = f.words[c] | 0;\n                if (d !== m) {\n                    d < m ? a = -1 : d > m && (a = 1);\n                    break;\n                }\n            }\n            return a;\n        }, o.prototype.gtn = function(f) {\n            return this.cmpn(f) === 1;\n        }, o.prototype.gt = function(f) {\n            return this.cmp(f) === 1;\n        }, o.prototype.gten = function(f) {\n            return this.cmpn(f) >= 0;\n        }, o.prototype.gte = function(f) {\n            return this.cmp(f) >= 0;\n        }, o.prototype.ltn = function(f) {\n            return this.cmpn(f) === -1;\n        }, o.prototype.lt = function(f) {\n            return this.cmp(f) === -1;\n        }, o.prototype.lten = function(f) {\n            return this.cmpn(f) <= 0;\n        }, o.prototype.lte = function(f) {\n            return this.cmp(f) <= 0;\n        }, o.prototype.eqn = function(f) {\n            return this.cmpn(f) === 0;\n        }, o.prototype.eq = function(f) {\n            return this.cmp(f) === 0;\n        }, o.red = function(f) {\n            return new Y(f);\n        }, o.prototype.toRed = function(f) {\n            return i(!this.red, \"Already a number in reduction context\"), i(this.negative === 0, \"red works only with positives\"), f.convertTo(this)._forceRed(f);\n        }, o.prototype.fromRed = function() {\n            return i(this.red, \"fromRed works only with numbers in reduction context\"), this.red.convertFrom(this);\n        }, o.prototype._forceRed = function(f) {\n            return this.red = f, this;\n        }, o.prototype.forceRed = function(f) {\n            return i(!this.red, \"Already a number in reduction context\"), this._forceRed(f);\n        }, o.prototype.redAdd = function(f) {\n            return i(this.red, \"redAdd works only with red numbers\"), this.red.add(this, f);\n        }, o.prototype.redIAdd = function(f) {\n            return i(this.red, \"redIAdd works only with red numbers\"), this.red.iadd(this, f);\n        }, o.prototype.redSub = function(f) {\n            return i(this.red, \"redSub works only with red numbers\"), this.red.sub(this, f);\n        }, o.prototype.redISub = function(f) {\n            return i(this.red, \"redISub works only with red numbers\"), this.red.isub(this, f);\n        }, o.prototype.redShl = function(f) {\n            return i(this.red, \"redShl works only with red numbers\"), this.red.shl(this, f);\n        }, o.prototype.redMul = function(f) {\n            return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, f), this.red.mul(this, f);\n        }, o.prototype.redIMul = function(f) {\n            return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, f), this.red.imul(this, f);\n        }, o.prototype.redSqr = function() {\n            return i(this.red, \"redSqr works only with red numbers\"), this.red._verify1(this), this.red.sqr(this);\n        }, o.prototype.redISqr = function() {\n            return i(this.red, \"redISqr works only with red numbers\"), this.red._verify1(this), this.red.isqr(this);\n        }, o.prototype.redSqrt = function() {\n            return i(this.red, \"redSqrt works only with red numbers\"), this.red._verify1(this), this.red.sqrt(this);\n        }, o.prototype.redInvm = function() {\n            return i(this.red, \"redInvm works only with red numbers\"), this.red._verify1(this), this.red.invm(this);\n        }, o.prototype.redNeg = function() {\n            return i(this.red, \"redNeg works only with red numbers\"), this.red._verify1(this), this.red.neg(this);\n        }, o.prototype.redPow = function(f) {\n            return i(this.red && !f.red, \"redPow(normalNum)\"), this.red._verify1(this), this.red.pow(this, f);\n        };\n        var H = {\n            k256: null,\n            p224: null,\n            p192: null,\n            p25519: null\n        };\n        function L(b, f) {\n            this.name = b, this.p = new o(f, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();\n        }\n        L.prototype._tmp = function() {\n            var f = new o(null);\n            return f.words = new Array(Math.ceil(this.n / 13)), f;\n        }, L.prototype.ireduce = function(f) {\n            var a = f, c;\n            do this.split(a, this.tmp), a = this.imulK(a), a = a.iadd(this.tmp), c = a.bitLength();\n            while (c > this.n);\n            var d = c < this.n ? -1 : a.ucmp(this.p);\n            return d === 0 ? (a.words[0] = 0, a.length = 1) : d > 0 ? a.isub(this.p) : a.strip !== void 0 ? a.strip() : a._strip(), a;\n        }, L.prototype.split = function(f, a) {\n            f.iushrn(this.n, 0, a);\n        }, L.prototype.imulK = function(f) {\n            return f.imul(this.k);\n        };\n        function Pt() {\n            L.call(this, \"k256\", \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\");\n        }\n        n(Pt, L), Pt.prototype.split = function(f, a) {\n            for(var c = 4194303, d = Math.min(f.length, 9), m = 0; m < d; m++)a.words[m] = f.words[m];\n            if (a.length = d, f.length <= 9) {\n                f.words[0] = 0, f.length = 1;\n                return;\n            }\n            var x = f.words[9];\n            for(a.words[a.length++] = x & c, m = 10; m < f.length; m++){\n                var M = f.words[m] | 0;\n                f.words[m - 10] = (M & c) << 4 | x >>> 22, x = M;\n            }\n            x >>>= 22, f.words[m - 10] = x, x === 0 && f.length > 10 ? f.length -= 10 : f.length -= 9;\n        }, Pt.prototype.imulK = function(f) {\n            f.words[f.length] = 0, f.words[f.length + 1] = 0, f.length += 2;\n            for(var a = 0, c = 0; c < f.length; c++){\n                var d = f.words[c] | 0;\n                a += d * 977, f.words[c] = a & 67108863, a = d * 64 + (a / 67108864 | 0);\n            }\n            return f.words[f.length - 1] === 0 && (f.length--, f.words[f.length - 1] === 0 && f.length--), f;\n        };\n        function W() {\n            L.call(this, \"p224\", \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\");\n        }\n        n(W, L);\n        function Rt() {\n            L.call(this, \"p192\", \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\");\n        }\n        n(Rt, L);\n        function Vt() {\n            L.call(this, \"25519\", \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\");\n        }\n        n(Vt, L), Vt.prototype.imulK = function(f) {\n            for(var a = 0, c = 0; c < f.length; c++){\n                var d = (f.words[c] | 0) * 19 + a, m = d & 67108863;\n                d >>>= 26, f.words[c] = m, a = d;\n            }\n            return a !== 0 && (f.words[f.length++] = a), f;\n        }, o._prime = function(f) {\n            if (H[f]) return H[f];\n            var a;\n            if (f === \"k256\") a = new Pt;\n            else if (f === \"p224\") a = new W;\n            else if (f === \"p192\") a = new Rt;\n            else if (f === \"p25519\") a = new Vt;\n            else throw new Error(\"Unknown prime \" + f);\n            return H[f] = a, a;\n        };\n        function Y(b) {\n            if (typeof b == \"string\") {\n                var f = o._prime(b);\n                this.m = f.p, this.prime = f;\n            } else i(b.gtn(1), \"modulus must be greater than 1\"), this.m = b, this.prime = null;\n        }\n        Y.prototype._verify1 = function(f) {\n            i(f.negative === 0, \"red works only with positives\"), i(f.red, \"red works only with red numbers\");\n        }, Y.prototype._verify2 = function(f, a) {\n            i((f.negative | a.negative) === 0, \"red works only with positives\"), i(f.red && f.red === a.red, \"red works only with red numbers\");\n        }, Y.prototype.imod = function(f) {\n            return this.prime ? this.prime.ireduce(f)._forceRed(this) : (w(f, f.umod(this.m)._forceRed(this)), f);\n        }, Y.prototype.neg = function(f) {\n            return f.isZero() ? f.clone() : this.m.sub(f)._forceRed(this);\n        }, Y.prototype.add = function(f, a) {\n            this._verify2(f, a);\n            var c = f.add(a);\n            return c.cmp(this.m) >= 0 && c.isub(this.m), c._forceRed(this);\n        }, Y.prototype.iadd = function(f, a) {\n            this._verify2(f, a);\n            var c = f.iadd(a);\n            return c.cmp(this.m) >= 0 && c.isub(this.m), c;\n        }, Y.prototype.sub = function(f, a) {\n            this._verify2(f, a);\n            var c = f.sub(a);\n            return c.cmpn(0) < 0 && c.iadd(this.m), c._forceRed(this);\n        }, Y.prototype.isub = function(f, a) {\n            this._verify2(f, a);\n            var c = f.isub(a);\n            return c.cmpn(0) < 0 && c.iadd(this.m), c;\n        }, Y.prototype.shl = function(f, a) {\n            return this._verify1(f), this.imod(f.ushln(a));\n        }, Y.prototype.imul = function(f, a) {\n            return this._verify2(f, a), this.imod(f.imul(a));\n        }, Y.prototype.mul = function(f, a) {\n            return this._verify2(f, a), this.imod(f.mul(a));\n        }, Y.prototype.isqr = function(f) {\n            return this.imul(f, f.clone());\n        }, Y.prototype.sqr = function(f) {\n            return this.mul(f, f);\n        }, Y.prototype.sqrt = function(f) {\n            if (f.isZero()) return f.clone();\n            var a = this.m.andln(3);\n            if (i(a % 2 === 1), a === 3) {\n                var c = this.m.add(new o(1)).iushrn(2);\n                return this.pow(f, c);\n            }\n            for(var d = this.m.subn(1), m = 0; !d.isZero() && d.andln(1) === 0;)m++, d.iushrn(1);\n            i(!d.isZero());\n            var x = new o(1).toRed(this), M = x.redNeg(), l = this.m.subn(1).iushrn(1), s = this.m.bitLength();\n            for(s = new o(2 * s * s).toRed(this); this.pow(s, l).cmp(M) !== 0;)s.redIAdd(M);\n            for(var g = this.pow(s, d), k = this.pow(f, d.addn(1).iushrn(1)), u = this.pow(f, d), E = m; u.cmp(x) !== 0;){\n                for(var _ = u, B = 0; _.cmp(x) !== 0; B++)_ = _.redSqr();\n                i(B < E);\n                var R = this.pow(g, new o(1).iushln(E - B - 1));\n                k = k.redMul(R), g = R.redSqr(), u = u.redMul(g), E = B;\n            }\n            return k;\n        }, Y.prototype.invm = function(f) {\n            var a = f._invmp(this.m);\n            return a.negative !== 0 ? (a.negative = 0, this.imod(a).redNeg()) : this.imod(a);\n        }, Y.prototype.pow = function(f, a) {\n            if (a.isZero()) return new o(1).toRed(this);\n            if (a.cmpn(1) === 0) return f.clone();\n            var c = 4, d = new Array(1 << c);\n            d[0] = new o(1).toRed(this), d[1] = f;\n            for(var m = 2; m < d.length; m++)d[m] = this.mul(d[m - 1], f);\n            var x = d[0], M = 0, l = 0, s = a.bitLength() % 26;\n            for(s === 0 && (s = 26), m = a.length - 1; m >= 0; m--){\n                for(var g = a.words[m], k = s - 1; k >= 0; k--){\n                    var u = g >> k & 1;\n                    if (x !== d[0] && (x = this.sqr(x)), u === 0 && M === 0) {\n                        l = 0;\n                        continue;\n                    }\n                    M <<= 1, M |= u, l++, !(l !== c && (m !== 0 || k !== 0)) && (x = this.mul(x, d[M]), l = 0, M = 0);\n                }\n                s = 26;\n            }\n            return x;\n        }, Y.prototype.convertTo = function(f) {\n            var a = f.umod(this.m);\n            return a === f ? a.clone() : a;\n        }, Y.prototype.convertFrom = function(f) {\n            var a = f.clone();\n            return a.red = null, a;\n        }, o.mont = function(f) {\n            return new Wt(f);\n        };\n        function Wt(b) {\n            Y.call(this, b), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);\n        }\n        n(Wt, Y), Wt.prototype.convertTo = function(f) {\n            return this.imod(f.ushln(this.shift));\n        }, Wt.prototype.convertFrom = function(f) {\n            var a = this.imod(f.mul(this.rinv));\n            return a.red = null, a;\n        }, Wt.prototype.imul = function(f, a) {\n            if (f.isZero() || a.isZero()) return f.words[0] = 0, f.length = 1, f;\n            var c = f.imul(a), d = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), m = c.isub(d).iushrn(this.shift), x = m;\n            return m.cmp(this.m) >= 0 ? x = m.isub(this.m) : m.cmpn(0) < 0 && (x = m.iadd(this.m)), x._forceRed(this);\n        }, Wt.prototype.mul = function(f, a) {\n            if (f.isZero() || a.isZero()) return new o(0)._forceRed(this);\n            var c = f.mul(a), d = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), m = c.isub(d).iushrn(this.shift), x = m;\n            return m.cmp(this.m) >= 0 ? x = m.isub(this.m) : m.cmpn(0) < 0 && (x = m.iadd(this.m)), x._forceRed(this);\n        }, Wt.prototype.invm = function(f) {\n            var a = this.imod(f._invmp(this.m).mul(this.r2));\n            return a._forceRed(this);\n        };\n    })(e, Kn);\n})(Xn);\nvar K = Xn.exports;\nconst $n = \"bignumber/5.7.0\";\nvar Dr = K.BN;\nconst Ae = new z($n), Ni = {}, Zn = 9007199254740991;\nfunction Hs(e) {\n    return e != null && (V.isBigNumber(e) || typeof e == \"number\" && e % 1 === 0 || typeof e == \"string\" && !!e.match(/^-?[0-9]+$/) || Jt(e) || typeof e == \"bigint\" || nr(e));\n}\nlet tf = !1;\nclass V {\n    constructor(t, r){\n        t !== Ni && Ae.throwError(\"cannot call constructor directly; use BigNumber.from\", z.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new (BigNumber)\"\n        }), this._hex = r, this._isBigNumber = !0, Object.freeze(this);\n    }\n    fromTwos(t) {\n        return zt(j(this).fromTwos(t));\n    }\n    toTwos(t) {\n        return zt(j(this).toTwos(t));\n    }\n    abs() {\n        return this._hex[0] === \"-\" ? V.from(this._hex.substring(1)) : this;\n    }\n    add(t) {\n        return zt(j(this).add(j(t)));\n    }\n    sub(t) {\n        return zt(j(this).sub(j(t)));\n    }\n    div(t) {\n        return V.from(t).isZero() && $t(\"division-by-zero\", \"div\"), zt(j(this).div(j(t)));\n    }\n    mul(t) {\n        return zt(j(this).mul(j(t)));\n    }\n    mod(t) {\n        const r = j(t);\n        return r.isNeg() && $t(\"division-by-zero\", \"mod\"), zt(j(this).umod(r));\n    }\n    pow(t) {\n        const r = j(t);\n        return r.isNeg() && $t(\"negative-power\", \"pow\"), zt(j(this).pow(r));\n    }\n    and(t) {\n        const r = j(t);\n        return (this.isNegative() || r.isNeg()) && $t(\"unbound-bitwise-result\", \"and\"), zt(j(this).and(r));\n    }\n    or(t) {\n        const r = j(t);\n        return (this.isNegative() || r.isNeg()) && $t(\"unbound-bitwise-result\", \"or\"), zt(j(this).or(r));\n    }\n    xor(t) {\n        const r = j(t);\n        return (this.isNegative() || r.isNeg()) && $t(\"unbound-bitwise-result\", \"xor\"), zt(j(this).xor(r));\n    }\n    mask(t) {\n        return (this.isNegative() || t < 0) && $t(\"negative-width\", \"mask\"), zt(j(this).maskn(t));\n    }\n    shl(t) {\n        return (this.isNegative() || t < 0) && $t(\"negative-width\", \"shl\"), zt(j(this).shln(t));\n    }\n    shr(t) {\n        return (this.isNegative() || t < 0) && $t(\"negative-width\", \"shr\"), zt(j(this).shrn(t));\n    }\n    eq(t) {\n        return j(this).eq(j(t));\n    }\n    lt(t) {\n        return j(this).lt(j(t));\n    }\n    lte(t) {\n        return j(this).lte(j(t));\n    }\n    gt(t) {\n        return j(this).gt(j(t));\n    }\n    gte(t) {\n        return j(this).gte(j(t));\n    }\n    isNegative() {\n        return this._hex[0] === \"-\";\n    }\n    isZero() {\n        return j(this).isZero();\n    }\n    toNumber() {\n        try {\n            return j(this).toNumber();\n        } catch  {\n            $t(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        } catch  {}\n        return Ae.throwError(\"this platform does not support BigInt\", z.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        return arguments.length > 0 && (arguments[0] === 10 ? tf || (tf = !0, Ae.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\")) : arguments[0] === 16 ? Ae.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", z.errors.UNEXPECTED_ARGUMENT, {}) : Ae.throwError(\"BigNumber.toString does not accept parameters\", z.errors.UNEXPECTED_ARGUMENT, {})), j(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(t) {\n        return {\n            type: \"BigNumber\",\n            hex: this.toHexString()\n        };\n    }\n    static from(t) {\n        if (t instanceof V) return t;\n        if (typeof t == \"string\") return t.match(/^-?0x[0-9a-f]+$/i) ? new V(Ni, mr(t)) : t.match(/^-?[0-9]+$/) ? new V(Ni, mr(new Dr(t))) : Ae.throwArgumentError(\"invalid BigNumber string\", \"value\", t);\n        if (typeof t == \"number\") return t % 1 && $t(\"underflow\", \"BigNumber.from\", t), (t >= Zn || t <= -Zn) && $t(\"overflow\", \"BigNumber.from\", t), V.from(String(t));\n        const r = t;\n        if (typeof r == \"bigint\") return V.from(r.toString());\n        if (nr(r)) return V.from(Kt(r));\n        if (r) if (r.toHexString) {\n            const i = r.toHexString();\n            if (typeof i == \"string\") return V.from(i);\n        } else {\n            let i = r._hex;\n            if (i == null && r.type === \"BigNumber\" && (i = r.hex), typeof i == \"string\" && (Jt(i) || i[0] === \"-\" && Jt(i.substring(1)))) return V.from(i);\n        }\n        return Ae.throwArgumentError(\"invalid BigNumber value\", \"value\", t);\n    }\n    static isBigNumber(t) {\n        return !!(t && t._isBigNumber);\n    }\n}\nfunction mr(e) {\n    if (typeof e != \"string\") return mr(e.toString(16));\n    if (e[0] === \"-\") return e = e.substring(1), e[0] === \"-\" && Ae.throwArgumentError(\"invalid hex\", \"value\", e), e = mr(e), e === \"0x00\" ? e : \"-\" + e;\n    if (e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), e === \"0x\") return \"0x00\";\n    for(e.length % 2 && (e = \"0x0\" + e.substring(2)); e.length > 4 && e.substring(0, 4) === \"0x00\";)e = \"0x\" + e.substring(4);\n    return e;\n}\nfunction zt(e) {\n    return V.from(mr(e));\n}\nfunction j(e) {\n    const t = V.from(e).toHexString();\n    return t[0] === \"-\" ? new Dr(\"-\" + t.substring(3), 16) : new Dr(t.substring(2), 16);\n}\nfunction $t(e, t, r) {\n    const i = {\n        fault: e,\n        operation: t\n    };\n    return r != null && (i.value = r), Ae.throwError(e, z.errors.NUMERIC_FAULT, i);\n}\nfunction Ls(e) {\n    return new Dr(e, 36).toString(16);\n}\nconst Ht = new z($n), Ar = {}, ef = V.from(0), rf = V.from(-1);\nfunction nf(e, t, r, i) {\n    const n = {\n        fault: t,\n        operation: r\n    };\n    return i !== void 0 && (n.value = i), Ht.throwError(e, z.errors.NUMERIC_FAULT, n);\n}\nlet br = \"0\";\nfor(; br.length < 256;)br += br;\nfunction _i(e) {\n    if (typeof e != \"number\") try {\n        e = V.from(e).toNumber();\n    } catch  {}\n    return typeof e == \"number\" && e >= 0 && e <= 256 && !(e % 1) ? \"1\" + br.substring(0, e) : Ht.throwArgumentError(\"invalid decimal size\", \"decimals\", e);\n}\nfunction Bi(e, t) {\n    t == null && (t = 0);\n    const r = _i(t);\n    e = V.from(e);\n    const i = e.lt(ef);\n    i && (e = e.mul(rf));\n    let n = e.mod(r).toString();\n    for(; n.length < r.length - 1;)n = \"0\" + n;\n    n = n.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const o = e.div(r).toString();\n    return r.length === 1 ? e = o : e = o + \".\" + n, i && (e = \"-\" + e), e;\n}\nfunction be(e, t) {\n    t == null && (t = 0);\n    const r = _i(t);\n    (typeof e != \"string\" || !e.match(/^-?[0-9.]+$/)) && Ht.throwArgumentError(\"invalid decimal value\", \"value\", e);\n    const i = e.substring(0, 1) === \"-\";\n    i && (e = e.substring(1)), e === \".\" && Ht.throwArgumentError(\"missing value\", \"value\", e);\n    const n = e.split(\".\");\n    n.length > 2 && Ht.throwArgumentError(\"too many decimal points\", \"value\", e);\n    let o = n[0], h = n[1];\n    for(o || (o = \"0\"), h || (h = \"0\"); h[h.length - 1] === \"0\";)h = h.substring(0, h.length - 1);\n    for(h.length > r.length - 1 && nf(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\"), h === \"\" && (h = \"0\"); h.length < r.length - 1;)h += \"0\";\n    const p = V.from(o), A = V.from(h);\n    let v = p.mul(r).add(A);\n    return i && (v = v.mul(rf)), v;\n}\nclass vr {\n    constructor(t, r, i, n){\n        t !== Ar && Ht.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", z.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new FixedFormat\"\n        }), this.signed = r, this.width = i, this.decimals = n, this.name = (r ? \"\" : \"u\") + \"fixed\" + String(i) + \"x\" + String(n), this._multiplier = _i(n), Object.freeze(this);\n    }\n    static from(t) {\n        if (t instanceof vr) return t;\n        typeof t == \"number\" && (t = `fixed128x${t}`);\n        let r = !0, i = 128, n = 18;\n        if (typeof t == \"string\") {\n            if (t !== \"fixed\") if (t === \"ufixed\") r = !1;\n            else {\n                const o = t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                o || Ht.throwArgumentError(\"invalid fixed format\", \"format\", t), r = o[1] !== \"u\", i = parseInt(o[2]), n = parseInt(o[3]);\n            }\n        } else if (t) {\n            const o = (h, p, A)=>t[h] == null ? A : (typeof t[h] !== p && Ht.throwArgumentError(\"invalid fixed format (\" + h + \" not \" + p + \")\", \"format.\" + h, t[h]), t[h]);\n            r = o(\"signed\", \"boolean\", r), i = o(\"width\", \"number\", i), n = o(\"decimals\", \"number\", n);\n        }\n        return i % 8 && Ht.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", i), n > 80 && Ht.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", n), new vr(Ar, r, i, n);\n    }\n}\nclass Ut {\n    constructor(t, r, i, n){\n        t !== Ar && Ht.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", z.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new FixedFormat\"\n        }), this.format = n, this._hex = r, this._value = i, this._isFixedNumber = !0, Object.freeze(this);\n    }\n    _checkFormat(t) {\n        this.format.name !== t.format.name && Ht.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", t);\n    }\n    addUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.add(i), this.format.decimals, this.format);\n    }\n    subUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.sub(i), this.format.decimals, this.format);\n    }\n    mulUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.mul(i).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.mul(this.format._multiplier).div(i), this.format.decimals, this.format);\n    }\n    floor() {\n        const t = this.toString().split(\".\");\n        t.length === 1 && t.push(\"0\");\n        let r = Ut.from(t[0], this.format);\n        const i = !t[1].match(/^(0*)$/);\n        return this.isNegative() && i && (r = r.subUnsafe(ff.toFormat(r.format))), r;\n    }\n    ceiling() {\n        const t = this.toString().split(\".\");\n        t.length === 1 && t.push(\"0\");\n        let r = Ut.from(t[0], this.format);\n        const i = !t[1].match(/^(0*)$/);\n        return !this.isNegative() && i && (r = r.addUnsafe(ff.toFormat(r.format))), r;\n    }\n    round(t) {\n        t == null && (t = 0);\n        const r = this.toString().split(\".\");\n        if (r.length === 1 && r.push(\"0\"), (t < 0 || t > 80 || t % 1) && Ht.throwArgumentError(\"invalid decimal count\", \"decimals\", t), r[1].length <= t) return this;\n        const i = Ut.from(\"1\" + br.substring(0, t), this.format), n = zs.toFormat(this.format);\n        return this.mulUnsafe(i).addUnsafe(n).floor().divUnsafe(i);\n    }\n    isZero() {\n        return this._value === \"0.0\" || this._value === \"0\";\n    }\n    isNegative() {\n        return this._value[0] === \"-\";\n    }\n    toString() {\n        return this._value;\n    }\n    toHexString(t) {\n        if (t == null) return this._hex;\n        t % 8 && Ht.throwArgumentError(\"invalid byte width\", \"width\", t);\n        const r = V.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();\n        return oe(r, t / 8);\n    }\n    toUnsafeFloat() {\n        return parseFloat(this.toString());\n    }\n    toFormat(t) {\n        return Ut.fromString(this._value, t);\n    }\n    static fromValue(t, r, i) {\n        return i == null && r != null && !Hs(r) && (i = r, r = null), r == null && (r = 0), i == null && (i = \"fixed\"), Ut.fromString(Bi(t, r), vr.from(i));\n    }\n    static fromString(t, r) {\n        r == null && (r = \"fixed\");\n        const i = vr.from(r), n = be(t, i.decimals);\n        !i.signed && n.lt(ef) && nf(\"unsigned value cannot be negative\", \"overflow\", \"value\", t);\n        let o = null;\n        i.signed ? o = n.toTwos(i.width).toHexString() : (o = n.toHexString(), o = oe(o, i.width / 8));\n        const h = Bi(n, i.decimals);\n        return new Ut(Ar, o, h, i);\n    }\n    static fromBytes(t, r) {\n        r == null && (r = \"fixed\");\n        const i = vr.from(r);\n        if (Ot(t).length > i.width / 8) throw new Error(\"overflow\");\n        let n = V.from(t);\n        i.signed && (n = n.fromTwos(i.width));\n        const o = n.toTwos((i.signed ? 0 : 1) + i.width).toHexString(), h = Bi(n, i.decimals);\n        return new Ut(Ar, o, h, i);\n    }\n    static from(t, r) {\n        if (typeof t == \"string\") return Ut.fromString(t, r);\n        if (nr(t)) return Ut.fromBytes(t, r);\n        try {\n            return Ut.fromValue(t, 0, r);\n        } catch (i) {\n            if (i.code !== z.errors.INVALID_ARGUMENT) throw i;\n        }\n        return Ht.throwArgumentError(\"invalid FixedNumber value\", \"value\", t);\n    }\n    static isFixedNumber(t) {\n        return !!(t && t._isFixedNumber);\n    }\n}\nconst ff = Ut.from(1), zs = Ut.from(\"0.5\"), js = \"strings/5.7.0\", of = new z(js);\nvar Fr;\n(function(e) {\n    e.current = \"\", e.NFC = \"NFC\", e.NFD = \"NFD\", e.NFKC = \"NFKC\", e.NFKD = \"NFKD\";\n})(Fr || (Fr = {}));\nvar fr;\n(function(e) {\n    e.UNEXPECTED_CONTINUE = \"unexpected continuation byte\", e.BAD_PREFIX = \"bad codepoint prefix\", e.OVERRUN = \"string overrun\", e.MISSING_CONTINUE = \"missing continuation byte\", e.OUT_OF_RANGE = \"out of UTF-8 range\", e.UTF16_SURROGATE = \"UTF-16 surrogate\", e.OVERLONG = \"overlong representation\";\n})(fr || (fr = {}));\nfunction Qs(e, t, r, i, n) {\n    return of.throwArgumentError(`invalid codepoint at offset ${t}; ${e}`, \"bytes\", r);\n}\nfunction sf(e, t, r, i, n) {\n    if (e === fr.BAD_PREFIX || e === fr.UNEXPECTED_CONTINUE) {\n        let o = 0;\n        for(let h = t + 1; h < r.length && r[h] >> 6 === 2; h++)o++;\n        return o;\n    }\n    return e === fr.OVERRUN ? r.length - t - 1 : 0;\n}\nfunction Js(e, t, r, i, n) {\n    return e === fr.OVERLONG ? (i.push(n), 0) : (i.push(65533), sf(e, t, r));\n}\nObject.freeze({\n    error: Qs,\n    ignore: sf,\n    replace: Js\n});\nfunction Ci(e, t = Fr.current) {\n    t != Fr.current && (of.checkNormalize(), e = e.normalize(t));\n    let r = [];\n    for(let i = 0; i < e.length; i++){\n        const n = e.charCodeAt(i);\n        if (n < 128) r.push(n);\n        else if (n < 2048) r.push(n >> 6 | 192), r.push(n & 63 | 128);\n        else if ((n & 64512) == 55296) {\n            i++;\n            const o = e.charCodeAt(i);\n            if (i >= e.length || (o & 64512) !== 56320) throw new Error(\"invalid utf-8 string\");\n            const h = 65536 + ((n & 1023) << 10) + (o & 1023);\n            r.push(h >> 18 | 240), r.push(h >> 12 & 63 | 128), r.push(h >> 6 & 63 | 128), r.push(h & 63 | 128);\n        } else r.push(n >> 12 | 224), r.push(n >> 6 & 63 | 128), r.push(n & 63 | 128);\n    }\n    return Ot(r);\n}\nfunction Gs(e) {\n    if (e.length % 4 !== 0) throw new Error(\"bad data\");\n    let t = [];\n    for(let r = 0; r < e.length; r += 4)t.push(parseInt(e.substring(r, r + 4), 16));\n    return t;\n}\nfunction Ri(e, t) {\n    t || (t = function(n) {\n        return [\n            parseInt(n, 16)\n        ];\n    });\n    let r = 0, i = {};\n    return e.split(\",\").forEach((n)=>{\n        let o = n.split(\":\");\n        r += parseInt(o[0], 16), i[r] = t(o[1]);\n    }), i;\n}\nfunction af(e) {\n    let t = 0;\n    return e.split(\",\").map((r)=>{\n        let i = r.split(\"-\");\n        i.length === 1 ? i[1] = \"0\" : i[1] === \"\" && (i[1] = \"1\");\n        let n = t + parseInt(i[0], 16);\n        return t = parseInt(i[1], 16), {\n            l: n,\n            h: t\n        };\n    });\n}\naf(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\"), \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((e)=>parseInt(e, 16)), Ri(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\"), Ri(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\"), Ri(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", Gs), af(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nconst uf = \"hash/5.7.0\";\nfunction Ys(e) {\n    e = atob(e);\n    const t = [];\n    for(let r = 0; r < e.length; r++)t.push(e.charCodeAt(r));\n    return Ot(t);\n}\nfunction hf(e, t) {\n    t == null && (t = 1);\n    const r = [], i = r.forEach, n = function(o, h) {\n        i.call(o, function(p) {\n            h > 0 && Array.isArray(p) ? n(p, h - 1) : r.push(p);\n        });\n    };\n    return n(e, t), r;\n}\nfunction Vs(e) {\n    const t = {};\n    for(let r = 0; r < e.length; r++){\n        const i = e[r];\n        t[i[0]] = i[1];\n    }\n    return t;\n}\nfunction Ws(e) {\n    let t = 0;\n    function r() {\n        return e[t++] << 8 | e[t++];\n    }\n    let i = r(), n = 1, o = [\n        0,\n        1\n    ];\n    for(let H = 1; H < i; H++)o.push(n += r());\n    let h = r(), p = t;\n    t += h;\n    let A = 0, v = 0;\n    function w() {\n        return A == 0 && (v = v << 8 | e[t++], A = 8), v >> --A & 1;\n    }\n    const y = 31, S = Math.pow(2, y), N = S >>> 1, I = N >> 1, C = S - 1;\n    let D = 0;\n    for(let H = 0; H < y; H++)D = D << 1 | w();\n    let U = [], J = 0, Bt = S;\n    for(;;){\n        let H = Math.floor(((D - J + 1) * n - 1) / Bt), L = 0, Pt = i;\n        for(; Pt - L > 1;){\n            let Vt = L + Pt >>> 1;\n            H < o[Vt] ? Pt = Vt : L = Vt;\n        }\n        if (L == 0) break;\n        U.push(L);\n        let W = J + Math.floor(Bt * o[L] / n), Rt = J + Math.floor(Bt * o[L + 1] / n) - 1;\n        for(; !((W ^ Rt) & N);)D = D << 1 & C | w(), W = W << 1 & C, Rt = Rt << 1 & C | 1;\n        for(; W & ~Rt & I;)D = D & N | D << 1 & C >>> 1 | w(), W = W << 1 ^ N, Rt = (Rt ^ N) << 1 | N | 1;\n        J = W, Bt = 1 + Rt - W;\n    }\n    let G = i - 4;\n    return U.map((H)=>{\n        switch(H - G){\n            case 3:\n                return G + 65792 + (e[p++] << 16 | e[p++] << 8 | e[p++]);\n            case 2:\n                return G + 256 + (e[p++] << 8 | e[p++]);\n            case 1:\n                return G + e[p++];\n            default:\n                return H - 1;\n        }\n    });\n}\nfunction Xs(e) {\n    let t = 0;\n    return ()=>e[t++];\n}\nfunction $s(e) {\n    return Xs(Ws(e));\n}\nfunction Zs(e) {\n    return e & 1 ? ~e >> 1 : e >> 1;\n}\nfunction t0(e, t) {\n    let r = Array(e);\n    for(let i = 0; i < e; i++)r[i] = 1 + t();\n    return r;\n}\nfunction cf(e, t) {\n    let r = Array(e);\n    for(let i = 0, n = -1; i < e; i++)r[i] = n += 1 + t();\n    return r;\n}\nfunction e0(e, t) {\n    let r = Array(e);\n    for(let i = 0, n = 0; i < e; i++)r[i] = n += Zs(t());\n    return r;\n}\nfunction Ur(e, t) {\n    let r = cf(e(), e), i = e(), n = cf(i, e), o = t0(i, e);\n    for(let h = 0; h < i; h++)for(let p = 0; p < o[h]; p++)r.push(n[h] + p);\n    return t ? r.map((h)=>t[h]) : r;\n}\nfunction r0(e) {\n    let t = [];\n    for(;;){\n        let r = e();\n        if (r == 0) break;\n        t.push(n0(r, e));\n    }\n    for(;;){\n        let r = e() - 1;\n        if (r < 0) break;\n        t.push(f0(r, e));\n    }\n    return Vs(hf(t));\n}\nfunction i0(e) {\n    let t = [];\n    for(;;){\n        let r = e();\n        if (r == 0) break;\n        t.push(r);\n    }\n    return t;\n}\nfunction lf(e, t, r) {\n    let i = Array(e).fill(void 0).map(()=>[]);\n    for(let n = 0; n < t; n++)e0(e, r).forEach((o, h)=>i[h].push(o));\n    return i;\n}\nfunction n0(e, t) {\n    let r = 1 + t(), i = t(), n = i0(t), o = lf(n.length, 1 + e, t);\n    return hf(o.map((h, p)=>{\n        const A = h[0], v = h.slice(1);\n        return Array(n[p]).fill(void 0).map((w, y)=>{\n            let S = y * i;\n            return [\n                A + y * r,\n                v.map((N)=>N + S)\n            ];\n        });\n    }));\n}\nfunction f0(e, t) {\n    let r = 1 + t();\n    return lf(r, 1 + e, t).map((n)=>[\n            n[0],\n            n.slice(1)\n        ]);\n}\nfunction o0(e) {\n    let t = Ur(e).sort((i, n)=>i - n);\n    return r();\n    function r() {\n        let i = [];\n        for(;;){\n            let v = Ur(e, t);\n            if (v.length == 0) break;\n            i.push({\n                set: new Set(v),\n                node: r()\n            });\n        }\n        i.sort((v, w)=>w.set.size - v.set.size);\n        let n = e(), o = n % 3;\n        n = n / 3 | 0;\n        let h = !!(n & 1);\n        n >>= 1;\n        let p = n == 1, A = n == 2;\n        return {\n            branches: i,\n            valid: o,\n            fe0f: h,\n            save: p,\n            check: A\n        };\n    }\n}\nfunction s0() {\n    return $s(Ys(\"\"));\n}\nconst kr = s0();\nnew Set(Ur(kr)), new Set(Ur(kr)), r0(kr), o0(kr), new z(uf);\nconst a0 = new Uint8Array(32);\na0.fill(0);\nconst u0 = `\u0019Ethereum Signed Message:\n`;\nfunction df(e) {\n    return typeof e == \"string\" && (e = Ci(e)), Ii(Ds([\n        Ci(u0),\n        Ci(String(e.length)),\n        e\n    ]));\n}\nconst h0 = \"rlp/5.7.0\";\nnew z(h0);\nconst c0 = \"address/5.7.0\", yr = new z(c0);\nfunction pf(e) {\n    Jt(e, 20) || yr.throwArgumentError(\"invalid address\", \"address\", e), e = e.toLowerCase();\n    const t = e.substring(2).split(\"\"), r = new Uint8Array(40);\n    for(let n = 0; n < 40; n++)r[n] = t[n].charCodeAt(0);\n    const i = Ot(Ii(r));\n    for(let n = 0; n < 40; n += 2)i[n >> 1] >> 4 >= 8 && (t[n] = t[n].toUpperCase()), (i[n >> 1] & 15) >= 8 && (t[n + 1] = t[n + 1].toUpperCase());\n    return \"0x\" + t.join(\"\");\n}\nconst l0 = 9007199254740991;\nfunction d0(e) {\n    return Math.log10 ? Math.log10(e) : Math.log(e) / Math.LN10;\n}\nconst Oi = {};\nfor(let e = 0; e < 10; e++)Oi[String(e)] = String(e);\nfor(let e = 0; e < 26; e++)Oi[String.fromCharCode(65 + e)] = String(10 + e);\nconst vf = Math.floor(d0(l0));\nfunction p0(e) {\n    e = e.toUpperCase(), e = e.substring(4) + e.substring(0, 2) + \"00\";\n    let t = e.split(\"\").map((i)=>Oi[i]).join(\"\");\n    for(; t.length >= vf;){\n        let i = t.substring(0, vf);\n        t = parseInt(i, 10) % 97 + t.substring(i.length);\n    }\n    let r = String(98 - parseInt(t, 10) % 97);\n    for(; r.length < 2;)r = \"0\" + r;\n    return r;\n}\nfunction v0(e) {\n    let t = null;\n    if (typeof e != \"string\" && yr.throwArgumentError(\"invalid address\", \"address\", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), t = pf(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e && yr.throwArgumentError(\"bad address checksum\", \"address\", e);\n    else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        for(e.substring(2, 4) !== p0(e) && yr.throwArgumentError(\"bad icap checksum\", \"address\", e), t = Ls(e.substring(4)); t.length < 40;)t = \"0\" + t;\n        t = pf(\"0x\" + t);\n    } else yr.throwArgumentError(\"invalid address\", \"address\", e);\n    return t;\n}\nconst g0 = \"properties/5.7.0\";\nnew z(g0);\nfunction wr(e, t, r) {\n    Object.defineProperty(e, t, {\n        enumerable: !0,\n        value: r,\n        writable: !1\n    });\n}\nnew z(uf);\nconst m0 = new Uint8Array(32);\nm0.fill(0), V.from(-1);\nconst A0 = V.from(0), b0 = V.from(1);\nV.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"), oe(b0.toHexString(), 32), oe(A0.toHexString(), 32);\nvar se = {}, Q = {}, xr = gf;\nfunction gf(e, t) {\n    if (!e) throw new Error(t || \"Assertion failed\");\n}\ngf.equal = function(t, r, i) {\n    if (t != r) throw new Error(i || \"Assertion failed: \" + t + \" != \" + r);\n};\nvar Pi = {\n    exports: {}\n};\ntypeof Object.create == \"function\" ? Pi.exports = function(t, r) {\n    r && (t.super_ = r, t.prototype = Object.create(r.prototype, {\n        constructor: {\n            value: t,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n        }\n    }));\n} : Pi.exports = function(t, r) {\n    if (r) {\n        t.super_ = r;\n        var i = function() {};\n        i.prototype = r.prototype, t.prototype = new i, t.prototype.constructor = t;\n    }\n};\nvar y0 = xr, w0 = Pi.exports;\nQ.inherits = w0;\nfunction x0(e, t) {\n    return (e.charCodeAt(t) & 64512) !== 55296 || t < 0 || t + 1 >= e.length ? !1 : (e.charCodeAt(t + 1) & 64512) === 56320;\n}\nfunction M0(e, t) {\n    if (Array.isArray(e)) return e.slice();\n    if (!e) return [];\n    var r = [];\n    if (typeof e == \"string\") if (t) {\n        if (t === \"hex\") for(e = e.replace(/[^a-z0-9]+/ig, \"\"), e.length % 2 !== 0 && (e = \"0\" + e), n = 0; n < e.length; n += 2)r.push(parseInt(e[n] + e[n + 1], 16));\n    } else for(var i = 0, n = 0; n < e.length; n++){\n        var o = e.charCodeAt(n);\n        o < 128 ? r[i++] = o : o < 2048 ? (r[i++] = o >> 6 | 192, r[i++] = o & 63 | 128) : x0(e, n) ? (o = 65536 + ((o & 1023) << 10) + (e.charCodeAt(++n) & 1023), r[i++] = o >> 18 | 240, r[i++] = o >> 12 & 63 | 128, r[i++] = o >> 6 & 63 | 128, r[i++] = o & 63 | 128) : (r[i++] = o >> 12 | 224, r[i++] = o >> 6 & 63 | 128, r[i++] = o & 63 | 128);\n    }\n    else for(n = 0; n < e.length; n++)r[n] = e[n] | 0;\n    return r;\n}\nQ.toArray = M0;\nfunction E0(e) {\n    for(var t = \"\", r = 0; r < e.length; r++)t += Af(e[r].toString(16));\n    return t;\n}\nQ.toHex = E0;\nfunction mf(e) {\n    var t = e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (e & 255) << 24;\n    return t >>> 0;\n}\nQ.htonl = mf;\nfunction S0(e, t) {\n    for(var r = \"\", i = 0; i < e.length; i++){\n        var n = e[i];\n        t === \"little\" && (n = mf(n)), r += bf(n.toString(16));\n    }\n    return r;\n}\nQ.toHex32 = S0;\nfunction Af(e) {\n    return e.length === 1 ? \"0\" + e : e;\n}\nQ.zero2 = Af;\nfunction bf(e) {\n    return e.length === 7 ? \"0\" + e : e.length === 6 ? \"00\" + e : e.length === 5 ? \"000\" + e : e.length === 4 ? \"0000\" + e : e.length === 3 ? \"00000\" + e : e.length === 2 ? \"000000\" + e : e.length === 1 ? \"0000000\" + e : e;\n}\nQ.zero8 = bf;\nfunction I0(e, t, r, i) {\n    var n = r - t;\n    y0(n % 4 === 0);\n    for(var o = new Array(n / 4), h = 0, p = t; h < o.length; h++, p += 4){\n        var A;\n        i === \"big\" ? A = e[p] << 24 | e[p + 1] << 16 | e[p + 2] << 8 | e[p + 3] : A = e[p + 3] << 24 | e[p + 2] << 16 | e[p + 1] << 8 | e[p], o[h] = A >>> 0;\n    }\n    return o;\n}\nQ.join32 = I0;\nfunction N0(e, t) {\n    for(var r = new Array(e.length * 4), i = 0, n = 0; i < e.length; i++, n += 4){\n        var o = e[i];\n        t === \"big\" ? (r[n] = o >>> 24, r[n + 1] = o >>> 16 & 255, r[n + 2] = o >>> 8 & 255, r[n + 3] = o & 255) : (r[n + 3] = o >>> 24, r[n + 2] = o >>> 16 & 255, r[n + 1] = o >>> 8 & 255, r[n] = o & 255);\n    }\n    return r;\n}\nQ.split32 = N0;\nfunction _0(e, t) {\n    return e >>> t | e << 32 - t;\n}\nQ.rotr32 = _0;\nfunction B0(e, t) {\n    return e << t | e >>> 32 - t;\n}\nQ.rotl32 = B0;\nfunction C0(e, t) {\n    return e + t >>> 0;\n}\nQ.sum32 = C0;\nfunction R0(e, t, r) {\n    return e + t + r >>> 0;\n}\nQ.sum32_3 = R0;\nfunction O0(e, t, r, i) {\n    return e + t + r + i >>> 0;\n}\nQ.sum32_4 = O0;\nfunction P0(e, t, r, i, n) {\n    return e + t + r + i + n >>> 0;\n}\nQ.sum32_5 = P0;\nfunction T0(e, t, r, i) {\n    var n = e[t], o = e[t + 1], h = i + o >>> 0, p = (h < i ? 1 : 0) + r + n;\n    e[t] = p >>> 0, e[t + 1] = h;\n}\nQ.sum64 = T0;\nfunction D0(e, t, r, i) {\n    var n = t + i >>> 0, o = (n < t ? 1 : 0) + e + r;\n    return o >>> 0;\n}\nQ.sum64_hi = D0;\nfunction F0(e, t, r, i) {\n    var n = t + i;\n    return n >>> 0;\n}\nQ.sum64_lo = F0;\nfunction U0(e, t, r, i, n, o, h, p) {\n    var A = 0, v = t;\n    v = v + i >>> 0, A += v < t ? 1 : 0, v = v + o >>> 0, A += v < o ? 1 : 0, v = v + p >>> 0, A += v < p ? 1 : 0;\n    var w = e + r + n + h + A;\n    return w >>> 0;\n}\nQ.sum64_4_hi = U0;\nfunction k0(e, t, r, i, n, o, h, p) {\n    var A = t + i + o + p;\n    return A >>> 0;\n}\nQ.sum64_4_lo = k0;\nfunction q0(e, t, r, i, n, o, h, p, A, v) {\n    var w = 0, y = t;\n    y = y + i >>> 0, w += y < t ? 1 : 0, y = y + o >>> 0, w += y < o ? 1 : 0, y = y + p >>> 0, w += y < p ? 1 : 0, y = y + v >>> 0, w += y < v ? 1 : 0;\n    var S = e + r + n + h + A + w;\n    return S >>> 0;\n}\nQ.sum64_5_hi = q0;\nfunction K0(e, t, r, i, n, o, h, p, A, v) {\n    var w = t + i + o + p + v;\n    return w >>> 0;\n}\nQ.sum64_5_lo = K0;\nfunction H0(e, t, r) {\n    var i = t << 32 - r | e >>> r;\n    return i >>> 0;\n}\nQ.rotr64_hi = H0;\nfunction L0(e, t, r) {\n    var i = e << 32 - r | t >>> r;\n    return i >>> 0;\n}\nQ.rotr64_lo = L0;\nfunction z0(e, t, r) {\n    return e >>> r;\n}\nQ.shr64_hi = z0;\nfunction j0(e, t, r) {\n    var i = e << 32 - r | t >>> r;\n    return i >>> 0;\n}\nQ.shr64_lo = j0;\nvar or = {}, yf = Q, Q0 = xr;\nfunction qr() {\n    this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = \"big\", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;\n}\nor.BlockHash = qr, qr.prototype.update = function(t, r) {\n    if (t = yf.toArray(t, r), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {\n        t = this.pending;\n        var i = t.length % this._delta8;\n        this.pending = t.slice(t.length - i, t.length), this.pending.length === 0 && (this.pending = null), t = yf.join32(t, 0, t.length - i, this.endian);\n        for(var n = 0; n < t.length; n += this._delta32)this._update(t, n, n + this._delta32);\n    }\n    return this;\n}, qr.prototype.digest = function(t) {\n    return this.update(this._pad()), Q0(this.pending === null), this._digest(t);\n}, qr.prototype._pad = function() {\n    var t = this.pendingTotal, r = this._delta8, i = r - (t + this.padLength) % r, n = new Array(i + this.padLength);\n    n[0] = 128;\n    for(var o = 1; o < i; o++)n[o] = 0;\n    if (t <<= 3, this.endian === \"big\") {\n        for(var h = 8; h < this.padLength; h++)n[o++] = 0;\n        n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = t >>> 24 & 255, n[o++] = t >>> 16 & 255, n[o++] = t >>> 8 & 255, n[o++] = t & 255;\n    } else for(n[o++] = t & 255, n[o++] = t >>> 8 & 255, n[o++] = t >>> 16 & 255, n[o++] = t >>> 24 & 255, n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = 0, h = 8; h < this.padLength; h++)n[o++] = 0;\n    return n;\n};\nvar sr = {}, ae = {}, J0 = Q, ue = J0.rotr32;\nfunction G0(e, t, r, i) {\n    if (e === 0) return wf(t, r, i);\n    if (e === 1 || e === 3) return Mf(t, r, i);\n    if (e === 2) return xf(t, r, i);\n}\nae.ft_1 = G0;\nfunction wf(e, t, r) {\n    return e & t ^ ~e & r;\n}\nae.ch32 = wf;\nfunction xf(e, t, r) {\n    return e & t ^ e & r ^ t & r;\n}\nae.maj32 = xf;\nfunction Mf(e, t, r) {\n    return e ^ t ^ r;\n}\nae.p32 = Mf;\nfunction Y0(e) {\n    return ue(e, 2) ^ ue(e, 13) ^ ue(e, 22);\n}\nae.s0_256 = Y0;\nfunction V0(e) {\n    return ue(e, 6) ^ ue(e, 11) ^ ue(e, 25);\n}\nae.s1_256 = V0;\nfunction W0(e) {\n    return ue(e, 7) ^ ue(e, 18) ^ e >>> 3;\n}\nae.g0_256 = W0;\nfunction X0(e) {\n    return ue(e, 17) ^ ue(e, 19) ^ e >>> 10;\n}\nae.g1_256 = X0;\nvar ar = Q, $0 = or, Z0 = ae, Ti = ar.rotl32, Mr = ar.sum32, ta = ar.sum32_5, ea = Z0.ft_1, Ef = $0.BlockHash, ra = [\n    1518500249,\n    1859775393,\n    2400959708,\n    3395469782\n];\nfunction he() {\n    if (!(this instanceof he)) return new he;\n    Ef.call(this), this.h = [\n        1732584193,\n        4023233417,\n        2562383102,\n        271733878,\n        3285377520\n    ], this.W = new Array(80);\n}\nar.inherits(he, Ef);\nvar ia = he;\nhe.blockSize = 512, he.outSize = 160, he.hmacStrength = 80, he.padLength = 64, he.prototype._update = function(t, r) {\n    for(var i = this.W, n = 0; n < 16; n++)i[n] = t[r + n];\n    for(; n < i.length; n++)i[n] = Ti(i[n - 3] ^ i[n - 8] ^ i[n - 14] ^ i[n - 16], 1);\n    var o = this.h[0], h = this.h[1], p = this.h[2], A = this.h[3], v = this.h[4];\n    for(n = 0; n < i.length; n++){\n        var w = ~~(n / 20), y = ta(Ti(o, 5), ea(w, h, p, A), v, i[n], ra[w]);\n        v = A, A = p, p = Ti(h, 30), h = o, o = y;\n    }\n    this.h[0] = Mr(this.h[0], o), this.h[1] = Mr(this.h[1], h), this.h[2] = Mr(this.h[2], p), this.h[3] = Mr(this.h[3], A), this.h[4] = Mr(this.h[4], v);\n}, he.prototype._digest = function(t) {\n    return t === \"hex\" ? ar.toHex32(this.h, \"big\") : ar.split32(this.h, \"big\");\n};\nvar ur = Q, na = or, hr = ae, fa = xr, ie = ur.sum32, oa = ur.sum32_4, sa = ur.sum32_5, aa = hr.ch32, ua = hr.maj32, ha = hr.s0_256, ca = hr.s1_256, la = hr.g0_256, da = hr.g1_256, Sf = na.BlockHash, pa = [\n    1116352408,\n    1899447441,\n    3049323471,\n    3921009573,\n    961987163,\n    1508970993,\n    2453635748,\n    2870763221,\n    3624381080,\n    310598401,\n    607225278,\n    1426881987,\n    1925078388,\n    2162078206,\n    2614888103,\n    3248222580,\n    3835390401,\n    4022224774,\n    264347078,\n    604807628,\n    770255983,\n    1249150122,\n    1555081692,\n    1996064986,\n    2554220882,\n    2821834349,\n    2952996808,\n    3210313671,\n    3336571891,\n    3584528711,\n    113926993,\n    338241895,\n    666307205,\n    773529912,\n    1294757372,\n    1396182291,\n    1695183700,\n    1986661051,\n    2177026350,\n    2456956037,\n    2730485921,\n    2820302411,\n    3259730800,\n    3345764771,\n    3516065817,\n    3600352804,\n    4094571909,\n    275423344,\n    430227734,\n    506948616,\n    659060556,\n    883997877,\n    958139571,\n    1322822218,\n    1537002063,\n    1747873779,\n    1955562222,\n    2024104815,\n    2227730452,\n    2361852424,\n    2428436474,\n    2756734187,\n    3204031479,\n    3329325298\n];\nfunction ce() {\n    if (!(this instanceof ce)) return new ce;\n    Sf.call(this), this.h = [\n        1779033703,\n        3144134277,\n        1013904242,\n        2773480762,\n        1359893119,\n        2600822924,\n        528734635,\n        1541459225\n    ], this.k = pa, this.W = new Array(64);\n}\nur.inherits(ce, Sf);\nvar If = ce;\nce.blockSize = 512, ce.outSize = 256, ce.hmacStrength = 192, ce.padLength = 64, ce.prototype._update = function(t, r) {\n    for(var i = this.W, n = 0; n < 16; n++)i[n] = t[r + n];\n    for(; n < i.length; n++)i[n] = oa(da(i[n - 2]), i[n - 7], la(i[n - 15]), i[n - 16]);\n    var o = this.h[0], h = this.h[1], p = this.h[2], A = this.h[3], v = this.h[4], w = this.h[5], y = this.h[6], S = this.h[7];\n    for(fa(this.k.length === i.length), n = 0; n < i.length; n++){\n        var N = sa(S, ca(v), aa(v, w, y), this.k[n], i[n]), I = ie(ha(o), ua(o, h, p));\n        S = y, y = w, w = v, v = ie(A, N), A = p, p = h, h = o, o = ie(N, I);\n    }\n    this.h[0] = ie(this.h[0], o), this.h[1] = ie(this.h[1], h), this.h[2] = ie(this.h[2], p), this.h[3] = ie(this.h[3], A), this.h[4] = ie(this.h[4], v), this.h[5] = ie(this.h[5], w), this.h[6] = ie(this.h[6], y), this.h[7] = ie(this.h[7], S);\n}, ce.prototype._digest = function(t) {\n    return t === \"hex\" ? ur.toHex32(this.h, \"big\") : ur.split32(this.h, \"big\");\n};\nvar Di = Q, Nf = If;\nfunction ye() {\n    if (!(this instanceof ye)) return new ye;\n    Nf.call(this), this.h = [\n        3238371032,\n        914150663,\n        812702999,\n        4144912697,\n        4290775857,\n        1750603025,\n        1694076839,\n        3204075428\n    ];\n}\nDi.inherits(ye, Nf);\nvar va = ye;\nye.blockSize = 512, ye.outSize = 224, ye.hmacStrength = 192, ye.padLength = 64, ye.prototype._digest = function(t) {\n    return t === \"hex\" ? Di.toHex32(this.h.slice(0, 7), \"big\") : Di.split32(this.h.slice(0, 7), \"big\");\n};\nvar jt = Q, ga = or, ma = xr, le = jt.rotr64_hi, de = jt.rotr64_lo, _f = jt.shr64_hi, Bf = jt.shr64_lo, Be = jt.sum64, Fi = jt.sum64_hi, Ui = jt.sum64_lo, Aa = jt.sum64_4_hi, ba = jt.sum64_4_lo, ya = jt.sum64_5_hi, wa = jt.sum64_5_lo, Cf = ga.BlockHash, xa = [\n    1116352408,\n    3609767458,\n    1899447441,\n    602891725,\n    3049323471,\n    3964484399,\n    3921009573,\n    2173295548,\n    961987163,\n    4081628472,\n    1508970993,\n    3053834265,\n    2453635748,\n    2937671579,\n    2870763221,\n    3664609560,\n    3624381080,\n    2734883394,\n    310598401,\n    1164996542,\n    607225278,\n    1323610764,\n    1426881987,\n    3590304994,\n    1925078388,\n    4068182383,\n    2162078206,\n    991336113,\n    2614888103,\n    633803317,\n    3248222580,\n    3479774868,\n    3835390401,\n    2666613458,\n    4022224774,\n    944711139,\n    264347078,\n    2341262773,\n    604807628,\n    2007800933,\n    770255983,\n    1495990901,\n    1249150122,\n    1856431235,\n    1555081692,\n    3175218132,\n    1996064986,\n    2198950837,\n    2554220882,\n    3999719339,\n    2821834349,\n    766784016,\n    2952996808,\n    2566594879,\n    3210313671,\n    3203337956,\n    3336571891,\n    1034457026,\n    3584528711,\n    2466948901,\n    113926993,\n    3758326383,\n    338241895,\n    168717936,\n    666307205,\n    1188179964,\n    773529912,\n    1546045734,\n    1294757372,\n    1522805485,\n    1396182291,\n    2643833823,\n    1695183700,\n    2343527390,\n    1986661051,\n    1014477480,\n    2177026350,\n    1206759142,\n    2456956037,\n    344077627,\n    2730485921,\n    1290863460,\n    2820302411,\n    3158454273,\n    3259730800,\n    3505952657,\n    3345764771,\n    106217008,\n    3516065817,\n    3606008344,\n    3600352804,\n    1432725776,\n    4094571909,\n    1467031594,\n    275423344,\n    851169720,\n    430227734,\n    3100823752,\n    506948616,\n    1363258195,\n    659060556,\n    3750685593,\n    883997877,\n    3785050280,\n    958139571,\n    3318307427,\n    1322822218,\n    3812723403,\n    1537002063,\n    2003034995,\n    1747873779,\n    3602036899,\n    1955562222,\n    1575990012,\n    2024104815,\n    1125592928,\n    2227730452,\n    2716904306,\n    2361852424,\n    442776044,\n    2428436474,\n    593698344,\n    2756734187,\n    3733110249,\n    3204031479,\n    2999351573,\n    3329325298,\n    3815920427,\n    3391569614,\n    3928383900,\n    3515267271,\n    566280711,\n    3940187606,\n    3454069534,\n    4118630271,\n    4000239992,\n    116418474,\n    1914138554,\n    174292421,\n    2731055270,\n    289380356,\n    3203993006,\n    460393269,\n    320620315,\n    685471733,\n    587496836,\n    852142971,\n    1086792851,\n    1017036298,\n    365543100,\n    1126000580,\n    2618297676,\n    1288033470,\n    3409855158,\n    1501505948,\n    4234509866,\n    1607167915,\n    987167468,\n    1816402316,\n    1246189591\n];\nfunction ne() {\n    if (!(this instanceof ne)) return new ne;\n    Cf.call(this), this.h = [\n        1779033703,\n        4089235720,\n        3144134277,\n        2227873595,\n        1013904242,\n        4271175723,\n        2773480762,\n        1595750129,\n        1359893119,\n        2917565137,\n        2600822924,\n        725511199,\n        528734635,\n        4215389547,\n        1541459225,\n        327033209\n    ], this.k = xa, this.W = new Array(160);\n}\njt.inherits(ne, Cf);\nvar Rf = ne;\nne.blockSize = 1024, ne.outSize = 512, ne.hmacStrength = 192, ne.padLength = 128, ne.prototype._prepareBlock = function(t, r) {\n    for(var i = this.W, n = 0; n < 32; n++)i[n] = t[r + n];\n    for(; n < i.length; n += 2){\n        var o = Pa(i[n - 4], i[n - 3]), h = Ta(i[n - 4], i[n - 3]), p = i[n - 14], A = i[n - 13], v = Ra(i[n - 30], i[n - 29]), w = Oa(i[n - 30], i[n - 29]), y = i[n - 32], S = i[n - 31];\n        i[n] = Aa(o, h, p, A, v, w, y, S), i[n + 1] = ba(o, h, p, A, v, w, y, S);\n    }\n}, ne.prototype._update = function(t, r) {\n    this._prepareBlock(t, r);\n    var i = this.W, n = this.h[0], o = this.h[1], h = this.h[2], p = this.h[3], A = this.h[4], v = this.h[5], w = this.h[6], y = this.h[7], S = this.h[8], N = this.h[9], I = this.h[10], C = this.h[11], D = this.h[12], U = this.h[13], J = this.h[14], Bt = this.h[15];\n    ma(this.k.length === i.length);\n    for(var G = 0; G < i.length; G += 2){\n        var H = J, L = Bt, Pt = Ba(S, N), W = Ca(S, N), Rt = Ma(S, N, I, C, D), Vt = Ea(S, N, I, C, D, U), Y = this.k[G], Wt = this.k[G + 1], b = i[G], f = i[G + 1], a = ya(H, L, Pt, W, Rt, Vt, Y, Wt, b, f), c = wa(H, L, Pt, W, Rt, Vt, Y, Wt, b, f);\n        H = Na(n, o), L = _a(n, o), Pt = Sa(n, o, h, p, A), W = Ia(n, o, h, p, A, v);\n        var d = Fi(H, L, Pt, W), m = Ui(H, L, Pt, W);\n        J = D, Bt = U, D = I, U = C, I = S, C = N, S = Fi(w, y, a, c), N = Ui(y, y, a, c), w = A, y = v, A = h, v = p, h = n, p = o, n = Fi(a, c, d, m), o = Ui(a, c, d, m);\n    }\n    Be(this.h, 0, n, o), Be(this.h, 2, h, p), Be(this.h, 4, A, v), Be(this.h, 6, w, y), Be(this.h, 8, S, N), Be(this.h, 10, I, C), Be(this.h, 12, D, U), Be(this.h, 14, J, Bt);\n}, ne.prototype._digest = function(t) {\n    return t === \"hex\" ? jt.toHex32(this.h, \"big\") : jt.split32(this.h, \"big\");\n};\nfunction Ma(e, t, r, i, n) {\n    var o = e & r ^ ~e & n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ea(e, t, r, i, n, o) {\n    var h = t & i ^ ~t & o;\n    return h < 0 && (h += 4294967296), h;\n}\nfunction Sa(e, t, r, i, n) {\n    var o = e & r ^ e & n ^ r & n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ia(e, t, r, i, n, o) {\n    var h = t & i ^ t & o ^ i & o;\n    return h < 0 && (h += 4294967296), h;\n}\nfunction Na(e, t) {\n    var r = le(e, t, 28), i = le(t, e, 2), n = le(t, e, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction _a(e, t) {\n    var r = de(e, t, 28), i = de(t, e, 2), n = de(t, e, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ba(e, t) {\n    var r = le(e, t, 14), i = le(e, t, 18), n = le(t, e, 9), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ca(e, t) {\n    var r = de(e, t, 14), i = de(e, t, 18), n = de(t, e, 9), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ra(e, t) {\n    var r = le(e, t, 1), i = le(e, t, 8), n = _f(e, t, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Oa(e, t) {\n    var r = de(e, t, 1), i = de(e, t, 8), n = Bf(e, t, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Pa(e, t) {\n    var r = le(e, t, 19), i = le(t, e, 29), n = _f(e, t, 6), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ta(e, t) {\n    var r = de(e, t, 19), i = de(t, e, 29), n = Bf(e, t, 6), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nvar ki = Q, Of = Rf;\nfunction we() {\n    if (!(this instanceof we)) return new we;\n    Of.call(this), this.h = [\n        3418070365,\n        3238371032,\n        1654270250,\n        914150663,\n        2438529370,\n        812702999,\n        355462360,\n        4144912697,\n        1731405415,\n        4290775857,\n        2394180231,\n        1750603025,\n        3675008525,\n        1694076839,\n        1203062813,\n        3204075428\n    ];\n}\nki.inherits(we, Of);\nvar Da = we;\nwe.blockSize = 1024, we.outSize = 384, we.hmacStrength = 192, we.padLength = 128, we.prototype._digest = function(t) {\n    return t === \"hex\" ? ki.toHex32(this.h.slice(0, 12), \"big\") : ki.split32(this.h.slice(0, 12), \"big\");\n}, sr.sha1 = ia, sr.sha224 = va, sr.sha256 = If, sr.sha384 = Da, sr.sha512 = Rf;\nvar Pf = {}, Xe = Q, Fa = or, Kr = Xe.rotl32, Tf = Xe.sum32, Er = Xe.sum32_3, Df = Xe.sum32_4, Ff = Fa.BlockHash;\nfunction pe() {\n    if (!(this instanceof pe)) return new pe;\n    Ff.call(this), this.h = [\n        1732584193,\n        4023233417,\n        2562383102,\n        271733878,\n        3285377520\n    ], this.endian = \"little\";\n}\nXe.inherits(pe, Ff), Pf.ripemd160 = pe, pe.blockSize = 512, pe.outSize = 160, pe.hmacStrength = 192, pe.padLength = 64, pe.prototype._update = function(t, r) {\n    for(var i = this.h[0], n = this.h[1], o = this.h[2], h = this.h[3], p = this.h[4], A = i, v = n, w = o, y = h, S = p, N = 0; N < 80; N++){\n        var I = Tf(Kr(Df(i, Uf(N, n, o, h), t[qa[N] + r], Ua(N)), Ha[N]), p);\n        i = p, p = h, h = Kr(o, 10), o = n, n = I, I = Tf(Kr(Df(A, Uf(79 - N, v, w, y), t[Ka[N] + r], ka(N)), La[N]), S), A = S, S = y, y = Kr(w, 10), w = v, v = I;\n    }\n    I = Er(this.h[1], o, y), this.h[1] = Er(this.h[2], h, S), this.h[2] = Er(this.h[3], p, A), this.h[3] = Er(this.h[4], i, v), this.h[4] = Er(this.h[0], n, w), this.h[0] = I;\n}, pe.prototype._digest = function(t) {\n    return t === \"hex\" ? Xe.toHex32(this.h, \"little\") : Xe.split32(this.h, \"little\");\n};\nfunction Uf(e, t, r, i) {\n    return e <= 15 ? t ^ r ^ i : e <= 31 ? t & r | ~t & i : e <= 47 ? (t | ~r) ^ i : e <= 63 ? t & i | r & ~i : t ^ (r | ~i);\n}\nfunction Ua(e) {\n    return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;\n}\nfunction ka(e) {\n    return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;\n}\nvar qa = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    7,\n    4,\n    13,\n    1,\n    10,\n    6,\n    15,\n    3,\n    12,\n    0,\n    9,\n    5,\n    2,\n    14,\n    11,\n    8,\n    3,\n    10,\n    14,\n    4,\n    9,\n    15,\n    8,\n    1,\n    2,\n    7,\n    0,\n    6,\n    13,\n    11,\n    5,\n    12,\n    1,\n    9,\n    11,\n    10,\n    0,\n    8,\n    12,\n    4,\n    13,\n    3,\n    7,\n    15,\n    14,\n    5,\n    6,\n    2,\n    4,\n    0,\n    5,\n    9,\n    7,\n    12,\n    2,\n    10,\n    14,\n    1,\n    3,\n    8,\n    11,\n    6,\n    15,\n    13\n], Ka = [\n    5,\n    14,\n    7,\n    0,\n    9,\n    2,\n    11,\n    4,\n    13,\n    6,\n    15,\n    8,\n    1,\n    10,\n    3,\n    12,\n    6,\n    11,\n    3,\n    7,\n    0,\n    13,\n    5,\n    10,\n    14,\n    15,\n    8,\n    12,\n    4,\n    9,\n    1,\n    2,\n    15,\n    5,\n    1,\n    3,\n    7,\n    14,\n    6,\n    9,\n    11,\n    8,\n    12,\n    2,\n    10,\n    0,\n    4,\n    13,\n    8,\n    6,\n    4,\n    1,\n    3,\n    11,\n    15,\n    0,\n    5,\n    12,\n    2,\n    13,\n    9,\n    7,\n    10,\n    14,\n    12,\n    15,\n    10,\n    4,\n    1,\n    5,\n    8,\n    7,\n    6,\n    2,\n    13,\n    14,\n    0,\n    3,\n    9,\n    11\n], Ha = [\n    11,\n    14,\n    15,\n    12,\n    5,\n    8,\n    7,\n    9,\n    11,\n    13,\n    14,\n    15,\n    6,\n    7,\n    9,\n    8,\n    7,\n    6,\n    8,\n    13,\n    11,\n    9,\n    7,\n    15,\n    7,\n    12,\n    15,\n    9,\n    11,\n    7,\n    13,\n    12,\n    11,\n    13,\n    6,\n    7,\n    14,\n    9,\n    13,\n    15,\n    14,\n    8,\n    13,\n    6,\n    5,\n    12,\n    7,\n    5,\n    11,\n    12,\n    14,\n    15,\n    14,\n    15,\n    9,\n    8,\n    9,\n    14,\n    5,\n    6,\n    8,\n    6,\n    5,\n    12,\n    9,\n    15,\n    5,\n    11,\n    6,\n    8,\n    13,\n    12,\n    5,\n    12,\n    13,\n    14,\n    11,\n    8,\n    5,\n    6\n], La = [\n    8,\n    9,\n    9,\n    11,\n    13,\n    15,\n    15,\n    5,\n    7,\n    7,\n    8,\n    11,\n    14,\n    14,\n    12,\n    6,\n    9,\n    13,\n    15,\n    7,\n    12,\n    8,\n    9,\n    11,\n    7,\n    7,\n    12,\n    7,\n    6,\n    15,\n    13,\n    11,\n    9,\n    7,\n    15,\n    11,\n    8,\n    6,\n    6,\n    14,\n    12,\n    13,\n    5,\n    14,\n    13,\n    13,\n    7,\n    5,\n    15,\n    5,\n    8,\n    11,\n    14,\n    14,\n    6,\n    14,\n    6,\n    9,\n    12,\n    9,\n    12,\n    5,\n    15,\n    8,\n    8,\n    5,\n    12,\n    9,\n    12,\n    5,\n    14,\n    6,\n    8,\n    13,\n    6,\n    5,\n    15,\n    13,\n    11,\n    11\n], za = Q, ja = xr;\nfunction cr(e, t, r) {\n    if (!(this instanceof cr)) return new cr(e, t, r);\n    this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(za.toArray(t, r));\n}\nvar Qa = cr;\ncr.prototype._init = function(t) {\n    t.length > this.blockSize && (t = new this.Hash().update(t).digest()), ja(t.length <= this.blockSize);\n    for(var r = t.length; r < this.blockSize; r++)t.push(0);\n    for(r = 0; r < t.length; r++)t[r] ^= 54;\n    for(this.inner = new this.Hash().update(t), r = 0; r < t.length; r++)t[r] ^= 106;\n    this.outer = new this.Hash().update(t);\n}, cr.prototype.update = function(t, r) {\n    return this.inner.update(t, r), this;\n}, cr.prototype.digest = function(t) {\n    return this.outer.update(this.inner.digest()), this.outer.digest(t);\n}, function(e) {\n    var t = e;\n    t.utils = Q, t.common = or, t.sha = sr, t.ripemd = Pf, t.hmac = Qa, t.sha1 = t.sha.sha1, t.sha256 = t.sha.sha256, t.sha224 = t.sha.sha224, t.sha384 = t.sha.sha384, t.sha512 = t.sha.sha512, t.ripemd160 = t.ripemd.ripemd160;\n}(se);\nfunction lr(e, t, r) {\n    return r = {\n        path: t,\n        exports: {},\n        require: function(i, n) {\n            return Ja(i, n ?? r.path);\n        }\n    }, e(r, r.exports), r.exports;\n}\nfunction Ja() {\n    throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n}\nvar qi = kf;\nfunction kf(e, t) {\n    if (!e) throw new Error(t || \"Assertion failed\");\n}\nkf.equal = function(t, r, i) {\n    if (t != r) throw new Error(i || \"Assertion failed: \" + t + \" != \" + r);\n};\nvar fe = lr(function(e, t) {\n    var r = t;\n    function i(h, p) {\n        if (Array.isArray(h)) return h.slice();\n        if (!h) return [];\n        var A = [];\n        if (typeof h != \"string\") {\n            for(var v = 0; v < h.length; v++)A[v] = h[v] | 0;\n            return A;\n        }\n        if (p === \"hex\") {\n            h = h.replace(/[^a-z0-9]+/ig, \"\"), h.length % 2 !== 0 && (h = \"0\" + h);\n            for(var v = 0; v < h.length; v += 2)A.push(parseInt(h[v] + h[v + 1], 16));\n        } else for(var v = 0; v < h.length; v++){\n            var w = h.charCodeAt(v), y = w >> 8, S = w & 255;\n            y ? A.push(y, S) : A.push(S);\n        }\n        return A;\n    }\n    r.toArray = i;\n    function n(h) {\n        return h.length === 1 ? \"0\" + h : h;\n    }\n    r.zero2 = n;\n    function o(h) {\n        for(var p = \"\", A = 0; A < h.length; A++)p += n(h[A].toString(16));\n        return p;\n    }\n    r.toHex = o, r.encode = function(p, A) {\n        return A === \"hex\" ? o(p) : p;\n    };\n}), Gt = lr(function(e, t) {\n    var r = t;\n    r.assert = qi, r.toArray = fe.toArray, r.zero2 = fe.zero2, r.toHex = fe.toHex, r.encode = fe.encode;\n    function i(A, v, w) {\n        var y = new Array(Math.max(A.bitLength(), w) + 1);\n        y.fill(0);\n        for(var S = 1 << v + 1, N = A.clone(), I = 0; I < y.length; I++){\n            var C, D = N.andln(S - 1);\n            N.isOdd() ? (D > (S >> 1) - 1 ? C = (S >> 1) - D : C = D, N.isubn(C)) : C = 0, y[I] = C, N.iushrn(1);\n        }\n        return y;\n    }\n    r.getNAF = i;\n    function n(A, v) {\n        var w = [\n            [],\n            []\n        ];\n        A = A.clone(), v = v.clone();\n        for(var y = 0, S = 0, N; A.cmpn(-y) > 0 || v.cmpn(-S) > 0;){\n            var I = A.andln(3) + y & 3, C = v.andln(3) + S & 3;\n            I === 3 && (I = -1), C === 3 && (C = -1);\n            var D;\n            I & 1 ? (N = A.andln(7) + y & 7, (N === 3 || N === 5) && C === 2 ? D = -I : D = I) : D = 0, w[0].push(D);\n            var U;\n            C & 1 ? (N = v.andln(7) + S & 7, (N === 3 || N === 5) && I === 2 ? U = -C : U = C) : U = 0, w[1].push(U), 2 * y === D + 1 && (y = 1 - y), 2 * S === U + 1 && (S = 1 - S), A.iushrn(1), v.iushrn(1);\n        }\n        return w;\n    }\n    r.getJSF = n;\n    function o(A, v, w) {\n        var y = \"_\" + v;\n        A.prototype[v] = function() {\n            return this[y] !== void 0 ? this[y] : this[y] = w.call(this);\n        };\n    }\n    r.cachedProperty = o;\n    function h(A) {\n        return typeof A == \"string\" ? r.toArray(A, \"hex\") : A;\n    }\n    r.parseBytes = h;\n    function p(A) {\n        return new K(A, \"hex\", \"le\");\n    }\n    r.intFromLE = p;\n}), Hr = Gt.getNAF, Ga = Gt.getJSF, Lr = Gt.assert;\nfunction Ce(e, t) {\n    this.type = e, this.p = new K(t.p, 16), this.red = t.prime ? K.red(t.prime) : K.mont(this.p), this.zero = new K(0).toRed(this.red), this.one = new K(1).toRed(this.red), this.two = new K(2).toRed(this.red), this.n = t.n && new K(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;\n    var r = this.n && this.p.div(this.n);\n    !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));\n}\nvar $e = Ce;\nCe.prototype.point = function() {\n    throw new Error(\"Not implemented\");\n}, Ce.prototype.validate = function() {\n    throw new Error(\"Not implemented\");\n}, Ce.prototype._fixedNafMul = function(t, r) {\n    Lr(t.precomputed);\n    var i = t._getDoubles(), n = Hr(r, 1, this._bitLength), o = (1 << i.step + 1) - (i.step % 2 === 0 ? 2 : 1);\n    o /= 3;\n    var h = [], p, A;\n    for(p = 0; p < n.length; p += i.step){\n        A = 0;\n        for(var v = p + i.step - 1; v >= p; v--)A = (A << 1) + n[v];\n        h.push(A);\n    }\n    for(var w = this.jpoint(null, null, null), y = this.jpoint(null, null, null), S = o; S > 0; S--){\n        for(p = 0; p < h.length; p++)A = h[p], A === S ? y = y.mixedAdd(i.points[p]) : A === -S && (y = y.mixedAdd(i.points[p].neg()));\n        w = w.add(y);\n    }\n    return w.toP();\n}, Ce.prototype._wnafMul = function(t, r) {\n    var i = 4, n = t._getNAFPoints(i);\n    i = n.wnd;\n    for(var o = n.points, h = Hr(r, i, this._bitLength), p = this.jpoint(null, null, null), A = h.length - 1; A >= 0; A--){\n        for(var v = 0; A >= 0 && h[A] === 0; A--)v++;\n        if (A >= 0 && v++, p = p.dblp(v), A < 0) break;\n        var w = h[A];\n        Lr(w !== 0), t.type === \"affine\" ? w > 0 ? p = p.mixedAdd(o[w - 1 >> 1]) : p = p.mixedAdd(o[-w - 1 >> 1].neg()) : w > 0 ? p = p.add(o[w - 1 >> 1]) : p = p.add(o[-w - 1 >> 1].neg());\n    }\n    return t.type === \"affine\" ? p.toP() : p;\n}, Ce.prototype._wnafMulAdd = function(t, r, i, n, o) {\n    var h = this._wnafT1, p = this._wnafT2, A = this._wnafT3, v = 0, w, y, S;\n    for(w = 0; w < n; w++){\n        S = r[w];\n        var N = S._getNAFPoints(t);\n        h[w] = N.wnd, p[w] = N.points;\n    }\n    for(w = n - 1; w >= 1; w -= 2){\n        var I = w - 1, C = w;\n        if (h[I] !== 1 || h[C] !== 1) {\n            A[I] = Hr(i[I], h[I], this._bitLength), A[C] = Hr(i[C], h[C], this._bitLength), v = Math.max(A[I].length, v), v = Math.max(A[C].length, v);\n            continue;\n        }\n        var D = [\n            r[I],\n            null,\n            null,\n            r[C]\n        ];\n        r[I].y.cmp(r[C].y) === 0 ? (D[1] = r[I].add(r[C]), D[2] = r[I].toJ().mixedAdd(r[C].neg())) : r[I].y.cmp(r[C].y.redNeg()) === 0 ? (D[1] = r[I].toJ().mixedAdd(r[C]), D[2] = r[I].add(r[C].neg())) : (D[1] = r[I].toJ().mixedAdd(r[C]), D[2] = r[I].toJ().mixedAdd(r[C].neg()));\n        var U = [\n            -3,\n            -1,\n            -5,\n            -7,\n            0,\n            7,\n            5,\n            1,\n            3\n        ], J = Ga(i[I], i[C]);\n        for(v = Math.max(J[0].length, v), A[I] = new Array(v), A[C] = new Array(v), y = 0; y < v; y++){\n            var Bt = J[0][y] | 0, G = J[1][y] | 0;\n            A[I][y] = U[(Bt + 1) * 3 + (G + 1)], A[C][y] = 0, p[I] = D;\n        }\n    }\n    var H = this.jpoint(null, null, null), L = this._wnafT4;\n    for(w = v; w >= 0; w--){\n        for(var Pt = 0; w >= 0;){\n            var W = !0;\n            for(y = 0; y < n; y++)L[y] = A[y][w] | 0, L[y] !== 0 && (W = !1);\n            if (!W) break;\n            Pt++, w--;\n        }\n        if (w >= 0 && Pt++, H = H.dblp(Pt), w < 0) break;\n        for(y = 0; y < n; y++){\n            var Rt = L[y];\n            Rt !== 0 && (Rt > 0 ? S = p[y][Rt - 1 >> 1] : Rt < 0 && (S = p[y][-Rt - 1 >> 1].neg()), S.type === \"affine\" ? H = H.mixedAdd(S) : H = H.add(S));\n        }\n    }\n    for(w = 0; w < n; w++)p[w] = null;\n    return o ? H : H.toP();\n};\nfunction Zt(e, t) {\n    this.curve = e, this.type = t, this.precomputed = null;\n}\nCe.BasePoint = Zt, Zt.prototype.eq = function() {\n    throw new Error(\"Not implemented\");\n}, Zt.prototype.validate = function() {\n    return this.curve.validate(this);\n}, Ce.prototype.decodePoint = function(t, r) {\n    t = Gt.toArray(t, r);\n    var i = this.p.byteLength();\n    if ((t[0] === 4 || t[0] === 6 || t[0] === 7) && t.length - 1 === 2 * i) {\n        t[0] === 6 ? Lr(t[t.length - 1] % 2 === 0) : t[0] === 7 && Lr(t[t.length - 1] % 2 === 1);\n        var n = this.point(t.slice(1, 1 + i), t.slice(1 + i, 1 + 2 * i));\n        return n;\n    } else if ((t[0] === 2 || t[0] === 3) && t.length - 1 === i) return this.pointFromX(t.slice(1, 1 + i), t[0] === 3);\n    throw new Error(\"Unknown point format\");\n}, Zt.prototype.encodeCompressed = function(t) {\n    return this.encode(t, !0);\n}, Zt.prototype._encode = function(t) {\n    var r = this.curve.p.byteLength(), i = this.getX().toArray(\"be\", r);\n    return t ? [\n        this.getY().isEven() ? 2 : 3\n    ].concat(i) : [\n        4\n    ].concat(i, this.getY().toArray(\"be\", r));\n}, Zt.prototype.encode = function(t, r) {\n    return Gt.encode(this._encode(r), t);\n}, Zt.prototype.precompute = function(t) {\n    if (this.precomputed) return this;\n    var r = {\n        doubles: null,\n        naf: null,\n        beta: null\n    };\n    return r.naf = this._getNAFPoints(8), r.doubles = this._getDoubles(4, t), r.beta = this._getBeta(), this.precomputed = r, this;\n}, Zt.prototype._hasDoubles = function(t) {\n    if (!this.precomputed) return !1;\n    var r = this.precomputed.doubles;\n    return r ? r.points.length >= Math.ceil((t.bitLength() + 1) / r.step) : !1;\n}, Zt.prototype._getDoubles = function(t, r) {\n    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n    for(var i = [\n        this\n    ], n = this, o = 0; o < r; o += t){\n        for(var h = 0; h < t; h++)n = n.dbl();\n        i.push(n);\n    }\n    return {\n        step: t,\n        points: i\n    };\n}, Zt.prototype._getNAFPoints = function(t) {\n    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n    for(var r = [\n        this\n    ], i = (1 << t) - 1, n = i === 1 ? null : this.dbl(), o = 1; o < i; o++)r[o] = r[o - 1].add(n);\n    return {\n        wnd: t,\n        points: r\n    };\n}, Zt.prototype._getBeta = function() {\n    return null;\n}, Zt.prototype.dblp = function(t) {\n    for(var r = this, i = 0; i < t; i++)r = r.dbl();\n    return r;\n};\nvar Ki = lr(function(e) {\n    typeof Object.create == \"function\" ? e.exports = function(r, i) {\n        i && (r.super_ = i, r.prototype = Object.create(i.prototype, {\n            constructor: {\n                value: r,\n                enumerable: !1,\n                writable: !0,\n                configurable: !0\n            }\n        }));\n    } : e.exports = function(r, i) {\n        if (i) {\n            r.super_ = i;\n            var n = function() {};\n            n.prototype = i.prototype, r.prototype = new n, r.prototype.constructor = r;\n        }\n    };\n}), Ya = Gt.assert;\nfunction te(e) {\n    $e.call(this, \"short\", e), this.a = new K(e.a, 16).toRed(this.red), this.b = new K(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);\n}\nKi(te, $e);\nvar Va = te;\nte.prototype._getEndomorphism = function(t) {\n    if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {\n        var r, i;\n        if (t.beta) r = new K(t.beta, 16).toRed(this.red);\n        else {\n            var n = this._getEndoRoots(this.p);\n            r = n[0].cmp(n[1]) < 0 ? n[0] : n[1], r = r.toRed(this.red);\n        }\n        if (t.lambda) i = new K(t.lambda, 16);\n        else {\n            var o = this._getEndoRoots(this.n);\n            this.g.mul(o[0]).x.cmp(this.g.x.redMul(r)) === 0 ? i = o[0] : (i = o[1], Ya(this.g.mul(i).x.cmp(this.g.x.redMul(r)) === 0));\n        }\n        var h;\n        return t.basis ? h = t.basis.map(function(p) {\n            return {\n                a: new K(p.a, 16),\n                b: new K(p.b, 16)\n            };\n        }) : h = this._getEndoBasis(i), {\n            beta: r,\n            lambda: i,\n            basis: h\n        };\n    }\n}, te.prototype._getEndoRoots = function(t) {\n    var r = t === this.p ? this.red : K.mont(t), i = new K(2).toRed(r).redInvm(), n = i.redNeg(), o = new K(3).toRed(r).redNeg().redSqrt().redMul(i), h = n.redAdd(o).fromRed(), p = n.redSub(o).fromRed();\n    return [\n        h,\n        p\n    ];\n}, te.prototype._getEndoBasis = function(t) {\n    for(var r = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), i = t, n = this.n.clone(), o = new K(1), h = new K(0), p = new K(0), A = new K(1), v, w, y, S, N, I, C, D = 0, U, J; i.cmpn(0) !== 0;){\n        var Bt = n.div(i);\n        U = n.sub(Bt.mul(i)), J = p.sub(Bt.mul(o));\n        var G = A.sub(Bt.mul(h));\n        if (!y && U.cmp(r) < 0) v = C.neg(), w = o, y = U.neg(), S = J;\n        else if (y && ++D === 2) break;\n        C = U, n = i, i = U, p = o, o = J, A = h, h = G;\n    }\n    N = U.neg(), I = J;\n    var H = y.sqr().add(S.sqr()), L = N.sqr().add(I.sqr());\n    return L.cmp(H) >= 0 && (N = v, I = w), y.negative && (y = y.neg(), S = S.neg()), N.negative && (N = N.neg(), I = I.neg()), [\n        {\n            a: y,\n            b: S\n        },\n        {\n            a: N,\n            b: I\n        }\n    ];\n}, te.prototype._endoSplit = function(t) {\n    var r = this.endo.basis, i = r[0], n = r[1], o = n.b.mul(t).divRound(this.n), h = i.b.neg().mul(t).divRound(this.n), p = o.mul(i.a), A = h.mul(n.a), v = o.mul(i.b), w = h.mul(n.b), y = t.sub(p).sub(A), S = v.add(w).neg();\n    return {\n        k1: y,\n        k2: S\n    };\n}, te.prototype.pointFromX = function(t, r) {\n    t = new K(t, 16), t.red || (t = t.toRed(this.red));\n    var i = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), n = i.redSqrt();\n    if (n.redSqr().redSub(i).cmp(this.zero) !== 0) throw new Error(\"invalid point\");\n    var o = n.fromRed().isOdd();\n    return (r && !o || !r && o) && (n = n.redNeg()), this.point(t, n);\n}, te.prototype.validate = function(t) {\n    if (t.inf) return !0;\n    var r = t.x, i = t.y, n = this.a.redMul(r), o = r.redSqr().redMul(r).redIAdd(n).redIAdd(this.b);\n    return i.redSqr().redISub(o).cmpn(0) === 0;\n}, te.prototype._endoWnafMulAdd = function(t, r, i) {\n    for(var n = this._endoWnafT1, o = this._endoWnafT2, h = 0; h < t.length; h++){\n        var p = this._endoSplit(r[h]), A = t[h], v = A._getBeta();\n        p.k1.negative && (p.k1.ineg(), A = A.neg(!0)), p.k2.negative && (p.k2.ineg(), v = v.neg(!0)), n[h * 2] = A, n[h * 2 + 1] = v, o[h * 2] = p.k1, o[h * 2 + 1] = p.k2;\n    }\n    for(var w = this._wnafMulAdd(1, n, o, h * 2, i), y = 0; y < h * 2; y++)n[y] = null, o[y] = null;\n    return w;\n};\nfunction Dt(e, t, r, i) {\n    $e.BasePoint.call(this, e, \"affine\"), t === null && r === null ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new K(t, 16), this.y = new K(r, 16), i && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);\n}\nKi(Dt, $e.BasePoint), te.prototype.point = function(t, r, i) {\n    return new Dt(this, t, r, i);\n}, te.prototype.pointFromJSON = function(t, r) {\n    return Dt.fromJSON(this, t, r);\n}, Dt.prototype._getBeta = function() {\n    if (this.curve.endo) {\n        var t = this.precomputed;\n        if (t && t.beta) return t.beta;\n        var r = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n        if (t) {\n            var i = this.curve, n = function(o) {\n                return i.point(o.x.redMul(i.endo.beta), o.y);\n            };\n            t.beta = r, r.precomputed = {\n                beta: null,\n                naf: t.naf && {\n                    wnd: t.naf.wnd,\n                    points: t.naf.points.map(n)\n                },\n                doubles: t.doubles && {\n                    step: t.doubles.step,\n                    points: t.doubles.points.map(n)\n                }\n            };\n        }\n        return r;\n    }\n}, Dt.prototype.toJSON = function() {\n    return this.precomputed ? [\n        this.x,\n        this.y,\n        this.precomputed && {\n            doubles: this.precomputed.doubles && {\n                step: this.precomputed.doubles.step,\n                points: this.precomputed.doubles.points.slice(1)\n            },\n            naf: this.precomputed.naf && {\n                wnd: this.precomputed.naf.wnd,\n                points: this.precomputed.naf.points.slice(1)\n            }\n        }\n    ] : [\n        this.x,\n        this.y\n    ];\n}, Dt.fromJSON = function(t, r, i) {\n    typeof r == \"string\" && (r = JSON.parse(r));\n    var n = t.point(r[0], r[1], i);\n    if (!r[2]) return n;\n    function o(p) {\n        return t.point(p[0], p[1], i);\n    }\n    var h = r[2];\n    return n.precomputed = {\n        beta: null,\n        doubles: h.doubles && {\n            step: h.doubles.step,\n            points: [\n                n\n            ].concat(h.doubles.points.map(o))\n        },\n        naf: h.naf && {\n            wnd: h.naf.wnd,\n            points: [\n                n\n            ].concat(h.naf.points.map(o))\n        }\n    }, n;\n}, Dt.prototype.inspect = function() {\n    return this.isInfinity() ? \"<EC Point Infinity>\" : \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \">\";\n}, Dt.prototype.isInfinity = function() {\n    return this.inf;\n}, Dt.prototype.add = function(t) {\n    if (this.inf) return t;\n    if (t.inf) return this;\n    if (this.eq(t)) return this.dbl();\n    if (this.neg().eq(t)) return this.curve.point(null, null);\n    if (this.x.cmp(t.x) === 0) return this.curve.point(null, null);\n    var r = this.y.redSub(t.y);\n    r.cmpn(0) !== 0 && (r = r.redMul(this.x.redSub(t.x).redInvm()));\n    var i = r.redSqr().redISub(this.x).redISub(t.x), n = r.redMul(this.x.redSub(i)).redISub(this.y);\n    return this.curve.point(i, n);\n}, Dt.prototype.dbl = function() {\n    if (this.inf) return this;\n    var t = this.y.redAdd(this.y);\n    if (t.cmpn(0) === 0) return this.curve.point(null, null);\n    var r = this.curve.a, i = this.x.redSqr(), n = t.redInvm(), o = i.redAdd(i).redIAdd(i).redIAdd(r).redMul(n), h = o.redSqr().redISub(this.x.redAdd(this.x)), p = o.redMul(this.x.redSub(h)).redISub(this.y);\n    return this.curve.point(h, p);\n}, Dt.prototype.getX = function() {\n    return this.x.fromRed();\n}, Dt.prototype.getY = function() {\n    return this.y.fromRed();\n}, Dt.prototype.mul = function(t) {\n    return t = new K(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([\n        this\n    ], [\n        t\n    ]) : this.curve._wnafMul(this, t);\n}, Dt.prototype.mulAdd = function(t, r, i) {\n    var n = [\n        this,\n        r\n    ], o = [\n        t,\n        i\n    ];\n    return this.curve.endo ? this.curve._endoWnafMulAdd(n, o) : this.curve._wnafMulAdd(1, n, o, 2);\n}, Dt.prototype.jmulAdd = function(t, r, i) {\n    var n = [\n        this,\n        r\n    ], o = [\n        t,\n        i\n    ];\n    return this.curve.endo ? this.curve._endoWnafMulAdd(n, o, !0) : this.curve._wnafMulAdd(1, n, o, 2, !0);\n}, Dt.prototype.eq = function(t) {\n    return this === t || this.inf === t.inf && (this.inf || this.x.cmp(t.x) === 0 && this.y.cmp(t.y) === 0);\n}, Dt.prototype.neg = function(t) {\n    if (this.inf) return this;\n    var r = this.curve.point(this.x, this.y.redNeg());\n    if (t && this.precomputed) {\n        var i = this.precomputed, n = function(o) {\n            return o.neg();\n        };\n        r.precomputed = {\n            naf: i.naf && {\n                wnd: i.naf.wnd,\n                points: i.naf.points.map(n)\n            },\n            doubles: i.doubles && {\n                step: i.doubles.step,\n                points: i.doubles.points.map(n)\n            }\n        };\n    }\n    return r;\n}, Dt.prototype.toJ = function() {\n    if (this.inf) return this.curve.jpoint(null, null, null);\n    var t = this.curve.jpoint(this.x, this.y, this.curve.one);\n    return t;\n};\nfunction Ft(e, t, r, i) {\n    $e.BasePoint.call(this, e, \"jacobian\"), t === null && r === null && i === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new K(0)) : (this.x = new K(t, 16), this.y = new K(r, 16), this.z = new K(i, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;\n}\nKi(Ft, $e.BasePoint), te.prototype.jpoint = function(t, r, i) {\n    return new Ft(this, t, r, i);\n}, Ft.prototype.toP = function() {\n    if (this.isInfinity()) return this.curve.point(null, null);\n    var t = this.z.redInvm(), r = t.redSqr(), i = this.x.redMul(r), n = this.y.redMul(r).redMul(t);\n    return this.curve.point(i, n);\n}, Ft.prototype.neg = function() {\n    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n}, Ft.prototype.add = function(t) {\n    if (this.isInfinity()) return t;\n    if (t.isInfinity()) return this;\n    var r = t.z.redSqr(), i = this.z.redSqr(), n = this.x.redMul(r), o = t.x.redMul(i), h = this.y.redMul(r.redMul(t.z)), p = t.y.redMul(i.redMul(this.z)), A = n.redSub(o), v = h.redSub(p);\n    if (A.cmpn(0) === 0) return v.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();\n    var w = A.redSqr(), y = w.redMul(A), S = n.redMul(w), N = v.redSqr().redIAdd(y).redISub(S).redISub(S), I = v.redMul(S.redISub(N)).redISub(h.redMul(y)), C = this.z.redMul(t.z).redMul(A);\n    return this.curve.jpoint(N, I, C);\n}, Ft.prototype.mixedAdd = function(t) {\n    if (this.isInfinity()) return t.toJ();\n    if (t.isInfinity()) return this;\n    var r = this.z.redSqr(), i = this.x, n = t.x.redMul(r), o = this.y, h = t.y.redMul(r).redMul(this.z), p = i.redSub(n), A = o.redSub(h);\n    if (p.cmpn(0) === 0) return A.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();\n    var v = p.redSqr(), w = v.redMul(p), y = i.redMul(v), S = A.redSqr().redIAdd(w).redISub(y).redISub(y), N = A.redMul(y.redISub(S)).redISub(o.redMul(w)), I = this.z.redMul(p);\n    return this.curve.jpoint(S, N, I);\n}, Ft.prototype.dblp = function(t) {\n    if (t === 0) return this;\n    if (this.isInfinity()) return this;\n    if (!t) return this.dbl();\n    var r;\n    if (this.curve.zeroA || this.curve.threeA) {\n        var i = this;\n        for(r = 0; r < t; r++)i = i.dbl();\n        return i;\n    }\n    var n = this.curve.a, o = this.curve.tinv, h = this.x, p = this.y, A = this.z, v = A.redSqr().redSqr(), w = p.redAdd(p);\n    for(r = 0; r < t; r++){\n        var y = h.redSqr(), S = w.redSqr(), N = S.redSqr(), I = y.redAdd(y).redIAdd(y).redIAdd(n.redMul(v)), C = h.redMul(S), D = I.redSqr().redISub(C.redAdd(C)), U = C.redISub(D), J = I.redMul(U);\n        J = J.redIAdd(J).redISub(N);\n        var Bt = w.redMul(A);\n        r + 1 < t && (v = v.redMul(N)), h = D, A = Bt, w = J;\n    }\n    return this.curve.jpoint(h, w.redMul(o), A);\n}, Ft.prototype.dbl = function() {\n    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();\n}, Ft.prototype._zeroDbl = function() {\n    var t, r, i;\n    if (this.zOne) {\n        var n = this.x.redSqr(), o = this.y.redSqr(), h = o.redSqr(), p = this.x.redAdd(o).redSqr().redISub(n).redISub(h);\n        p = p.redIAdd(p);\n        var A = n.redAdd(n).redIAdd(n), v = A.redSqr().redISub(p).redISub(p), w = h.redIAdd(h);\n        w = w.redIAdd(w), w = w.redIAdd(w), t = v, r = A.redMul(p.redISub(v)).redISub(w), i = this.y.redAdd(this.y);\n    } else {\n        var y = this.x.redSqr(), S = this.y.redSqr(), N = S.redSqr(), I = this.x.redAdd(S).redSqr().redISub(y).redISub(N);\n        I = I.redIAdd(I);\n        var C = y.redAdd(y).redIAdd(y), D = C.redSqr(), U = N.redIAdd(N);\n        U = U.redIAdd(U), U = U.redIAdd(U), t = D.redISub(I).redISub(I), r = C.redMul(I.redISub(t)).redISub(U), i = this.y.redMul(this.z), i = i.redIAdd(i);\n    }\n    return this.curve.jpoint(t, r, i);\n}, Ft.prototype._threeDbl = function() {\n    var t, r, i;\n    if (this.zOne) {\n        var n = this.x.redSqr(), o = this.y.redSqr(), h = o.redSqr(), p = this.x.redAdd(o).redSqr().redISub(n).redISub(h);\n        p = p.redIAdd(p);\n        var A = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), v = A.redSqr().redISub(p).redISub(p);\n        t = v;\n        var w = h.redIAdd(h);\n        w = w.redIAdd(w), w = w.redIAdd(w), r = A.redMul(p.redISub(v)).redISub(w), i = this.y.redAdd(this.y);\n    } else {\n        var y = this.z.redSqr(), S = this.y.redSqr(), N = this.x.redMul(S), I = this.x.redSub(y).redMul(this.x.redAdd(y));\n        I = I.redAdd(I).redIAdd(I);\n        var C = N.redIAdd(N);\n        C = C.redIAdd(C);\n        var D = C.redAdd(C);\n        t = I.redSqr().redISub(D), i = this.y.redAdd(this.z).redSqr().redISub(S).redISub(y);\n        var U = S.redSqr();\n        U = U.redIAdd(U), U = U.redIAdd(U), U = U.redIAdd(U), r = I.redMul(C.redISub(t)).redISub(U);\n    }\n    return this.curve.jpoint(t, r, i);\n}, Ft.prototype._dbl = function() {\n    var t = this.curve.a, r = this.x, i = this.y, n = this.z, o = n.redSqr().redSqr(), h = r.redSqr(), p = i.redSqr(), A = h.redAdd(h).redIAdd(h).redIAdd(t.redMul(o)), v = r.redAdd(r);\n    v = v.redIAdd(v);\n    var w = v.redMul(p), y = A.redSqr().redISub(w.redAdd(w)), S = w.redISub(y), N = p.redSqr();\n    N = N.redIAdd(N), N = N.redIAdd(N), N = N.redIAdd(N);\n    var I = A.redMul(S).redISub(N), C = i.redAdd(i).redMul(n);\n    return this.curve.jpoint(y, I, C);\n}, Ft.prototype.trpl = function() {\n    if (!this.curve.zeroA) return this.dbl().add(this);\n    var t = this.x.redSqr(), r = this.y.redSqr(), i = this.z.redSqr(), n = r.redSqr(), o = t.redAdd(t).redIAdd(t), h = o.redSqr(), p = this.x.redAdd(r).redSqr().redISub(t).redISub(n);\n    p = p.redIAdd(p), p = p.redAdd(p).redIAdd(p), p = p.redISub(h);\n    var A = p.redSqr(), v = n.redIAdd(n);\n    v = v.redIAdd(v), v = v.redIAdd(v), v = v.redIAdd(v);\n    var w = o.redIAdd(p).redSqr().redISub(h).redISub(A).redISub(v), y = r.redMul(w);\n    y = y.redIAdd(y), y = y.redIAdd(y);\n    var S = this.x.redMul(A).redISub(y);\n    S = S.redIAdd(S), S = S.redIAdd(S);\n    var N = this.y.redMul(w.redMul(v.redISub(w)).redISub(p.redMul(A)));\n    N = N.redIAdd(N), N = N.redIAdd(N), N = N.redIAdd(N);\n    var I = this.z.redAdd(p).redSqr().redISub(i).redISub(A);\n    return this.curve.jpoint(S, N, I);\n}, Ft.prototype.mul = function(t, r) {\n    return t = new K(t, r), this.curve._wnafMul(this, t);\n}, Ft.prototype.eq = function(t) {\n    if (t.type === \"affine\") return this.eq(t.toJ());\n    if (this === t) return !0;\n    var r = this.z.redSqr(), i = t.z.redSqr();\n    if (this.x.redMul(i).redISub(t.x.redMul(r)).cmpn(0) !== 0) return !1;\n    var n = r.redMul(this.z), o = i.redMul(t.z);\n    return this.y.redMul(o).redISub(t.y.redMul(n)).cmpn(0) === 0;\n}, Ft.prototype.eqXToP = function(t) {\n    var r = this.z.redSqr(), i = t.toRed(this.curve.red).redMul(r);\n    if (this.x.cmp(i) === 0) return !0;\n    for(var n = t.clone(), o = this.curve.redN.redMul(r);;){\n        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;\n        if (i.redIAdd(o), this.x.cmp(i) === 0) return !0;\n    }\n}, Ft.prototype.inspect = function() {\n    return this.isInfinity() ? \"<EC JPoint Infinity>\" : \"<EC JPoint x: \" + this.x.toString(16, 2) + \" y: \" + this.y.toString(16, 2) + \" z: \" + this.z.toString(16, 2) + \">\";\n}, Ft.prototype.isInfinity = function() {\n    return this.z.cmpn(0) === 0;\n};\nvar zr = lr(function(e, t) {\n    var r = t;\n    r.base = $e, r.short = Va, r.mont = null, r.edwards = null;\n}), jr = lr(function(e, t) {\n    var r = t, i = Gt.assert;\n    function n(p) {\n        p.type === \"short\" ? this.curve = new zr.short(p) : p.type === \"edwards\" ? this.curve = new zr.edwards(p) : this.curve = new zr.mont(p), this.g = this.curve.g, this.n = this.curve.n, this.hash = p.hash, i(this.g.validate(), \"Invalid curve\"), i(this.g.mul(this.n).isInfinity(), \"Invalid curve, G*N != O\");\n    }\n    r.PresetCurve = n;\n    function o(p, A) {\n        Object.defineProperty(r, p, {\n            configurable: !0,\n            enumerable: !0,\n            get: function() {\n                var v = new n(A);\n                return Object.defineProperty(r, p, {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: v\n                }), v;\n            }\n        });\n    }\n    o(\"p192\", {\n        type: \"short\",\n        prime: \"p192\",\n        p: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",\n        a: \"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",\n        b: \"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",\n        n: \"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\n            \"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"\n        ]\n    }), o(\"p224\", {\n        type: \"short\",\n        prime: \"p224\",\n        p: \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",\n        a: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",\n        b: \"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",\n        n: \"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\n            \"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"\n        ]\n    }), o(\"p256\", {\n        type: \"short\",\n        prime: null,\n        p: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",\n        a: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",\n        b: \"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",\n        n: \"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\n            \"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"\n        ]\n    }), o(\"p384\", {\n        type: \"short\",\n        prime: null,\n        p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff\",\n        a: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc\",\n        b: \"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",\n        n: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",\n        hash: se.sha384,\n        gRed: !1,\n        g: [\n            \"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7\",\n            \"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"\n        ]\n    }), o(\"p521\", {\n        type: \"short\",\n        prime: null,\n        p: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff\",\n        a: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc\",\n        b: \"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",\n        n: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",\n        hash: se.sha512,\n        gRed: !1,\n        g: [\n            \"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\n            \"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650\"\n        ]\n    }), o(\"curve25519\", {\n        type: \"mont\",\n        prime: \"p25519\",\n        p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n        a: \"76d06\",\n        b: \"1\",\n        n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"9\"\n        ]\n    }), o(\"ed25519\", {\n        type: \"edwards\",\n        prime: \"p25519\",\n        p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n        a: \"-1\",\n        c: \"1\",\n        d: \"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",\n        n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\n            \"6666666666666666666666666666666666666666666666666666666666666658\"\n        ]\n    });\n    var h;\n    try {\n        h = null.crash();\n    } catch  {\n        h = void 0;\n    }\n    o(\"secp256k1\", {\n        type: \"short\",\n        prime: \"k256\",\n        p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",\n        a: \"0\",\n        b: \"7\",\n        n: \"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",\n        h: \"1\",\n        hash: se.sha256,\n        beta: \"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",\n        lambda: \"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",\n        basis: [\n            {\n                a: \"3086d221a7d46bcde86c90e49284eb15\",\n                b: \"-e4437ed6010e88286f547fa90abfe4c3\"\n            },\n            {\n                a: \"114ca50f7a8e2f3f657c1108d9d44cfd8\",\n                b: \"3086d221a7d46bcde86c90e49284eb15\"\n            }\n        ],\n        gRed: !1,\n        g: [\n            \"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\n            \"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",\n            h\n        ]\n    });\n});\nfunction Re(e) {\n    if (!(this instanceof Re)) return new Re(e);\n    this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;\n    var t = fe.toArray(e.entropy, e.entropyEnc || \"hex\"), r = fe.toArray(e.nonce, e.nonceEnc || \"hex\"), i = fe.toArray(e.pers, e.persEnc || \"hex\");\n    qi(t.length >= this.minEntropy / 8, \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"), this._init(t, r, i);\n}\nvar qf = Re;\nRe.prototype._init = function(t, r, i) {\n    var n = t.concat(r).concat(i);\n    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);\n    for(var o = 0; o < this.V.length; o++)this.K[o] = 0, this.V[o] = 1;\n    this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656;\n}, Re.prototype._hmac = function() {\n    return new se.hmac(this.hash, this.K);\n}, Re.prototype._update = function(t) {\n    var r = this._hmac().update(this.V).update([\n        0\n    ]);\n    t && (r = r.update(t)), this.K = r.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([\n        1\n    ]).update(t).digest(), this.V = this._hmac().update(this.V).digest());\n}, Re.prototype.reseed = function(t, r, i, n) {\n    typeof r != \"string\" && (n = i, i = r, r = null), t = fe.toArray(t, r), i = fe.toArray(i, n), qi(t.length >= this.minEntropy / 8, \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"), this._update(t.concat(i || [])), this._reseed = 1;\n}, Re.prototype.generate = function(t, r, i, n) {\n    if (this._reseed > this.reseedInterval) throw new Error(\"Reseed is required\");\n    typeof r != \"string\" && (n = i, i = r, r = null), i && (i = fe.toArray(i, n || \"hex\"), this._update(i));\n    for(var o = []; o.length < t;)this.V = this._hmac().update(this.V).digest(), o = o.concat(this.V);\n    var h = o.slice(0, t);\n    return this._update(i), this._reseed++, fe.encode(h, r);\n};\nvar Hi = Gt.assert;\nfunction kt(e, t) {\n    this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);\n}\nvar Li = kt;\nkt.fromPublic = function(t, r, i) {\n    return r instanceof kt ? r : new kt(t, {\n        pub: r,\n        pubEnc: i\n    });\n}, kt.fromPrivate = function(t, r, i) {\n    return r instanceof kt ? r : new kt(t, {\n        priv: r,\n        privEnc: i\n    });\n}, kt.prototype.validate = function() {\n    var t = this.getPublic();\n    return t.isInfinity() ? {\n        result: !1,\n        reason: \"Invalid public key\"\n    } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {\n        result: !0,\n        reason: null\n    } : {\n        result: !1,\n        reason: \"Public key * N != O\"\n    } : {\n        result: !1,\n        reason: \"Public key is not a point\"\n    };\n}, kt.prototype.getPublic = function(t, r) {\n    return typeof t == \"string\" && (r = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r ? this.pub.encode(r, t) : this.pub;\n}, kt.prototype.getPrivate = function(t) {\n    return t === \"hex\" ? this.priv.toString(16, 2) : this.priv;\n}, kt.prototype._importPrivate = function(t, r) {\n    this.priv = new K(t, r || 16), this.priv = this.priv.umod(this.ec.curve.n);\n}, kt.prototype._importPublic = function(t, r) {\n    if (t.x || t.y) {\n        this.ec.curve.type === \"mont\" ? Hi(t.x, \"Need x coordinate\") : (this.ec.curve.type === \"short\" || this.ec.curve.type === \"edwards\") && Hi(t.x && t.y, \"Need both x and y coordinate\"), this.pub = this.ec.curve.point(t.x, t.y);\n        return;\n    }\n    this.pub = this.ec.curve.decodePoint(t, r);\n}, kt.prototype.derive = function(t) {\n    return t.validate() || Hi(t.validate(), \"public point not validated\"), t.mul(this.priv).getX();\n}, kt.prototype.sign = function(t, r, i) {\n    return this.ec.sign(t, this, r, i);\n}, kt.prototype.verify = function(t, r) {\n    return this.ec.verify(t, r, this);\n}, kt.prototype.inspect = function() {\n    return \"<Key priv: \" + (this.priv && this.priv.toString(16, 2)) + \" pub: \" + (this.pub && this.pub.inspect()) + \" >\";\n};\nvar Wa = Gt.assert;\nfunction Qr(e, t) {\n    if (e instanceof Qr) return e;\n    this._importDER(e, t) || (Wa(e.r && e.s, \"Signature without r or s\"), this.r = new K(e.r, 16), this.s = new K(e.s, 16), e.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam);\n}\nvar Jr = Qr;\nfunction Xa() {\n    this.place = 0;\n}\nfunction zi(e, t) {\n    var r = e[t.place++];\n    if (!(r & 128)) return r;\n    var i = r & 15;\n    if (i === 0 || i > 4) return !1;\n    for(var n = 0, o = 0, h = t.place; o < i; o++, h++)n <<= 8, n |= e[h], n >>>= 0;\n    return n <= 127 ? !1 : (t.place = h, n);\n}\nfunction Kf(e) {\n    for(var t = 0, r = e.length - 1; !e[t] && !(e[t + 1] & 128) && t < r;)t++;\n    return t === 0 ? e : e.slice(t);\n}\nQr.prototype._importDER = function(t, r) {\n    t = Gt.toArray(t, r);\n    var i = new Xa;\n    if (t[i.place++] !== 48) return !1;\n    var n = zi(t, i);\n    if (n === !1 || n + i.place !== t.length || t[i.place++] !== 2) return !1;\n    var o = zi(t, i);\n    if (o === !1) return !1;\n    var h = t.slice(i.place, o + i.place);\n    if (i.place += o, t[i.place++] !== 2) return !1;\n    var p = zi(t, i);\n    if (p === !1 || t.length !== p + i.place) return !1;\n    var A = t.slice(i.place, p + i.place);\n    if (h[0] === 0) if (h[1] & 128) h = h.slice(1);\n    else return !1;\n    if (A[0] === 0) if (A[1] & 128) A = A.slice(1);\n    else return !1;\n    return this.r = new K(h), this.s = new K(A), this.recoveryParam = null, !0;\n};\nfunction ji(e, t) {\n    if (t < 128) {\n        e.push(t);\n        return;\n    }\n    var r = 1 + (Math.log(t) / Math.LN2 >>> 3);\n    for(e.push(r | 128); --r;)e.push(t >>> (r << 3) & 255);\n    e.push(t);\n}\nQr.prototype.toDER = function(t) {\n    var r = this.r.toArray(), i = this.s.toArray();\n    for(r[0] & 128 && (r = [\n        0\n    ].concat(r)), i[0] & 128 && (i = [\n        0\n    ].concat(i)), r = Kf(r), i = Kf(i); !i[0] && !(i[1] & 128);)i = i.slice(1);\n    var n = [\n        2\n    ];\n    ji(n, r.length), n = n.concat(r), n.push(2), ji(n, i.length);\n    var o = n.concat(i), h = [\n        48\n    ];\n    return ji(h, o.length), h = h.concat(o), Gt.encode(h, t);\n};\nvar $a = function() {\n    throw new Error(\"unsupported\");\n}, Hf = Gt.assert;\nfunction ee(e) {\n    if (!(this instanceof ee)) return new ee(e);\n    typeof e == \"string\" && (Hf(Object.prototype.hasOwnProperty.call(jr, e), \"Unknown curve \" + e), e = jr[e]), e instanceof jr.PresetCurve && (e = {\n        curve: e\n    }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash;\n}\nvar Za = ee;\nee.prototype.keyPair = function(t) {\n    return new Li(this, t);\n}, ee.prototype.keyFromPrivate = function(t, r) {\n    return Li.fromPrivate(this, t, r);\n}, ee.prototype.keyFromPublic = function(t, r) {\n    return Li.fromPublic(this, t, r);\n}, ee.prototype.genKeyPair = function(t) {\n    t || (t = {});\n    for(var r = new qf({\n        hash: this.hash,\n        pers: t.pers,\n        persEnc: t.persEnc || \"utf8\",\n        entropy: t.entropy || $a(this.hash.hmacStrength),\n        entropyEnc: t.entropy && t.entropyEnc || \"utf8\",\n        nonce: this.n.toArray()\n    }), i = this.n.byteLength(), n = this.n.sub(new K(2));;){\n        var o = new K(r.generate(i));\n        if (!(o.cmp(n) > 0)) return o.iaddn(1), this.keyFromPrivate(o);\n    }\n}, ee.prototype._truncateToN = function(t, r) {\n    var i = t.byteLength() * 8 - this.n.bitLength();\n    return i > 0 && (t = t.ushrn(i)), !r && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;\n}, ee.prototype.sign = function(t, r, i, n) {\n    typeof i == \"object\" && (n = i, i = null), n || (n = {}), r = this.keyFromPrivate(r, i), t = this._truncateToN(new K(t, 16));\n    for(var o = this.n.byteLength(), h = r.getPrivate().toArray(\"be\", o), p = t.toArray(\"be\", o), A = new qf({\n        hash: this.hash,\n        entropy: h,\n        nonce: p,\n        pers: n.pers,\n        persEnc: n.persEnc || \"utf8\"\n    }), v = this.n.sub(new K(1)), w = 0;; w++){\n        var y = n.k ? n.k(w) : new K(A.generate(this.n.byteLength()));\n        if (y = this._truncateToN(y, !0), !(y.cmpn(1) <= 0 || y.cmp(v) >= 0)) {\n            var S = this.g.mul(y);\n            if (!S.isInfinity()) {\n                var N = S.getX(), I = N.umod(this.n);\n                if (I.cmpn(0) !== 0) {\n                    var C = y.invm(this.n).mul(I.mul(r.getPrivate()).iadd(t));\n                    if (C = C.umod(this.n), C.cmpn(0) !== 0) {\n                        var D = (S.getY().isOdd() ? 1 : 0) | (N.cmp(I) !== 0 ? 2 : 0);\n                        return n.canonical && C.cmp(this.nh) > 0 && (C = this.n.sub(C), D ^= 1), new Jr({\n                            r: I,\n                            s: C,\n                            recoveryParam: D\n                        });\n                    }\n                }\n            }\n        }\n    }\n}, ee.prototype.verify = function(t, r, i, n) {\n    t = this._truncateToN(new K(t, 16)), i = this.keyFromPublic(i, n), r = new Jr(r, \"hex\");\n    var o = r.r, h = r.s;\n    if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0 || h.cmpn(1) < 0 || h.cmp(this.n) >= 0) return !1;\n    var p = h.invm(this.n), A = p.mul(t).umod(this.n), v = p.mul(o).umod(this.n), w;\n    return this.curve._maxwellTrick ? (w = this.g.jmulAdd(A, i.getPublic(), v), w.isInfinity() ? !1 : w.eqXToP(o)) : (w = this.g.mulAdd(A, i.getPublic(), v), w.isInfinity() ? !1 : w.getX().umod(this.n).cmp(o) === 0);\n}, ee.prototype.recoverPubKey = function(e, t, r, i) {\n    Hf((3 & r) === r, \"The recovery param is more than two bits\"), t = new Jr(t, i);\n    var n = this.n, o = new K(e), h = t.r, p = t.s, A = r & 1, v = r >> 1;\n    if (h.cmp(this.curve.p.umod(this.curve.n)) >= 0 && v) throw new Error(\"Unable to find sencond key candinate\");\n    v ? h = this.curve.pointFromX(h.add(this.curve.n), A) : h = this.curve.pointFromX(h, A);\n    var w = t.r.invm(n), y = n.sub(o).mul(w).umod(n), S = p.mul(w).umod(n);\n    return this.g.mulAdd(y, h, S);\n}, ee.prototype.getKeyRecoveryParam = function(e, t, r, i) {\n    if (t = new Jr(t, i), t.recoveryParam !== null) return t.recoveryParam;\n    for(var n = 0; n < 4; n++){\n        var o;\n        try {\n            o = this.recoverPubKey(e, t, n);\n        } catch  {\n            continue;\n        }\n        if (o.eq(r)) return n;\n    }\n    throw new Error(\"Unable to find valid recovery factor\");\n};\nvar tu = lr(function(e, t) {\n    var r = t;\n    r.version = \"6.5.4\", r.utils = Gt, r.rand = function() {\n        throw new Error(\"unsupported\");\n    }, r.curve = zr, r.curves = jr, r.ec = Za, r.eddsa = null;\n}), eu = tu.ec;\nconst ru = \"signing-key/5.7.0\", Qi = new z(ru);\nlet Ji = null;\nfunction ve() {\n    return Ji || (Ji = new eu(\"secp256k1\")), Ji;\n}\nclass iu {\n    constructor(t){\n        wr(this, \"curve\", \"secp256k1\"), wr(this, \"privateKey\", Kt(t)), Us(this.privateKey) !== 32 && Qi.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        const r = ve().keyFromPrivate(Ot(this.privateKey));\n        wr(this, \"publicKey\", \"0x\" + r.getPublic(!1, \"hex\")), wr(this, \"compressedPublicKey\", \"0x\" + r.getPublic(!0, \"hex\")), wr(this, \"_isSigningKey\", !0);\n    }\n    _addPoint(t) {\n        const r = ve().keyFromPublic(Ot(this.publicKey)), i = ve().keyFromPublic(Ot(t));\n        return \"0x\" + r.pub.add(i.pub).encodeCompressed(\"hex\");\n    }\n    signDigest(t) {\n        const r = ve().keyFromPrivate(Ot(this.privateKey)), i = Ot(t);\n        i.length !== 32 && Qi.throwArgumentError(\"bad digest length\", \"digest\", t);\n        const n = r.sign(i, {\n            canonical: !0\n        });\n        return Wn({\n            recoveryParam: n.recoveryParam,\n            r: oe(\"0x\" + n.r.toString(16), 32),\n            s: oe(\"0x\" + n.s.toString(16), 32)\n        });\n    }\n    computeSharedSecret(t) {\n        const r = ve().keyFromPrivate(Ot(this.privateKey)), i = ve().keyFromPublic(Ot(Lf(t)));\n        return oe(\"0x\" + r.derive(i.getPublic()).toString(16), 32);\n    }\n    static isSigningKey(t) {\n        return !!(t && t._isSigningKey);\n    }\n}\nfunction nu(e, t) {\n    const r = Wn(t), i = {\n        r: Ot(r.r),\n        s: Ot(r.s)\n    };\n    return \"0x\" + ve().recoverPubKey(Ot(e), i, r.recoveryParam).encode(\"hex\", !1);\n}\nfunction Lf(e, t) {\n    const r = Ot(e);\n    if (r.length === 32) {\n        const i = new iu(r);\n        return t ? \"0x\" + ve().keyFromPrivate(r).getPublic(!0, \"hex\") : i.publicKey;\n    } else {\n        if (r.length === 33) return t ? Kt(r) : \"0x\" + ve().keyFromPublic(r).getPublic(!1, \"hex\");\n        if (r.length === 65) return t ? \"0x\" + ve().keyFromPublic(r).getPublic(!0, \"hex\") : Kt(r);\n    }\n    return Qi.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\nconst fu = \"transactions/5.7.0\";\nnew z(fu);\nvar zf;\n(function(e) {\n    e[e.legacy = 0] = \"legacy\", e[e.eip2930 = 1] = \"eip2930\", e[e.eip1559 = 2] = \"eip1559\";\n})(zf || (zf = {}));\nfunction ou(e) {\n    const t = Lf(e);\n    return v0(Vn(Ii(Vn(t, 1)), 12));\n}\nfunction su(e, t) {\n    return ou(nu(Ot(e), t));\n}\nconst au = \"https://rpc.walletconnect.org/v1\";\nasync function jf(e, t, r, i, n, o) {\n    switch(r.t){\n        case \"eip191\":\n            return Qf(e, t, r.s);\n        case \"eip1271\":\n            return await Jf(e, t, r.s, i, n, o);\n        default:\n            throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${r.t}`);\n    }\n}\nfunction Qf(e, t, r) {\n    return su(df(t), r).toLowerCase() === e.toLowerCase();\n}\nasync function Jf(e, t, r, i, n, o) {\n    try {\n        const h = \"0x1626ba7e\", p = \"0000000000000000000000000000000000000000000000000000000000000040\", A = \"0000000000000000000000000000000000000000000000000000000000000041\", v = r.substring(2), w = df(t).substring(2), y = h + w + p + A + v, S = await fetch(`${o || au}/?chainId=${i}&projectId=${n}`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                id: uu(),\n                jsonrpc: \"2.0\",\n                method: \"eth_call\",\n                params: [\n                    {\n                        to: e,\n                        data: y\n                    },\n                    \"latest\"\n                ]\n            })\n        }), { result: N } = await S.json();\n        return N ? N.slice(0, h.length).toLowerCase() === h.toLowerCase() : !1;\n    } catch (h) {\n        return console.error(\"isValidEip1271Signature: \", h), !1;\n    }\n}\nfunction uu() {\n    return Date.now() + Math.floor(Math.random() * 1e3);\n}\nvar hu = Object.defineProperty, cu = Object.defineProperties, lu = Object.getOwnPropertyDescriptors, Gf = Object.getOwnPropertySymbols, du = Object.prototype.hasOwnProperty, pu = Object.prototype.propertyIsEnumerable, Yf = (e, t, r)=>t in e ? hu(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, Gi = (e, t)=>{\n    for(var r in t || (t = {}))du.call(t, r) && Yf(e, r, t[r]);\n    if (Gf) for (var r of Gf(t))pu.call(t, r) && Yf(e, r, t[r]);\n    return e;\n}, Vf = (e, t)=>cu(e, lu(t));\nconst vu = \"did:pkh:\", Gr = (e)=>e?.split(\":\"), Yi = (e)=>{\n    const t = e && Gr(e);\n    if (t) return e.includes(vu) ? t[3] : t[1];\n}, gu = (e)=>{\n    const t = e && Gr(e);\n    if (t) return t[2] + \":\" + t[3];\n}, Vi = (e)=>{\n    const t = e && Gr(e);\n    if (t) return t.pop();\n};\nasync function mu(e) {\n    const { cacao: t, projectId: r } = e, { s: i, p: n } = t, o = Wf(n, n.iss), h = Vi(n.iss);\n    return await jf(h, o, i, Yi(n.iss), r);\n}\nconst Wf = (e, t)=>{\n    const r = `${e.domain} wants you to sign in with your Ethereum account:`, i = Vi(t);\n    if (!e.aud && !e.uri) throw new Error(\"Either `aud` or `uri` is required to construct the message\");\n    let n = e.statement || void 0;\n    const o = `URI: ${e.aud || e.uri}`, h = `Version: ${e.version}`, p = `Chain ID: ${Yi(t)}`, A = `Nonce: ${e.nonce}`, v = `Issued At: ${e.iat}`, w = e.exp ? `Expiration Time: ${e.exp}` : void 0, y = e.nbf ? `Not Before: ${e.nbf}` : void 0, S = e.requestId ? `Request ID: ${e.requestId}` : void 0, N = e.resources ? `Resources:${e.resources.map((C)=>`\n- ${C}`).join(\"\")}` : void 0, I = Vr(e.resources);\n    if (I) {\n        const C = Oe(I);\n        n = $i(n, C);\n    }\n    return [\n        r,\n        i,\n        \"\",\n        n,\n        \"\",\n        o,\n        h,\n        p,\n        A,\n        v,\n        w,\n        y,\n        S,\n        N\n    ].filter((C)=>C != null).join(`\n`);\n};\nfunction Au(e, t, r) {\n    return r.includes(\"did:pkh:\") || (r = `did:pkh:${r}`), {\n        h: {\n            t: \"caip122\"\n        },\n        p: {\n            iss: r,\n            domain: e.domain,\n            aud: e.aud,\n            version: e.version,\n            nonce: e.nonce,\n            iat: e.iat,\n            statement: e.statement,\n            requestId: e.requestId,\n            resources: e.resources,\n            nbf: e.nbf,\n            exp: e.exp\n        },\n        s: t\n    };\n}\nfunction bu(e) {\n    var t;\n    const { authPayload: r, chains: i, methods: n } = e, o = r.statement || \"\";\n    if (!(i != null && i.length)) return r;\n    const h = r.chains, p = wi(h, i);\n    if (!(p != null && p.length)) throw new Error(\"No supported chains\");\n    const A = Xf(r.resources);\n    if (!A) return r;\n    ge(A);\n    const v = $f(A, \"eip155\");\n    let w = r?.resources || [];\n    if (v != null && v.length) {\n        const y = Zf(v), S = wi(y, n);\n        if (!(S != null && S.length)) throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(y)}, supported: ${JSON.stringify(n)}`);\n        const N = Wi(\"request\", S, {\n            chains: p\n        }), I = io(A, \"eip155\", N);\n        w = ((t = r?.resources) == null ? void 0 : t.slice(0, -1)) || [], w.push(Yr(I));\n    }\n    return Vf(Gi({}, r), {\n        statement: fo(o, Vr(w)),\n        chains: p,\n        resources: r != null && r.resources || w.length > 0 ? w : void 0\n    });\n}\nfunction Xf(e) {\n    const t = Vr(e);\n    if (t && Xi(t)) return Oe(t);\n}\nfunction yu(e, t) {\n    var r;\n    return (r = e?.att) == null ? void 0 : r.hasOwnProperty(t);\n}\nfunction $f(e, t) {\n    var r, i;\n    return (r = e?.att) != null && r[t] ? Object.keys((i = e?.att) == null ? void 0 : i[t]) : [];\n}\nfunction wu(e) {\n    return e?.map((t)=>Object.keys(t)) || [];\n}\nfunction Zf(e) {\n    return e?.map((t)=>{\n        var r;\n        return (r = t.split(\"/\")) == null ? void 0 : r[1];\n    }) || [];\n}\nfunction to(e) {\n    return Buffer.from(JSON.stringify(e)).toString(\"base64\");\n}\nfunction eo(e) {\n    return JSON.parse(Buffer.from(e, \"base64\").toString(\"utf-8\"));\n}\nfunction ge(e) {\n    if (!e) throw new Error(\"No recap provided, value is undefined\");\n    if (!e.att) throw new Error(\"No `att` property found\");\n    const t = Object.keys(e.att);\n    if (!(t != null && t.length)) throw new Error(\"No resources found in `att` property\");\n    t.forEach((r)=>{\n        const i = e.att[r];\n        if (Array.isArray(i)) throw new Error(`Resource must be an object: ${r}`);\n        if (typeof i != \"object\") throw new Error(`Resource must be an object: ${r}`);\n        if (!Object.keys(i).length) throw new Error(`Resource object is empty: ${r}`);\n        Object.keys(i).forEach((n)=>{\n            const o = i[n];\n            if (!Array.isArray(o)) throw new Error(`Ability limits ${n} must be an array of objects, found: ${o}`);\n            if (!o.length) throw new Error(`Value of ${n} is empty array, must be an array with objects`);\n            o.forEach((h)=>{\n                if (typeof h != \"object\") throw new Error(`Ability limits (${n}) must be an array of objects, found: ${h}`);\n            });\n        });\n    });\n}\nfunction ro(e, t, r, i = {}) {\n    return r?.sort((n, o)=>n.localeCompare(o)), {\n        att: {\n            [e]: Wi(t, r, i)\n        }\n    };\n}\nfunction io(e, t, r) {\n    var i;\n    return e.att[t] = Gi({}, r), ((i = Object.keys(e.att)) == null ? void 0 : i.sort((n, o)=>n.localeCompare(o))).reduce((n, o)=>(n.att[o] = e.att[o], n), {\n        att: {}\n    });\n}\nfunction Wi(e, t, r = {}) {\n    t = t?.sort((n, o)=>n.localeCompare(o));\n    const i = t.map((n)=>({\n            [`${e}/${n}`]: [\n                r\n            ]\n        }));\n    return Object.assign({}, ...i);\n}\nfunction Yr(e) {\n    return ge(e), `urn:recap:${to(e).replace(/=/g, \"\")}`;\n}\nfunction Oe(e) {\n    const t = eo(e.replace(\"urn:recap:\", \"\"));\n    return ge(t), t;\n}\nfunction xu(e, t, r) {\n    const i = ro(e, t, r);\n    return Yr(i);\n}\nfunction Xi(e) {\n    return e && e.includes(\"urn:recap:\");\n}\nfunction Mu(e, t) {\n    const r = Oe(e), i = Oe(t), n = no(r, i);\n    return Yr(n);\n}\nfunction no(e, t) {\n    ge(e), ge(t);\n    const r = Object.keys(e.att).concat(Object.keys(t.att)).sort((n, o)=>n.localeCompare(o)), i = {\n        att: {}\n    };\n    return r.forEach((n)=>{\n        var o, h;\n        Object.keys(((o = e.att) == null ? void 0 : o[n]) || {}).concat(Object.keys(((h = t.att) == null ? void 0 : h[n]) || {})).sort((p, A)=>p.localeCompare(A)).forEach((p)=>{\n            var A, v;\n            i.att[n] = Vf(Gi({}, i.att[n]), {\n                [p]: ((A = e.att[n]) == null ? void 0 : A[p]) || ((v = t.att[n]) == null ? void 0 : v[p])\n            });\n        });\n    }), i;\n}\nfunction $i(e = \"\", t) {\n    ge(t);\n    const r = \"I further authorize the stated URI to perform the following actions on my behalf: \";\n    if (e.includes(r)) return e;\n    const i = [];\n    let n = 0;\n    Object.keys(t.att).forEach((p)=>{\n        const A = Object.keys(t.att[p]).map((y)=>({\n                ability: y.split(\"/\")[0],\n                action: y.split(\"/\")[1]\n            }));\n        A.sort((y, S)=>y.action.localeCompare(S.action));\n        const v = {};\n        A.forEach((y)=>{\n            v[y.ability] || (v[y.ability] = []), v[y.ability].push(y.action);\n        });\n        const w = Object.keys(v).map((y)=>(n++, `(${n}) '${y}': '${v[y].join(\"', '\")}' for '${p}'.`));\n        i.push(w.join(\", \").replace(\".,\", \".\"));\n    });\n    const o = i.join(\" \"), h = `${r}${o}`;\n    return `${e ? e + \" \" : \"\"}${h}`;\n}\nfunction Eu(e) {\n    var t;\n    const r = Oe(e);\n    ge(r);\n    const i = (t = r.att) == null ? void 0 : t.eip155;\n    return i ? Object.keys(i).map((n)=>n.split(\"/\")[1]) : [];\n}\nfunction Su(e) {\n    const t = Oe(e);\n    ge(t);\n    const r = [];\n    return Object.values(t.att).forEach((i)=>{\n        Object.values(i).forEach((n)=>{\n            var o;\n            (o = n?.[0]) != null && o.chains && r.push(n[0].chains);\n        });\n    }), [\n        ...new Set(r.flat())\n    ];\n}\nfunction fo(e, t) {\n    if (!t) return e;\n    const r = Oe(t);\n    return ge(r), $i(e, r);\n}\nfunction Vr(e) {\n    if (!e) return;\n    const t = e?.[e.length - 1];\n    return Xi(t) ? t : void 0;\n}\nconst Zi = \"base10\", Lt = \"base16\", tn = \"base64pad\", Iu = \"base64url\", dr = \"utf8\", en = 0, pr = 1, Sr = 2, Nu = 0, oo = 1, Ir = 12, rn = 32;\nfunction _u() {\n    const e = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__.generateKeyPair();\n    return {\n        privateKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e.secretKey, Lt),\n        publicKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e.publicKey, Lt)\n    };\n}\nfunction Bu() {\n    const e = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(rn);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e, Lt);\n}\nfunction Cu(e, t) {\n    const r = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__.sharedKey((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, Lt), (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(t, Lt), !0), i = new _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_5__.HKDF(_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.SHA256, r).expand(rn);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(i, Lt);\n}\nfunction Ru(e) {\n    const t = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, Lt));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(t, Lt);\n}\nfunction Ou(e) {\n    const t = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, dr));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(t, Lt);\n}\nfunction nn(e) {\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(`${e}`, Zi);\n}\nfunction Ze(e) {\n    return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e, Zi));\n}\nfunction Pu(e) {\n    const t = nn(typeof e.type < \"u\" ? e.type : en);\n    if (Ze(t) === pr && typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n    const r = typeof e.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.senderPublicKey, Lt) : void 0, i = typeof e.iv < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.iv, Lt) : (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(Ir), n = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.symKey, Lt)).seal(i, (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.message, dr));\n    return fn({\n        type: t,\n        sealed: n,\n        iv: i,\n        senderPublicKey: r,\n        encoding: e.encoding\n    });\n}\nfunction Tu(e, t) {\n    const r = nn(Sr), i = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(Ir), n = (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, dr);\n    return fn({\n        type: r,\n        sealed: n,\n        iv: i,\n        encoding: t\n    });\n}\nfunction Du(e) {\n    const t = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.symKey, Lt)), { sealed: r, iv: i } = Wr({\n        encoded: e.encoded,\n        encoding: e?.encoding\n    }), n = t.open(i, r);\n    if (n === null) throw new Error(\"Failed to decrypt\");\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(n, dr);\n}\nfunction Fu(e, t) {\n    const { sealed: r } = Wr({\n        encoded: e,\n        encoding: t\n    });\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(r, dr);\n}\nfunction fn(e) {\n    const { encoding: t = tn } = e;\n    if (Ze(e.type) === Sr) return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.concat)([\n        e.type,\n        e.sealed\n    ]), t);\n    if (Ze(e.type) === pr) {\n        if (typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n        return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.concat)([\n            e.type,\n            e.senderPublicKey,\n            e.iv,\n            e.sealed\n        ]), t);\n    }\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.concat)([\n        e.type,\n        e.iv,\n        e.sealed\n    ]), t);\n}\nfunction Wr(e) {\n    const { encoded: t, encoding: r = tn } = e, i = (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(t, r), n = i.slice(Nu, oo), o = oo;\n    if (Ze(n) === pr) {\n        const v = o + rn, w = v + Ir, y = i.slice(o, v), S = i.slice(v, w), N = i.slice(w);\n        return {\n            type: n,\n            sealed: N,\n            iv: S,\n            senderPublicKey: y\n        };\n    }\n    if (Ze(n) === Sr) {\n        const v = i.slice(o), w = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(Ir);\n        return {\n            type: n,\n            sealed: v,\n            iv: w\n        };\n    }\n    const h = o + Ir, p = i.slice(o, h), A = i.slice(h);\n    return {\n        type: n,\n        sealed: A,\n        iv: p\n    };\n}\nfunction Uu(e, t) {\n    const r = Wr({\n        encoded: e,\n        encoding: t?.encoding\n    });\n    return so({\n        type: Ze(r.type),\n        senderPublicKey: typeof r.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(r.senderPublicKey, Lt) : void 0,\n        receiverPublicKey: t?.receiverPublicKey\n    });\n}\nfunction so(e) {\n    const t = e?.type || en;\n    if (t === pr) {\n        if (typeof e?.senderPublicKey > \"u\") throw new Error(\"missing sender public key\");\n        if (typeof e?.receiverPublicKey > \"u\") throw new Error(\"missing receiver public key\");\n    }\n    return {\n        type: t,\n        senderPublicKey: e?.senderPublicKey,\n        receiverPublicKey: e?.receiverPublicKey\n    };\n}\nfunction ku(e) {\n    return e.type === pr && typeof e.senderPublicKey == \"string\" && typeof e.receiverPublicKey == \"string\";\n}\nfunction qu(e) {\n    return e.type === Sr;\n}\nfunction ao(e) {\n    return new elliptic__WEBPACK_IMPORTED_MODULE_10__.ec(\"p256\").keyFromPublic({\n        x: Buffer.from(e.x, \"base64\").toString(\"hex\"),\n        y: Buffer.from(e.y, \"base64\").toString(\"hex\")\n    }, \"hex\");\n}\nfunction Ku(e) {\n    let t = e.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const r = t.length % 4;\n    return r > 0 && (t += \"=\".repeat(4 - r)), t;\n}\nfunction Hu(e) {\n    return Buffer.from(Ku(e), \"base64\");\n}\nfunction Lu(e, t) {\n    const [r, i, n] = e.split(\".\"), o = Hu(n);\n    if (o.length !== 64) throw new Error(\"Invalid signature length\");\n    const h = o.slice(0, 32).toString(\"hex\"), p = o.slice(32, 64).toString(\"hex\"), A = `${r}.${i}`, v = new _stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.SHA256().update(Buffer.from(A)).digest(), w = ao(t), y = Buffer.from(v).toString(\"hex\");\n    if (!w.verify(y, {\n        r: h,\n        s: p\n    })) throw new Error(\"Invalid signature\");\n    return (0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_11__.decodeJWT)(e).payload;\n}\nconst uo = \"irn\";\nfunction zu(e) {\n    return e?.relay || {\n        protocol: uo\n    };\n}\nfunction ju(e) {\n    const t = _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_12__.RELAY_JSONRPC[e];\n    if (typeof t > \"u\") throw new Error(`Relay Protocol not supported: ${e}`);\n    return t;\n}\nvar Qu = Object.defineProperty, Ju = Object.defineProperties, Gu = Object.getOwnPropertyDescriptors, ho = Object.getOwnPropertySymbols, Yu = Object.prototype.hasOwnProperty, Vu = Object.prototype.propertyIsEnumerable, co = (e, t, r)=>t in e ? Qu(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, lo = (e, t)=>{\n    for(var r in t || (t = {}))Yu.call(t, r) && co(e, r, t[r]);\n    if (ho) for (var r of ho(t))Vu.call(t, r) && co(e, r, t[r]);\n    return e;\n}, Wu = (e, t)=>Ju(e, Gu(t));\nfunction po(e, t = \"-\") {\n    const r = {}, i = \"relay\" + t;\n    return Object.keys(e).forEach((n)=>{\n        if (n.startsWith(i)) {\n            const o = n.replace(i, \"\"), h = e[n];\n            r[o] = h;\n        }\n    }), r;\n}\nfunction Xu(e) {\n    if (!e.includes(\"wc:\")) {\n        const A = xi(e);\n        A != null && A.includes(\"wc:\") && (e = A);\n    }\n    e = e.includes(\"wc://\") ? e.replace(\"wc://\", \"\") : e, e = e.includes(\"wc:\") ? e.replace(\"wc:\", \"\") : e;\n    const t = e.indexOf(\":\"), r = e.indexOf(\"?\") !== -1 ? e.indexOf(\"?\") : void 0, i = e.substring(0, t), n = e.substring(t + 1, r).split(\"@\"), o = typeof r < \"u\" ? e.substring(r) : \"\", h = query_string__WEBPACK_IMPORTED_MODULE_3__.parse(o), p = typeof h.methods == \"string\" ? h.methods.split(\",\") : void 0;\n    return {\n        protocol: i,\n        topic: vo(n[0]),\n        version: parseInt(n[1], 10),\n        symKey: h.symKey,\n        relay: po(h),\n        methods: p,\n        expiryTimestamp: h.expiryTimestamp ? parseInt(h.expiryTimestamp, 10) : void 0\n    };\n}\nfunction vo(e) {\n    return e.startsWith(\"//\") ? e.substring(2) : e;\n}\nfunction go(e, t = \"-\") {\n    const r = \"relay\", i = {};\n    return Object.keys(e).forEach((n)=>{\n        const o = r + t + n;\n        e[n] && (i[o] = e[n]);\n    }), i;\n}\nfunction $u(e) {\n    return `${e.protocol}:${e.topic}@${e.version}?` + query_string__WEBPACK_IMPORTED_MODULE_3__.stringify(lo(Wu(lo({\n        symKey: e.symKey\n    }, go(e.relay)), {\n        expiryTimestamp: e.expiryTimestamp\n    }), e.methods ? {\n        methods: e.methods.join(\",\")\n    } : {}));\n}\nfunction Zu(e, t, r) {\n    return `${e}?wc_ev=${r}&topic=${t}`;\n}\nvar th = Object.defineProperty, eh = Object.defineProperties, rh = Object.getOwnPropertyDescriptors, mo = Object.getOwnPropertySymbols, ih = Object.prototype.hasOwnProperty, nh = Object.prototype.propertyIsEnumerable, Ao = (e, t, r)=>t in e ? th(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, fh = (e, t)=>{\n    for(var r in t || (t = {}))ih.call(t, r) && Ao(e, r, t[r]);\n    if (mo) for (var r of mo(t))nh.call(t, r) && Ao(e, r, t[r]);\n    return e;\n}, oh = (e, t)=>eh(e, rh(t));\nfunction tr(e) {\n    const t = [];\n    return e.forEach((r)=>{\n        const [i, n] = r.split(\":\");\n        t.push(`${i}:${n}`);\n    }), t;\n}\nfunction bo(e) {\n    const t = [];\n    return Object.values(e).forEach((r)=>{\n        t.push(...tr(r.accounts));\n    }), t;\n}\nfunction yo(e, t) {\n    const r = [];\n    return Object.values(e).forEach((i)=>{\n        tr(i.accounts).includes(t) && r.push(...i.methods);\n    }), r;\n}\nfunction wo(e, t) {\n    const r = [];\n    return Object.values(e).forEach((i)=>{\n        tr(i.accounts).includes(t) && r.push(...i.events);\n    }), r;\n}\nfunction sh(e, t) {\n    const r = Oo(e, t);\n    if (r) throw new Error(r.message);\n    const i = {};\n    for (const [n, o] of Object.entries(e))i[n] = {\n        methods: o.methods,\n        events: o.events,\n        chains: o.accounts.map((h)=>`${h.split(\":\")[0]}:${h.split(\":\")[1]}`)\n    };\n    return i;\n}\nfunction ah(e) {\n    const { proposal: { requiredNamespaces: t, optionalNamespaces: r = {} }, supportedNamespaces: i } = e, n = sn(t), o = sn(r), h = {};\n    Object.keys(i).forEach((v)=>{\n        const w = i[v].chains, y = i[v].methods, S = i[v].events, N = i[v].accounts;\n        w.forEach((I)=>{\n            if (!N.some((C)=>C.includes(I))) throw new Error(`No accounts provided for chain ${I} in namespace ${v}`);\n        }), h[v] = {\n            chains: w,\n            methods: y,\n            events: S,\n            accounts: N\n        };\n    });\n    const p = To(t, h, \"approve()\");\n    if (p) throw new Error(p.message);\n    const A = {};\n    return !Object.keys(t).length && !Object.keys(r).length ? h : (Object.keys(n).forEach((v)=>{\n        const w = i[v].chains.filter((I)=>{\n            var C, D;\n            return (D = (C = n[v]) == null ? void 0 : C.chains) == null ? void 0 : D.includes(I);\n        }), y = i[v].methods.filter((I)=>{\n            var C, D;\n            return (D = (C = n[v]) == null ? void 0 : C.methods) == null ? void 0 : D.includes(I);\n        }), S = i[v].events.filter((I)=>{\n            var C, D;\n            return (D = (C = n[v]) == null ? void 0 : C.events) == null ? void 0 : D.includes(I);\n        }), N = w.map((I)=>i[v].accounts.filter((C)=>C.includes(`${I}:`))).flat();\n        A[v] = {\n            chains: w,\n            methods: y,\n            events: S,\n            accounts: N\n        };\n    }), Object.keys(o).forEach((v)=>{\n        var w, y, S, N, I, C;\n        if (!i[v]) return;\n        const D = (y = (w = o[v]) == null ? void 0 : w.chains) == null ? void 0 : y.filter((G)=>i[v].chains.includes(G)), U = i[v].methods.filter((G)=>{\n            var H, L;\n            return (L = (H = o[v]) == null ? void 0 : H.methods) == null ? void 0 : L.includes(G);\n        }), J = i[v].events.filter((G)=>{\n            var H, L;\n            return (L = (H = o[v]) == null ? void 0 : H.events) == null ? void 0 : L.includes(G);\n        }), Bt = D?.map((G)=>i[v].accounts.filter((H)=>H.includes(`${G}:`))).flat();\n        A[v] = {\n            chains: me((S = A[v]) == null ? void 0 : S.chains, D),\n            methods: me((N = A[v]) == null ? void 0 : N.methods, U),\n            events: me((I = A[v]) == null ? void 0 : I.events, J),\n            accounts: me((C = A[v]) == null ? void 0 : C.accounts, Bt)\n        };\n    }), A);\n}\nfunction on(e) {\n    return e.includes(\":\");\n}\nfunction xo(e) {\n    return on(e) ? e.split(\":\")[0] : e;\n}\nfunction sn(e) {\n    var t, r, i;\n    const n = {};\n    if (!Xr(e)) return n;\n    for (const [o, h] of Object.entries(e)){\n        const p = on(o) ? [\n            o\n        ] : h.chains, A = h.methods || [], v = h.events || [], w = xo(o);\n        n[w] = oh(fh({}, n[w]), {\n            chains: me(p, (t = n[w]) == null ? void 0 : t.chains),\n            methods: me(A, (r = n[w]) == null ? void 0 : r.methods),\n            events: me(v, (i = n[w]) == null ? void 0 : i.events)\n        });\n    }\n    return n;\n}\nfunction Mo(e) {\n    const t = {};\n    return e?.forEach((r)=>{\n        const [i, n] = r.split(\":\");\n        t[i] || (t[i] = {\n            accounts: [],\n            chains: [],\n            events: []\n        }), t[i].accounts.push(r), t[i].chains.push(`${i}:${n}`);\n    }), t;\n}\nfunction uh(e, t) {\n    t = t.map((i)=>i.replace(\"did:pkh:\", \"\"));\n    const r = Mo(t);\n    for (const [i, n] of Object.entries(r))n.methods ? n.methods = me(n.methods, e) : n.methods = e, n.events = [\n        \"chainChanged\",\n        \"accountsChanged\"\n    ];\n    return r;\n}\nconst Eo = {\n    INVALID_METHOD: {\n        message: \"Invalid method.\",\n        code: 1001\n    },\n    INVALID_EVENT: {\n        message: \"Invalid event.\",\n        code: 1002\n    },\n    INVALID_UPDATE_REQUEST: {\n        message: \"Invalid update request.\",\n        code: 1003\n    },\n    INVALID_EXTEND_REQUEST: {\n        message: \"Invalid extend request.\",\n        code: 1004\n    },\n    INVALID_SESSION_SETTLE_REQUEST: {\n        message: \"Invalid session settle request.\",\n        code: 1005\n    },\n    UNAUTHORIZED_METHOD: {\n        message: \"Unauthorized method.\",\n        code: 3001\n    },\n    UNAUTHORIZED_EVENT: {\n        message: \"Unauthorized event.\",\n        code: 3002\n    },\n    UNAUTHORIZED_UPDATE_REQUEST: {\n        message: \"Unauthorized update request.\",\n        code: 3003\n    },\n    UNAUTHORIZED_EXTEND_REQUEST: {\n        message: \"Unauthorized extend request.\",\n        code: 3004\n    },\n    USER_REJECTED: {\n        message: \"User rejected.\",\n        code: 5e3\n    },\n    USER_REJECTED_CHAINS: {\n        message: \"User rejected chains.\",\n        code: 5001\n    },\n    USER_REJECTED_METHODS: {\n        message: \"User rejected methods.\",\n        code: 5002\n    },\n    USER_REJECTED_EVENTS: {\n        message: \"User rejected events.\",\n        code: 5003\n    },\n    UNSUPPORTED_CHAINS: {\n        message: \"Unsupported chains.\",\n        code: 5100\n    },\n    UNSUPPORTED_METHODS: {\n        message: \"Unsupported methods.\",\n        code: 5101\n    },\n    UNSUPPORTED_EVENTS: {\n        message: \"Unsupported events.\",\n        code: 5102\n    },\n    UNSUPPORTED_ACCOUNTS: {\n        message: \"Unsupported accounts.\",\n        code: 5103\n    },\n    UNSUPPORTED_NAMESPACE_KEY: {\n        message: \"Unsupported namespace key.\",\n        code: 5104\n    },\n    USER_DISCONNECTED: {\n        message: \"User disconnected.\",\n        code: 6e3\n    },\n    SESSION_SETTLEMENT_FAILED: {\n        message: \"Session settlement failed.\",\n        code: 7e3\n    },\n    WC_METHOD_UNSUPPORTED: {\n        message: \"Unsupported wc_ method.\",\n        code: 10001\n    }\n}, So = {\n    NOT_INITIALIZED: {\n        message: \"Not initialized.\",\n        code: 1\n    },\n    NO_MATCHING_KEY: {\n        message: \"No matching key.\",\n        code: 2\n    },\n    RESTORE_WILL_OVERRIDE: {\n        message: \"Restore will override.\",\n        code: 3\n    },\n    RESUBSCRIBED: {\n        message: \"Resubscribed.\",\n        code: 4\n    },\n    MISSING_OR_INVALID: {\n        message: \"Missing or invalid.\",\n        code: 5\n    },\n    EXPIRED: {\n        message: \"Expired.\",\n        code: 6\n    },\n    UNKNOWN_TYPE: {\n        message: \"Unknown type.\",\n        code: 7\n    },\n    MISMATCHED_TOPIC: {\n        message: \"Mismatched topic.\",\n        code: 8\n    },\n    NON_CONFORMING_NAMESPACES: {\n        message: \"Non conforming namespaces.\",\n        code: 9\n    }\n};\nfunction xe(e, t) {\n    const { message: r, code: i } = So[e];\n    return {\n        message: t ? `${r} ${t}` : r,\n        code: i\n    };\n}\nfunction er(e, t) {\n    const { message: r, code: i } = Eo[e];\n    return {\n        message: t ? `${r} ${t}` : r,\n        code: i\n    };\n}\nfunction Nr(e, t) {\n    return Array.isArray(e) ? typeof t < \"u\" && e.length ? e.every(t) : !0 : !1;\n}\nfunction Xr(e) {\n    return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;\n}\nfunction Pe(e) {\n    return typeof e > \"u\";\n}\nfunction Yt(e, t) {\n    return t && Pe(e) ? !0 : typeof e == \"string\" && !!e.trim().length;\n}\nfunction $r(e, t) {\n    return t && Pe(e) ? !0 : typeof e == \"number\" && !isNaN(e);\n}\nfunction hh(e, t) {\n    const { requiredNamespaces: r } = t, i = Object.keys(e.namespaces), n = Object.keys(r);\n    let o = !0;\n    return _e(n, i) ? (i.forEach((h)=>{\n        const { accounts: p, methods: A, events: v } = e.namespaces[h], w = tr(p), y = r[h];\n        (!_e(Or(h, y), w) || !_e(y.methods, A) || !_e(y.events, v)) && (o = !1);\n    }), o) : !1;\n}\nfunction _r(e) {\n    return Yt(e, !1) && e.includes(\":\") ? e.split(\":\").length === 2 : !1;\n}\nfunction Io(e) {\n    if (Yt(e, !1) && e.includes(\":\")) {\n        const t = e.split(\":\");\n        if (t.length === 3) {\n            const r = t[0] + \":\" + t[1];\n            return !!t[2] && _r(r);\n        }\n    }\n    return !1;\n}\nfunction ch(e) {\n    function t(r) {\n        try {\n            return typeof new URL(r) < \"u\";\n        } catch  {\n            return !1;\n        }\n    }\n    try {\n        if (Yt(e, !1)) {\n            if (t(e)) return !0;\n            const r = xi(e);\n            return t(r);\n        }\n    } catch  {}\n    return !1;\n}\nfunction lh(e) {\n    var t;\n    return (t = e?.proposer) == null ? void 0 : t.publicKey;\n}\nfunction dh(e) {\n    return e?.topic;\n}\nfunction ph(e, t) {\n    let r = null;\n    return Yt(e?.publicKey, !1) || (r = xe(\"MISSING_OR_INVALID\", `${t} controller public key should be a string`)), r;\n}\nfunction an(e) {\n    let t = !0;\n    return Nr(e) ? e.length && (t = e.every((r)=>Yt(r, !1))) : t = !1, t;\n}\nfunction No(e, t, r) {\n    let i = null;\n    return Nr(t) && t.length ? t.forEach((n)=>{\n        i || _r(n) || (i = er(\"UNSUPPORTED_CHAINS\", `${r}, chain ${n} should be a string and conform to \"namespace:chainId\" format`));\n    }) : _r(e) || (i = er(\"UNSUPPORTED_CHAINS\", `${r}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`)), i;\n}\nfunction _o(e, t, r) {\n    let i = null;\n    return Object.entries(e).forEach(([n, o])=>{\n        if (i) return;\n        const h = No(n, Or(n, o), `${t} ${r}`);\n        h && (i = h);\n    }), i;\n}\nfunction Bo(e, t) {\n    let r = null;\n    return Nr(e) ? e.forEach((i)=>{\n        r || Io(i) || (r = er(\"UNSUPPORTED_ACCOUNTS\", `${t}, account ${i} should be a string and conform to \"namespace:chainId:address\" format`));\n    }) : r = er(\"UNSUPPORTED_ACCOUNTS\", `${t}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`), r;\n}\nfunction Co(e, t) {\n    let r = null;\n    return Object.values(e).forEach((i)=>{\n        if (r) return;\n        const n = Bo(i?.accounts, `${t} namespace`);\n        n && (r = n);\n    }), r;\n}\nfunction Ro(e, t) {\n    let r = null;\n    return an(e?.methods) ? an(e?.events) || (r = er(\"UNSUPPORTED_EVENTS\", `${t}, events should be an array of strings or empty array for no events`)) : r = er(\"UNSUPPORTED_METHODS\", `${t}, methods should be an array of strings or empty array for no methods`), r;\n}\nfunction un(e, t) {\n    let r = null;\n    return Object.values(e).forEach((i)=>{\n        if (r) return;\n        const n = Ro(i, `${t}, namespace`);\n        n && (r = n);\n    }), r;\n}\nfunction vh(e, t, r) {\n    let i = null;\n    if (e && Xr(e)) {\n        const n = un(e, t);\n        n && (i = n);\n        const o = _o(e, t, r);\n        o && (i = o);\n    } else i = xe(\"MISSING_OR_INVALID\", `${t}, ${r} should be an object with data`);\n    return i;\n}\nfunction Oo(e, t) {\n    let r = null;\n    if (e && Xr(e)) {\n        const i = un(e, t);\n        i && (r = i);\n        const n = Co(e, t);\n        n && (r = n);\n    } else r = xe(\"MISSING_OR_INVALID\", `${t}, namespaces should be an object with data`);\n    return r;\n}\nfunction Po(e) {\n    return Yt(e.protocol, !0);\n}\nfunction gh(e, t) {\n    let r = !1;\n    return t && !e ? r = !0 : e && Nr(e) && e.length && e.forEach((i)=>{\n        r = Po(i);\n    }), r;\n}\nfunction mh(e) {\n    return typeof e == \"number\";\n}\nfunction Ah(e) {\n    return typeof e < \"u\" && typeof e !== null;\n}\nfunction bh(e) {\n    return !(!e || typeof e != \"object\" || !e.code || !$r(e.code, !1) || !e.message || !Yt(e.message, !1));\n}\nfunction yh(e) {\n    return !(Pe(e) || !Yt(e.method, !1));\n}\nfunction wh(e) {\n    return !(Pe(e) || Pe(e.result) && Pe(e.error) || !$r(e.id, !1) || !Yt(e.jsonrpc, !1));\n}\nfunction xh(e) {\n    return !(Pe(e) || !Yt(e.name, !1));\n}\nfunction Mh(e, t) {\n    return !(!_r(t) || !bo(e).includes(t));\n}\nfunction Eh(e, t, r) {\n    return Yt(r, !1) ? yo(e, t).includes(r) : !1;\n}\nfunction Sh(e, t, r) {\n    return Yt(r, !1) ? wo(e, t).includes(r) : !1;\n}\nfunction To(e, t, r) {\n    let i = null;\n    const n = Ih(e), o = Nh(t), h = Object.keys(n), p = Object.keys(o), A = Do(Object.keys(e)), v = Do(Object.keys(t)), w = A.filter((y)=>!v.includes(y));\n    return w.length && (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${w.toString()}\n      Received: ${Object.keys(t).toString()}`)), _e(h, p) || (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces chains don't satisfy required namespaces.\n      Required: ${h.toString()}\n      Approved: ${p.toString()}`)), Object.keys(t).forEach((y)=>{\n        if (!y.includes(\":\") || i) return;\n        const S = tr(t[y].accounts);\n        S.includes(y) || (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces accounts don't satisfy namespace accounts for ${y}\n        Required: ${y}\n        Approved: ${S.toString()}`));\n    }), h.forEach((y)=>{\n        i || (_e(n[y].methods, o[y].methods) ? _e(n[y].events, o[y].events) || (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces events don't satisfy namespace events for ${y}`)) : i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces methods don't satisfy namespace methods for ${y}`));\n    }), i;\n}\nfunction Ih(e) {\n    const t = {};\n    return Object.keys(e).forEach((r)=>{\n        var i;\n        r.includes(\":\") ? t[r] = e[r] : (i = e[r].chains) == null || i.forEach((n)=>{\n            t[n] = {\n                methods: e[r].methods,\n                events: e[r].events\n            };\n        });\n    }), t;\n}\nfunction Do(e) {\n    return [\n        ...new Set(e.map((t)=>t.includes(\":\") ? t.split(\":\")[0] : t))\n    ];\n}\nfunction Nh(e) {\n    const t = {};\n    return Object.keys(e).forEach((r)=>{\n        if (r.includes(\":\")) t[r] = e[r];\n        else {\n            const i = tr(e[r].accounts);\n            i?.forEach((n)=>{\n                t[n] = {\n                    accounts: e[r].accounts.filter((o)=>o.includes(`${n}:`)),\n                    methods: e[r].methods,\n                    events: e[r].events\n                };\n            });\n        }\n    }), t;\n}\nfunction _h(e, t) {\n    return $r(e, !1) && e <= t.max && e >= t.min;\n}\nfunction Bh() {\n    const e = We();\n    return new Promise((t)=>{\n        switch(e){\n            case qt.browser:\n                t(Fo());\n                break;\n            case qt.reactNative:\n                t(Uo());\n                break;\n            case qt.node:\n                t(ko());\n                break;\n            default:\n                t(!0);\n        }\n    });\n}\nfunction Fo() {\n    return gr() && navigator?.onLine;\n}\nasync function Uo() {\n    if (rr() && typeof global < \"u\" && global != null && global.NetInfo) {\n        const e = await (global == null ? void 0 : global.NetInfo.fetch());\n        return e?.isConnected;\n    }\n    return !0;\n}\nfunction ko() {\n    return !0;\n}\nfunction Ch(e) {\n    switch(We()){\n        case qt.browser:\n            qo(e);\n            break;\n        case qt.reactNative:\n            Ko(e);\n            break;\n        case qt.node:\n            break;\n    }\n}\nfunction qo(e) {\n    !rr() && gr() && (window.addEventListener(\"online\", ()=>e(!0)), window.addEventListener(\"offline\", ()=>e(!1)));\n}\nfunction Ko(e) {\n    rr() && typeof global < \"u\" && global != null && global.NetInfo && global?.NetInfo.addEventListener((t)=>e(t?.isConnected));\n}\nconst hn = {};\nclass Rh {\n    static get(t) {\n        return hn[t];\n    }\n    static set(t, r) {\n        hn[t] = r;\n    }\n    static delete(t) {\n        delete hn[t];\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/window-getters/dist/cjs/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;\nfunction getFromWindow(name) {\n    let res = undefined;\n    if (false) {}\n    return res;\n}\nexports.getFromWindow = getFromWindow;\nfunction getFromWindowOrThrow(name) {\n    const res = getFromWindow(name);\n    if (!res) {\n        throw new Error(`${name} is not defined in Window`);\n    }\n    return res;\n}\nexports.getFromWindowOrThrow = getFromWindowOrThrow;\nfunction getDocumentOrThrow() {\n    return getFromWindowOrThrow(\"document\");\n}\nexports.getDocumentOrThrow = getDocumentOrThrow;\nfunction getDocument() {\n    return getFromWindow(\"document\");\n}\nexports.getDocument = getDocument;\nfunction getNavigatorOrThrow() {\n    return getFromWindowOrThrow(\"navigator\");\n}\nexports.getNavigatorOrThrow = getNavigatorOrThrow;\nfunction getNavigator() {\n    return getFromWindow(\"navigator\");\n}\nexports.getNavigator = getNavigator;\nfunction getLocationOrThrow() {\n    return getFromWindowOrThrow(\"location\");\n}\nexports.getLocationOrThrow = getLocationOrThrow;\nfunction getLocation() {\n    return getFromWindow(\"location\");\n}\nexports.getLocation = getLocation;\nfunction getCryptoOrThrow() {\n    return getFromWindowOrThrow(\"crypto\");\n}\nexports.getCryptoOrThrow = getCryptoOrThrow;\nfunction getCrypto() {\n    return getFromWindow(\"crypto\");\n}\nexports.getCrypto = getCrypto;\nfunction getLocalStorageOrThrow() {\n    return getFromWindowOrThrow(\"localStorage\");\n}\nexports.getLocalStorageOrThrow = getLocalStorageOrThrow;\nfunction getLocalStorage() {\n    return getFromWindow(\"localStorage\");\n}\nexports.getLocalStorage = getLocalStorage; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvd2luZG93LWdldHRlcnMvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHVCQUF1QixHQUFHQSw4QkFBOEIsR0FBR0EsaUJBQWlCLEdBQUdBLHdCQUF3QixHQUFHQSxtQkFBbUIsR0FBR0EsMEJBQTBCLEdBQUdBLG9CQUFvQixHQUFHQSwyQkFBMkIsR0FBR0EsbUJBQW1CLEdBQUdBLDBCQUEwQixHQUFHQSw0QkFBNEIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUNqVSxTQUFTYSxjQUFjQyxJQUFJO0lBQ3ZCLElBQUlDLE1BQU1DO0lBQ1YsSUFBSSxLQUFvRSxFQUFFLEVBRXpFO0lBQ0QsT0FBT0Q7QUFDWDtBQUNBZixxQkFBcUIsR0FBR2E7QUFDeEIsU0FBU0QscUJBQXFCRSxJQUFJO0lBQzlCLE1BQU1DLE1BQU1GLGNBQWNDO0lBQzFCLElBQUksQ0FBQ0MsS0FBSztRQUNOLE1BQU0sSUFBSUcsTUFBTSxDQUFDLEVBQUVKLEtBQUsseUJBQXlCLENBQUM7SUFDdEQ7SUFDQSxPQUFPQztBQUNYO0FBQ0FmLDRCQUE0QixHQUFHWTtBQUMvQixTQUFTRDtJQUNMLE9BQU9DLHFCQUFxQjtBQUNoQztBQUNBWiwwQkFBMEIsR0FBR1c7QUFDN0IsU0FBU0Q7SUFDTCxPQUFPRyxjQUFjO0FBQ3pCO0FBQ0FiLG1CQUFtQixHQUFHVTtBQUN0QixTQUFTRDtJQUNMLE9BQU9HLHFCQUFxQjtBQUNoQztBQUNBWiwyQkFBMkIsR0FBR1M7QUFDOUIsU0FBU0Q7SUFDTCxPQUFPSyxjQUFjO0FBQ3pCO0FBQ0FiLG9CQUFvQixHQUFHUTtBQUN2QixTQUFTRDtJQUNMLE9BQU9LLHFCQUFxQjtBQUNoQztBQUNBWiwwQkFBMEIsR0FBR087QUFDN0IsU0FBU0Q7SUFDTCxPQUFPTyxjQUFjO0FBQ3pCO0FBQ0FiLG1CQUFtQixHQUFHTTtBQUN0QixTQUFTRDtJQUNMLE9BQU9PLHFCQUFxQjtBQUNoQztBQUNBWix3QkFBd0IsR0FBR0s7QUFDM0IsU0FBU0Q7SUFDTCxPQUFPUyxjQUFjO0FBQ3pCO0FBQ0FiLGlCQUFpQixHQUFHSTtBQUNwQixTQUFTRDtJQUNMLE9BQU9TLHFCQUFxQjtBQUNoQztBQUNBWiw4QkFBOEIsR0FBR0c7QUFDakMsU0FBU0Q7SUFDTCxPQUFPVyxjQUFjO0FBQ3pCO0FBQ0FiLHVCQUF1QixHQUFHRSxpQkFDMUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC93aW5kb3ctZ2V0dGVycy9kaXN0L2Nqcy9pbmRleC5qcz83YjIzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2UgPSBleHBvcnRzLmdldExvY2FsU3RvcmFnZU9yVGhyb3cgPSBleHBvcnRzLmdldENyeXB0byA9IGV4cG9ydHMuZ2V0Q3J5cHRvT3JUaHJvdyA9IGV4cG9ydHMuZ2V0TG9jYXRpb24gPSBleHBvcnRzLmdldExvY2F0aW9uT3JUaHJvdyA9IGV4cG9ydHMuZ2V0TmF2aWdhdG9yID0gZXhwb3J0cy5nZXROYXZpZ2F0b3JPclRocm93ID0gZXhwb3J0cy5nZXREb2N1bWVudCA9IGV4cG9ydHMuZ2V0RG9jdW1lbnRPclRocm93ID0gZXhwb3J0cy5nZXRGcm9tV2luZG93T3JUaHJvdyA9IGV4cG9ydHMuZ2V0RnJvbVdpbmRvdyA9IHZvaWQgMDtcbmZ1bmN0aW9uIGdldEZyb21XaW5kb3cobmFtZSkge1xuICAgIGxldCByZXMgPSB1bmRlZmluZWQ7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIHdpbmRvd1tuYW1lXSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXMgPSB3aW5kb3dbbmFtZV07XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG5leHBvcnRzLmdldEZyb21XaW5kb3cgPSBnZXRGcm9tV2luZG93O1xuZnVuY3Rpb24gZ2V0RnJvbVdpbmRvd09yVGhyb3cobmFtZSkge1xuICAgIGNvbnN0IHJlcyA9IGdldEZyb21XaW5kb3cobmFtZSk7XG4gICAgaWYgKCFyZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke25hbWV9IGlzIG5vdCBkZWZpbmVkIGluIFdpbmRvd2ApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuZXhwb3J0cy5nZXRGcm9tV2luZG93T3JUaHJvdyA9IGdldEZyb21XaW5kb3dPclRocm93O1xuZnVuY3Rpb24gZ2V0RG9jdW1lbnRPclRocm93KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93T3JUaHJvdyhcImRvY3VtZW50XCIpO1xufVxuZXhwb3J0cy5nZXREb2N1bWVudE9yVGhyb3cgPSBnZXREb2N1bWVudE9yVGhyb3c7XG5mdW5jdGlvbiBnZXREb2N1bWVudCgpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvdyhcImRvY3VtZW50XCIpO1xufVxuZXhwb3J0cy5nZXREb2N1bWVudCA9IGdldERvY3VtZW50O1xuZnVuY3Rpb24gZ2V0TmF2aWdhdG9yT3JUaHJvdygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvd09yVGhyb3coXCJuYXZpZ2F0b3JcIik7XG59XG5leHBvcnRzLmdldE5hdmlnYXRvck9yVGhyb3cgPSBnZXROYXZpZ2F0b3JPclRocm93O1xuZnVuY3Rpb24gZ2V0TmF2aWdhdG9yKCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwibmF2aWdhdG9yXCIpO1xufVxuZXhwb3J0cy5nZXROYXZpZ2F0b3IgPSBnZXROYXZpZ2F0b3I7XG5mdW5jdGlvbiBnZXRMb2NhdGlvbk9yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwibG9jYXRpb25cIik7XG59XG5leHBvcnRzLmdldExvY2F0aW9uT3JUaHJvdyA9IGdldExvY2F0aW9uT3JUaHJvdztcbmZ1bmN0aW9uIGdldExvY2F0aW9uKCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwibG9jYXRpb25cIik7XG59XG5leHBvcnRzLmdldExvY2F0aW9uID0gZ2V0TG9jYXRpb247XG5mdW5jdGlvbiBnZXRDcnlwdG9PclRocm93KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93T3JUaHJvdyhcImNyeXB0b1wiKTtcbn1cbmV4cG9ydHMuZ2V0Q3J5cHRvT3JUaHJvdyA9IGdldENyeXB0b09yVGhyb3c7XG5mdW5jdGlvbiBnZXRDcnlwdG8oKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3coXCJjcnlwdG9cIik7XG59XG5leHBvcnRzLmdldENyeXB0byA9IGdldENyeXB0bztcbmZ1bmN0aW9uIGdldExvY2FsU3RvcmFnZU9yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwibG9jYWxTdG9yYWdlXCIpO1xufVxuZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2VPclRocm93ID0gZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdztcbmZ1bmN0aW9uIGdldExvY2FsU3RvcmFnZSgpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvdyhcImxvY2FsU3RvcmFnZVwiKTtcbn1cbmV4cG9ydHMuZ2V0TG9jYWxTdG9yYWdlID0gZ2V0TG9jYWxTdG9yYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0TG9jYWxTdG9yYWdlIiwiZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdyIsImdldENyeXB0byIsImdldENyeXB0b09yVGhyb3ciLCJnZXRMb2NhdGlvbiIsImdldExvY2F0aW9uT3JUaHJvdyIsImdldE5hdmlnYXRvciIsImdldE5hdmlnYXRvck9yVGhyb3ciLCJnZXREb2N1bWVudCIsImdldERvY3VtZW50T3JUaHJvdyIsImdldEZyb21XaW5kb3dPclRocm93IiwiZ2V0RnJvbVdpbmRvdyIsIm5hbWUiLCJyZXMiLCJ1bmRlZmluZWQiLCJ3aW5kb3ciLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/window-metadata/dist/cjs/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getWindowMetadata = void 0;\nconst window_getters_1 = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\nfunction getWindowMetadata() {\n    let doc;\n    let loc;\n    try {\n        doc = window_getters_1.getDocumentOrThrow();\n        loc = window_getters_1.getLocationOrThrow();\n    } catch (e) {\n        return null;\n    }\n    function getIcons() {\n        const links = doc.getElementsByTagName(\"link\");\n        const icons = [];\n        for(let i = 0; i < links.length; i++){\n            const link = links[i];\n            const rel = link.getAttribute(\"rel\");\n            if (rel) {\n                if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n                    const href = link.getAttribute(\"href\");\n                    if (href) {\n                        if (href.toLowerCase().indexOf(\"https:\") === -1 && href.toLowerCase().indexOf(\"http:\") === -1 && href.indexOf(\"//\") !== 0) {\n                            let absoluteHref = loc.protocol + \"//\" + loc.host;\n                            if (href.indexOf(\"/\") === 0) {\n                                absoluteHref += href;\n                            } else {\n                                const path = loc.pathname.split(\"/\");\n                                path.pop();\n                                const finalPath = path.join(\"/\");\n                                absoluteHref += finalPath + \"/\" + href;\n                            }\n                            icons.push(absoluteHref);\n                        } else if (href.indexOf(\"//\") === 0) {\n                            const absoluteUrl = loc.protocol + href;\n                            icons.push(absoluteUrl);\n                        } else {\n                            icons.push(href);\n                        }\n                    }\n                }\n            }\n        }\n        return icons;\n    }\n    function getWindowMetadataOfAny(...args) {\n        const metaTags = doc.getElementsByTagName(\"meta\");\n        for(let i = 0; i < metaTags.length; i++){\n            const tag = metaTags[i];\n            const attributes = [\n                \"itemprop\",\n                \"property\",\n                \"name\"\n            ].map((target)=>tag.getAttribute(target)).filter((attr)=>{\n                if (attr) {\n                    return args.includes(attr);\n                }\n                return false;\n            });\n            if (attributes.length && attributes) {\n                const content = tag.getAttribute(\"content\");\n                if (content) {\n                    return content;\n                }\n            }\n        }\n        return \"\";\n    }\n    function getName() {\n        let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n        if (!name) {\n            name = doc.title;\n        }\n        return name;\n    }\n    function getDescription() {\n        const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n        return description;\n    }\n    const name = getName();\n    const description = getDescription();\n    const url = loc.origin;\n    const icons = getIcons();\n    const meta = {\n        description,\n        url,\n        icons,\n        name\n    };\n    return meta;\n}\nexports.getWindowMetadata = getWindowMetadata; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vendor/base-x.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/vendor/base-x.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js\");\n\n\nclass Encoder {\n    constructor(name, prefix, baseEncode){\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        } else {\n            throw Error(\"Unknown type, must be binary type\");\n        }\n    }\n}\nclass Decoder {\n    constructor(name, prefix, baseDecode){\n        this.name = name;\n        this.prefix = prefix;\n        if (prefix.codePointAt(0) === undefined) {\n            throw new Error(\"Invalid prefix character\");\n        }\n        this.prefixCodePoint = prefix.codePointAt(0);\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === \"string\") {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        } else {\n            throw Error(\"Can only multibase decode strings\");\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    constructor(decoders){\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder) {\n            return decoder.decode(input);\n        } else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nconst or = (left, right)=>new ComposedDecoder({\n        ...left.decoders || {\n            [left.prefix]: left\n        },\n        ...right.decoders || {\n            [right.prefix]: right\n        }\n    });\nclass Codec {\n    constructor(name, prefix, baseEncode, baseDecode){\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nconst from = ({ name, prefix, encode, decode })=>new Codec(name, prefix, encode, decode);\nconst baseX = ({ prefix, name, alphabet })=>{\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(decode(text))\n    });\n};\nconst decode = (string, alphabet, bitsPerChar, name)=>{\n    const codes = {};\n    for(let i = 0; i < alphabet.length; ++i){\n        codes[alphabet[i]] = i;\n    }\n    let end = string.length;\n    while(string[end - 1] === \"=\"){\n        --end;\n    }\n    const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n    let bits = 0;\n    let buffer = 0;\n    let written = 0;\n    for(let i = 0; i < end; ++i){\n        const value = codes[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        buffer = buffer << bitsPerChar | value;\n        bits += bitsPerChar;\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 255 & buffer >> bits;\n        }\n    }\n    if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n        throw new SyntaxError(\"Unexpected end of data\");\n    }\n    return out;\n};\nconst encode = (data, alphabet, bitsPerChar)=>{\n    const pad = alphabet[alphabet.length - 1] === \"=\";\n    const mask = (1 << bitsPerChar) - 1;\n    let out = \"\";\n    let bits = 0;\n    let buffer = 0;\n    for(let i = 0; i < data.length; ++i){\n        buffer = buffer << 8 | data[i];\n        bits += 8;\n        while(bits > bitsPerChar){\n            bits -= bitsPerChar;\n            out += alphabet[mask & buffer >> bits];\n        }\n    }\n    if (bits) {\n        out += alphabet[mask & buffer << bitsPerChar - bits];\n    }\n    if (pad) {\n        while(out.length * bitsPerChar & 7){\n            out += \"=\";\n        }\n    }\n    return out;\n};\nconst rfc4648 = ({ name, prefix, bitsPerChar, alphabet })=>{\n    return from({\n        prefix,\n        name,\n        encode (input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode (input) {\n            return decode(input, alphabet, bitsPerChar, name);\n        }\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base10.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base10.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base10: () => (/* binding */ base10)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base10 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"9\",\n    name: \"base10\",\n    alphabet: \"0123456789\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTEwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQzNCLE1BQU1DLFNBQVNELCtDQUFLQSxDQUFDO0lBQzFCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtBQUNaLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UxMC5qcz84YzdiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMTAgPSBiYXNlWCh7XG4gIHByZWZpeDogJzknLFxuICBuYW1lOiAnYmFzZTEwJyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5J1xufSk7Il0sIm5hbWVzIjpbImJhc2VYIiwiYmFzZTEwIiwicHJlZml4IiwibmFtZSIsImFscGhhYmV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base10.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base16.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base16.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base16: () => (/* binding */ base16),\n/* harmony export */   base16upper: () => (/* binding */ base16upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base16 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"f\",\n    name: \"base16\",\n    alphabet: \"0123456789abcdef\",\n    bitsPerChar: 4\n});\nconst base16upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"F\",\n    name: \"base16upper\",\n    alphabet: \"0123456789ABCDEF\",\n    bitsPerChar: 4\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTE2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvQztBQUM3QixNQUFNQyxTQUFTRCxpREFBT0EsQ0FBQztJQUM1QkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNQyxjQUFjTixpREFBT0EsQ0FBQztJQUNqQ0UsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UxNi5qcz81M2E0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UxNiA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdmJyxcbiAgbmFtZTogJ2Jhc2UxNicsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OWFiY2RlZicsXG4gIGJpdHNQZXJDaGFyOiA0XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMTZ1cHBlciA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdGJyxcbiAgbmFtZTogJ2Jhc2UxNnVwcGVyJyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGJyxcbiAgYml0c1BlckNoYXI6IDRcbn0pOyJdLCJuYW1lcyI6WyJyZmM0NjQ4IiwiYmFzZTE2IiwicHJlZml4IiwibmFtZSIsImFscGhhYmV0IiwiYml0c1BlckNoYXIiLCJiYXNlMTZ1cHBlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base16.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base2.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base2.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base2: () => (/* binding */ base2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base2 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"0\",\n    name: \"base2\",\n    alphabet: \"01\",\n    bitsPerChar: 1\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsTUFBTUMsUUFBUUQsaURBQU9BLENBQUM7SUFDM0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNlcy9iYXNlMi5qcz9kZmFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJzAnLFxuICBuYW1lOiAnYmFzZTInLFxuICBhbHBoYWJldDogJzAxJyxcbiAgYml0c1BlckNoYXI6IDFcbn0pOyJdLCJuYW1lcyI6WyJyZmM0NjQ4IiwiYmFzZTIiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base256emoji.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base256emoji.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base256emoji: () => (/* binding */ base256emoji)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst alphabet = Array.from(\"\\uD83D\\uDE80\\uD83E\\uDE90☄\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09☀\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02❤\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09☺\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E✌✨\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D❣\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33✋\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13⭐✅\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6✔\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90☹\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20☝\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B⚽\\uD83E\\uDD19☕\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81⚡\\uD83C\\uDF1E\\uD83C\\uDF88❌✊\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C✈\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74▶➡❓\\uD83D\\uDC8E\\uD83D\\uDCB8⬇\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A⚠\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37☎\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51❄\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42\");\nconst alphabetBytesToChars = alphabet.reduce((p, c, i)=>{\n    p[i] = c;\n    return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i)=>{\n    p[c.codePointAt(0)] = i;\n    return p;\n}, []);\nfunction encode(data) {\n    return data.reduce((p, c)=>{\n        p += alphabetBytesToChars[c];\n        return p;\n    }, \"\");\n}\nfunction decode(str) {\n    const byts = [];\n    for (const char of str){\n        const byt = alphabetCharsToBytes[char.codePointAt(0)];\n        if (byt === undefined) {\n            throw new Error(`Non-base256emoji character: ${char}`);\n        }\n        byts.push(byt);\n    }\n    return new Uint8Array(byts);\n}\nconst base256emoji = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n    prefix: \"\\uD83D\\uDE80\",\n    name: \"base256emoji\",\n    encode,\n    decode\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTI1NmVtb2ppLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlDO0FBQ2pDLE1BQU1DLFdBQVdDLE1BQU1GLElBQUksQ0FBQztBQUM1QixNQUFNRyx1QkFBdUJGLFNBQVNHLE1BQU0sQ0FBQyxDQUFDQyxHQUFHQyxHQUFHQztJQUNsREYsQ0FBQyxDQUFDRSxFQUFFLEdBQUdEO0lBQ1AsT0FBT0Q7QUFDVCxHQUFHLEVBQUU7QUFDTCxNQUFNRyx1QkFBdUJQLFNBQVNHLE1BQU0sQ0FBQyxDQUFDQyxHQUFHQyxHQUFHQztJQUNsREYsQ0FBQyxDQUFDQyxFQUFFRyxXQUFXLENBQUMsR0FBRyxHQUFHRjtJQUN0QixPQUFPRjtBQUNULEdBQUcsRUFBRTtBQUNMLFNBQVNLLE9BQU9DLElBQUk7SUFDbEIsT0FBT0EsS0FBS1AsTUFBTSxDQUFDLENBQUNDLEdBQUdDO1FBQ3JCRCxLQUFLRixvQkFBb0IsQ0FBQ0csRUFBRTtRQUM1QixPQUFPRDtJQUNULEdBQUc7QUFDTDtBQUNBLFNBQVNPLE9BQU9DLEdBQUc7SUFDakIsTUFBTUMsT0FBTyxFQUFFO0lBQ2YsS0FBSyxNQUFNQyxRQUFRRixJQUFLO1FBQ3RCLE1BQU1HLE1BQU1SLG9CQUFvQixDQUFDTyxLQUFLTixXQUFXLENBQUMsR0FBRztRQUNyRCxJQUFJTyxRQUFRQyxXQUFXO1lBQ3JCLE1BQU0sSUFBSUMsTUFBTSxDQUFDLDRCQUE0QixFQUFHSCxLQUFNLENBQUM7UUFDekQ7UUFDQUQsS0FBS0ssSUFBSSxDQUFDSDtJQUNaO0lBQ0EsT0FBTyxJQUFJSSxXQUFXTjtBQUN4QjtBQUNPLE1BQU1PLGVBQWVyQiw4Q0FBSUEsQ0FBQztJQUMvQnNCLFFBQVE7SUFDUkMsTUFBTTtJQUNOYjtJQUNBRTtBQUNGLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UyNTZlbW9qaS5qcz80N2NjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb20gfSBmcm9tICcuL2Jhc2UuanMnO1xuY29uc3QgYWxwaGFiZXQgPSBBcnJheS5mcm9tKCdcXHVEODNEXFx1REU4MFxcdUQ4M0VcXHVERTkwXFx1MjYwNFxcdUQ4M0RcXHVERUYwXFx1RDgzQ1xcdURGMENcXHVEODNDXFx1REYxMVxcdUQ4M0NcXHVERjEyXFx1RDgzQ1xcdURGMTNcXHVEODNDXFx1REYxNFxcdUQ4M0NcXHVERjE1XFx1RDgzQ1xcdURGMTZcXHVEODNDXFx1REYxN1xcdUQ4M0NcXHVERjE4XFx1RDgzQ1xcdURGMERcXHVEODNDXFx1REYwRlxcdUQ4M0NcXHVERjBFXFx1RDgzRFxcdURDMDlcXHUyNjAwXFx1RDgzRFxcdURDQkJcXHVEODNEXFx1RERBNVxcdUQ4M0RcXHVEQ0JFXFx1RDgzRFxcdURDQkZcXHVEODNEXFx1REUwMlxcdTI3NjRcXHVEODNEXFx1REUwRFxcdUQ4M0VcXHVERDIzXFx1RDgzRFxcdURFMEFcXHVEODNEXFx1REU0RlxcdUQ4M0RcXHVEQzk1XFx1RDgzRFxcdURFMkRcXHVEODNEXFx1REUxOFxcdUQ4M0RcXHVEQzREXFx1RDgzRFxcdURFMDVcXHVEODNEXFx1REM0RlxcdUQ4M0RcXHVERTAxXFx1RDgzRFxcdUREMjVcXHVEODNFXFx1REQ3MFxcdUQ4M0RcXHVEQzk0XFx1RDgzRFxcdURDOTZcXHVEODNEXFx1REM5OVxcdUQ4M0RcXHVERTIyXFx1RDgzRVxcdUREMTRcXHVEODNEXFx1REUwNlxcdUQ4M0RcXHVERTQ0XFx1RDgzRFxcdURDQUFcXHVEODNEXFx1REUwOVxcdTI2M0FcXHVEODNEXFx1REM0Q1xcdUQ4M0VcXHVERDE3XFx1RDgzRFxcdURDOUNcXHVEODNEXFx1REUxNFxcdUQ4M0RcXHVERTBFXFx1RDgzRFxcdURFMDdcXHVEODNDXFx1REYzOVxcdUQ4M0VcXHVERDI2XFx1RDgzQ1xcdURGODlcXHVEODNEXFx1REM5RVxcdTI3MENcXHUyNzI4XFx1RDgzRVxcdUREMzdcXHVEODNEXFx1REUzMVxcdUQ4M0RcXHVERTBDXFx1RDgzQ1xcdURGMzhcXHVEODNEXFx1REU0Q1xcdUQ4M0RcXHVERTBCXFx1RDgzRFxcdURDOTdcXHVEODNEXFx1REM5QVxcdUQ4M0RcXHVERTBGXFx1RDgzRFxcdURDOUJcXHVEODNEXFx1REU0MlxcdUQ4M0RcXHVEQzkzXFx1RDgzRVxcdUREMjlcXHVEODNEXFx1REUwNFxcdUQ4M0RcXHVERTAwXFx1RDgzRFxcdUREQTRcXHVEODNEXFx1REUwM1xcdUQ4M0RcXHVEQ0FGXFx1RDgzRFxcdURFNDhcXHVEODNEXFx1REM0N1xcdUQ4M0NcXHVERkI2XFx1RDgzRFxcdURFMTJcXHVEODNFXFx1REQyRFxcdTI3NjNcXHVEODNEXFx1REUxQ1xcdUQ4M0RcXHVEQzhCXFx1RDgzRFxcdURDNDBcXHVEODNEXFx1REUyQVxcdUQ4M0RcXHVERTExXFx1RDgzRFxcdURDQTVcXHVEODNEXFx1REU0QlxcdUQ4M0RcXHVERTFFXFx1RDgzRFxcdURFMjlcXHVEODNEXFx1REUyMVxcdUQ4M0VcXHVERDJBXFx1RDgzRFxcdURDNEFcXHVEODNFXFx1REQ3M1xcdUQ4M0RcXHVERTI1XFx1RDgzRVxcdUREMjRcXHVEODNEXFx1REM0OVxcdUQ4M0RcXHVEQzgzXFx1RDgzRFxcdURFMzNcXHUyNzBCXFx1RDgzRFxcdURFMUFcXHVEODNEXFx1REUxRFxcdUQ4M0RcXHVERTM0XFx1RDgzQ1xcdURGMUZcXHVEODNEXFx1REUyQ1xcdUQ4M0RcXHVERTQzXFx1RDgzQ1xcdURGNDBcXHVEODNDXFx1REYzN1xcdUQ4M0RcXHVERTNCXFx1RDgzRFxcdURFMTNcXHUyQjUwXFx1MjcwNVxcdUQ4M0VcXHVERDdBXFx1RDgzQ1xcdURGMDhcXHVEODNEXFx1REUwOFxcdUQ4M0VcXHVERDE4XFx1RDgzRFxcdURDQTZcXHUyNzE0XFx1RDgzRFxcdURFMjNcXHVEODNDXFx1REZDM1xcdUQ4M0RcXHVEQzkwXFx1MjYzOVxcdUQ4M0NcXHVERjhBXFx1RDgzRFxcdURDOThcXHVEODNEXFx1REUyMFxcdTI2MURcXHVEODNEXFx1REUxNVxcdUQ4M0NcXHVERjNBXFx1RDgzQ1xcdURGODJcXHVEODNDXFx1REYzQlxcdUQ4M0RcXHVERTEwXFx1RDgzRFxcdUREOTVcXHVEODNEXFx1REM5RFxcdUQ4M0RcXHVERTRBXFx1RDgzRFxcdURFMzlcXHVEODNEXFx1RERFM1xcdUQ4M0RcXHVEQ0FCXFx1RDgzRFxcdURDODBcXHVEODNEXFx1REM1MVxcdUQ4M0NcXHVERkI1XFx1RDgzRVxcdUREMUVcXHVEODNEXFx1REUxQlxcdUQ4M0RcXHVERDM0XFx1RDgzRFxcdURFMjRcXHVEODNDXFx1REYzQ1xcdUQ4M0RcXHVERTJCXFx1MjZCRFxcdUQ4M0VcXHVERDE5XFx1MjYxNVxcdUQ4M0NcXHVERkM2XFx1RDgzRVxcdUREMkJcXHVEODNEXFx1REM0OFxcdUQ4M0RcXHVERTJFXFx1RDgzRFxcdURFNDZcXHVEODNDXFx1REY3QlxcdUQ4M0NcXHVERjQzXFx1RDgzRFxcdURDMzZcXHVEODNEXFx1REM4MVxcdUQ4M0RcXHVERTMyXFx1RDgzQ1xcdURGM0ZcXHVEODNFXFx1RERFMVxcdUQ4M0NcXHVERjgxXFx1MjZBMVxcdUQ4M0NcXHVERjFFXFx1RDgzQ1xcdURGODhcXHUyNzRDXFx1MjcwQVxcdUQ4M0RcXHVEQzRCXFx1RDgzRFxcdURFMzBcXHVEODNFXFx1REQyOFxcdUQ4M0RcXHVERTM2XFx1RDgzRVxcdUREMURcXHVEODNEXFx1REVCNlxcdUQ4M0RcXHVEQ0IwXFx1RDgzQ1xcdURGNTNcXHVEODNEXFx1RENBMlxcdUQ4M0VcXHVERDFGXFx1RDgzRFxcdURFNDFcXHVEODNEXFx1REVBOFxcdUQ4M0RcXHVEQ0E4XFx1RDgzRVxcdUREMkNcXHUyNzA4XFx1RDgzQ1xcdURGODBcXHVEODNDXFx1REY3QVxcdUQ4M0VcXHVERDEzXFx1RDgzRFxcdURFMTlcXHVEODNEXFx1REM5RlxcdUQ4M0NcXHVERjMxXFx1RDgzRFxcdURFMTZcXHVEODNEXFx1REM3NlxcdUQ4M0VcXHVERDc0XFx1MjVCNlxcdTI3QTFcXHUyNzUzXFx1RDgzRFxcdURDOEVcXHVEODNEXFx1RENCOFxcdTJCMDdcXHVEODNEXFx1REUyOFxcdUQ4M0NcXHVERjFBXFx1RDgzRVxcdUREOEJcXHVEODNEXFx1REUzN1xcdUQ4M0RcXHVERDdBXFx1MjZBMFxcdUQ4M0RcXHVERTQ1XFx1RDgzRFxcdURFMUZcXHVEODNEXFx1REUzNVxcdUQ4M0RcXHVEQzRFXFx1RDgzRVxcdUREMzJcXHVEODNFXFx1REQyMFxcdUQ4M0VcXHVERDI3XFx1RDgzRFxcdURDQ0NcXHVEODNEXFx1REQzNVxcdUQ4M0RcXHVEQzg1XFx1RDgzRVxcdURERDBcXHVEODNEXFx1REMzRVxcdUQ4M0NcXHVERjUyXFx1RDgzRFxcdURFMTdcXHVEODNFXFx1REQxMVxcdUQ4M0NcXHVERjBBXFx1RDgzRVxcdUREMkZcXHVEODNEXFx1REMzN1xcdTI2MEVcXHVEODNEXFx1RENBN1xcdUQ4M0RcXHVERTJGXFx1RDgzRFxcdURDODZcXHVEODNEXFx1REM0NlxcdUQ4M0NcXHVERkE0XFx1RDgzRFxcdURFNDdcXHVEODNDXFx1REY1MVxcdTI3NDRcXHVEODNDXFx1REYzNFxcdUQ4M0RcXHVEQ0EzXFx1RDgzRFxcdURDMzhcXHVEODNEXFx1REM4Q1xcdUQ4M0RcXHVEQ0NEXFx1RDgzRVxcdURENDBcXHVEODNFXFx1REQyMlxcdUQ4M0RcXHVEQzQ1XFx1RDgzRFxcdURDQTFcXHVEODNEXFx1RENBOVxcdUQ4M0RcXHVEQzUwXFx1RDgzRFxcdURDRjhcXHVEODNEXFx1REM3QlxcdUQ4M0VcXHVERDEwXFx1RDgzRVxcdUREMkVcXHVEODNDXFx1REZCQ1xcdUQ4M0VcXHVERDc1XFx1RDgzRFxcdURFQTlcXHVEODNDXFx1REY0RVxcdUQ4M0NcXHVERjRBXFx1RDgzRFxcdURDN0NcXHVEODNEXFx1REM4RFxcdUQ4M0RcXHVEQ0UzXFx1RDgzRVxcdURENDInKTtcbmNvbnN0IGFscGhhYmV0Qnl0ZXNUb0NoYXJzID0gYWxwaGFiZXQucmVkdWNlKChwLCBjLCBpKSA9PiB7XG4gIHBbaV0gPSBjO1xuICByZXR1cm4gcDtcbn0sIFtdKTtcbmNvbnN0IGFscGhhYmV0Q2hhcnNUb0J5dGVzID0gYWxwaGFiZXQucmVkdWNlKChwLCBjLCBpKSA9PiB7XG4gIHBbYy5jb2RlUG9pbnRBdCgwKV0gPSBpO1xuICByZXR1cm4gcDtcbn0sIFtdKTtcbmZ1bmN0aW9uIGVuY29kZShkYXRhKSB7XG4gIHJldHVybiBkYXRhLnJlZHVjZSgocCwgYykgPT4ge1xuICAgIHAgKz0gYWxwaGFiZXRCeXRlc1RvQ2hhcnNbY107XG4gICAgcmV0dXJuIHA7XG4gIH0sICcnKTtcbn1cbmZ1bmN0aW9uIGRlY29kZShzdHIpIHtcbiAgY29uc3QgYnl0cyA9IFtdO1xuICBmb3IgKGNvbnN0IGNoYXIgb2Ygc3RyKSB7XG4gICAgY29uc3QgYnl0ID0gYWxwaGFiZXRDaGFyc1RvQnl0ZXNbY2hhci5jb2RlUG9pbnRBdCgwKV07XG4gICAgaWYgKGJ5dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vbi1iYXNlMjU2ZW1vamkgY2hhcmFjdGVyOiAkeyBjaGFyIH1gKTtcbiAgICB9XG4gICAgYnl0cy5wdXNoKGJ5dCk7XG4gIH1cbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ5dHMpO1xufVxuZXhwb3J0IGNvbnN0IGJhc2UyNTZlbW9qaSA9IGZyb20oe1xuICBwcmVmaXg6ICdcXHVEODNEXFx1REU4MCcsXG4gIG5hbWU6ICdiYXNlMjU2ZW1vamknLFxuICBlbmNvZGUsXG4gIGRlY29kZVxufSk7Il0sIm5hbWVzIjpbImZyb20iLCJhbHBoYWJldCIsIkFycmF5IiwiYWxwaGFiZXRCeXRlc1RvQ2hhcnMiLCJyZWR1Y2UiLCJwIiwiYyIsImkiLCJhbHBoYWJldENoYXJzVG9CeXRlcyIsImNvZGVQb2ludEF0IiwiZW5jb2RlIiwiZGF0YSIsImRlY29kZSIsInN0ciIsImJ5dHMiLCJjaGFyIiwiYnl0IiwidW5kZWZpbmVkIiwiRXJyb3IiLCJwdXNoIiwiVWludDhBcnJheSIsImJhc2UyNTZlbW9qaSIsInByZWZpeCIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base256emoji.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base32.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base32.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"b\",\n    name: \"base32\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"B\",\n    name: \"base32upper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"c\",\n    name: \"base32pad\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"C\",\n    name: \"base32padupper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"v\",\n    name: \"base32hex\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"V\",\n    name: \"base32hexupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"t\",\n    name: \"base32hexpad\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"T\",\n    name: \"base32hexpadupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"h\",\n    name: \"base32z\",\n    alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n    bitsPerChar: 5\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTMyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDN0IsTUFBTUMsU0FBU0QsaURBQU9BLENBQUM7SUFDNUJFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTUMsY0FBY04saURBQU9BLENBQUM7SUFDakNFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTUUsWUFBWVAsaURBQU9BLENBQUM7SUFDL0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTUcsaUJBQWlCUixpREFBT0EsQ0FBQztJQUNwQ0UsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNSSxZQUFZVCxpREFBT0EsQ0FBQztJQUMvQkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNSyxpQkFBaUJWLGlEQUFPQSxDQUFDO0lBQ3BDRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1NLGVBQWVYLGlEQUFPQSxDQUFDO0lBQ2xDRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1PLG9CQUFvQlosaURBQU9BLENBQUM7SUFDdkNFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTVEsVUFBVWIsaURBQU9BLENBQUM7SUFDN0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNlcy9iYXNlMzIuanM/MTM5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMzIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnYicsXG4gIG5hbWU6ICdiYXNlMzInLFxuICBhbHBoYWJldDogJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MjM0NTY3JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ0InLFxuICBuYW1lOiAnYmFzZTMydXBwZXInLFxuICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdjJyxcbiAgbmFtZTogJ2Jhc2UzMnBhZCcsXG4gIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1Njc9JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZHVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ0MnLFxuICBuYW1lOiAnYmFzZTMycGFkdXBwZXInLFxuICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3PScsXG4gIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXggPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAndicsXG4gIG5hbWU6ICdiYXNlMzJoZXgnLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ1YnLFxuICBuYW1lOiAnYmFzZTMyaGV4dXBwZXInLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWJyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHBhZCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICd0JyxcbiAgbmFtZTogJ2Jhc2UzMmhleHBhZCcsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXY9JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHBhZHVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ1QnLFxuICBuYW1lOiAnYmFzZTMyaGV4cGFkdXBwZXInLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWPScsXG4gIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ6ID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ2gnLFxuICBuYW1lOiAnYmFzZTMyeicsXG4gIGFscGhhYmV0OiAneWJuZHJmZzhlamttY3BxeG90MXV3aXN6YTM0NWg3NjknLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7Il0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlMzIiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciIsImJhc2UzMnVwcGVyIiwiYmFzZTMycGFkIiwiYmFzZTMycGFkdXBwZXIiLCJiYXNlMzJoZXgiLCJiYXNlMzJoZXh1cHBlciIsImJhc2UzMmhleHBhZCIsImJhc2UzMmhleHBhZHVwcGVyIiwiYmFzZTMyeiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base36.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base36.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"k\",\n    name: \"base36\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\"\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"K\",\n    name: \"base36upper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTM2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixNQUFNQyxTQUFTRCwrQ0FBS0EsQ0FBQztJQUMxQkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7QUFDWixHQUFHO0FBQ0ksTUFBTUMsY0FBY0wsK0NBQUtBLENBQUM7SUFDL0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0FBQ1osR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTM2LmpzPzFlYTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzNiA9IGJhc2VYKHtcbiAgcHJlZml4OiAnaycsXG4gIG5hbWU6ICdiYXNlMzYnLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzNnVwcGVyID0gYmFzZVgoe1xuICBwcmVmaXg6ICdLJyxcbiAgbmFtZTogJ2Jhc2UzNnVwcGVyJyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVonXG59KTsiXSwibmFtZXMiOlsiYmFzZVgiLCJiYXNlMzYiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiYXNlMzZ1cHBlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base58.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base58.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: \"base58btc\",\n    prefix: \"z\",\n    alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: \"base58flickr\",\n    prefix: \"Z\",\n    alphabet: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTU4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixNQUFNQyxZQUFZRCwrQ0FBS0EsQ0FBQztJQUM3QkUsTUFBTTtJQUNOQyxRQUFRO0lBQ1JDLFVBQVU7QUFDWixHQUFHO0FBQ0ksTUFBTUMsZUFBZUwsK0NBQUtBLENBQUM7SUFDaENFLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxVQUFVO0FBQ1osR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTU4LmpzPzA2MzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGJ0YyA9IGJhc2VYKHtcbiAgbmFtZTogJ2Jhc2U1OGJ0YycsXG4gIHByZWZpeDogJ3onLFxuICBhbHBoYWJldDogJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNThmbGlja3IgPSBiYXNlWCh7XG4gIG5hbWU6ICdiYXNlNThmbGlja3InLFxuICBwcmVmaXg6ICdaJyxcbiAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ1xufSk7Il0sIm5hbWVzIjpbImJhc2VYIiwiYmFzZTU4YnRjIiwibmFtZSIsInByZWZpeCIsImFscGhhYmV0IiwiYmFzZTU4ZmxpY2tyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base64.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base64.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"m\",\n    name: \"base64\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    bitsPerChar: 6\n});\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"M\",\n    name: \"base64pad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n    bitsPerChar: 6\n});\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"u\",\n    name: \"base64url\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bitsPerChar: 6\n});\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"U\",\n    name: \"base64urlpad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n    bitsPerChar: 6\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLFNBQVNELGlEQUFPQSxDQUFDO0lBQzVCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1DLFlBQVlOLGlEQUFPQSxDQUFDO0lBQy9CRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1FLFlBQVlQLGlEQUFPQSxDQUFDO0lBQy9CRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1HLGVBQWVSLGlEQUFPQSxDQUFDO0lBQ2xDRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTY0LmpzPzg1YjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTY0ID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ20nLFxuICBuYW1lOiAnYmFzZTY0JyxcbiAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJyxcbiAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHBhZCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdNJyxcbiAgbmFtZTogJ2Jhc2U2NHBhZCcsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0nLFxuICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0dXJsID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ3UnLFxuICBuYW1lOiAnYmFzZTY0dXJsJyxcbiAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OS1fJyxcbiAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybHBhZCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdVJyxcbiAgbmFtZTogJ2Jhc2U2NHVybHBhZCcsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXz0nLFxuICBiaXRzUGVyQ2hhcjogNlxufSk7Il0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlNjQiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciIsImJhc2U2NHBhZCIsImJhc2U2NHVybCIsImJhc2U2NHVybHBhZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base8.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base8.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base8: () => (/* binding */ base8)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base8 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"7\",\n    name: \"base8\",\n    alphabet: \"01234567\",\n    bitsPerChar: 3\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsTUFBTUMsUUFBUUQsaURBQU9BLENBQUM7SUFDM0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNlcy9iYXNlOC5qcz8wZDQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U4ID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJzcnLFxuICBuYW1lOiAnYmFzZTgnLFxuICBhbHBoYWJldDogJzAxMjM0NTY3JyxcbiAgYml0c1BlckNoYXI6IDNcbn0pOyJdLCJuYW1lcyI6WyJyZmM0NjQ4IiwiYmFzZTgiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/identity.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/identity.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js\");\n\n\nconst identity = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n    prefix: \"\\x00\",\n    name: \"identity\",\n    encode: (buf)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.toString)(buf),\n    decode: (str)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.fromString)(str)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvaWRlbnRpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBSVo7QUFDZCxNQUFNRyxXQUFXSCw4Q0FBSUEsQ0FBQztJQUMzQkksUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFFBQVFDLENBQUFBLE1BQU9MLG1EQUFRQSxDQUFDSztJQUN4QkMsUUFBUUMsQ0FBQUEsTUFBT1IscURBQVVBLENBQUNRO0FBQzVCLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2lkZW50aXR5LmpzPzBhMDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vYmFzZS5qcyc7XG5pbXBvcnQge1xuICBmcm9tU3RyaW5nLFxuICB0b1N0cmluZ1xufSBmcm9tICcuLi9ieXRlcy5qcyc7XG5leHBvcnQgY29uc3QgaWRlbnRpdHkgPSBmcm9tKHtcbiAgcHJlZml4OiAnXFwwJyxcbiAgbmFtZTogJ2lkZW50aXR5JyxcbiAgZW5jb2RlOiBidWYgPT4gdG9TdHJpbmcoYnVmKSxcbiAgZGVjb2RlOiBzdHIgPT4gZnJvbVN0cmluZyhzdHIpXG59KTsiXSwibmFtZXMiOlsiZnJvbSIsImZyb21TdHJpbmciLCJ0b1N0cmluZyIsImlkZW50aXR5IiwicHJlZml4IiwibmFtZSIsImVuY29kZSIsImJ1ZiIsImRlY29kZSIsInN0ciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/basics.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/basics.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.CID),\n/* harmony export */   bases: () => (/* binding */ bases),\n/* harmony export */   bytes: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.bytes),\n/* harmony export */   codecs: () => (/* binding */ codecs),\n/* harmony export */   digest: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.digest),\n/* harmony export */   hasher: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.hasher),\n/* harmony export */   hashes: () => (/* binding */ hashes),\n/* harmony export */   varint: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.varint)\n/* harmony export */ });\n/* harmony import */ var _bases_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/identity.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/identity.js\");\n/* harmony import */ var _bases_base2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base2.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base2.js\");\n/* harmony import */ var _bases_base8_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base8.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base8.js\");\n/* harmony import */ var _bases_base10_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base10.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base10.js\");\n/* harmony import */ var _bases_base16_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bases/base16.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base16.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base58.js\");\n/* harmony import */ var _bases_base64_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bases/base64.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base64.js\");\n/* harmony import */ var _bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bases/base256emoji.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base256emoji.js\");\n/* harmony import */ var _hashes_sha2_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./hashes/sha2.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/sha2.js\");\n/* harmony import */ var _hashes_identity_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./hashes/identity.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/identity.js\");\n/* harmony import */ var _codecs_raw_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./codecs/raw.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/codecs/raw.js\");\n/* harmony import */ var _codecs_json_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./codecs/json.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/codecs/json.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst bases = {\n    ..._bases_identity_js__WEBPACK_IMPORTED_MODULE_0__,\n    ..._bases_base2_js__WEBPACK_IMPORTED_MODULE_1__,\n    ..._bases_base8_js__WEBPACK_IMPORTED_MODULE_2__,\n    ..._bases_base10_js__WEBPACK_IMPORTED_MODULE_3__,\n    ..._bases_base16_js__WEBPACK_IMPORTED_MODULE_4__,\n    ..._bases_base32_js__WEBPACK_IMPORTED_MODULE_5__,\n    ..._bases_base36_js__WEBPACK_IMPORTED_MODULE_6__,\n    ..._bases_base58_js__WEBPACK_IMPORTED_MODULE_7__,\n    ..._bases_base64_js__WEBPACK_IMPORTED_MODULE_8__,\n    ..._bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_9__\n};\nconst hashes = {\n    ..._hashes_sha2_js__WEBPACK_IMPORTED_MODULE_10__,\n    ..._hashes_identity_js__WEBPACK_IMPORTED_MODULE_11__\n};\nconst codecs = {\n    raw: _codecs_raw_js__WEBPACK_IMPORTED_MODULE_12__,\n    json: _codecs_json_js__WEBPACK_IMPORTED_MODULE_13__\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzaWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW9EO0FBQ1Y7QUFDQTtBQUNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNZO0FBQ2Y7QUFDUTtBQUNWO0FBQ0U7QUFPckI7QUFDcEIsTUFBTW1CLFFBQVE7SUFDWixHQUFHbkIsK0NBQVk7SUFDZixHQUFHQyw0Q0FBSztJQUNSLEdBQUdDLDRDQUFLO0lBQ1IsR0FBR0MsNkNBQU07SUFDVCxHQUFHQyw2Q0FBTTtJQUNULEdBQUdDLDZDQUFNO0lBQ1QsR0FBR0MsNkNBQU07SUFDVCxHQUFHQyw2Q0FBTTtJQUNULEdBQUdDLDZDQUFNO0lBQ1QsR0FBR0MsbURBQVk7QUFDakI7QUFDQSxNQUFNVyxTQUFTO0lBQ2IsR0FBR1YsNkNBQUk7SUFDUCxHQUFHQyxpREFBUTtBQUNiO0FBQ0EsTUFBTVUsU0FBUztJQUNiVCxHQUFHQSw4Q0FBQUE7SUFDSEMsSUFBSUEsK0NBQUFBO0FBQ047QUFVRSIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzaWNzLmpzPzU5NzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgaWRlbnRpdHlCYXNlIGZyb20gJy4vYmFzZXMvaWRlbnRpdHkuanMnO1xuaW1wb3J0ICogYXMgYmFzZTIgZnJvbSAnLi9iYXNlcy9iYXNlMi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlOCBmcm9tICcuL2Jhc2VzL2Jhc2U4LmpzJztcbmltcG9ydCAqIGFzIGJhc2UxMCBmcm9tICcuL2Jhc2VzL2Jhc2UxMC5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMTYgZnJvbSAnLi9iYXNlcy9iYXNlMTYuanMnO1xuaW1wb3J0ICogYXMgYmFzZTMyIGZyb20gJy4vYmFzZXMvYmFzZTMyLmpzJztcbmltcG9ydCAqIGFzIGJhc2UzNiBmcm9tICcuL2Jhc2VzL2Jhc2UzNi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlNTggZnJvbSAnLi9iYXNlcy9iYXNlNTguanMnO1xuaW1wb3J0ICogYXMgYmFzZTY0IGZyb20gJy4vYmFzZXMvYmFzZTY0LmpzJztcbmltcG9ydCAqIGFzIGJhc2UyNTZlbW9qaSBmcm9tICcuL2Jhc2VzL2Jhc2UyNTZlbW9qaS5qcyc7XG5pbXBvcnQgKiBhcyBzaGEyIGZyb20gJy4vaGFzaGVzL3NoYTIuanMnO1xuaW1wb3J0ICogYXMgaWRlbnRpdHkgZnJvbSAnLi9oYXNoZXMvaWRlbnRpdHkuanMnO1xuaW1wb3J0ICogYXMgcmF3IGZyb20gJy4vY29kZWNzL3Jhdy5qcyc7XG5pbXBvcnQgKiBhcyBqc29uIGZyb20gJy4vY29kZWNzL2pzb24uanMnO1xuaW1wb3J0IHtcbiAgQ0lELFxuICBoYXNoZXIsXG4gIGRpZ2VzdCxcbiAgdmFyaW50LFxuICBieXRlc1xufSBmcm9tICcuL2luZGV4LmpzJztcbmNvbnN0IGJhc2VzID0ge1xuICAuLi5pZGVudGl0eUJhc2UsXG4gIC4uLmJhc2UyLFxuICAuLi5iYXNlOCxcbiAgLi4uYmFzZTEwLFxuICAuLi5iYXNlMTYsXG4gIC4uLmJhc2UzMixcbiAgLi4uYmFzZTM2LFxuICAuLi5iYXNlNTgsXG4gIC4uLmJhc2U2NCxcbiAgLi4uYmFzZTI1NmVtb2ppXG59O1xuY29uc3QgaGFzaGVzID0ge1xuICAuLi5zaGEyLFxuICAuLi5pZGVudGl0eVxufTtcbmNvbnN0IGNvZGVjcyA9IHtcbiAgcmF3LFxuICBqc29uXG59O1xuZXhwb3J0IHtcbiAgQ0lELFxuICBoYXNoZXIsXG4gIGRpZ2VzdCxcbiAgdmFyaW50LFxuICBieXRlcyxcbiAgaGFzaGVzLFxuICBiYXNlcyxcbiAgY29kZWNzXG59OyJdLCJuYW1lcyI6WyJpZGVudGl0eUJhc2UiLCJiYXNlMiIsImJhc2U4IiwiYmFzZTEwIiwiYmFzZTE2IiwiYmFzZTMyIiwiYmFzZTM2IiwiYmFzZTU4IiwiYmFzZTY0IiwiYmFzZTI1NmVtb2ppIiwic2hhMiIsImlkZW50aXR5IiwicmF3IiwianNvbiIsIkNJRCIsImhhc2hlciIsImRpZ2VzdCIsInZhcmludCIsImJ5dGVzIiwiYmFzZXMiLCJoYXNoZXMiLCJjb2RlY3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/basics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nconst toHex = (d)=>d.reduce((hex, byte)=>hex + byte.toString(16).padStart(2, \"0\"), \"\");\nconst fromHex = (hex)=>{\n    const hexes = hex.match(/../g);\n    return hexes ? new Uint8Array(hexes.map((b)=>parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb)=>{\n    if (aa === bb) return true;\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for(let ii = 0; ii < aa.byteLength; ii++){\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n};\nconst coerce = (o)=>{\n    if (o instanceof Uint8Array && o.constructor.name === \"Uint8Array\") return o;\n    if (o instanceof ArrayBuffer) return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error(\"Unknown type, must be binary type\");\n};\nconst isBinary = (o)=>o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = (str)=>new TextEncoder().encode(str);\nconst toString = (b)=>new TextDecoder().decode(b);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxNQUFNQSxRQUFRLElBQUlDLFdBQVc7QUFDN0IsTUFBTUMsUUFBUUMsQ0FBQUEsSUFBS0EsRUFBRUMsTUFBTSxDQUFDLENBQUNDLEtBQUtDLE9BQVNELE1BQU1DLEtBQUtDLFFBQVEsQ0FBQyxJQUFJQyxRQUFRLENBQUMsR0FBRyxNQUFNO0FBQ3JGLE1BQU1DLFVBQVVKLENBQUFBO0lBQ2QsTUFBTUssUUFBUUwsSUFBSU0sS0FBSyxDQUFDO0lBQ3hCLE9BQU9ELFFBQVEsSUFBSVQsV0FBV1MsTUFBTUUsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQyxTQUFTRCxHQUFHLFFBQVFiO0FBQ25FO0FBQ0EsTUFBTWUsU0FBUyxDQUFDQyxJQUFJQztJQUNsQixJQUFJRCxPQUFPQyxJQUNULE9BQU87SUFDVCxJQUFJRCxHQUFHRSxVQUFVLEtBQUtELEdBQUdDLFVBQVUsRUFBRTtRQUNuQyxPQUFPO0lBQ1Q7SUFDQSxJQUFLLElBQUlDLEtBQUssR0FBR0EsS0FBS0gsR0FBR0UsVUFBVSxFQUFFQyxLQUFNO1FBQ3pDLElBQUlILEVBQUUsQ0FBQ0csR0FBRyxLQUFLRixFQUFFLENBQUNFLEdBQUcsRUFBRTtZQUNyQixPQUFPO1FBQ1Q7SUFDRjtJQUNBLE9BQU87QUFDVDtBQUNBLE1BQU1DLFNBQVNDLENBQUFBO0lBQ2IsSUFBSUEsYUFBYXBCLGNBQWNvQixFQUFFQyxXQUFXLENBQUNDLElBQUksS0FBSyxjQUNwRCxPQUFPRjtJQUNULElBQUlBLGFBQWFHLGFBQ2YsT0FBTyxJQUFJdkIsV0FBV29CO0lBQ3hCLElBQUlHLFlBQVlDLE1BQU0sQ0FBQ0osSUFBSTtRQUN6QixPQUFPLElBQUlwQixXQUFXb0IsRUFBRUssTUFBTSxFQUFFTCxFQUFFTSxVQUFVLEVBQUVOLEVBQUVILFVBQVU7SUFDNUQ7SUFDQSxNQUFNLElBQUlVLE1BQU07QUFDbEI7QUFDQSxNQUFNQyxXQUFXUixDQUFBQSxJQUFLQSxhQUFhRyxlQUFlQSxZQUFZQyxNQUFNLENBQUNKO0FBQ3JFLE1BQU1TLGFBQWFDLENBQUFBLE1BQU8sSUFBSUMsY0FBY0MsTUFBTSxDQUFDRjtBQUNuRCxNQUFNeEIsV0FBV00sQ0FBQUEsSUFBSyxJQUFJcUIsY0FBY0MsTUFBTSxDQUFDdEI7QUFVN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2J5dGVzLmpzPzhjY2EiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZW1wdHkgPSBuZXcgVWludDhBcnJheSgwKTtcbmNvbnN0IHRvSGV4ID0gZCA9PiBkLnJlZHVjZSgoaGV4LCBieXRlKSA9PiBoZXggKyBieXRlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpLCAnJyk7XG5jb25zdCBmcm9tSGV4ID0gaGV4ID0+IHtcbiAgY29uc3QgaGV4ZXMgPSBoZXgubWF0Y2goLy4uL2cpO1xuICByZXR1cm4gaGV4ZXMgPyBuZXcgVWludDhBcnJheShoZXhlcy5tYXAoYiA9PiBwYXJzZUludChiLCAxNikpKSA6IGVtcHR5O1xufTtcbmNvbnN0IGVxdWFscyA9IChhYSwgYmIpID0+IHtcbiAgaWYgKGFhID09PSBiYilcbiAgICByZXR1cm4gdHJ1ZTtcbiAgaWYgKGFhLmJ5dGVMZW5ndGggIT09IGJiLmJ5dGVMZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IGFhLmJ5dGVMZW5ndGg7IGlpKyspIHtcbiAgICBpZiAoYWFbaWldICE9PSBiYltpaV0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59O1xuY29uc3QgY29lcmNlID0gbyA9PiB7XG4gIGlmIChvIGluc3RhbmNlb2YgVWludDhBcnJheSAmJiBvLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdVaW50OEFycmF5JylcbiAgICByZXR1cm4gbztcbiAgaWYgKG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcilcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkobyk7XG4gIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcobykpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoby5idWZmZXIsIG8uYnl0ZU9mZnNldCwgby5ieXRlTGVuZ3RoKTtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xufTtcbmNvbnN0IGlzQmluYXJ5ID0gbyA9PiBvIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgfHwgQXJyYXlCdWZmZXIuaXNWaWV3KG8pO1xuY29uc3QgZnJvbVN0cmluZyA9IHN0ciA9PiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyKTtcbmNvbnN0IHRvU3RyaW5nID0gYiA9PiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYik7XG5leHBvcnQge1xuICBlcXVhbHMsXG4gIGNvZXJjZSxcbiAgaXNCaW5hcnksXG4gIGZyb21IZXgsXG4gIHRvSGV4LFxuICBmcm9tU3RyaW5nLFxuICB0b1N0cmluZyxcbiAgZW1wdHlcbn07Il0sIm5hbWVzIjpbImVtcHR5IiwiVWludDhBcnJheSIsInRvSGV4IiwiZCIsInJlZHVjZSIsImhleCIsImJ5dGUiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwiZnJvbUhleCIsImhleGVzIiwibWF0Y2giLCJtYXAiLCJiIiwicGFyc2VJbnQiLCJlcXVhbHMiLCJhYSIsImJiIiwiYnl0ZUxlbmd0aCIsImlpIiwiY29lcmNlIiwibyIsImNvbnN0cnVjdG9yIiwibmFtZSIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiYnVmZmVyIiwiYnl0ZU9mZnNldCIsIkVycm9yIiwiaXNCaW5hcnkiLCJmcm9tU3RyaW5nIiwic3RyIiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJUZXh0RGVjb2RlciIsImRlY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/cid.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/cid.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID)\n/* harmony export */ });\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/varint.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/digest.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base58.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base32.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js\");\n\n\n\n\n\nclass CID {\n    constructor(version, code, multihash, bytes){\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        this.byteOffset = bytes.byteOffset;\n        this.byteLength = bytes.byteLength;\n        this.asCID = this;\n        this._baseCache = new Map();\n        Object.defineProperties(this, {\n            byteOffset: hidden,\n            byteLength: hidden,\n            code: readonly,\n            version: readonly,\n            multihash: readonly,\n            bytes: readonly,\n            _baseCache: hidden,\n            asCID: hidden\n        });\n    }\n    toV0() {\n        switch(this.version){\n            case 0:\n                {\n                    return this;\n                }\n            default:\n                {\n                    const { code, multihash } = this;\n                    if (code !== DAG_PB_CODE) {\n                        throw new Error(\"Cannot convert a non dag-pb CID to CIDv0\");\n                    }\n                    if (multihash.code !== SHA_256_CODE) {\n                        throw new Error(\"Cannot convert non sha2-256 multihash CID to CIDv0\");\n                    }\n                    return CID.createV0(multihash);\n                }\n        }\n    }\n    toV1() {\n        switch(this.version){\n            case 0:\n                {\n                    const { code, digest } = this.multihash;\n                    const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, digest);\n                    return CID.createV1(this.code, multihash);\n                }\n            case 1:\n                {\n                    return this;\n                }\n            default:\n                {\n                    throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n                }\n        }\n    }\n    equals(other) {\n        return other && this.code === other.code && this.version === other.version && _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.equals(this.multihash, other.multihash);\n    }\n    toString(base) {\n        const { bytes, version, _baseCache } = this;\n        switch(version){\n            case 0:\n                return toStringV0(bytes, _baseCache, base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n            default:\n                return toStringV1(bytes, _baseCache, base || _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.encoder);\n        }\n    }\n    toJSON() {\n        return {\n            code: this.code,\n            version: this.version,\n            hash: this.multihash.bytes\n        };\n    }\n    get [Symbol.toStringTag]() {\n        return \"CID\";\n    }\n    [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n        return \"CID(\" + this.toString() + \")\";\n    }\n    static isCID(value) {\n        deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n        return !!(value && (value[cidSymbol] || value.asCID === value));\n    }\n    get toBaseEncodedString() {\n        throw new Error(\"Deprecated, use .toString()\");\n    }\n    get codec() {\n        throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n    }\n    get buffer() {\n        throw new Error(\"Deprecated .buffer property, use .bytes to get Uint8Array instead\");\n    }\n    get multibaseName() {\n        throw new Error('\"multibaseName\" property is deprecated');\n    }\n    get prefix() {\n        throw new Error('\"prefix\" property is deprecated');\n    }\n    static asCID(value) {\n        if (value instanceof CID) {\n            return value;\n        } else if (value != null && value.asCID === value) {\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n        } else if (value != null && value[cidSymbol] === true) {\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.decode(multihash);\n            return CID.create(version, code, digest);\n        } else {\n            return null;\n        }\n    }\n    static create(version, code, digest) {\n        if (typeof code !== \"number\") {\n            throw new Error(\"String codecs are no longer supported\");\n        }\n        switch(version){\n            case 0:\n                {\n                    if (code !== DAG_PB_CODE) {\n                        throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                    } else {\n                        return new CID(version, code, digest, digest.bytes);\n                    }\n                }\n            case 1:\n                {\n                    const bytes = encodeCID(version, code, digest.bytes);\n                    return new CID(version, code, digest, bytes);\n                }\n            default:\n                {\n                    throw new Error(\"Invalid version\");\n                }\n        }\n    }\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length) {\n            throw new Error(\"Incorrect length\");\n        }\n        return cid;\n    }\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_4__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error(\"Incorrect length\");\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n        return [\n            cid,\n            bytes.subarray(specs.size)\n        ];\n    }\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = ()=>{\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_0__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            version = 0;\n            offset = 0;\n        } else if (version === 1) {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next();\n        const digestSize = next();\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return {\n            version,\n            codec,\n            multihashCode,\n            digestSize,\n            multihashSize,\n            size\n        };\n    }\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        cid._baseCache.set(prefix, source);\n        return cid;\n    }\n}\nconst parseCIDtoBytes = (source, base)=>{\n    switch(source[0]){\n        case \"Q\":\n            {\n                const decoder = base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n                return [\n                    _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                    decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n                ];\n            }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix:\n            {\n                const decoder = base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n                return [\n                    _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                    decoder.decode(source)\n                ];\n            }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.prefix:\n            {\n                const decoder = base || _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32;\n                return [\n                    _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.prefix,\n                    decoder.decode(source)\n                ];\n            }\n        default:\n            {\n                if (base == null) {\n                    throw Error(\"To parse non base32 or base58btc encoded CID multibase decoder must be provided\");\n                }\n                return [\n                    source[0],\n                    base.decode(source)\n                ];\n            }\n    }\n};\nconst toStringV0 = (bytes, cache, base)=>{\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    } else {\n        return cid;\n    }\n};\nconst toStringV1 = (bytes, cache, base)=>{\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    } else {\n        return cid;\n    }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash)=>{\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n};\nconst cidSymbol = Symbol.for(\"@ipld/js-cid/CID\");\nconst readonly = {\n    writable: false,\n    configurable: false,\n    enumerable: true\n};\nconst hidden = {\n    writable: false,\n    enumerable: false,\n    configurable: false\n};\nconst version = \"0.0.0-dev\";\nconst deprecate = (range, message)=>{\n    if (range.test(version)) {\n        console.warn(message);\n    } else {\n        throw new Error(message);\n    }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/codecs/json.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/codecs/json.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst name = \"json\";\nconst code = 512;\nconst encode = (node)=>textEncoder.encode(JSON.stringify(node));\nconst decode = (data)=>JSON.parse(textDecoder.decode(data));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvY29kZWNzL2pzb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE1BQU1BLGNBQWMsSUFBSUM7QUFDeEIsTUFBTUMsY0FBYyxJQUFJQztBQUNqQixNQUFNQyxPQUFPLE9BQU87QUFDcEIsTUFBTUMsT0FBTyxJQUFJO0FBQ2pCLE1BQU1DLFNBQVNDLENBQUFBLE9BQVFQLFlBQVlNLE1BQU0sQ0FBQ0UsS0FBS0MsU0FBUyxDQUFDRixPQUFPO0FBQ2hFLE1BQU1HLFNBQVNDLENBQUFBLE9BQVFILEtBQUtJLEtBQUssQ0FBQ1YsWUFBWVEsTUFBTSxDQUFDQyxPQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9jb2RlY3MvanNvbi5qcz80ZGJiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHRleHRFbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5jb25zdCB0ZXh0RGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuZXhwb3J0IGNvbnN0IG5hbWUgPSAnanNvbic7XG5leHBvcnQgY29uc3QgY29kZSA9IDUxMjtcbmV4cG9ydCBjb25zdCBlbmNvZGUgPSBub2RlID0+IHRleHRFbmNvZGVyLmVuY29kZShKU09OLnN0cmluZ2lmeShub2RlKSk7XG5leHBvcnQgY29uc3QgZGVjb2RlID0gZGF0YSA9PiBKU09OLnBhcnNlKHRleHREZWNvZGVyLmRlY29kZShkYXRhKSk7Il0sIm5hbWVzIjpbInRleHRFbmNvZGVyIiwiVGV4dEVuY29kZXIiLCJ0ZXh0RGVjb2RlciIsIlRleHREZWNvZGVyIiwibmFtZSIsImNvZGUiLCJlbmNvZGUiLCJub2RlIiwiSlNPTiIsInN0cmluZ2lmeSIsImRlY29kZSIsImRhdGEiLCJwYXJzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/codecs/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/codecs/raw.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/codecs/raw.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js\");\n\nconst name = \"raw\";\nconst code = 85;\nconst encode = (node)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node);\nconst decode = (data)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvY29kZWNzL3Jhdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxQztBQUM5QixNQUFNQyxPQUFPLE1BQU07QUFDbkIsTUFBTUMsT0FBTyxHQUFHO0FBQ2hCLE1BQU1DLFNBQVNDLENBQUFBLE9BQVFKLGlEQUFNQSxDQUFDSSxNQUFNO0FBQ3BDLE1BQU1DLFNBQVNDLENBQUFBLE9BQVFOLGlEQUFNQSxDQUFDTSxNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9jb2RlY3MvcmF3LmpzPzNmOTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuZXhwb3J0IGNvbnN0IG5hbWUgPSAncmF3JztcbmV4cG9ydCBjb25zdCBjb2RlID0gODU7XG5leHBvcnQgY29uc3QgZW5jb2RlID0gbm9kZSA9PiBjb2VyY2Uobm9kZSk7XG5leHBvcnQgY29uc3QgZGVjb2RlID0gZGF0YSA9PiBjb2VyY2UoZGF0YSk7Il0sIm5hbWVzIjpbImNvZXJjZSIsIm5hbWUiLCJjb2RlIiwiZW5jb2RlIiwibm9kZSIsImRlY29kZSIsImRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/codecs/raw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/digest.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/digest.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/varint.js\");\n\n\nconst create = (code, digest)=>{\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n};\nconst decode = (multihash)=>{\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error(\"Incorrect length\");\n    }\n    return new Digest(code, size, digest, bytes);\n};\nconst equals = (a, b)=>{\n    if (a === b) {\n        return true;\n    } else {\n        return a.code === b.code && a.size === b.size && (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, b.bytes);\n    }\n};\nclass Digest {\n    constructor(code, size, digest, bytes){\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHcUI7QUFDa0I7QUFDaEMsTUFBTUksU0FBUyxDQUFDQyxNQUFNQztJQUMzQixNQUFNQyxPQUFPRCxPQUFPRSxVQUFVO0lBQzlCLE1BQU1DLGFBQWFOLHNEQUFxQixDQUFDRTtJQUN6QyxNQUFNTSxlQUFlRixhQUFhTixzREFBcUIsQ0FBQ0k7SUFDeEQsTUFBTUssUUFBUSxJQUFJQyxXQUFXRixlQUFlSjtJQUM1Q0osZ0RBQWUsQ0FBQ0UsTUFBTU8sT0FBTztJQUM3QlQsZ0RBQWUsQ0FBQ0ksTUFBTUssT0FBT0g7SUFDN0JHLE1BQU1HLEdBQUcsQ0FBQ1QsUUFBUUs7SUFDbEIsT0FBTyxJQUFJSyxPQUFPWCxNQUFNRSxNQUFNRCxRQUFRTTtBQUN4QyxFQUFFO0FBQ0ssTUFBTUssU0FBU0MsQ0FBQUE7SUFDcEIsTUFBTU4sUUFBUVosaURBQU1BLENBQUNrQjtJQUNyQixNQUFNLENBQUNiLE1BQU1JLFdBQVcsR0FBR04sOENBQWEsQ0FBQ1M7SUFDekMsTUFBTSxDQUFDTCxNQUFNSSxhQUFhLEdBQUdSLDhDQUFhLENBQUNTLE1BQU1PLFFBQVEsQ0FBQ1Y7SUFDMUQsTUFBTUgsU0FBU00sTUFBTU8sUUFBUSxDQUFDVixhQUFhRTtJQUMzQyxJQUFJTCxPQUFPRSxVQUFVLEtBQUtELE1BQU07UUFDOUIsTUFBTSxJQUFJYSxNQUFNO0lBQ2xCO0lBQ0EsT0FBTyxJQUFJSixPQUFPWCxNQUFNRSxNQUFNRCxRQUFRTTtBQUN4QyxFQUFFO0FBQ0ssTUFBTVgsU0FBUyxDQUFDb0IsR0FBR0M7SUFDeEIsSUFBSUQsTUFBTUMsR0FBRztRQUNYLE9BQU87SUFDVCxPQUFPO1FBQ0wsT0FBT0QsRUFBRWhCLElBQUksS0FBS2lCLEVBQUVqQixJQUFJLElBQUlnQixFQUFFZCxJQUFJLEtBQUtlLEVBQUVmLElBQUksSUFBSUwsaURBQVVBLENBQUNtQixFQUFFVCxLQUFLLEVBQUVVLEVBQUVWLEtBQUs7SUFDOUU7QUFDRixFQUFFO0FBQ0ssTUFBTUk7SUFDWE8sWUFBWWxCLElBQUksRUFBRUUsSUFBSSxFQUFFRCxNQUFNLEVBQUVNLEtBQUssQ0FBRTtRQUNyQyxJQUFJLENBQUNQLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNFLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNELE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUNNLEtBQUssR0FBR0E7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9oYXNoZXMvZGlnZXN0LmpzP2MwZjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY29lcmNlLFxuICBlcXVhbHMgYXMgZXF1YWxCeXRlc1xufSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi4vdmFyaW50LmpzJztcbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAoY29kZSwgZGlnZXN0KSA9PiB7XG4gIGNvbnN0IHNpemUgPSBkaWdlc3QuYnl0ZUxlbmd0aDtcbiAgY29uc3Qgc2l6ZU9mZnNldCA9IHZhcmludC5lbmNvZGluZ0xlbmd0aChjb2RlKTtcbiAgY29uc3QgZGlnZXN0T2Zmc2V0ID0gc2l6ZU9mZnNldCArIHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKTtcbiAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShkaWdlc3RPZmZzZXQgKyBzaXplKTtcbiAgdmFyaW50LmVuY29kZVRvKGNvZGUsIGJ5dGVzLCAwKTtcbiAgdmFyaW50LmVuY29kZVRvKHNpemUsIGJ5dGVzLCBzaXplT2Zmc2V0KTtcbiAgYnl0ZXMuc2V0KGRpZ2VzdCwgZGlnZXN0T2Zmc2V0KTtcbiAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59O1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IG11bHRpaGFzaCA9PiB7XG4gIGNvbnN0IGJ5dGVzID0gY29lcmNlKG11bHRpaGFzaCk7XG4gIGNvbnN0IFtjb2RlLCBzaXplT2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMpO1xuICBjb25zdCBbc2l6ZSwgZGlnZXN0T2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoc2l6ZU9mZnNldCkpO1xuICBjb25zdCBkaWdlc3QgPSBieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0ICsgZGlnZXN0T2Zmc2V0KTtcbiAgaWYgKGRpZ2VzdC5ieXRlTGVuZ3RoICE9PSBzaXplKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gIH1cbiAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59O1xuZXhwb3J0IGNvbnN0IGVxdWFscyA9IChhLCBiKSA9PiB7XG4gIGlmIChhID09PSBiKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGEuY29kZSA9PT0gYi5jb2RlICYmIGEuc2l6ZSA9PT0gYi5zaXplICYmIGVxdWFsQnl0ZXMoYS5ieXRlcywgYi5ieXRlcyk7XG4gIH1cbn07XG5leHBvcnQgY2xhc3MgRGlnZXN0IHtcbiAgY29uc3RydWN0b3IoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcykge1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICB0aGlzLmRpZ2VzdCA9IGRpZ2VzdDtcbiAgICB0aGlzLmJ5dGVzID0gYnl0ZXM7XG4gIH1cbn0iXSwibmFtZXMiOlsiY29lcmNlIiwiZXF1YWxzIiwiZXF1YWxCeXRlcyIsInZhcmludCIsImNyZWF0ZSIsImNvZGUiLCJkaWdlc3QiLCJzaXplIiwiYnl0ZUxlbmd0aCIsInNpemVPZmZzZXQiLCJlbmNvZGluZ0xlbmd0aCIsImRpZ2VzdE9mZnNldCIsImJ5dGVzIiwiVWludDhBcnJheSIsImVuY29kZVRvIiwic2V0IiwiRGlnZXN0IiwiZGVjb2RlIiwibXVsdGloYXNoIiwic3ViYXJyYXkiLCJFcnJvciIsImEiLCJiIiwiY29uc3RydWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/hasher.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/hasher.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/digest.js\");\n\nconst from = ({ name, code, encode })=>new Hasher(name, code, encode);\nclass Hasher {\n    constructor(name, code, encode){\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n    }\n    digest(input) {\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            return result instanceof Uint8Array ? _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, result) : result.then((digest)=>_digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, digest));\n        } else {\n            throw Error(\"Unknown type, must be binary type\");\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL2hhc2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDL0IsTUFBTUMsT0FBTyxDQUFDLEVBQUNDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUMsR0FBSyxJQUFJQyxPQUFPSCxNQUFNQyxNQUFNQyxRQUFRO0FBQ3RFLE1BQU1DO0lBQ1hDLFlBQVlKLElBQUksRUFBRUMsSUFBSSxFQUFFQyxNQUFNLENBQUU7UUFDOUIsSUFBSSxDQUFDRixJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxNQUFNLEdBQUdBO0lBQ2hCO0lBQ0FHLE9BQU9DLEtBQUssRUFBRTtRQUNaLElBQUlBLGlCQUFpQkMsWUFBWTtZQUMvQixNQUFNQyxTQUFTLElBQUksQ0FBQ04sTUFBTSxDQUFDSTtZQUMzQixPQUFPRSxrQkFBa0JELGFBQWFULDhDQUFhLENBQUMsSUFBSSxDQUFDRyxJQUFJLEVBQUVPLFVBQVVBLE9BQU9FLElBQUksQ0FBQ0wsQ0FBQUEsU0FBVVAsOENBQWEsQ0FBQyxJQUFJLENBQUNHLElBQUksRUFBRUk7UUFDMUgsT0FBTztZQUNMLE1BQU1NLE1BQU07UUFDZDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9oYXNoZXIuanM/MTU5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuZXhwb3J0IGNvbnN0IGZyb20gPSAoe25hbWUsIGNvZGUsIGVuY29kZX0pID0+IG5ldyBIYXNoZXIobmFtZSwgY29kZSwgZW5jb2RlKTtcbmV4cG9ydCBjbGFzcyBIYXNoZXIge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBjb2RlLCBlbmNvZGUpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy5lbmNvZGUgPSBlbmNvZGU7XG4gIH1cbiAgZGlnZXN0KGlucHV0KSB7XG4gICAgaWYgKGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5lbmNvZGUoaW5wdXQpO1xuICAgICAgcmV0dXJuIHJlc3VsdCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgPyBEaWdlc3QuY3JlYXRlKHRoaXMuY29kZSwgcmVzdWx0KSA6IHJlc3VsdC50aGVuKGRpZ2VzdCA9PiBEaWdlc3QuY3JlYXRlKHRoaXMuY29kZSwgZGlnZXN0KSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbiAgICB9XG4gIH1cbn0iXSwibmFtZXMiOlsiRGlnZXN0IiwiZnJvbSIsIm5hbWUiLCJjb2RlIiwiZW5jb2RlIiwiSGFzaGVyIiwiY29uc3RydWN0b3IiLCJkaWdlc3QiLCJpbnB1dCIsIlVpbnQ4QXJyYXkiLCJyZXN1bHQiLCJjcmVhdGUiLCJ0aGVuIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/identity.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/identity.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/digest.js\");\n\n\nconst code = 0;\nconst name = \"identity\";\nconst encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce;\nconst digest = (input)=>_digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input));\nconst identity = {\n    code,\n    name,\n    encode,\n    digest\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL2lkZW50aXR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBQ3RDLE1BQU1FLE9BQU87QUFDYixNQUFNQyxPQUFPO0FBQ2IsTUFBTUMsU0FBU0osNkNBQU1BO0FBQ3JCLE1BQU1LLFNBQVNDLENBQUFBLFFBQVNMLDhDQUFhLENBQUNDLE1BQU1FLE9BQU9FO0FBQzVDLE1BQU1FLFdBQVc7SUFDdEJOO0lBQ0FDO0lBQ0FDO0lBQ0FDO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL2lkZW50aXR5LmpzPzMyMjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0ICogYXMgRGlnZXN0IGZyb20gJy4vZGlnZXN0LmpzJztcbmNvbnN0IGNvZGUgPSAwO1xuY29uc3QgbmFtZSA9ICdpZGVudGl0eSc7XG5jb25zdCBlbmNvZGUgPSBjb2VyY2U7XG5jb25zdCBkaWdlc3QgPSBpbnB1dCA9PiBEaWdlc3QuY3JlYXRlKGNvZGUsIGVuY29kZShpbnB1dCkpO1xuZXhwb3J0IGNvbnN0IGlkZW50aXR5ID0ge1xuICBjb2RlLFxuICBuYW1lLFxuICBlbmNvZGUsXG4gIGRpZ2VzdFxufTsiXSwibmFtZXMiOlsiY29lcmNlIiwiRGlnZXN0IiwiY29kZSIsIm5hbWUiLCJlbmNvZGUiLCJkaWdlc3QiLCJpbnB1dCIsImNyZWF0ZSIsImlkZW50aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/sha2.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/sha2.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/hasher.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n    name: \"sha2-256\",\n    code: 18,\n    encode: (input)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash(\"sha256\").update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n    name: \"sha2-512\",\n    code: 19,\n    encode: (input)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash(\"sha512\").update(input).digest())\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL3NoYTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEI7QUFDTztBQUNFO0FBQzlCLE1BQU1HLFNBQVNGLGdEQUFJQSxDQUFDO0lBQ3pCRyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsUUFBUUMsQ0FBQUEsUUFBU0wsaURBQU1BLENBQUNGLDhDQUFpQixDQUFDLFVBQVVTLE1BQU0sQ0FBQ0YsT0FBT0csTUFBTTtBQUMxRSxHQUFHO0FBQ0ksTUFBTUMsU0FBU1YsZ0RBQUlBLENBQUM7SUFDekJHLE1BQU07SUFDTkMsTUFBTTtJQUNOQyxRQUFRQyxDQUFBQSxRQUFTTCxpREFBTUEsQ0FBQ0YsOENBQWlCLENBQUMsVUFBVVMsTUFBTSxDQUFDRixPQUFPRyxNQUFNO0FBQzFFLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9zaGEyLmpzPzYzNGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vaGFzaGVyLmpzJztcbmltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmV4cG9ydCBjb25zdCBzaGEyNTYgPSBmcm9tKHtcbiAgbmFtZTogJ3NoYTItMjU2JyxcbiAgY29kZTogMTgsXG4gIGVuY29kZTogaW5wdXQgPT4gY29lcmNlKGNyeXB0by5jcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUoaW5wdXQpLmRpZ2VzdCgpKVxufSk7XG5leHBvcnQgY29uc3Qgc2hhNTEyID0gZnJvbSh7XG4gIG5hbWU6ICdzaGEyLTUxMicsXG4gIGNvZGU6IDE5LFxuICBlbmNvZGU6IGlucHV0ID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhNTEyJykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pOyJdLCJuYW1lcyI6WyJjcnlwdG8iLCJmcm9tIiwiY29lcmNlIiwic2hhMjU2IiwibmFtZSIsImNvZGUiLCJlbmNvZGUiLCJpbnB1dCIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJkaWdlc3QiLCJzaGE1MTIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_1__)\n/* harmony export */ });\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/cid.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/varint.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/hasher.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/digest.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUErQjtBQUNPO0FBQ0Y7QUFDUztBQUNBO0FBTzNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9pbmRleC5qcz80YjFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENJRCB9IGZyb20gJy4vY2lkLmpzJztcbmltcG9ydCAqIGFzIHZhcmludCBmcm9tICcuL3ZhcmludC5qcyc7XG5pbXBvcnQgKiBhcyBieXRlcyBmcm9tICcuL2J5dGVzLmpzJztcbmltcG9ydCAqIGFzIGhhc2hlciBmcm9tICcuL2hhc2hlcy9oYXNoZXIuanMnO1xuaW1wb3J0ICogYXMgZGlnZXN0IGZyb20gJy4vaGFzaGVzL2RpZ2VzdC5qcyc7XG5leHBvcnQge1xuICBDSUQsXG4gIGhhc2hlcixcbiAgZGlnZXN0LFxuICB2YXJpbnQsXG4gIGJ5dGVzXG59OyJdLCJuYW1lcyI6WyJDSUQiLCJ2YXJpbnQiLCJieXRlcyIsImhhc2hlciIsImRpZ2VzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/varint.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/varint.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/varint.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/vendor/varint.js\");\n\nconst decode = (data, offset = 0)=>{\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [\n        code,\n        _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes\n    ];\n};\nconst encodeTo = (int, target, offset = 0)=>{\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n};\nconst encodingLength = (int)=>{\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUM7QUFDbEMsTUFBTUMsU0FBUyxDQUFDQyxNQUFNQyxTQUFTLENBQUM7SUFDckMsTUFBTUMsT0FBT0oseURBQU1BLENBQUNDLE1BQU0sQ0FBQ0MsTUFBTUM7SUFDakMsT0FBTztRQUNMQztRQUNBSix5REFBTUEsQ0FBQ0MsTUFBTSxDQUFDSSxLQUFLO0tBQ3BCO0FBQ0gsRUFBRTtBQUNLLE1BQU1DLFdBQVcsQ0FBQ0MsS0FBS0MsUUFBUUwsU0FBUyxDQUFDO0lBQzlDSCx5REFBTUEsQ0FBQ1MsTUFBTSxDQUFDRixLQUFLQyxRQUFRTDtJQUMzQixPQUFPSztBQUNULEVBQUU7QUFDSyxNQUFNRSxpQkFBaUJILENBQUFBO0lBQzVCLE9BQU9QLHlEQUFNQSxDQUFDVSxjQUFjLENBQUNIO0FBQy9CLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL3ZhcmludC5qcz84OTg3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YXJpbnQgZnJvbSAnLi4vdmVuZG9yL3ZhcmludC5qcyc7XG5leHBvcnQgY29uc3QgZGVjb2RlID0gKGRhdGEsIG9mZnNldCA9IDApID0+IHtcbiAgY29uc3QgY29kZSA9IHZhcmludC5kZWNvZGUoZGF0YSwgb2Zmc2V0KTtcbiAgcmV0dXJuIFtcbiAgICBjb2RlLFxuICAgIHZhcmludC5kZWNvZGUuYnl0ZXNcbiAgXTtcbn07XG5leHBvcnQgY29uc3QgZW5jb2RlVG8gPSAoaW50LCB0YXJnZXQsIG9mZnNldCA9IDApID0+IHtcbiAgdmFyaW50LmVuY29kZShpbnQsIHRhcmdldCwgb2Zmc2V0KTtcbiAgcmV0dXJuIHRhcmdldDtcbn07XG5leHBvcnQgY29uc3QgZW5jb2RpbmdMZW5ndGggPSBpbnQgPT4ge1xuICByZXR1cm4gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGludCk7XG59OyJdLCJuYW1lcyI6WyJ2YXJpbnQiLCJkZWNvZGUiLCJkYXRhIiwib2Zmc2V0IiwiY29kZSIsImJ5dGVzIiwiZW5jb2RlVG8iLCJpbnQiLCJ0YXJnZXQiLCJlbmNvZGUiLCJlbmNvZGluZ0xlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/vendor/base-x.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/vendor/base-x.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError(\"Alphabet too long\");\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for(var j = 0; j < BASE_MAP.length; j++){\n        BASE_MAP[j] = 255;\n    }\n    for(var i = 0; i < ALPHABET.length; i++){\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + \" is ambiguous\");\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256);\n    var iFACTOR = Math.log(256) / Math.log(BASE);\n    function encode(source) {\n        if (source instanceof Uint8Array) ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        } else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError(\"Expected Uint8Array\");\n        }\n        if (source.length === 0) {\n            return \"\";\n        }\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while(pbegin !== pend && source[pbegin] === 0){\n            pbegin++;\n            zeroes++;\n        }\n        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n        var b58 = new Uint8Array(size);\n        while(pbegin !== pend){\n            var carry = source[pbegin];\n            var i = 0;\n            for(var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++){\n                carry += 256 * b58[it1] >>> 0;\n                b58[it1] = carry % BASE >>> 0;\n                carry = carry / BASE >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            pbegin++;\n        }\n        var it2 = size - length;\n        while(it2 !== size && b58[it2] === 0){\n            it2++;\n        }\n        var str = LEADER.repeat(zeroes);\n        for(; it2 < size; ++it2){\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    function decodeUnsafe(source) {\n        if (typeof source !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        if (source[psz] === \" \") {\n            return;\n        }\n        var zeroes = 0;\n        var length = 0;\n        while(source[psz] === LEADER){\n            zeroes++;\n            psz++;\n        }\n        var size = (source.length - psz) * FACTOR + 1 >>> 0;\n        var b256 = new Uint8Array(size);\n        while(source[psz]){\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for(var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++){\n                carry += BASE * b256[it3] >>> 0;\n                b256[it3] = carry % 256 >>> 0;\n                carry = carry / 256 >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            psz++;\n        }\n        if (source[psz] === \" \") {\n            return;\n        }\n        var it4 = size - length;\n        while(it4 !== size && b256[it4] === 0){\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while(it4 !== size){\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/vendor/varint.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/multiformats/esm/vendor/varint.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while(num >= INT){\n        out[offset++] = num & 255 | MSB;\n        num /= 128;\n    }\n    while(num & MSBALL){\n        out[offset++] = num & 255 | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            read.bytes = 0;\n            throw new RangeError(\"Could not decode varint\");\n        }\n        b = buf[counter++];\n        res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    }while (b >= MSB$1);\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function(value) {\n    return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS92ZW5kb3IvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFJQSxXQUFXQztBQUNmLElBQUlDLE1BQU0sS0FBS0MsT0FBTyxLQUFLQyxTQUFTLENBQUNELE1BQU1FLE1BQU1DLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQzdELFNBQVNOLE9BQU9PLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxNQUFNO0lBQzlCRCxNQUFNQSxPQUFPLEVBQUU7SUFDZkMsU0FBU0EsVUFBVTtJQUNuQixJQUFJQyxZQUFZRDtJQUNoQixNQUFPRixPQUFPSCxJQUFLO1FBQ2pCSSxHQUFHLENBQUNDLFNBQVMsR0FBR0YsTUFBTSxNQUFNTjtRQUM1Qk0sT0FBTztJQUNUO0lBQ0EsTUFBT0EsTUFBTUosT0FBUTtRQUNuQkssR0FBRyxDQUFDQyxTQUFTLEdBQUdGLE1BQU0sTUFBTU47UUFDNUJNLFNBQVM7SUFDWDtJQUNBQyxHQUFHLENBQUNDLE9BQU8sR0FBR0YsTUFBTTtJQUNwQlAsT0FBT1csS0FBSyxHQUFHRixTQUFTQyxZQUFZO0lBQ3BDLE9BQU9GO0FBQ1Q7QUFDQSxJQUFJSSxTQUFTQztBQUNiLElBQUlDLFFBQVEsS0FBS0MsU0FBUztBQUMxQixTQUFTRixLQUFLRyxHQUFHLEVBQUVQLE1BQU07SUFDdkIsSUFBSVEsTUFBTSxHQUFHUixTQUFTQSxVQUFVLEdBQUdTLFFBQVEsR0FBR0MsVUFBVVYsUUFBUVcsR0FBR0MsSUFBSUwsSUFBSU0sTUFBTTtJQUNqRixHQUFHO1FBQ0QsSUFBSUgsV0FBV0UsR0FBRztZQUNoQlIsS0FBS0YsS0FBSyxHQUFHO1lBQ2IsTUFBTSxJQUFJWSxXQUFXO1FBQ3ZCO1FBQ0FILElBQUlKLEdBQUcsQ0FBQ0csVUFBVTtRQUNsQkYsT0FBT0MsUUFBUSxLQUFLLENBQUNFLElBQUlMLE1BQUssS0FBTUcsUUFBUSxDQUFDRSxJQUFJTCxNQUFLLElBQUtWLEtBQUtDLEdBQUcsQ0FBQyxHQUFHWTtRQUN2RUEsU0FBUztJQUNYLFFBQVNFLEtBQUtOLE9BQU87SUFDckJELEtBQUtGLEtBQUssR0FBR1EsVUFBVVY7SUFDdkIsT0FBT1E7QUFDVDtBQUNBLElBQUlPLEtBQUtuQixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJbUIsS0FBS3BCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUlvQixLQUFLckIsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSXFCLEtBQUt0QixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJc0IsS0FBS3ZCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUl1QixLQUFLeEIsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSXdCLEtBQUt6QixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJeUIsS0FBSzFCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUkwQixLQUFLM0IsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSWdCLFNBQVMsU0FBVVcsS0FBSztJQUMxQixPQUFPQSxRQUFRVCxLQUFLLElBQUlTLFFBQVFSLEtBQUssSUFBSVEsUUFBUVAsS0FBSyxJQUFJTyxRQUFRTixLQUFLLElBQUlNLFFBQVFMLEtBQUssSUFBSUssUUFBUUosS0FBSyxJQUFJSSxRQUFRSCxLQUFLLElBQUlHLFFBQVFGLEtBQUssSUFBSUUsUUFBUUQsS0FBSyxJQUFJO0FBQ2xLO0FBQ0EsSUFBSUUsU0FBUztJQUNYbEMsUUFBUUQ7SUFDUmEsUUFBUUE7SUFDUnVCLGdCQUFnQmI7QUFDbEI7QUFDQSxJQUFJYyxlQUFlRjtBQUNuQixpRUFBZUUsWUFBWUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS92ZW5kb3IvdmFyaW50LmpzPzkxNmMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGVuY29kZV8xID0gZW5jb2RlO1xudmFyIE1TQiA9IDEyOCwgUkVTVCA9IDEyNywgTVNCQUxMID0gflJFU1QsIElOVCA9IE1hdGgucG93KDIsIDMxKTtcbmZ1bmN0aW9uIGVuY29kZShudW0sIG91dCwgb2Zmc2V0KSB7XG4gIG91dCA9IG91dCB8fCBbXTtcbiAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG4gIHZhciBvbGRPZmZzZXQgPSBvZmZzZXQ7XG4gIHdoaWxlIChudW0gPj0gSU5UKSB7XG4gICAgb3V0W29mZnNldCsrXSA9IG51bSAmIDI1NSB8IE1TQjtcbiAgICBudW0gLz0gMTI4O1xuICB9XG4gIHdoaWxlIChudW0gJiBNU0JBTEwpIHtcbiAgICBvdXRbb2Zmc2V0KytdID0gbnVtICYgMjU1IHwgTVNCO1xuICAgIG51bSA+Pj49IDc7XG4gIH1cbiAgb3V0W29mZnNldF0gPSBudW0gfCAwO1xuICBlbmNvZGUuYnl0ZXMgPSBvZmZzZXQgLSBvbGRPZmZzZXQgKyAxO1xuICByZXR1cm4gb3V0O1xufVxudmFyIGRlY29kZSA9IHJlYWQ7XG52YXIgTVNCJDEgPSAxMjgsIFJFU1QkMSA9IDEyNztcbmZ1bmN0aW9uIHJlYWQoYnVmLCBvZmZzZXQpIHtcbiAgdmFyIHJlcyA9IDAsIG9mZnNldCA9IG9mZnNldCB8fCAwLCBzaGlmdCA9IDAsIGNvdW50ZXIgPSBvZmZzZXQsIGIsIGwgPSBidWYubGVuZ3RoO1xuICBkbyB7XG4gICAgaWYgKGNvdW50ZXIgPj0gbCkge1xuICAgICAgcmVhZC5ieXRlcyA9IDA7XG4gICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ291bGQgbm90IGRlY29kZSB2YXJpbnQnKTtcbiAgICB9XG4gICAgYiA9IGJ1Zltjb3VudGVyKytdO1xuICAgIHJlcyArPSBzaGlmdCA8IDI4ID8gKGIgJiBSRVNUJDEpIDw8IHNoaWZ0IDogKGIgJiBSRVNUJDEpICogTWF0aC5wb3coMiwgc2hpZnQpO1xuICAgIHNoaWZ0ICs9IDc7XG4gIH0gd2hpbGUgKGIgPj0gTVNCJDEpO1xuICByZWFkLmJ5dGVzID0gY291bnRlciAtIG9mZnNldDtcbiAgcmV0dXJuIHJlcztcbn1cbnZhciBOMSA9IE1hdGgucG93KDIsIDcpO1xudmFyIE4yID0gTWF0aC5wb3coMiwgMTQpO1xudmFyIE4zID0gTWF0aC5wb3coMiwgMjEpO1xudmFyIE40ID0gTWF0aC5wb3coMiwgMjgpO1xudmFyIE41ID0gTWF0aC5wb3coMiwgMzUpO1xudmFyIE42ID0gTWF0aC5wb3coMiwgNDIpO1xudmFyIE43ID0gTWF0aC5wb3coMiwgNDkpO1xudmFyIE44ID0gTWF0aC5wb3coMiwgNTYpO1xudmFyIE45ID0gTWF0aC5wb3coMiwgNjMpO1xudmFyIGxlbmd0aCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPCBOMSA/IDEgOiB2YWx1ZSA8IE4yID8gMiA6IHZhbHVlIDwgTjMgPyAzIDogdmFsdWUgPCBONCA/IDQgOiB2YWx1ZSA8IE41ID8gNSA6IHZhbHVlIDwgTjYgPyA2IDogdmFsdWUgPCBONyA/IDcgOiB2YWx1ZSA8IE44ID8gOCA6IHZhbHVlIDwgTjkgPyA5IDogMTA7XG59O1xudmFyIHZhcmludCA9IHtcbiAgZW5jb2RlOiBlbmNvZGVfMSxcbiAgZGVjb2RlOiBkZWNvZGUsXG4gIGVuY29kaW5nTGVuZ3RoOiBsZW5ndGhcbn07XG52YXIgX2JycnBfdmFyaW50ID0gdmFyaW50O1xuZXhwb3J0IGRlZmF1bHQgX2JycnBfdmFyaW50OyJdLCJuYW1lcyI6WyJlbmNvZGVfMSIsImVuY29kZSIsIk1TQiIsIlJFU1QiLCJNU0JBTEwiLCJJTlQiLCJNYXRoIiwicG93IiwibnVtIiwib3V0Iiwib2Zmc2V0Iiwib2xkT2Zmc2V0IiwiYnl0ZXMiLCJkZWNvZGUiLCJyZWFkIiwiTVNCJDEiLCJSRVNUJDEiLCJidWYiLCJyZXMiLCJzaGlmdCIsImNvdW50ZXIiLCJiIiwibCIsImxlbmd0aCIsIlJhbmdlRXJyb3IiLCJOMSIsIk4yIiwiTjMiLCJONCIsIk41IiwiTjYiLCJONyIsIk44IiwiTjkiLCJ2YWx1ZSIsInZhcmludCIsImVuY29kaW5nTGVuZ3RoIiwiX2JycnBfdmFyaW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/alloc.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/alloc.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe)\n/* harmony export */ });\nfunction alloc(size = 0) {\n    if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n        return globalThis.Buffer.alloc(size);\n    }\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n        return globalThis.Buffer.allocUnsafe(size);\n    }\n    return new Uint8Array(size);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9hbGxvYy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLFNBQVNBLE1BQU1DLE9BQU8sQ0FBQztJQUM1QixJQUFJQyxXQUFXQyxNQUFNLElBQUksUUFBUUQsV0FBV0MsTUFBTSxDQUFDSCxLQUFLLElBQUksTUFBTTtRQUNoRSxPQUFPRSxXQUFXQyxNQUFNLENBQUNILEtBQUssQ0FBQ0M7SUFDakM7SUFDQSxPQUFPLElBQUlHLFdBQVdIO0FBQ3hCO0FBQ08sU0FBU0ksWUFBWUosT0FBTyxDQUFDO0lBQ2xDLElBQUlDLFdBQVdDLE1BQU0sSUFBSSxRQUFRRCxXQUFXQyxNQUFNLENBQUNFLFdBQVcsSUFBSSxNQUFNO1FBQ3RFLE9BQU9ILFdBQVdDLE1BQU0sQ0FBQ0UsV0FBVyxDQUFDSjtJQUN2QztJQUNBLE9BQU8sSUFBSUcsV0FBV0g7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvYWxsb2MuanM/ZTYwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gYWxsb2Moc2l6ZSA9IDApIHtcbiAgaWYgKGdsb2JhbFRoaXMuQnVmZmVyICE9IG51bGwgJiYgZ2xvYmFsVGhpcy5CdWZmZXIuYWxsb2MgIT0gbnVsbCkge1xuICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5hbGxvYyhzaXplKTtcbiAgfVxuICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYWxsb2NVbnNhZmUoc2l6ZSA9IDApIHtcbiAgaWYgKGdsb2JhbFRoaXMuQnVmZmVyICE9IG51bGwgJiYgZ2xvYmFsVGhpcy5CdWZmZXIuYWxsb2NVbnNhZmUgIT0gbnVsbCkge1xuICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5hbGxvY1Vuc2FmZShzaXplKTtcbiAgfVxuICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG59Il0sIm5hbWVzIjpbImFsbG9jIiwic2l6ZSIsImdsb2JhbFRoaXMiLCJCdWZmZXIiLCJVaW50OEFycmF5IiwiYWxsb2NVbnNhZmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/alloc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/compare.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/compare.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* binding */ compare)\n/* harmony export */ });\nfunction compare(a, b) {\n    for(let i = 0; i < a.byteLength; i++){\n        if (a[i] < b[i]) {\n            return -1;\n        }\n        if (a[i] > b[i]) {\n            return 1;\n        }\n    }\n    if (a.byteLength > b.byteLength) {\n        return 1;\n    }\n    if (a.byteLength < b.byteLength) {\n        return -1;\n    }\n    return 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9jb21wYXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxRQUFRQyxDQUFDLEVBQUVDLENBQUM7SUFDMUIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLEVBQUVHLFVBQVUsRUFBRUQsSUFBSztRQUNyQyxJQUFJRixDQUFDLENBQUNFLEVBQUUsR0FBR0QsQ0FBQyxDQUFDQyxFQUFFLEVBQUU7WUFDZixPQUFPLENBQUM7UUFDVjtRQUNBLElBQUlGLENBQUMsQ0FBQ0UsRUFBRSxHQUFHRCxDQUFDLENBQUNDLEVBQUUsRUFBRTtZQUNmLE9BQU87UUFDVDtJQUNGO0lBQ0EsSUFBSUYsRUFBRUcsVUFBVSxHQUFHRixFQUFFRSxVQUFVLEVBQUU7UUFDL0IsT0FBTztJQUNUO0lBQ0EsSUFBSUgsRUFBRUcsVUFBVSxHQUFHRixFQUFFRSxVQUFVLEVBQUU7UUFDL0IsT0FBTyxDQUFDO0lBQ1Y7SUFDQSxPQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvY29tcGFyZS5qcz9jNjIyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjb21wYXJlKGEsIGIpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgIGlmIChhW2ldIDwgYltpXSkge1xuICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgICBpZiAoYVtpXSA+IGJbaV0pIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgfVxuICBpZiAoYS5ieXRlTGVuZ3RoID4gYi5ieXRlTGVuZ3RoKSB7XG4gICAgcmV0dXJuIDE7XG4gIH1cbiAgaWYgKGEuYnl0ZUxlbmd0aCA8IGIuYnl0ZUxlbmd0aCkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICByZXR1cm4gMDtcbn0iXSwibmFtZXMiOlsiY29tcGFyZSIsImEiLCJiIiwiaSIsImJ5dGVMZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/compare.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/concat.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/concat.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/alloc.js\");\n\nfunction concat(arrays, length) {\n    if (!length) {\n        length = arrays.reduce((acc, curr)=>acc + curr.length, 0);\n    }\n    const output = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(length);\n    let offset = 0;\n    for (const arr of arrays){\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9jb25jYXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFDbEMsU0FBU0MsT0FBT0MsTUFBTSxFQUFFQyxNQUFNO0lBQ25DLElBQUksQ0FBQ0EsUUFBUTtRQUNYQSxTQUFTRCxPQUFPRSxNQUFNLENBQUMsQ0FBQ0MsS0FBS0MsT0FBU0QsTUFBTUMsS0FBS0gsTUFBTSxFQUFFO0lBQzNEO0lBQ0EsTUFBTUksU0FBU1Asc0RBQVdBLENBQUNHO0lBQzNCLElBQUlLLFNBQVM7SUFDYixLQUFLLE1BQU1DLE9BQU9QLE9BQVE7UUFDeEJLLE9BQU9HLEdBQUcsQ0FBQ0QsS0FBS0Q7UUFDaEJBLFVBQVVDLElBQUlOLE1BQU07SUFDdEI7SUFDQSxPQUFPSTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9lc20vc3JjL2NvbmNhdC5qcz83MGY1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFsbG9jVW5zYWZlIH0gZnJvbSAnLi9hbGxvYy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gY29uY2F0KGFycmF5cywgbGVuZ3RoKSB7XG4gIGlmICghbGVuZ3RoKSB7XG4gICAgbGVuZ3RoID0gYXJyYXlzLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiBhY2MgKyBjdXJyLmxlbmd0aCwgMCk7XG4gIH1cbiAgY29uc3Qgb3V0cHV0ID0gYWxsb2NVbnNhZmUobGVuZ3RoKTtcbiAgbGV0IG9mZnNldCA9IDA7XG4gIGZvciAoY29uc3QgYXJyIG9mIGFycmF5cykge1xuICAgIG91dHB1dC5zZXQoYXJyLCBvZmZzZXQpO1xuICAgIG9mZnNldCArPSBhcnIubGVuZ3RoO1xuICB9XG4gIHJldHVybiBvdXRwdXQ7XG59Il0sIm5hbWVzIjpbImFsbG9jVW5zYWZlIiwiY29uY2F0IiwiYXJyYXlzIiwibGVuZ3RoIiwicmVkdWNlIiwiYWNjIiwiY3VyciIsIm91dHB1dCIsIm9mZnNldCIsImFyciIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/concat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/equals.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/equals.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for(let i = 0; i < a.byteLength; i++){\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9lcXVhbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLE9BQU9DLENBQUMsRUFBRUMsQ0FBQztJQUN6QixJQUFJRCxNQUFNQyxHQUFHO1FBQ1gsT0FBTztJQUNUO0lBQ0EsSUFBSUQsRUFBRUUsVUFBVSxLQUFLRCxFQUFFQyxVQUFVLEVBQUU7UUFDakMsT0FBTztJQUNUO0lBQ0EsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlILEVBQUVFLFVBQVUsRUFBRUMsSUFBSztRQUNyQyxJQUFJSCxDQUFDLENBQUNHLEVBQUUsS0FBS0YsQ0FBQyxDQUFDRSxFQUFFLEVBQUU7WUFDakIsT0FBTztRQUNUO0lBQ0Y7SUFDQSxPQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvZXF1YWxzLmpzPzA0ZDkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGVxdWFscyhhLCBiKSB7XG4gIGlmIChhID09PSBiKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKGEuYnl0ZUxlbmd0aCAhPT0gYi5ieXRlTGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYS5ieXRlTGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoYVtpXSAhPT0gYltpXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn0iXSwibmFtZXMiOlsiZXF1YWxzIiwiYSIsImIiLCJieXRlTGVuZ3RoIiwiaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/equals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/from-string.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/from-string.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromString: () => (/* binding */ fromString)\n/* harmony export */ });\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/util/bases.js\");\n\nfunction fromString(string, encoding = \"utf8\") {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][encoding];\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === \"utf8\" || encoding === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(string, \"utf8\");\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9mcm9tLXN0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQztBQUM3QixTQUFTQyxXQUFXQyxNQUFNLEVBQUVDLFdBQVcsTUFBTTtJQUNsRCxNQUFNQyxPQUFPSixzREFBSyxDQUFDRyxTQUFTO0lBQzVCLElBQUksQ0FBQ0MsTUFBTTtRQUNULE1BQU0sSUFBSUMsTUFBTSxDQUFDLHNCQUFzQixFQUFHRixTQUFVLENBQUMsQ0FBQztJQUN4RDtJQUNBLElBQUksQ0FBQ0EsYUFBYSxVQUFVQSxhQUFhLE9BQU0sS0FBTUcsV0FBV0MsTUFBTSxJQUFJLFFBQVFELFdBQVdDLE1BQU0sQ0FBQ0MsSUFBSSxJQUFJLE1BQU07UUFDaEgsT0FBT0YsV0FBV0MsTUFBTSxDQUFDQyxJQUFJLENBQUNOLFFBQVE7SUFDeEM7SUFDQSxPQUFPRSxLQUFLSyxPQUFPLENBQUNDLE1BQU0sQ0FBQyxDQUFDLEVBQUdOLEtBQUtPLE1BQU0sQ0FBRSxFQUFHVCxPQUFRLENBQUM7QUFDMUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2NvcmUvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvZnJvbS1zdHJpbmcuanM/NjIzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZXMgZnJvbSAnLi91dGlsL2Jhc2VzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBmcm9tU3RyaW5nKHN0cmluZywgZW5jb2RpbmcgPSAndXRmOCcpIHtcbiAgY29uc3QgYmFzZSA9IGJhc2VzW2VuY29kaW5nXTtcbiAgaWYgKCFiYXNlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBlbmNvZGluZyBcIiR7IGVuY29kaW5nIH1cImApO1xuICB9XG4gIGlmICgoZW5jb2RpbmcgPT09ICd1dGY4JyB8fCBlbmNvZGluZyA9PT0gJ3V0Zi04JykgJiYgZ2xvYmFsVGhpcy5CdWZmZXIgIT0gbnVsbCAmJiBnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tICE9IG51bGwpIHtcbiAgICByZXR1cm4gZ2xvYmFsVGhpcy5CdWZmZXIuZnJvbShzdHJpbmcsICd1dGY4Jyk7XG4gIH1cbiAgcmV0dXJuIGJhc2UuZGVjb2Rlci5kZWNvZGUoYCR7IGJhc2UucHJlZml4IH0keyBzdHJpbmcgfWApO1xufSJdLCJuYW1lcyI6WyJiYXNlcyIsImZyb21TdHJpbmciLCJzdHJpbmciLCJlbmNvZGluZyIsImJhc2UiLCJFcnJvciIsImdsb2JhbFRoaXMiLCJCdWZmZXIiLCJmcm9tIiwiZGVjb2RlciIsImRlY29kZSIsInByZWZpeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/from-string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* reexport safe */ _compare_js__WEBPACK_IMPORTED_MODULE_0__.compare),\n/* harmony export */   concat: () => (/* reexport safe */ _concat_js__WEBPACK_IMPORTED_MODULE_1__.concat),\n/* harmony export */   equals: () => (/* reexport safe */ _equals_js__WEBPACK_IMPORTED_MODULE_2__.equals),\n/* harmony export */   fromString: () => (/* reexport safe */ _from_string_js__WEBPACK_IMPORTED_MODULE_3__.fromString),\n/* harmony export */   toString: () => (/* reexport safe */ _to_string_js__WEBPACK_IMPORTED_MODULE_4__.toString),\n/* harmony export */   xor: () => (/* reexport safe */ _xor_js__WEBPACK_IMPORTED_MODULE_5__.xor)\n/* harmony export */ });\n/* harmony import */ var _compare_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compare.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/compare.js\");\n/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./concat.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/concat.js\");\n/* harmony import */ var _equals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./equals.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/equals.js\");\n/* harmony import */ var _from_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./from-string.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/from-string.js\");\n/* harmony import */ var _to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./to-string.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/to-string.js\");\n/* harmony import */ var _xor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./xor.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/xor.js\");\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBdUM7QUFDRjtBQUNBO0FBQ1M7QUFDSjtBQUNYO0FBUTdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9lc20vc3JjL2luZGV4LmpzPzg2YjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tcGFyZSB9IGZyb20gJy4vY29tcGFyZS5qcyc7XG5pbXBvcnQgeyBjb25jYXQgfSBmcm9tICcuL2NvbmNhdC5qcyc7XG5pbXBvcnQgeyBlcXVhbHMgfSBmcm9tICcuL2VxdWFscy5qcyc7XG5pbXBvcnQgeyBmcm9tU3RyaW5nIH0gZnJvbSAnLi9mcm9tLXN0cmluZy5qcyc7XG5pbXBvcnQgeyB0b1N0cmluZyB9IGZyb20gJy4vdG8tc3RyaW5nLmpzJztcbmltcG9ydCB7IHhvciB9IGZyb20gJy4veG9yLmpzJztcbmV4cG9ydCB7XG4gIGNvbXBhcmUsXG4gIGNvbmNhdCxcbiAgZXF1YWxzLFxuICBmcm9tU3RyaW5nLFxuICB0b1N0cmluZyxcbiAgeG9yXG59OyJdLCJuYW1lcyI6WyJjb21wYXJlIiwiY29uY2F0IiwiZXF1YWxzIiwiZnJvbVN0cmluZyIsInRvU3RyaW5nIiwieG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/to-string.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/to-string.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/util/bases.js\");\n\nfunction toString(array, encoding = \"utf8\") {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][encoding];\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === \"utf8\" || encoding === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString(\"utf8\");\n    }\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy90by1zdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsU0FBU0MsU0FBU0MsS0FBSyxFQUFFQyxXQUFXLE1BQU07SUFDL0MsTUFBTUMsT0FBT0osc0RBQUssQ0FBQ0csU0FBUztJQUM1QixJQUFJLENBQUNDLE1BQU07UUFDVCxNQUFNLElBQUlDLE1BQU0sQ0FBQyxzQkFBc0IsRUFBR0YsU0FBVSxDQUFDLENBQUM7SUFDeEQ7SUFDQSxJQUFJLENBQUNBLGFBQWEsVUFBVUEsYUFBYSxPQUFNLEtBQU1HLFdBQVdDLE1BQU0sSUFBSSxRQUFRRCxXQUFXQyxNQUFNLENBQUNDLElBQUksSUFBSSxNQUFNO1FBQ2hILE9BQU9GLFdBQVdDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDTixNQUFNTyxNQUFNLEVBQUVQLE1BQU1RLFVBQVUsRUFBRVIsTUFBTVMsVUFBVSxFQUFFVixRQUFRLENBQUM7SUFDM0Y7SUFDQSxPQUFPRyxLQUFLUSxPQUFPLENBQUNDLE1BQU0sQ0FBQ1gsT0FBT1ksU0FBUyxDQUFDO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9jb3JlL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9lc20vc3JjL3RvLXN0cmluZy5qcz82NWFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlcyBmcm9tICcuL3V0aWwvYmFzZXMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHRvU3RyaW5nKGFycmF5LCBlbmNvZGluZyA9ICd1dGY4Jykge1xuICBjb25zdCBiYXNlID0gYmFzZXNbZW5jb2RpbmddO1xuICBpZiAoIWJhc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY29kaW5nIFwiJHsgZW5jb2RpbmcgfVwiYCk7XG4gIH1cbiAgaWYgKChlbmNvZGluZyA9PT0gJ3V0ZjgnIHx8IGVuY29kaW5nID09PSAndXRmLTgnKSAmJiBnbG9iYWxUaGlzLkJ1ZmZlciAhPSBudWxsICYmIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20gIT0gbnVsbCkge1xuICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tKGFycmF5LmJ1ZmZlciwgYXJyYXkuYnl0ZU9mZnNldCwgYXJyYXkuYnl0ZUxlbmd0aCkudG9TdHJpbmcoJ3V0ZjgnKTtcbiAgfVxuICByZXR1cm4gYmFzZS5lbmNvZGVyLmVuY29kZShhcnJheSkuc3Vic3RyaW5nKDEpO1xufSJdLCJuYW1lcyI6WyJiYXNlcyIsInRvU3RyaW5nIiwiYXJyYXkiLCJlbmNvZGluZyIsImJhc2UiLCJFcnJvciIsImdsb2JhbFRoaXMiLCJCdWZmZXIiLCJmcm9tIiwiYnVmZmVyIiwiYnl0ZU9mZnNldCIsImJ5dGVMZW5ndGgiLCJlbmNvZGVyIiwiZW5jb2RlIiwic3Vic3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/to-string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/util/bases.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/util/bases.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/basics */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/multiformats/esm/src/basics.js\");\n/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../alloc.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/alloc.js\");\n\n\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec(\"utf8\", \"u\", (buf)=>{\n    const decoder = new TextDecoder(\"utf8\");\n    return \"u\" + decoder.decode(buf);\n}, (str)=>{\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec(\"ascii\", \"a\", (buf)=>{\n    let string = \"a\";\n    for(let i = 0; i < buf.length; i++){\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str)=>{\n    str = str.substring(1);\n    const buf = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_1__.allocUnsafe)(str.length);\n    for(let i = 0; i < str.length; i++){\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    \"utf-8\": string,\n    hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,\n    latin1: ascii,\n    ascii: ascii,\n    binary: ascii,\n    ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy91dGlsL2Jhc2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUNGO0FBQzFDLFNBQVNFLFlBQVlDLElBQUksRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE1BQU07SUFDL0MsT0FBTztRQUNMSDtRQUNBQztRQUNBRyxTQUFTO1lBQ1BKO1lBQ0FDO1lBQ0FDO1FBQ0Y7UUFDQUcsU0FBUztZQUFFRjtRQUFPO0lBQ3BCO0FBQ0Y7QUFDQSxNQUFNRyxTQUFTUCxZQUFZLFFBQVEsS0FBS1EsQ0FBQUE7SUFDdEMsTUFBTUYsVUFBVSxJQUFJRyxZQUFZO0lBQ2hDLE9BQU8sTUFBTUgsUUFBUUYsTUFBTSxDQUFDSTtBQUM5QixHQUFHRSxDQUFBQTtJQUNELE1BQU1MLFVBQVUsSUFBSU07SUFDcEIsT0FBT04sUUFBUUYsTUFBTSxDQUFDTyxJQUFJRSxTQUFTLENBQUM7QUFDdEM7QUFDQSxNQUFNQyxRQUFRYixZQUFZLFNBQVMsS0FBS1EsQ0FBQUE7SUFDdEMsSUFBSUQsU0FBUztJQUNiLElBQUssSUFBSU8sSUFBSSxHQUFHQSxJQUFJTixJQUFJTyxNQUFNLEVBQUVELElBQUs7UUFDbkNQLFVBQVVTLE9BQU9DLFlBQVksQ0FBQ1QsR0FBRyxDQUFDTSxFQUFFO0lBQ3RDO0lBQ0EsT0FBT1A7QUFDVCxHQUFHRyxDQUFBQTtJQUNEQSxNQUFNQSxJQUFJRSxTQUFTLENBQUM7SUFDcEIsTUFBTUosTUFBTVQsc0RBQVdBLENBQUNXLElBQUlLLE1BQU07SUFDbEMsSUFBSyxJQUFJRCxJQUFJLEdBQUdBLElBQUlKLElBQUlLLE1BQU0sRUFBRUQsSUFBSztRQUNuQ04sR0FBRyxDQUFDTSxFQUFFLEdBQUdKLElBQUlRLFVBQVUsQ0FBQ0o7SUFDMUI7SUFDQSxPQUFPTjtBQUNUO0FBQ0EsTUFBTVcsUUFBUTtJQUNaQyxNQUFNYjtJQUNOLFNBQVNBO0lBQ1RjLEtBQUt2QixzREFBS0EsQ0FBQ3dCLE1BQU07SUFDakJDLFFBQVFWO0lBQ1JBLE9BQU9BO0lBQ1BXLFFBQVFYO0lBQ1IsR0FBR2Ysc0RBQUs7QUFDVjtBQUNBLGlFQUFlcUIsS0FBS0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy91dGlsL2Jhc2VzLmpzPzliNDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZXMgfSBmcm9tICdtdWx0aWZvcm1hdHMvYmFzaWNzJztcbmltcG9ydCB7IGFsbG9jVW5zYWZlIH0gZnJvbSAnLi4vYWxsb2MuanMnO1xuZnVuY3Rpb24gY3JlYXRlQ29kZWMobmFtZSwgcHJlZml4LCBlbmNvZGUsIGRlY29kZSkge1xuICByZXR1cm4ge1xuICAgIG5hbWUsXG4gICAgcHJlZml4LFxuICAgIGVuY29kZXI6IHtcbiAgICAgIG5hbWUsXG4gICAgICBwcmVmaXgsXG4gICAgICBlbmNvZGVcbiAgICB9LFxuICAgIGRlY29kZXI6IHsgZGVjb2RlIH1cbiAgfTtcbn1cbmNvbnN0IHN0cmluZyA9IGNyZWF0ZUNvZGVjKCd1dGY4JywgJ3UnLCBidWYgPT4ge1xuICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCd1dGY4Jyk7XG4gIHJldHVybiAndScgKyBkZWNvZGVyLmRlY29kZShidWYpO1xufSwgc3RyID0+IHtcbiAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICByZXR1cm4gZW5jb2Rlci5lbmNvZGUoc3RyLnN1YnN0cmluZygxKSk7XG59KTtcbmNvbnN0IGFzY2lpID0gY3JlYXRlQ29kZWMoJ2FzY2lpJywgJ2EnLCBidWYgPT4ge1xuICBsZXQgc3RyaW5nID0gJ2EnO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGJ1Zi5sZW5ndGg7IGkrKykge1xuICAgIHN0cmluZyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ1ZltpXSk7XG4gIH1cbiAgcmV0dXJuIHN0cmluZztcbn0sIHN0ciA9PiB7XG4gIHN0ciA9IHN0ci5zdWJzdHJpbmcoMSk7XG4gIGNvbnN0IGJ1ZiA9IGFsbG9jVW5zYWZlKHN0ci5sZW5ndGgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgIGJ1ZltpXSA9IHN0ci5jaGFyQ29kZUF0KGkpO1xuICB9XG4gIHJldHVybiBidWY7XG59KTtcbmNvbnN0IEJBU0VTID0ge1xuICB1dGY4OiBzdHJpbmcsXG4gICd1dGYtOCc6IHN0cmluZyxcbiAgaGV4OiBiYXNlcy5iYXNlMTYsXG4gIGxhdGluMTogYXNjaWksXG4gIGFzY2lpOiBhc2NpaSxcbiAgYmluYXJ5OiBhc2NpaSxcbiAgLi4uYmFzZXNcbn07XG5leHBvcnQgZGVmYXVsdCBCQVNFUzsiXSwibmFtZXMiOlsiYmFzZXMiLCJhbGxvY1Vuc2FmZSIsImNyZWF0ZUNvZGVjIiwibmFtZSIsInByZWZpeCIsImVuY29kZSIsImRlY29kZSIsImVuY29kZXIiLCJkZWNvZGVyIiwic3RyaW5nIiwiYnVmIiwiVGV4dERlY29kZXIiLCJzdHIiLCJUZXh0RW5jb2RlciIsInN1YnN0cmluZyIsImFzY2lpIiwiaSIsImxlbmd0aCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImNoYXJDb2RlQXQiLCJCQVNFUyIsInV0ZjgiLCJoZXgiLCJiYXNlMTYiLCJsYXRpbjEiLCJiaW5hcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/util/bases.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/xor.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/xor.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   xor: () => (/* binding */ xor)\n/* harmony export */ });\n/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ \"(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/alloc.js\");\n\nfunction xor(a, b) {\n    if (a.length !== b.length) {\n        throw new Error(\"Inputs should have the same length\");\n    }\n    const result = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(a.length);\n    for(let i = 0; i < a.length; i++){\n        result[i] = a[i] ^ b[i];\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy94b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFDbEMsU0FBU0MsSUFBSUMsQ0FBQyxFQUFFQyxDQUFDO0lBQ3RCLElBQUlELEVBQUVFLE1BQU0sS0FBS0QsRUFBRUMsTUFBTSxFQUFFO1FBQ3pCLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE1BQU1DLFNBQVNOLHNEQUFXQSxDQUFDRSxFQUFFRSxNQUFNO0lBQ25DLElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJTCxFQUFFRSxNQUFNLEVBQUVHLElBQUs7UUFDakNELE1BQU0sQ0FBQ0MsRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUUsR0FBR0osQ0FBQyxDQUFDSSxFQUFFO0lBQ3pCO0lBQ0EsT0FBT0Q7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvY29yZS9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy94b3IuanM/MmJlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhbGxvY1Vuc2FmZSB9IGZyb20gJy4vYWxsb2MuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHhvcihhLCBiKSB7XG4gIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0lucHV0cyBzaG91bGQgaGF2ZSB0aGUgc2FtZSBsZW5ndGgnKTtcbiAgfVxuICBjb25zdCByZXN1bHQgPSBhbGxvY1Vuc2FmZShhLmxlbmd0aCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgIHJlc3VsdFtpXSA9IGFbaV0gXiBiW2ldO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59Il0sIm5hbWVzIjpbImFsbG9jVW5zYWZlIiwieG9yIiwiYSIsImIiLCJsZW5ndGgiLCJFcnJvciIsInJlc3VsdCIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/xor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/modal-core/dist/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-core/dist/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfigCtrl: () => (/* binding */ ConfigCtrl),\n/* harmony export */   CoreUtil: () => (/* binding */ CoreUtil),\n/* harmony export */   EventsCtrl: () => (/* binding */ EventsCtrl),\n/* harmony export */   ExplorerCtrl: () => (/* binding */ ExplorerCtrl),\n/* harmony export */   ModalCtrl: () => (/* binding */ ModalCtrl),\n/* harmony export */   OptionsCtrl: () => (/* binding */ OptionsCtrl),\n/* harmony export */   RouterCtrl: () => (/* binding */ RouterCtrl),\n/* harmony export */   ThemeCtrl: () => (/* binding */ ThemeCtrl),\n/* harmony export */   ToastCtrl: () => (/* binding */ ToastCtrl)\n/* harmony export */ });\n/* harmony import */ var valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! valtio/vanilla */ \"(ssr)/./node_modules/valtio/esm/vanilla.mjs\");\n\nconst state$7 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    history: [\n        \"ConnectWallet\"\n    ],\n    view: \"ConnectWallet\",\n    data: void 0\n});\nconst RouterCtrl = {\n    state: state$7,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$7, ()=>callback(state$7));\n    },\n    push (view, data) {\n        if (view !== state$7.view) {\n            state$7.view = view;\n            if (data) {\n                state$7.data = data;\n            }\n            state$7.history.push(view);\n        }\n    },\n    reset (view) {\n        state$7.view = view;\n        state$7.history = [\n            view\n        ];\n    },\n    replace (view) {\n        if (state$7.history.length > 1) {\n            state$7.history[state$7.history.length - 1] = view;\n            state$7.view = view;\n        }\n    },\n    goBack () {\n        if (state$7.history.length > 1) {\n            state$7.history.pop();\n            const [last] = state$7.history.slice(-1);\n            state$7.view = last;\n        }\n    },\n    setData (data) {\n        state$7.data = data;\n    }\n};\nconst CoreUtil = {\n    WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n    WCM_VERSION: \"WCM_VERSION\",\n    RECOMMENDED_WALLET_AMOUNT: 9,\n    isMobile () {\n        if (false) {}\n        return false;\n    },\n    isAndroid () {\n        return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n    },\n    isIos () {\n        const ua = navigator.userAgent.toLowerCase();\n        return CoreUtil.isMobile() && (ua.includes(\"iphone\") || ua.includes(\"ipad\"));\n    },\n    isHttpUrl (url) {\n        return url.startsWith(\"http://\") || url.startsWith(\"https://\");\n    },\n    isArray (data) {\n        return Array.isArray(data) && data.length > 0;\n    },\n    isTelegram () {\n        return  false && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (0);\n    },\n    formatNativeUrl (appUrl, wcUri, name) {\n        if (CoreUtil.isHttpUrl(appUrl)) {\n            return this.formatUniversalUrl(appUrl, wcUri, name);\n        }\n        let safeAppUrl = appUrl;\n        if (!safeAppUrl.includes(\"://\")) {\n            safeAppUrl = appUrl.replaceAll(\"/\", \"\").replaceAll(\":\", \"\");\n            safeAppUrl = `${safeAppUrl}://`;\n        }\n        if (!safeAppUrl.endsWith(\"/\")) {\n            safeAppUrl = `${safeAppUrl}/`;\n        }\n        this.setWalletConnectDeepLink(safeAppUrl, name);\n        const encodedWcUrl = encodeURIComponent(wcUri);\n        return `${safeAppUrl}wc?uri=${encodedWcUrl}`;\n    },\n    formatUniversalUrl (appUrl, wcUri, name) {\n        if (!CoreUtil.isHttpUrl(appUrl)) {\n            return this.formatNativeUrl(appUrl, wcUri, name);\n        }\n        let safeAppUrl = appUrl;\n        if (safeAppUrl.startsWith(\"https://t.me\")) {\n            const formattedUri = Buffer.from(wcUri).toString(\"base64\").replace(/[=]/g, \"\");\n            if (safeAppUrl.endsWith(\"/\")) {\n                safeAppUrl = safeAppUrl.slice(0, -1);\n            }\n            this.setWalletConnectDeepLink(safeAppUrl, name);\n            const url = new URL(safeAppUrl);\n            url.searchParams.set(\"startapp\", formattedUri);\n            const link = url.toString();\n            return link;\n        }\n        if (!safeAppUrl.endsWith(\"/\")) {\n            safeAppUrl = `${safeAppUrl}/`;\n        }\n        this.setWalletConnectDeepLink(safeAppUrl, name);\n        const encodedWcUrl = encodeURIComponent(wcUri);\n        return `${safeAppUrl}wc?uri=${encodedWcUrl}`;\n    },\n    async wait (miliseconds) {\n        return new Promise((resolve)=>{\n            setTimeout(resolve, miliseconds);\n        });\n    },\n    openHref (href, target) {\n        const adjustedTarget = this.isTelegram() ? \"_blank\" : target;\n        window.open(href, adjustedTarget, \"noreferrer noopener\");\n    },\n    setWalletConnectDeepLink (href, name) {\n        try {\n            localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href,\n                name\n            }));\n        } catch (e) {\n            console.info(\"Unable to set WalletConnect deep link\");\n        }\n    },\n    setWalletConnectAndroidDeepLink (wcUri) {\n        try {\n            const [href] = wcUri.split(\"?\");\n            localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href,\n                name: \"Android\"\n            }));\n        } catch (e) {\n            console.info(\"Unable to set WalletConnect android deep link\");\n        }\n    },\n    removeWalletConnectDeepLink () {\n        try {\n            localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE);\n        } catch (e) {\n            console.info(\"Unable to remove WalletConnect deep link\");\n        }\n    },\n    setModalVersionInStorage () {\n        try {\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.setItem(CoreUtil.WCM_VERSION, \"2.7.0\");\n            }\n        } catch (e) {\n            console.info(\"Unable to set Web3Modal version in storage\");\n        }\n    },\n    getWalletRouterData () {\n        var _a;\n        const routerData = (_a = RouterCtrl.state.data) == null ? void 0 : _a.Wallet;\n        if (!routerData) {\n            throw new Error('Missing \"Wallet\" view data');\n        }\n        return routerData;\n    }\n};\nconst isEnabled = typeof location !== \"undefined\" && (location.hostname.includes(\"localhost\") || location.protocol.includes(\"https\"));\nconst state$6 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    enabled: isEnabled,\n    userSessionId: \"\",\n    events: [],\n    connectedWalletId: void 0\n});\nconst EventsCtrl = {\n    state: state$6,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$6.events, ()=>callback((0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.snapshot)(state$6.events[state$6.events.length - 1])));\n    },\n    initialize () {\n        if (state$6.enabled && typeof (crypto == null ? void 0 : crypto.randomUUID) !== \"undefined\") {\n            state$6.userSessionId = crypto.randomUUID();\n        }\n    },\n    setConnectedWalletId (connectedWalletId) {\n        state$6.connectedWalletId = connectedWalletId;\n    },\n    click (data) {\n        if (state$6.enabled) {\n            const event = {\n                type: \"CLICK\",\n                name: data.name,\n                userSessionId: state$6.userSessionId,\n                timestamp: Date.now(),\n                data\n            };\n            state$6.events.push(event);\n        }\n    },\n    track (data) {\n        if (state$6.enabled) {\n            const event = {\n                type: \"TRACK\",\n                name: data.name,\n                userSessionId: state$6.userSessionId,\n                timestamp: Date.now(),\n                data\n            };\n            state$6.events.push(event);\n        }\n    },\n    view (data) {\n        if (state$6.enabled) {\n            const event = {\n                type: \"VIEW\",\n                name: data.name,\n                userSessionId: state$6.userSessionId,\n                timestamp: Date.now(),\n                data\n            };\n            state$6.events.push(event);\n        }\n    }\n};\nconst state$5 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    chains: void 0,\n    walletConnectUri: void 0,\n    isAuth: false,\n    isCustomDesktop: false,\n    isCustomMobile: false,\n    isDataLoaded: false,\n    isUiLoaded: false\n});\nconst OptionsCtrl = {\n    state: state$5,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$5, ()=>callback(state$5));\n    },\n    setChains (chains) {\n        state$5.chains = chains;\n    },\n    setWalletConnectUri (walletConnectUri) {\n        state$5.walletConnectUri = walletConnectUri;\n    },\n    setIsCustomDesktop (isCustomDesktop) {\n        state$5.isCustomDesktop = isCustomDesktop;\n    },\n    setIsCustomMobile (isCustomMobile) {\n        state$5.isCustomMobile = isCustomMobile;\n    },\n    setIsDataLoaded (isDataLoaded) {\n        state$5.isDataLoaded = isDataLoaded;\n    },\n    setIsUiLoaded (isUiLoaded) {\n        state$5.isUiLoaded = isUiLoaded;\n    },\n    setIsAuth (isAuth) {\n        state$5.isAuth = isAuth;\n    }\n};\nconst state$4 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    projectId: \"\",\n    mobileWallets: void 0,\n    desktopWallets: void 0,\n    walletImages: void 0,\n    chains: void 0,\n    enableAuthMode: false,\n    enableExplorer: true,\n    explorerExcludedWalletIds: void 0,\n    explorerRecommendedWalletIds: void 0,\n    termsOfServiceUrl: void 0,\n    privacyPolicyUrl: void 0\n});\nconst ConfigCtrl = {\n    state: state$4,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$4, ()=>callback(state$4));\n    },\n    setConfig (config) {\n        var _a, _b;\n        EventsCtrl.initialize();\n        OptionsCtrl.setChains(config.chains);\n        OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode));\n        OptionsCtrl.setIsCustomMobile(Boolean((_a = config.mobileWallets) == null ? void 0 : _a.length));\n        OptionsCtrl.setIsCustomDesktop(Boolean((_b = config.desktopWallets) == null ? void 0 : _b.length));\n        CoreUtil.setModalVersionInStorage();\n        Object.assign(state$4, config);\n    }\n};\nvar __defProp$2 = Object.defineProperty;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value)=>key in obj ? __defProp$2(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues$2 = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp$2.call(b, prop)) __defNormalProp$2(a, prop, b[prop]);\n    if (__getOwnPropSymbols$2) for (var prop of __getOwnPropSymbols$2(b)){\n        if (__propIsEnum$2.call(b, prop)) __defNormalProp$2(a, prop, b[prop]);\n    }\n    return a;\n};\nconst W3M_API = \"https://explorer-api.walletconnect.com\";\nconst SDK_TYPE = \"wcm\";\nconst SDK_VERSION = `js-${\"2.7.0\"}`;\nasync function fetchListings(endpoint, params) {\n    const allParams = __spreadValues$2({\n        sdkType: SDK_TYPE,\n        sdkVersion: SDK_VERSION\n    }, params);\n    const url = new URL(endpoint, W3M_API);\n    url.searchParams.append(\"projectId\", ConfigCtrl.state.projectId);\n    Object.entries(allParams).forEach(([key, value])=>{\n        if (value) {\n            url.searchParams.append(key, String(value));\n        }\n    });\n    const request = await fetch(url);\n    return request.json();\n}\nconst ExplorerUtil = {\n    async getDesktopListings (params) {\n        return fetchListings(\"/w3m/v1/getDesktopListings\", params);\n    },\n    async getMobileListings (params) {\n        return fetchListings(\"/w3m/v1/getMobileListings\", params);\n    },\n    async getInjectedListings (params) {\n        return fetchListings(\"/w3m/v1/getInjectedListings\", params);\n    },\n    async getAllListings (params) {\n        return fetchListings(\"/w3m/v1/getAllListings\", params);\n    },\n    getWalletImageUrl (imageId) {\n        return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`;\n    },\n    getAssetImageUrl (imageId) {\n        return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`;\n    }\n};\nvar __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value)=>key in obj ? __defProp$1(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues$1 = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);\n    if (__getOwnPropSymbols$1) for (var prop of __getOwnPropSymbols$1(b)){\n        if (__propIsEnum$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);\n    }\n    return a;\n};\nconst isMobile = CoreUtil.isMobile();\nconst state$3 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    wallets: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    search: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    recomendedWallets: []\n});\nconst ExplorerCtrl = {\n    state: state$3,\n    async getRecomendedWallets () {\n        const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state;\n        if (explorerRecommendedWalletIds === \"NONE\" || explorerExcludedWalletIds === \"ALL\" && !explorerRecommendedWalletIds) {\n            return state$3.recomendedWallets;\n        }\n        if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n            const recommendedIds = explorerRecommendedWalletIds.join(\",\");\n            const params = {\n                recommendedIds\n            };\n            const { listings } = await ExplorerUtil.getAllListings(params);\n            const listingsArr = Object.values(listings);\n            listingsArr.sort((a, b)=>{\n                const aIndex = explorerRecommendedWalletIds.indexOf(a.id);\n                const bIndex = explorerRecommendedWalletIds.indexOf(b.id);\n                return aIndex - bIndex;\n            });\n            state$3.recomendedWallets = listingsArr;\n        } else {\n            const { chains, isAuth } = OptionsCtrl.state;\n            const chainsFilter = chains == null ? void 0 : chains.join(\",\");\n            const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds);\n            const params = {\n                page: 1,\n                sdks: isAuth ? \"auth_v1\" : void 0,\n                entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n                chains: chainsFilter,\n                version: 2,\n                excludedIds: isExcluded ? explorerExcludedWalletIds.join(\",\") : void 0\n            };\n            const { listings } = isMobile ? await ExplorerUtil.getMobileListings(params) : await ExplorerUtil.getDesktopListings(params);\n            state$3.recomendedWallets = Object.values(listings);\n        }\n        return state$3.recomendedWallets;\n    },\n    async getWallets (params) {\n        const extendedParams = __spreadValues$1({}, params);\n        const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state;\n        const { recomendedWallets } = state$3;\n        if (explorerExcludedWalletIds === \"ALL\") {\n            return state$3.wallets;\n        }\n        if (recomendedWallets.length) {\n            extendedParams.excludedIds = recomendedWallets.map((wallet)=>wallet.id).join(\",\");\n        } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n            extendedParams.excludedIds = explorerRecommendedWalletIds.join(\",\");\n        }\n        if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n            extendedParams.excludedIds = [\n                extendedParams.excludedIds,\n                explorerExcludedWalletIds\n            ].filter(Boolean).join(\",\");\n        }\n        if (OptionsCtrl.state.isAuth) {\n            extendedParams.sdks = \"auth_v1\";\n        }\n        const { page, search } = params;\n        const { listings: listingsObj, total } = isMobile ? await ExplorerUtil.getMobileListings(extendedParams) : await ExplorerUtil.getDesktopListings(extendedParams);\n        const listings = Object.values(listingsObj);\n        const type = search ? \"search\" : \"wallets\";\n        state$3[type] = {\n            listings: [\n                ...state$3[type].listings,\n                ...listings\n            ],\n            total,\n            page: page != null ? page : 1\n        };\n        return {\n            listings,\n            total\n        };\n    },\n    getWalletImageUrl (imageId) {\n        return ExplorerUtil.getWalletImageUrl(imageId);\n    },\n    getAssetImageUrl (imageId) {\n        return ExplorerUtil.getAssetImageUrl(imageId);\n    },\n    resetSearch () {\n        state$3.search = {\n            listings: [],\n            total: 0,\n            page: 1\n        };\n    }\n};\nconst state$2 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: false\n});\nconst ModalCtrl = {\n    state: state$2,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$2, ()=>callback(state$2));\n    },\n    async open (options) {\n        return new Promise((resolve)=>{\n            const { isUiLoaded, isDataLoaded } = OptionsCtrl.state;\n            CoreUtil.removeWalletConnectDeepLink();\n            OptionsCtrl.setWalletConnectUri(options == null ? void 0 : options.uri);\n            OptionsCtrl.setChains(options == null ? void 0 : options.chains);\n            RouterCtrl.reset(\"ConnectWallet\");\n            if (isUiLoaded && isDataLoaded) {\n                state$2.open = true;\n                resolve();\n            } else {\n                const interval = setInterval(()=>{\n                    const opts = OptionsCtrl.state;\n                    if (opts.isUiLoaded && opts.isDataLoaded) {\n                        clearInterval(interval);\n                        state$2.open = true;\n                        resolve();\n                    }\n                }, 200);\n            }\n        });\n    },\n    close () {\n        state$2.open = false;\n    }\n};\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nfunction isDarkMode() {\n    return typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\nconst state$1 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    themeMode: isDarkMode() ? \"dark\" : \"light\"\n});\nconst ThemeCtrl = {\n    state: state$1,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$1, ()=>callback(state$1));\n    },\n    setThemeConfig (theme) {\n        const { themeMode, themeVariables } = theme;\n        if (themeMode) {\n            state$1.themeMode = themeMode;\n        }\n        if (themeVariables) {\n            state$1.themeVariables = __spreadValues({}, themeVariables);\n        }\n    }\n};\nconst state = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: false,\n    message: \"\",\n    variant: \"success\"\n});\nconst ToastCtrl = {\n    state,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state, ()=>callback(state));\n    },\n    openToast (message, variant) {\n        state.open = true;\n        state.message = message;\n        state.variant = variant;\n    },\n    closeToast () {\n        state.open = false;\n    }\n};\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtY29yZS9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBNEQ7QUFFNUQsTUFBTUcsVUFBVUgscURBQUtBLENBQUM7SUFDcEJJLFNBQVM7UUFBQztLQUFnQjtJQUMxQkMsTUFBTTtJQUNOQyxNQUFNLEtBQUs7QUFDYjtBQUNBLE1BQU1DLGFBQWE7SUFDakJDLE9BQU9MO0lBQ1BGLFdBQVVRLFFBQVE7UUFDaEIsT0FBT1IseURBQVNBLENBQUNFLFNBQVMsSUFBTU0sU0FBU047SUFDM0M7SUFDQU8sTUFBS0wsSUFBSSxFQUFFQyxJQUFJO1FBQ2IsSUFBSUQsU0FBU0YsUUFBUUUsSUFBSSxFQUFFO1lBQ3pCRixRQUFRRSxJQUFJLEdBQUdBO1lBQ2YsSUFBSUMsTUFBTTtnQkFDUkgsUUFBUUcsSUFBSSxHQUFHQTtZQUNqQjtZQUNBSCxRQUFRQyxPQUFPLENBQUNNLElBQUksQ0FBQ0w7UUFDdkI7SUFDRjtJQUNBTSxPQUFNTixJQUFJO1FBQ1JGLFFBQVFFLElBQUksR0FBR0E7UUFDZkYsUUFBUUMsT0FBTyxHQUFHO1lBQUNDO1NBQUs7SUFDMUI7SUFDQU8sU0FBUVAsSUFBSTtRQUNWLElBQUlGLFFBQVFDLE9BQU8sQ0FBQ1MsTUFBTSxHQUFHLEdBQUc7WUFDOUJWLFFBQVFDLE9BQU8sQ0FBQ0QsUUFBUUMsT0FBTyxDQUFDUyxNQUFNLEdBQUcsRUFBRSxHQUFHUjtZQUM5Q0YsUUFBUUUsSUFBSSxHQUFHQTtRQUNqQjtJQUNGO0lBQ0FTO1FBQ0UsSUFBSVgsUUFBUUMsT0FBTyxDQUFDUyxNQUFNLEdBQUcsR0FBRztZQUM5QlYsUUFBUUMsT0FBTyxDQUFDVyxHQUFHO1lBQ25CLE1BQU0sQ0FBQ0MsS0FBSyxHQUFHYixRQUFRQyxPQUFPLENBQUNhLEtBQUssQ0FBQyxDQUFDO1lBQ3RDZCxRQUFRRSxJQUFJLEdBQUdXO1FBQ2pCO0lBQ0Y7SUFDQUUsU0FBUVosSUFBSTtRQUNW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QWMsR0FBR1AsZUFBZSxDQUFDLEdBQUdPO1FBQzlDO0lBQ0Y7QUFDRjtBQUVBLE1BQU0vTyxRQUFRUixxREFBS0EsQ0FBQztJQUNsQnlFLE1BQU07SUFDTitLLFNBQVM7SUFDVEMsU0FBUztBQUNYO0FBQ0EsTUFBTUMsWUFBWTtJQUNoQmxQO0lBQ0FQLFdBQVVRLFFBQVE7UUFDaEIsT0FBT1IseURBQVNBLENBQUNPLE9BQU8sSUFBTUMsU0FBU0Q7SUFDekM7SUFDQW1QLFdBQVVILE9BQU8sRUFBRUMsT0FBTztRQUN4QmpQLE1BQU1pRSxJQUFJLEdBQUc7UUFDYmpFLE1BQU1nUCxPQUFPLEdBQUdBO1FBQ2hCaFAsTUFBTWlQLE9BQU8sR0FBR0E7SUFDbEI7SUFDQUc7UUFDRXBQLE1BQU1pRSxJQUFJLEdBQUc7SUFDZjtBQUNGO0FBRW9ILENBQ3BILGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwtY29yZS9kaXN0L2luZGV4LmpzP2UwMmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJveHksIHN1YnNjcmliZSwgc25hcHNob3QgfSBmcm9tICd2YWx0aW8vdmFuaWxsYSc7XG5cbmNvbnN0IHN0YXRlJDcgPSBwcm94eSh7XG4gIGhpc3Rvcnk6IFtcIkNvbm5lY3RXYWxsZXRcIl0sXG4gIHZpZXc6IFwiQ29ubmVjdFdhbGxldFwiLFxuICBkYXRhOiB2b2lkIDBcbn0pO1xuY29uc3QgUm91dGVyQ3RybCA9IHtcbiAgc3RhdGU6IHN0YXRlJDcsXG4gIHN1YnNjcmliZShjYWxsYmFjaykge1xuICAgIHJldHVybiBzdWJzY3JpYmUoc3RhdGUkNywgKCkgPT4gY2FsbGJhY2soc3RhdGUkNykpO1xuICB9LFxuICBwdXNoKHZpZXcsIGRhdGEpIHtcbiAgICBpZiAodmlldyAhPT0gc3RhdGUkNy52aWV3KSB7XG4gICAgICBzdGF0ZSQ3LnZpZXcgPSB2aWV3O1xuICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgc3RhdGUkNy5kYXRhID0gZGF0YTtcbiAgICAgIH1cbiAgICAgIHN0YXRlJDcuaGlzdG9yeS5wdXNoKHZpZXcpO1xuICAgIH1cbiAgfSxcbiAgcmVzZXQodmlldykge1xuICAgIHN0YXRlJDcudmlldyA9IHZpZXc7XG4gICAgc3RhdGUkNy5oaXN0b3J5ID0gW3ZpZXddO1xuICB9LFxuICByZXBsYWNlKHZpZXcpIHtcbiAgICBpZiAoc3RhdGUkNy5oaXN0b3J5Lmxlbmd0aCA+IDEpIHtcbiAgICAgIHN0YXRlJDcuaGlzdG9yeVtzdGF0ZSQ3Lmhpc3RvcnkubGVuZ3RoIC0gMV0gPSB2aWV3O1xuICAgICAgc3RhdGUkNy52aWV3ID0gdmlldztcbiAgICB9XG4gIH0sXG4gIGdvQmFjaygpIHtcbiAgICBpZiAoc3RhdGUkNy5oaXN0b3J5Lmxlbmd0aCA+IDEpIHtcbiAgICAgIHN0YXRlJDcuaGlzdG9yeS5wb3AoKTtcbiAgICAgIGNvbnN0IFtsYXN0XSA9IHN0YXRlJDcuaGlzdG9yeS5zbGljZSgtMSk7XG4gICAgICBzdGF0ZSQ3LnZpZXcgPSBsYXN0O1xuICAgIH1cbiAgfSxcbiAgc2V0RGF0YShkYXRhKSB7XG4gICAgc3RhdGUkNy5kYXRhID0gZGF0YTtcbiAgfVxufTtcblxuY29uc3QgQ29yZVV0aWwgPSB7XG4gIFdBTExFVENPTk5FQ1RfREVFUExJTktfQ0hPSUNFOiBcIldBTExFVENPTk5FQ1RfREVFUExJTktfQ0hPSUNFXCIsXG4gIFdDTV9WRVJTSU9OOiBcIldDTV9WRVJTSU9OXCIsXG4gIFJFQ09NTUVOREVEX1dBTExFVF9BTU9VTlQ6IDksXG4gIGlzTW9iaWxlKCkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICByZXR1cm4gQm9vbGVhbihcbiAgICAgICAgd2luZG93Lm1hdGNoTWVkaWEoXCIocG9pbnRlcjpjb2Fyc2UpXCIpLm1hdGNoZXMgfHwgL0FuZHJvaWR8d2ViT1N8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5fE9wZXJhIE1pbmkvdS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG4gIGlzQW5kcm9pZCgpIHtcbiAgICByZXR1cm4gQ29yZVV0aWwuaXNNb2JpbGUoKSAmJiBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoXCJhbmRyb2lkXCIpO1xuICB9LFxuICBpc0lvcygpIHtcbiAgICBjb25zdCB1YSA9IG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKTtcbiAgICByZXR1cm4gQ29yZVV0aWwuaXNNb2JpbGUoKSAmJiAodWEuaW5jbHVkZXMoXCJpcGhvbmVcIikgfHwgdWEuaW5jbHVkZXMoXCJpcGFkXCIpKTtcbiAgfSxcbiAgaXNIdHRwVXJsKHVybCkge1xuICAgIHJldHVybiB1cmwuc3RhcnRzV2l0aChcImh0dHA6Ly9cIikgfHwgdXJsLnN0YXJ0c1dpdGgoXCJodHRwczovL1wiKTtcbiAgfSxcbiAgaXNBcnJheShkYXRhKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoZGF0YSkgJiYgZGF0YS5sZW5ndGggPiAwO1xuICB9LFxuICBpc1RlbGVncmFtKCkge1xuICAgIHJldHVybiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgKEJvb2xlYW4od2luZG93LlRlbGVncmFtV2Vidmlld1Byb3h5KSB8fCAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIEJvb2xlYW4od2luZG93LlRlbGVncmFtKSB8fCAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIEJvb2xlYW4od2luZG93LlRlbGVncmFtV2Vidmlld1Byb3h5UHJvdG8pKTtcbiAgfSxcbiAgZm9ybWF0TmF0aXZlVXJsKGFwcFVybCwgd2NVcmksIG5hbWUpIHtcbiAgICBpZiAoQ29yZVV0aWwuaXNIdHRwVXJsKGFwcFVybCkpIHtcbiAgICAgIHJldHVybiB0aGlzLmZvcm1hdFVuaXZlcnNhbFVybChhcHBVcmwsIHdjVXJpLCBuYW1lKTtcbiAgICB9XG4gICAgbGV0IHNhZmVBcHBVcmwgPSBhcHBVcmw7XG4gICAgaWYgKCFzYWZlQXBwVXJsLmluY2x1ZGVzKFwiOi8vXCIpKSB7XG4gICAgICBzYWZlQXBwVXJsID0gYXBwVXJsLnJlcGxhY2VBbGwoXCIvXCIsIFwiXCIpLnJlcGxhY2VBbGwoXCI6XCIsIFwiXCIpO1xuICAgICAgc2FmZUFwcFVybCA9IGAke3NhZmVBcHBVcmx9Oi8vYDtcbiAgICB9XG4gICAgaWYgKCFzYWZlQXBwVXJsLmVuZHNXaXRoKFwiL1wiKSkge1xuICAgICAgc2FmZUFwcFVybCA9IGAke3NhZmVBcHBVcmx9L2A7XG4gICAgfVxuICAgIHRoaXMuc2V0V2FsbGV0Q29ubmVjdERlZXBMaW5rKHNhZmVBcHBVcmwsIG5hbWUpO1xuICAgIGNvbnN0IGVuY29kZWRXY1VybCA9IGVuY29kZVVSSUNvbXBvbmVudCh3Y1VyaSk7XG4gICAgcmV0dXJuIGAke3NhZmVBcHBVcmx9d2M/dXJpPSR7ZW5jb2RlZFdjVXJsfWA7XG4gIH0sXG4gIGZvcm1hdFVuaXZlcnNhbFVybChhcHBVcmwsIHdjVXJpLCBuYW1lKSB7XG4gICAgaWYgKCFDb3JlVXRpbC5pc0h0dHBVcmwoYXBwVXJsKSkge1xuICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0TmF0aXZlVXJsKGFwcFVybCwgd2NVcmksIG5hbWUpO1xuICAgIH1cbiAgICBsZXQgc2FmZUFwcFVybCA9IGFwcFVybDtcbiAgICBpZiAoc2FmZUFwcFVybC5zdGFydHNXaXRoKFwiaHR0cHM6Ly90Lm1lXCIpKSB7XG4gICAgICBjb25zdCBmb3JtYXR0ZWRVcmkgPSBCdWZmZXIuZnJvbSh3Y1VyaSkudG9TdHJpbmcoXCJiYXNlNjRcIikucmVwbGFjZSgvWz1dL2csIFwiXCIpO1xuICAgICAgaWYgKHNhZmVBcHBVcmwuZW5kc1dpdGgoXCIvXCIpKSB7XG4gICAgICAgIHNhZmVBcHBVcmwgPSBzYWZlQXBwVXJsLnNsaWNlKDAsIC0xKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2V0V2FsbGV0Q29ubmVjdERlZXBMaW5rKHNhZmVBcHBVcmwsIG5hbWUpO1xuICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChzYWZlQXBwVXJsKTtcbiAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KFwic3RhcnRhcHBcIiwgZm9ybWF0dGVkVXJpKTtcbiAgICAgIGNvbnN0IGxpbmsgPSB1cmwudG9TdHJpbmcoKTtcbiAgICAgIHJldHVybiBsaW5rO1xuICAgIH1cbiAgICBpZiAoIXNhZmVBcHBVcmwuZW5kc1dpdGgoXCIvXCIpKSB7XG4gICAgICBzYWZlQXBwVXJsID0gYCR7c2FmZUFwcFVybH0vYDtcbiAgICB9XG4gICAgdGhpcy5zZXRXYWxsZXRDb25uZWN0RGVlcExpbmsoc2FmZUFwcFVybCwgbmFtZSk7XG4gICAgY29uc3QgZW5jb2RlZFdjVXJsID0gZW5jb2RlVVJJQ29tcG9uZW50KHdjVXJpKTtcbiAgICByZXR1cm4gYCR7c2FmZUFwcFVybH13Yz91cmk9JHtlbmNvZGVkV2NVcmx9YDtcbiAgfSxcbiAgYXN5bmMgd2FpdChtaWxpc2Vjb25kcykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgc2V0VGltZW91dChyZXNvbHZlLCBtaWxpc2Vjb25kcyk7XG4gICAgfSk7XG4gIH0sXG4gIG9wZW5IcmVmKGhyZWYsIHRhcmdldCkge1xuICAgIGNvbnN0IGFkanVzdGVkVGFyZ2V0ID0gdGhpcy5pc1RlbGVncmFtKCkgPyBcIl9ibGFua1wiIDogdGFyZ2V0O1xuICAgIHdpbmRvdy5vcGVuKGhyZWYsIGFkanVzdGVkVGFyZ2V0LCBcIm5vcmVmZXJyZXIgbm9vcGVuZXJcIik7XG4gIH0sXG4gIHNldFdhbGxldENvbm5lY3REZWVwTGluayhocmVmLCBuYW1lKSB7XG4gICAgdHJ5IHtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKENvcmVVdGlsLldBTExFVENPTk5FQ1RfREVFUExJTktfQ0hPSUNFLCBKU09OLnN0cmluZ2lmeSh7IGhyZWYsIG5hbWUgfSkpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuaW5mbyhcIlVuYWJsZSB0byBzZXQgV2FsbGV0Q29ubmVjdCBkZWVwIGxpbmtcIik7XG4gICAgfVxuICB9LFxuICBzZXRXYWxsZXRDb25uZWN0QW5kcm9pZERlZXBMaW5rKHdjVXJpKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IFtocmVmXSA9IHdjVXJpLnNwbGl0KFwiP1wiKTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFxuICAgICAgICBDb3JlVXRpbC5XQUxMRVRDT05ORUNUX0RFRVBMSU5LX0NIT0lDRSxcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkoeyBocmVmLCBuYW1lOiBcIkFuZHJvaWRcIiB9KVxuICAgICAgKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmluZm8oXCJVbmFibGUgdG8gc2V0IFdhbGxldENvbm5lY3QgYW5kcm9pZCBkZWVwIGxpbmtcIik7XG4gICAgfVxuICB9LFxuICByZW1vdmVXYWxsZXRDb25uZWN0RGVlcExpbmsoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKENvcmVVdGlsLldBTExFVENPTk5FQ1RfREVFUExJTktfQ0hPSUNFKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmluZm8oXCJVbmFibGUgdG8gcmVtb3ZlIFdhbGxldENvbm5lY3QgZGVlcCBsaW5rXCIpO1xuICAgIH1cbiAgfSxcbiAgc2V0TW9kYWxWZXJzaW9uSW5TdG9yYWdlKCkge1xuICAgIHRyeSB7XG4gICAgICBpZiAodHlwZW9mIGxvY2FsU3RvcmFnZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShDb3JlVXRpbC5XQ01fVkVSU0lPTiwgXCIyLjcuMFwiKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmluZm8oXCJVbmFibGUgdG8gc2V0IFdlYjNNb2RhbCB2ZXJzaW9uIGluIHN0b3JhZ2VcIik7XG4gICAgfVxuICB9LFxuICBnZXRXYWxsZXRSb3V0ZXJEYXRhKCkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCByb3V0ZXJEYXRhID0gKF9hID0gUm91dGVyQ3RybC5zdGF0ZS5kYXRhKSA9PSBudWxsID8gdm9pZCAwIDogX2EuV2FsbGV0O1xuICAgIGlmICghcm91dGVyRGF0YSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIFwiV2FsbGV0XCIgdmlldyBkYXRhJyk7XG4gICAgfVxuICAgIHJldHVybiByb3V0ZXJEYXRhO1xuICB9XG59O1xuXG5jb25zdCBpc0VuYWJsZWQgPSB0eXBlb2YgbG9jYXRpb24gIT09IFwidW5kZWZpbmVkXCIgJiYgKGxvY2F0aW9uLmhvc3RuYW1lLmluY2x1ZGVzKFwibG9jYWxob3N0XCIpIHx8IGxvY2F0aW9uLnByb3RvY29sLmluY2x1ZGVzKFwiaHR0cHNcIikpO1xuY29uc3Qgc3RhdGUkNiA9IHByb3h5KHtcbiAgZW5hYmxlZDogaXNFbmFibGVkLFxuICB1c2VyU2Vzc2lvbklkOiBcIlwiLFxuICBldmVudHM6IFtdLFxuICBjb25uZWN0ZWRXYWxsZXRJZDogdm9pZCAwXG59KTtcbmNvbnN0IEV2ZW50c0N0cmwgPSB7XG4gIHN0YXRlOiBzdGF0ZSQ2LFxuICBzdWJzY3JpYmUoY2FsbGJhY2spIHtcbiAgICByZXR1cm4gc3Vic2NyaWJlKHN0YXRlJDYuZXZlbnRzLCAoKSA9PiBjYWxsYmFjayhzbmFwc2hvdChzdGF0ZSQ2LmV2ZW50c1tzdGF0ZSQ2LmV2ZW50cy5sZW5ndGggLSAxXSkpKTtcbiAgfSxcbiAgaW5pdGlhbGl6ZSgpIHtcbiAgICBpZiAoc3RhdGUkNi5lbmFibGVkICYmIHR5cGVvZiAoY3J5cHRvID09IG51bGwgPyB2b2lkIDAgOiBjcnlwdG8ucmFuZG9tVVVJRCkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHN0YXRlJDYudXNlclNlc3Npb25JZCA9IGNyeXB0by5yYW5kb21VVUlEKCk7XG4gICAgfVxuICB9LFxuICBzZXRDb25uZWN0ZWRXYWxsZXRJZChjb25uZWN0ZWRXYWxsZXRJZCkge1xuICAgIHN0YXRlJDYuY29ubmVjdGVkV2FsbGV0SWQgPSBjb25uZWN0ZWRXYWxsZXRJZDtcbiAgfSxcbiAgY2xpY2soZGF0YSkge1xuICAgIGlmIChzdGF0ZSQ2LmVuYWJsZWQpIHtcbiAgICAgIGNvbnN0IGV2ZW50ID0ge1xuICAgICAgICB0eXBlOiBcIkNMSUNLXCIsXG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgdXNlclNlc3Npb25JZDogc3RhdGUkNi51c2VyU2Vzc2lvbklkLFxuICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXG4gICAgICAgIGRhdGFcbiAgICAgIH07XG4gICAgICBzdGF0ZSQ2LmV2ZW50cy5wdXNoKGV2ZW50KTtcbiAgICB9XG4gIH0sXG4gIHRyYWNrKGRhdGEpIHtcbiAgICBpZiAoc3RhdGUkNi5lbmFibGVkKSB7XG4gICAgICBjb25zdCBldmVudCA9IHtcbiAgICAgICAgdHlwZTogXCJUUkFDS1wiLFxuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHVzZXJTZXNzaW9uSWQ6IHN0YXRlJDYudXNlclNlc3Npb25JZCxcbiAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLFxuICAgICAgICBkYXRhXG4gICAgICB9O1xuICAgICAgc3RhdGUkNi5ldmVudHMucHVzaChldmVudCk7XG4gICAgfVxuICB9LFxuICB2aWV3KGRhdGEpIHtcbiAgICBpZiAoc3RhdGUkNi5lbmFibGVkKSB7XG4gICAgICBjb25zdCBldmVudCA9IHtcbiAgICAgICAgdHlwZTogXCJWSUVXXCIsXG4gICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgdXNlclNlc3Npb25JZDogc3RhdGUkNi51c2VyU2Vzc2lvbklkLFxuICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXG4gICAgICAgIGRhdGFcbiAgICAgIH07XG4gICAgICBzdGF0ZSQ2LmV2ZW50cy5wdXNoKGV2ZW50KTtcbiAgICB9XG4gIH1cbn07XG5cbmNvbnN0IHN0YXRlJDUgPSBwcm94eSh7XG4gIGNoYWluczogdm9pZCAwLFxuICB3YWxsZXRDb25uZWN0VXJpOiB2b2lkIDAsXG4gIGlzQXV0aDogZmFsc2UsXG4gIGlzQ3VzdG9tRGVza3RvcDogZmFsc2UsXG4gIGlzQ3VzdG9tTW9iaWxlOiBmYWxzZSxcbiAgaXNEYXRhTG9hZGVkOiBmYWxzZSxcbiAgaXNVaUxvYWRlZDogZmFsc2Vcbn0pO1xuY29uc3QgT3B0aW9uc0N0cmwgPSB7XG4gIHN0YXRlOiBzdGF0ZSQ1LFxuICBzdWJzY3JpYmUoY2FsbGJhY2spIHtcbiAgICByZXR1cm4gc3Vic2NyaWJlKHN0YXRlJDUsICgpID0+IGNhbGxiYWNrKHN0YXRlJDUpKTtcbiAgfSxcbiAgc2V0Q2hhaW5zKGNoYWlucykge1xuICAgIHN0YXRlJDUuY2hhaW5zID0gY2hhaW5zO1xuICB9LFxuICBzZXRXYWxsZXRDb25uZWN0VXJpKHdhbGxldENvbm5lY3RVcmkpIHtcbiAgICBzdGF0ZSQ1LndhbGxldENvbm5lY3RVcmkgPSB3YWxsZXRDb25uZWN0VXJpO1xuICB9LFxuICBzZXRJc0N1c3RvbURlc2t0b3AoaXNDdXN0b21EZXNrdG9wKSB7XG4gICAgc3RhdGUkNS5pc0N1c3RvbURlc2t0b3AgPSBpc0N1c3RvbURlc2t0b3A7XG4gIH0sXG4gIHNldElzQ3VzdG9tTW9iaWxlKGlzQ3VzdG9tTW9iaWxlKSB7XG4gICAgc3RhdGUkNS5pc0N1c3RvbU1vYmlsZSA9IGlzQ3VzdG9tTW9iaWxlO1xuICB9LFxuICBzZXRJc0RhdGFMb2FkZWQoaXNEYXRhTG9hZGVkKSB7XG4gICAgc3RhdGUkNS5pc0RhdGFMb2FkZWQgPSBpc0RhdGFMb2FkZWQ7XG4gIH0sXG4gIHNldElzVWlMb2FkZWQoaXNVaUxvYWRlZCkge1xuICAgIHN0YXRlJDUuaXNVaUxvYWRlZCA9IGlzVWlMb2FkZWQ7XG4gIH0sXG4gIHNldElzQXV0aChpc0F1dGgpIHtcbiAgICBzdGF0ZSQ1LmlzQXV0aCA9IGlzQXV0aDtcbiAgfVxufTtcblxuY29uc3Qgc3RhdGUkNCA9IHByb3h5KHtcbiAgcHJvamVjdElkOiBcIlwiLFxuICBtb2JpbGVXYWxsZXRzOiB2b2lkIDAsXG4gIGRlc2t0b3BXYWxsZXRzOiB2b2lkIDAsXG4gIHdhbGxldEltYWdlczogdm9pZCAwLFxuICBjaGFpbnM6IHZvaWQgMCxcbiAgZW5hYmxlQXV0aE1vZGU6IGZhbHNlLFxuICBlbmFibGVFeHBsb3JlcjogdHJ1ZSxcbiAgZXhwbG9yZXJFeGNsdWRlZFdhbGxldElkczogdm9pZCAwLFxuICBleHBsb3JlclJlY29tbWVuZGVkV2FsbGV0SWRzOiB2b2lkIDAsXG4gIHRlcm1zT2ZTZXJ2aWNlVXJsOiB2b2lkIDAsXG4gIHByaXZhY3lQb2xpY3lVcmw6IHZvaWQgMFxufSk7XG5jb25zdCBDb25maWdDdHJsID0ge1xuICBzdGF0ZTogc3RhdGUkNCxcbiAgc3Vic2NyaWJlKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHN1YnNjcmliZShzdGF0ZSQ0LCAoKSA9PiBjYWxsYmFjayhzdGF0ZSQ0KSk7XG4gIH0sXG4gIHNldENvbmZpZyhjb25maWcpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIEV2ZW50c0N0cmwuaW5pdGlhbGl6ZSgpO1xuICAgIE9wdGlvbnNDdHJsLnNldENoYWlucyhjb25maWcuY2hhaW5zKTtcbiAgICBPcHRpb25zQ3RybC5zZXRJc0F1dGgoQm9vbGVhbihjb25maWcuZW5hYmxlQXV0aE1vZGUpKTtcbiAgICBPcHRpb25zQ3RybC5zZXRJc0N1c3RvbU1vYmlsZShCb29sZWFuKChfYSA9IGNvbmZpZy5tb2JpbGVXYWxsZXRzKSA9PSBudWxsID8gdm9pZCAwIDogX2EubGVuZ3RoKSk7XG4gICAgT3B0aW9uc0N0cmwuc2V0SXNDdXN0b21EZXNrdG9wKEJvb2xlYW4oKF9iID0gY29uZmlnLmRlc2t0b3BXYWxsZXRzKSA9PSBudWxsID8gdm9pZCAwIDogX2IubGVuZ3RoKSk7XG4gICAgQ29yZVV0aWwuc2V0TW9kYWxWZXJzaW9uSW5TdG9yYWdlKCk7XG4gICAgT2JqZWN0LmFzc2lnbihzdGF0ZSQ0LCBjb25maWcpO1xuICB9XG59O1xuXG52YXIgX19kZWZQcm9wJDIgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wU3ltYm9scyQyID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBfX2hhc093blByb3AkMiA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19wcm9wSXNFbnVtJDIgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xudmFyIF9fZGVmTm9ybWFsUHJvcCQyID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcCQyKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3NwcmVhZFZhbHVlcyQyID0gKGEsIGIpID0+IHtcbiAgZm9yICh2YXIgcHJvcCBpbiBiIHx8IChiID0ge30pKVxuICAgIGlmIChfX2hhc093blByb3AkMi5jYWxsKGIsIHByb3ApKVxuICAgICAgX19kZWZOb3JtYWxQcm9wJDIoYSwgcHJvcCwgYltwcm9wXSk7XG4gIGlmIChfX2dldE93blByb3BTeW1ib2xzJDIpXG4gICAgZm9yICh2YXIgcHJvcCBvZiBfX2dldE93blByb3BTeW1ib2xzJDIoYikpIHtcbiAgICAgIGlmIChfX3Byb3BJc0VudW0kMi5jYWxsKGIsIHByb3ApKVxuICAgICAgICBfX2RlZk5vcm1hbFByb3AkMihhLCBwcm9wLCBiW3Byb3BdKTtcbiAgICB9XG4gIHJldHVybiBhO1xufTtcbmNvbnN0IFczTV9BUEkgPSBcImh0dHBzOi8vZXhwbG9yZXItYXBpLndhbGxldGNvbm5lY3QuY29tXCI7XG5jb25zdCBTREtfVFlQRSA9IFwid2NtXCI7XG5jb25zdCBTREtfVkVSU0lPTiA9IGBqcy0ke1wiMi43LjBcIn1gO1xuYXN5bmMgZnVuY3Rpb24gZmV0Y2hMaXN0aW5ncyhlbmRwb2ludCwgcGFyYW1zKSB7XG4gIGNvbnN0IGFsbFBhcmFtcyA9IF9fc3ByZWFkVmFsdWVzJDIoeyBzZGtUeXBlOiBTREtfVFlQRSwgc2RrVmVyc2lvbjogU0RLX1ZFUlNJT04gfSwgcGFyYW1zKTtcbiAgY29uc3QgdXJsID0gbmV3IFVSTChlbmRwb2ludCwgVzNNX0FQSSk7XG4gIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKFwicHJvamVjdElkXCIsIENvbmZpZ0N0cmwuc3RhdGUucHJvamVjdElkKTtcbiAgT2JqZWN0LmVudHJpZXMoYWxsUGFyYW1zKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgU3RyaW5nKHZhbHVlKSk7XG4gICAgfVxuICB9KTtcbiAgY29uc3QgcmVxdWVzdCA9IGF3YWl0IGZldGNoKHVybCk7XG4gIHJldHVybiByZXF1ZXN0Lmpzb24oKTtcbn1cbmNvbnN0IEV4cGxvcmVyVXRpbCA9IHtcbiAgYXN5bmMgZ2V0RGVza3RvcExpc3RpbmdzKHBhcmFtcykge1xuICAgIHJldHVybiBmZXRjaExpc3RpbmdzKFwiL3czbS92MS9nZXREZXNrdG9wTGlzdGluZ3NcIiwgcGFyYW1zKTtcbiAgfSxcbiAgYXN5bmMgZ2V0TW9iaWxlTGlzdGluZ3MocGFyYW1zKSB7XG4gICAgcmV0dXJuIGZldGNoTGlzdGluZ3MoXCIvdzNtL3YxL2dldE1vYmlsZUxpc3RpbmdzXCIsIHBhcmFtcyk7XG4gIH0sXG4gIGFzeW5jIGdldEluamVjdGVkTGlzdGluZ3MocGFyYW1zKSB7XG4gICAgcmV0dXJuIGZldGNoTGlzdGluZ3MoXCIvdzNtL3YxL2dldEluamVjdGVkTGlzdGluZ3NcIiwgcGFyYW1zKTtcbiAgfSxcbiAgYXN5bmMgZ2V0QWxsTGlzdGluZ3MocGFyYW1zKSB7XG4gICAgcmV0dXJuIGZldGNoTGlzdGluZ3MoXCIvdzNtL3YxL2dldEFsbExpc3RpbmdzXCIsIHBhcmFtcyk7XG4gIH0sXG4gIGdldFdhbGxldEltYWdlVXJsKGltYWdlSWQpIHtcbiAgICByZXR1cm4gYCR7VzNNX0FQSX0vdzNtL3YxL2dldFdhbGxldEltYWdlLyR7aW1hZ2VJZH0/cHJvamVjdElkPSR7Q29uZmlnQ3RybC5zdGF0ZS5wcm9qZWN0SWR9JnNka1R5cGU9JHtTREtfVFlQRX0mc2RrVmVyc2lvbj0ke1NES19WRVJTSU9OfWA7XG4gIH0sXG4gIGdldEFzc2V0SW1hZ2VVcmwoaW1hZ2VJZCkge1xuICAgIHJldHVybiBgJHtXM01fQVBJfS93M20vdjEvZ2V0QXNzZXRJbWFnZS8ke2ltYWdlSWR9P3Byb2plY3RJZD0ke0NvbmZpZ0N0cmwuc3RhdGUucHJvamVjdElkfSZzZGtUeXBlPSR7U0RLX1RZUEV9JnNka1ZlcnNpb249JHtTREtfVkVSU0lPTn1gO1xuICB9XG59O1xuXG52YXIgX19kZWZQcm9wJDEgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wU3ltYm9scyQxID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBfX2hhc093blByb3AkMSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19wcm9wSXNFbnVtJDEgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xudmFyIF9fZGVmTm9ybWFsUHJvcCQxID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcCQxKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3NwcmVhZFZhbHVlcyQxID0gKGEsIGIpID0+IHtcbiAgZm9yICh2YXIgcHJvcCBpbiBiIHx8IChiID0ge30pKVxuICAgIGlmIChfX2hhc093blByb3AkMS5jYWxsKGIsIHByb3ApKVxuICAgICAgX19kZWZOb3JtYWxQcm9wJDEoYSwgcHJvcCwgYltwcm9wXSk7XG4gIGlmIChfX2dldE93blByb3BTeW1ib2xzJDEpXG4gICAgZm9yICh2YXIgcHJvcCBvZiBfX2dldE93blByb3BTeW1ib2xzJDEoYikpIHtcbiAgICAgIGlmIChfX3Byb3BJc0VudW0kMS5jYWxsKGIsIHByb3ApKVxuICAgICAgICBfX2RlZk5vcm1hbFByb3AkMShhLCBwcm9wLCBiW3Byb3BdKTtcbiAgICB9XG4gIHJldHVybiBhO1xufTtcbmNvbnN0IGlzTW9iaWxlID0gQ29yZVV0aWwuaXNNb2JpbGUoKTtcbmNvbnN0IHN0YXRlJDMgPSBwcm94eSh7XG4gIHdhbGxldHM6IHsgbGlzdGluZ3M6IFtdLCB0b3RhbDogMCwgcGFnZTogMSB9LFxuICBzZWFyY2g6IHsgbGlzdGluZ3M6IFtdLCB0b3RhbDogMCwgcGFnZTogMSB9LFxuICByZWNvbWVuZGVkV2FsbGV0czogW11cbn0pO1xuY29uc3QgRXhwbG9yZXJDdHJsID0ge1xuICBzdGF0ZTogc3RhdGUkMyxcbiAgYXN5bmMgZ2V0UmVjb21lbmRlZFdhbGxldHMoKSB7XG4gICAgY29uc3QgeyBleHBsb3JlclJlY29tbWVuZGVkV2FsbGV0SWRzLCBleHBsb3JlckV4Y2x1ZGVkV2FsbGV0SWRzIH0gPSBDb25maWdDdHJsLnN0YXRlO1xuICAgIGlmIChleHBsb3JlclJlY29tbWVuZGVkV2FsbGV0SWRzID09PSBcIk5PTkVcIiB8fCBleHBsb3JlckV4Y2x1ZGVkV2FsbGV0SWRzID09PSBcIkFMTFwiICYmICFleHBsb3JlclJlY29tbWVuZGVkV2FsbGV0SWRzKSB7XG4gICAgICByZXR1cm4gc3RhdGUkMy5yZWNvbWVuZGVkV2FsbGV0cztcbiAgICB9XG4gICAgaWYgKENvcmVVdGlsLmlzQXJyYXkoZXhwbG9yZXJSZWNvbW1lbmRlZFdhbGxldElkcykpIHtcbiAgICAgIGNvbnN0IHJlY29tbWVuZGVkSWRzID0gZXhwbG9yZXJSZWNvbW1lbmRlZFdhbGxldElkcy5qb2luKFwiLFwiKTtcbiAgICAgIGNvbnN0IHBhcmFtcyA9IHsgcmVjb21tZW5kZWRJZHMgfTtcbiAgICAgIGNvbnN0IHsgbGlzdGluZ3MgfSA9IGF3YWl0IEV4cGxvcmVyVXRpbC5nZXRBbGxMaXN0aW5ncyhwYXJhbXMpO1xuICAgICAgY29uc3QgbGlzdGluZ3NBcnIgPSBPYmplY3QudmFsdWVzKGxpc3RpbmdzKTtcbiAgICAgIGxpc3RpbmdzQXJyLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgY29uc3QgYUluZGV4ID0gZXhwbG9yZXJSZWNvbW1lbmRlZFdhbGxldElkcy5pbmRleE9mKGEuaWQpO1xuICAgICAgICBjb25zdCBiSW5kZXggPSBleHBsb3JlclJlY29tbWVuZGVkV2FsbGV0SWRzLmluZGV4T2YoYi5pZCk7XG4gICAgICAgIHJldHVybiBhSW5kZXggLSBiSW5kZXg7XG4gICAgICB9KTtcbiAgICAgIHN0YXRlJDMucmVjb21lbmRlZFdhbGxldHMgPSBsaXN0aW5nc0FycjtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgeyBjaGFpbnMsIGlzQXV0aCB9ID0gT3B0aW9uc0N0cmwuc3RhdGU7XG4gICAgICBjb25zdCBjaGFpbnNGaWx0ZXIgPSBjaGFpbnMgPT0gbnVsbCA/IHZvaWQgMCA6IGNoYWlucy5qb2luKFwiLFwiKTtcbiAgICAgIGNvbnN0IGlzRXhjbHVkZWQgPSBDb3JlVXRpbC5pc0FycmF5KGV4cGxvcmVyRXhjbHVkZWRXYWxsZXRJZHMpO1xuICAgICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgICBwYWdlOiAxLFxuICAgICAgICBzZGtzOiBpc0F1dGggPyBcImF1dGhfdjFcIiA6IHZvaWQgMCxcbiAgICAgICAgZW50cmllczogQ29yZVV0aWwuUkVDT01NRU5ERURfV0FMTEVUX0FNT1VOVCxcbiAgICAgICAgY2hhaW5zOiBjaGFpbnNGaWx0ZXIsXG4gICAgICAgIHZlcnNpb246IDIsXG4gICAgICAgIGV4Y2x1ZGVkSWRzOiBpc0V4Y2x1ZGVkID8gZXhwbG9yZXJFeGNsdWRlZFdhbGxldElkcy5qb2luKFwiLFwiKSA6IHZvaWQgMFxuICAgICAgfTtcbiAgICAgIGNvbnN0IHsgbGlzdGluZ3MgfSA9IGlzTW9iaWxlID8gYXdhaXQgRXhwbG9yZXJVdGlsLmdldE1vYmlsZUxpc3RpbmdzKHBhcmFtcykgOiBhd2FpdCBFeHBsb3JlclV0aWwuZ2V0RGVza3RvcExpc3RpbmdzKHBhcmFtcyk7XG4gICAgICBzdGF0ZSQzLnJlY29tZW5kZWRXYWxsZXRzID0gT2JqZWN0LnZhbHVlcyhsaXN0aW5ncyk7XG4gICAgfVxuICAgIHJldHVybiBzdGF0ZSQzLnJlY29tZW5kZWRXYWxsZXRzO1xuICB9LFxuICBhc3luYyBnZXRXYWxsZXRzKHBhcmFtcykge1xuICAgIGNvbnN0IGV4dGVuZGVkUGFyYW1zID0gX19zcHJlYWRWYWx1ZXMkMSh7fSwgcGFyYW1zKTtcbiAgICBjb25zdCB7IGV4cGxvcmVyUmVjb21tZW5kZWRXYWxsZXRJZHMsIGV4cGxvcmVyRXhjbHVkZWRXYWxsZXRJZHMgfSA9IENvbmZpZ0N0cmwuc3RhdGU7XG4gICAgY29uc3QgeyByZWNvbWVuZGVkV2FsbGV0cyB9ID0gc3RhdGUkMztcbiAgICBpZiAoZXhwbG9yZXJFeGNsdWRlZFdhbGxldElkcyA9PT0gXCJBTExcIikge1xuICAgICAgcmV0dXJuIHN0YXRlJDMud2FsbGV0cztcbiAgICB9XG4gICAgaWYgKHJlY29tZW5kZWRXYWxsZXRzLmxlbmd0aCkge1xuICAgICAgZXh0ZW5kZWRQYXJhbXMuZXhjbHVkZWRJZHMgPSByZWNvbWVuZGVkV2FsbGV0cy5tYXAoKHdhbGxldCkgPT4gd2FsbGV0LmlkKS5qb2luKFwiLFwiKTtcbiAgICB9IGVsc2UgaWYgKENvcmVVdGlsLmlzQXJyYXkoZXhwbG9yZXJSZWNvbW1lbmRlZFdhbGxldElkcykpIHtcbiAgICAgIGV4dGVuZGVkUGFyYW1zLmV4Y2x1ZGVkSWRzID0gZXhwbG9yZXJSZWNvbW1lbmRlZFdhbGxldElkcy5qb2luKFwiLFwiKTtcbiAgICB9XG4gICAgaWYgKENvcmVVdGlsLmlzQXJyYXkoZXhwbG9yZXJFeGNsdWRlZFdhbGxldElkcykpIHtcbiAgICAgIGV4dGVuZGVkUGFyYW1zLmV4Y2x1ZGVkSWRzID0gW2V4dGVuZGVkUGFyYW1zLmV4Y2x1ZGVkSWRzLCBleHBsb3JlckV4Y2x1ZGVkV2FsbGV0SWRzXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIixcIik7XG4gICAgfVxuICAgIGlmIChPcHRpb25zQ3RybC5zdGF0ZS5pc0F1dGgpIHtcbiAgICAgIGV4dGVuZGVkUGFyYW1zLnNka3MgPSBcImF1dGhfdjFcIjtcbiAgICB9XG4gICAgY29uc3QgeyBwYWdlLCBzZWFyY2ggfSA9IHBhcmFtcztcbiAgICBjb25zdCB7IGxpc3RpbmdzOiBsaXN0aW5nc09iaiwgdG90YWwgfSA9IGlzTW9iaWxlID8gYXdhaXQgRXhwbG9yZXJVdGlsLmdldE1vYmlsZUxpc3RpbmdzKGV4dGVuZGVkUGFyYW1zKSA6IGF3YWl0IEV4cGxvcmVyVXRpbC5nZXREZXNrdG9wTGlzdGluZ3MoZXh0ZW5kZWRQYXJhbXMpO1xuICAgIGNvbnN0IGxpc3RpbmdzID0gT2JqZWN0LnZhbHVlcyhsaXN0aW5nc09iaik7XG4gICAgY29uc3QgdHlwZSA9IHNlYXJjaCA/IFwic2VhcmNoXCIgOiBcIndhbGxldHNcIjtcbiAgICBzdGF0ZSQzW3R5cGVdID0ge1xuICAgICAgbGlzdGluZ3M6IFsuLi5zdGF0ZSQzW3R5cGVdLmxpc3RpbmdzLCAuLi5saXN0aW5nc10sXG4gICAgICB0b3RhbCxcbiAgICAgIHBhZ2U6IHBhZ2UgIT0gbnVsbCA/IHBhZ2UgOiAxXG4gICAgfTtcbiAgICByZXR1cm4geyBsaXN0aW5ncywgdG90YWwgfTtcbiAgfSxcbiAgZ2V0V2FsbGV0SW1hZ2VVcmwoaW1hZ2VJZCkge1xuICAgIHJldHVybiBFeHBsb3JlclV0aWwuZ2V0V2FsbGV0SW1hZ2VVcmwoaW1hZ2VJZCk7XG4gIH0sXG4gIGdldEFzc2V0SW1hZ2VVcmwoaW1hZ2VJZCkge1xuICAgIHJldHVybiBFeHBsb3JlclV0aWwuZ2V0QXNzZXRJbWFnZVVybChpbWFnZUlkKTtcbiAgfSxcbiAgcmVzZXRTZWFyY2goKSB7XG4gICAgc3RhdGUkMy5zZWFyY2ggPSB7IGxpc3RpbmdzOiBbXSwgdG90YWw6IDAsIHBhZ2U6IDEgfTtcbiAgfVxufTtcblxuY29uc3Qgc3RhdGUkMiA9IHByb3h5KHtcbiAgb3BlbjogZmFsc2Vcbn0pO1xuY29uc3QgTW9kYWxDdHJsID0ge1xuICBzdGF0ZTogc3RhdGUkMixcbiAgc3Vic2NyaWJlKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHN1YnNjcmliZShzdGF0ZSQyLCAoKSA9PiBjYWxsYmFjayhzdGF0ZSQyKSk7XG4gIH0sXG4gIGFzeW5jIG9wZW4ob3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgY29uc3QgeyBpc1VpTG9hZGVkLCBpc0RhdGFMb2FkZWQgfSA9IE9wdGlvbnNDdHJsLnN0YXRlO1xuICAgICAgQ29yZVV0aWwucmVtb3ZlV2FsbGV0Q29ubmVjdERlZXBMaW5rKCk7XG4gICAgICBPcHRpb25zQ3RybC5zZXRXYWxsZXRDb25uZWN0VXJpKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMudXJpKTtcbiAgICAgIE9wdGlvbnNDdHJsLnNldENoYWlucyhvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmNoYWlucyk7XG4gICAgICBSb3V0ZXJDdHJsLnJlc2V0KFwiQ29ubmVjdFdhbGxldFwiKTtcbiAgICAgIGlmIChpc1VpTG9hZGVkICYmIGlzRGF0YUxvYWRlZCkge1xuICAgICAgICBzdGF0ZSQyLm9wZW4gPSB0cnVlO1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICBjb25zdCBvcHRzID0gT3B0aW9uc0N0cmwuc3RhdGU7XG4gICAgICAgICAgaWYgKG9wdHMuaXNVaUxvYWRlZCAmJiBvcHRzLmlzRGF0YUxvYWRlZCkge1xuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgICAgICAgICBzdGF0ZSQyLm9wZW4gPSB0cnVlO1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgMjAwKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgY2xvc2UoKSB7XG4gICAgc3RhdGUkMi5vcGVuID0gZmFsc2U7XG4gIH1cbn07XG5cbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wU3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBfX3Byb3BJc0VudW0gPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fc3ByZWFkVmFsdWVzID0gKGEsIGIpID0+IHtcbiAgZm9yICh2YXIgcHJvcCBpbiBiIHx8IChiID0ge30pKVxuICAgIGlmIChfX2hhc093blByb3AuY2FsbChiLCBwcm9wKSlcbiAgICAgIF9fZGVmTm9ybWFsUHJvcChhLCBwcm9wLCBiW3Byb3BdKTtcbiAgaWYgKF9fZ2V0T3duUHJvcFN5bWJvbHMpXG4gICAgZm9yICh2YXIgcHJvcCBvZiBfX2dldE93blByb3BTeW1ib2xzKGIpKSB7XG4gICAgICBpZiAoX19wcm9wSXNFbnVtLmNhbGwoYiwgcHJvcCkpXG4gICAgICAgIF9fZGVmTm9ybWFsUHJvcChhLCBwcm9wLCBiW3Byb3BdKTtcbiAgICB9XG4gIHJldHVybiBhO1xufTtcbmZ1bmN0aW9uIGlzRGFya01vZGUoKSB7XG4gIHJldHVybiB0eXBlb2YgbWF0Y2hNZWRpYSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBtYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKS5tYXRjaGVzO1xufVxuY29uc3Qgc3RhdGUkMSA9IHByb3h5KHtcbiAgdGhlbWVNb2RlOiBpc0RhcmtNb2RlKCkgPyBcImRhcmtcIiA6IFwibGlnaHRcIlxufSk7XG5jb25zdCBUaGVtZUN0cmwgPSB7XG4gIHN0YXRlOiBzdGF0ZSQxLFxuICBzdWJzY3JpYmUoY2FsbGJhY2spIHtcbiAgICByZXR1cm4gc3Vic2NyaWJlKHN0YXRlJDEsICgpID0+IGNhbGxiYWNrKHN0YXRlJDEpKTtcbiAgfSxcbiAgc2V0VGhlbWVDb25maWcodGhlbWUpIHtcbiAgICBjb25zdCB7IHRoZW1lTW9kZSwgdGhlbWVWYXJpYWJsZXMgfSA9IHRoZW1lO1xuICAgIGlmICh0aGVtZU1vZGUpIHtcbiAgICAgIHN0YXRlJDEudGhlbWVNb2RlID0gdGhlbWVNb2RlO1xuICAgIH1cbiAgICBpZiAodGhlbWVWYXJpYWJsZXMpIHtcbiAgICAgIHN0YXRlJDEudGhlbWVWYXJpYWJsZXMgPSBfX3NwcmVhZFZhbHVlcyh7fSwgdGhlbWVWYXJpYWJsZXMpO1xuICAgIH1cbiAgfVxufTtcblxuY29uc3Qgc3RhdGUgPSBwcm94eSh7XG4gIG9wZW46IGZhbHNlLFxuICBtZXNzYWdlOiBcIlwiLFxuICB2YXJpYW50OiBcInN1Y2Nlc3NcIlxufSk7XG5jb25zdCBUb2FzdEN0cmwgPSB7XG4gIHN0YXRlLFxuICBzdWJzY3JpYmUoY2FsbGJhY2spIHtcbiAgICByZXR1cm4gc3Vic2NyaWJlKHN0YXRlLCAoKSA9PiBjYWxsYmFjayhzdGF0ZSkpO1xuICB9LFxuICBvcGVuVG9hc3QobWVzc2FnZSwgdmFyaWFudCkge1xuICAgIHN0YXRlLm9wZW4gPSB0cnVlO1xuICAgIHN0YXRlLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIHN0YXRlLnZhcmlhbnQgPSB2YXJpYW50O1xuICB9LFxuICBjbG9zZVRvYXN0KCkge1xuICAgIHN0YXRlLm9wZW4gPSBmYWxzZTtcbiAgfVxufTtcblxuZXhwb3J0IHsgQ29uZmlnQ3RybCwgQ29yZVV0aWwsIEV2ZW50c0N0cmwsIEV4cGxvcmVyQ3RybCwgTW9kYWxDdHJsLCBPcHRpb25zQ3RybCwgUm91dGVyQ3RybCwgVGhlbWVDdHJsLCBUb2FzdEN0cmwgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbInByb3h5Iiwic3Vic2NyaWJlIiwic25hcHNob3QiLCJzdGF0ZSQ3IiwiaGlzdG9yeSIsInZpZXciLCJkYXRhIiwiUm91dGVyQ3RybCIsInN0YXRlIiwiY2FsbGJhY2siLCJwdXNoIiwicmVzZXQiLCJyZXBsYWNlIiwibGVuZ3RoIiwiZ29CYWNrIiwicG9wIiwibGFzdCIsInNsaWNlIiwic2V0RGF0YSIsIkNvcmVVdGlsIiwiV0FMTEVUQ09OTkVDVF9ERUVQTElOS19DSE9JQ0UiLCJXQ01fVkVSU0lPTiIsIlJFQ09NTUVOREVEX1dBTExFVF9BTU9VTlQiLCJpc01vYmlsZSIsIkJvb2xlYW4iLCJ3aW5kb3ciLCJtYXRjaE1lZGlhIiwibWF0Y2hlcyIsInRlc3QiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJpc0FuZHJvaWQiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiaXNJb3MiLCJ1YSIsImlzSHR0cFVybCIsInVybCIsInN0YXJ0c1dpdGgiLCJpc0FycmF5IiwiQXJyYXkiLCJpc1RlbGVncmFtIiwiVGVsZWdyYW1XZWJ2aWV3UHJveHkiLCJUZWxlZ3JhbSIsIlRlbGVncmFtV2Vidmlld1Byb3h5UHJvdG8iLCJmb3JtYXROYXRpdmVVcmwiLCJhcHBVcmwiLCJ3Y1VyaSIsIm5hbWUiLCJmb3JtYXRVbml2ZXJzYWxVcmwiLCJzYWZlQXBwVXJsIiwicmVwbGFjZUFsbCIsImVuZHNXaXRoIiwic2V0V2FsbGV0Q29ubmVjdERlZXBMaW5rIiwiZW5jb2RlZFdjVXJsIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZm9ybWF0dGVkVXJpIiwiQnVmZmVyIiwiZnJvbSIsInRvU3RyaW5nIiwiVVJMIiwic2VhcmNoUGFyYW1zIiwic2V0IiwibGluayIsIndhaXQiLCJtaWxpc2Vjb25kcyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsIm9wZW5IcmVmIiwiaHJlZiIsInRhcmdldCIsImFkanVzdGVkVGFyZ2V0Iiwib3BlbiIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJKU09OIiwic3RyaW5naWZ5IiwiZSIsImNvbnNvbGUiLCJpbmZvIiwic2V0V2FsbGV0Q29ubmVjdEFuZHJvaWREZWVwTGluayIsInNwbGl0IiwicmVtb3ZlV2FsbGV0Q29ubmVjdERlZXBMaW5rIiwicmVtb3ZlSXRlbSIsInNldE1vZGFsVmVyc2lvbkluU3RvcmFnZSIsImdldFdhbGxldFJvdXRlckRhdGEiLCJfYSIsInJvdXRlckRhdGEiLCJXYWxsZXQiLCJFcnJvciIsImlzRW5hYmxlZCIsImxvY2F0aW9uIiwiaG9zdG5hbWUiLCJwcm90b2NvbCIsInN0YXRlJDYiLCJlbmFibGVkIiwidXNlclNlc3Npb25JZCIsImV2ZW50cyIsImNvbm5lY3RlZFdhbGxldElkIiwiRXZlbnRzQ3RybCIsImluaXRpYWxpemUiLCJjcnlwdG8iLCJyYW5kb21VVUlEIiwic2V0Q29ubmVjdGVkV2FsbGV0SWQiLCJjbGljayIsImV2ZW50IiwidHlwZSIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJ0cmFjayIsInN0YXRlJDUiLCJjaGFpbnMiLCJ3YWxsZXRDb25uZWN0VXJpIiwiaXNBdXRoIiwiaXNDdXN0b21EZXNrdG9wIiwiaXNDdXN0b21Nb2JpbGUiLCJpc0RhdGFMb2FkZWQiLCJpc1VpTG9hZGVkIiwiT3B0aW9uc0N0cmwiLCJzZXRDaGFpbnMiLCJzZXRXYWxsZXRDb25uZWN0VXJpIiwic2V0SXNDdXN0b21EZXNrdG9wIiwic2V0SXNDdXN0b21Nb2JpbGUiLCJzZXRJc0RhdGFMb2FkZWQiLCJzZXRJc1VpTG9hZGVkIiwic2V0SXNBdXRoIiwic3RhdGUkNCIsInByb2plY3RJZCIsIm1vYmlsZVdhbGxldHMiLCJkZXNrdG9wV2FsbGV0cyIsIndhbGxldEltYWdlcyIsImVuYWJsZUF1dGhNb2RlIiwiZW5hYmxlRXhwbG9yZXIiLCJleHBsb3JlckV4Y2x1ZGVkV2FsbGV0SWRzIiwiZXhwbG9yZXJSZWNvbW1lbmRlZFdhbGxldElkcyIsInRlcm1zT2ZTZXJ2aWNlVXJsIiwicHJpdmFjeVBvbGljeVVybCIsIkNvbmZpZ0N0cmwiLCJzZXRDb25maWciLCJjb25maWciLCJfYiIsIk9iamVjdCIsImFzc2lnbiIsIl9fZGVmUHJvcCQyIiwiZGVmaW5lUHJvcGVydHkiLCJfX2dldE93blByb3BTeW1ib2xzJDIiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJfX2hhc093blByb3AkMiIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiX19wcm9wSXNFbnVtJDIiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIl9fZGVmTm9ybWFsUHJvcCQyIiwib2JqIiwia2V5IiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfX3NwcmVhZFZhbHVlcyQyIiwiYSIsImIiLCJwcm9wIiwiY2FsbCIsIlczTV9BUEkiLCJTREtfVFlQRSIsIlNES19WRVJTSU9OIiwiZmV0Y2hMaXN0aW5ncyIsImVuZHBvaW50IiwicGFyYW1zIiwiYWxsUGFyYW1zIiwic2RrVHlwZSIsInNka1ZlcnNpb24iLCJhcHBlbmQiLCJlbnRyaWVzIiwiZm9yRWFjaCIsIlN0cmluZyIsInJlcXVlc3QiLCJmZXRjaCIsImpzb24iLCJFeHBsb3JlclV0aWwiLCJnZXREZXNrdG9wTGlzdGluZ3MiLCJnZXRNb2JpbGVMaXN0aW5ncyIsImdldEluamVjdGVkTGlzdGluZ3MiLCJnZXRBbGxMaXN0aW5ncyIsImdldFdhbGxldEltYWdlVXJsIiwiaW1hZ2VJZCIsImdldEFzc2V0SW1hZ2VVcmwiLCJfX2RlZlByb3AkMSIsIl9fZ2V0T3duUHJvcFN5bWJvbHMkMSIsIl9faGFzT3duUHJvcCQxIiwiX19wcm9wSXNFbnVtJDEiLCJfX2RlZk5vcm1hbFByb3AkMSIsIl9fc3ByZWFkVmFsdWVzJDEiLCJzdGF0ZSQzIiwid2FsbGV0cyIsImxpc3RpbmdzIiwidG90YWwiLCJwYWdlIiwic2VhcmNoIiwicmVjb21lbmRlZFdhbGxldHMiLCJFeHBsb3JlckN0cmwiLCJnZXRSZWNvbWVuZGVkV2FsbGV0cyIsInJlY29tbWVuZGVkSWRzIiwiam9pbiIsImxpc3RpbmdzQXJyIiwidmFsdWVzIiwic29ydCIsImFJbmRleCIsImluZGV4T2YiLCJpZCIsImJJbmRleCIsImNoYWluc0ZpbHRlciIsImlzRXhjbHVkZWQiLCJzZGtzIiwidmVyc2lvbiIsImV4Y2x1ZGVkSWRzIiwiZ2V0V2FsbGV0cyIsImV4dGVuZGVkUGFyYW1zIiwibWFwIiwid2FsbGV0IiwiZmlsdGVyIiwibGlzdGluZ3NPYmoiLCJyZXNldFNlYXJjaCIsInN0YXRlJDIiLCJNb2RhbEN0cmwiLCJvcHRpb25zIiwidXJpIiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsIm9wdHMiLCJjbGVhckludGVydmFsIiwiY2xvc2UiLCJfX2RlZlByb3AiLCJfX2dldE93blByb3BTeW1ib2xzIiwiX19oYXNPd25Qcm9wIiwiX19wcm9wSXNFbnVtIiwiX19kZWZOb3JtYWxQcm9wIiwiX19zcHJlYWRWYWx1ZXMiLCJpc0RhcmtNb2RlIiwic3RhdGUkMSIsInRoZW1lTW9kZSIsIlRoZW1lQ3RybCIsInNldFRoZW1lQ29uZmlnIiwidGhlbWUiLCJ0aGVtZVZhcmlhYmxlcyIsIm1lc3NhZ2UiLCJ2YXJpYW50IiwiVG9hc3RDdHJsIiwib3BlblRvYXN0IiwiY2xvc2VUb2FzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/modal-core/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/modal/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@walletconnect/modal/dist/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletConnectModal: () => (/* binding */ WalletConnectModal)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/modal-core */ \"(ssr)/./node_modules/@walletconnect/modal-core/dist/index.js\");\n\nclass WalletConnectModal {\n    constructor(config){\n        this.openModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.open;\n        this.closeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.close;\n        this.subscribeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.subscribe;\n        this.setTheme = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig;\n        _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig(config);\n        _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ConfigCtrl.setConfig(config);\n        this.initUi();\n    }\n    async initUi() {\n        if (false) {}\n    }\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRjtBQUUxRixNQUFNSTtJQUNKQyxZQUFZQyxNQUFNLENBQUU7UUFDbEIsSUFBSSxDQUFDQyxTQUFTLEdBQUdQLGdFQUFTQSxDQUFDUSxJQUFJO1FBQy9CLElBQUksQ0FBQ0MsVUFBVSxHQUFHVCxnRUFBU0EsQ0FBQ1UsS0FBSztRQUNqQyxJQUFJLENBQUNDLGNBQWMsR0FBR1gsZ0VBQVNBLENBQUNZLFNBQVM7UUFDekMsSUFBSSxDQUFDQyxRQUFRLEdBQUdaLGdFQUFTQSxDQUFDYSxjQUFjO1FBQ3hDYixnRUFBU0EsQ0FBQ2EsY0FBYyxDQUFDUjtRQUN6QkosaUVBQVVBLENBQUNhLFNBQVMsQ0FBQ1Q7UUFDckIsSUFBSSxDQUFDVSxNQUFNO0lBQ2I7SUFDQSxNQUFNQSxTQUFTO1FBQ2IsSUFBSSxLQUE2QixFQUFFLEVBS2xDO0lBQ0g7QUFDRjtBQUU4QixDQUM5QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsL2Rpc3QvaW5kZXguanM/ZGUxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2RhbEN0cmwsIFRoZW1lQ3RybCwgQ29uZmlnQ3RybCwgT3B0aW9uc0N0cmwgfSBmcm9tICdAd2FsbGV0Y29ubmVjdC9tb2RhbC1jb3JlJztcblxuY2xhc3MgV2FsbGV0Q29ubmVjdE1vZGFsIHtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgdGhpcy5vcGVuTW9kYWwgPSBNb2RhbEN0cmwub3BlbjtcbiAgICB0aGlzLmNsb3NlTW9kYWwgPSBNb2RhbEN0cmwuY2xvc2U7XG4gICAgdGhpcy5zdWJzY3JpYmVNb2RhbCA9IE1vZGFsQ3RybC5zdWJzY3JpYmU7XG4gICAgdGhpcy5zZXRUaGVtZSA9IFRoZW1lQ3RybC5zZXRUaGVtZUNvbmZpZztcbiAgICBUaGVtZUN0cmwuc2V0VGhlbWVDb25maWcoY29uZmlnKTtcbiAgICBDb25maWdDdHJsLnNldENvbmZpZyhjb25maWcpO1xuICAgIHRoaXMuaW5pdFVpKCk7XG4gIH1cbiAgYXN5bmMgaW5pdFVpKCkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBhd2FpdCBpbXBvcnQoJ0B3YWxsZXRjb25uZWN0L21vZGFsLXVpJyk7XG4gICAgICBjb25zdCBtb2RhbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ3Y20tbW9kYWxcIik7XG4gICAgICBkb2N1bWVudC5ib2R5Lmluc2VydEFkamFjZW50RWxlbWVudChcImJlZm9yZWVuZFwiLCBtb2RhbCk7XG4gICAgICBPcHRpb25zQ3RybC5zZXRJc1VpTG9hZGVkKHRydWUpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgeyBXYWxsZXRDb25uZWN0TW9kYWwgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbIk1vZGFsQ3RybCIsIlRoZW1lQ3RybCIsIkNvbmZpZ0N0cmwiLCJPcHRpb25zQ3RybCIsIldhbGxldENvbm5lY3RNb2RhbCIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwib3Blbk1vZGFsIiwib3BlbiIsImNsb3NlTW9kYWwiLCJjbG9zZSIsInN1YnNjcmliZU1vZGFsIiwic3Vic2NyaWJlIiwic2V0VGhlbWUiLCJzZXRUaGVtZUNvbmZpZyIsInNldENvbmZpZyIsImluaXRVaSIsIm1vZGFsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYm9keSIsImluc2VydEFkamFjZW50RWxlbWVudCIsInNldElzVWlMb2FkZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/modal/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vendor/base-x.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/vendor/base-x.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js\");\n\n\nclass Encoder {\n    constructor(name, prefix, baseEncode){\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        } else {\n            throw Error(\"Unknown type, must be binary type\");\n        }\n    }\n}\nclass Decoder {\n    constructor(name, prefix, baseDecode){\n        this.name = name;\n        this.prefix = prefix;\n        if (prefix.codePointAt(0) === undefined) {\n            throw new Error(\"Invalid prefix character\");\n        }\n        this.prefixCodePoint = prefix.codePointAt(0);\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === \"string\") {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        } else {\n            throw Error(\"Can only multibase decode strings\");\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    constructor(decoders){\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder) {\n            return decoder.decode(input);\n        } else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nconst or = (left, right)=>new ComposedDecoder({\n        ...left.decoders || {\n            [left.prefix]: left\n        },\n        ...right.decoders || {\n            [right.prefix]: right\n        }\n    });\nclass Codec {\n    constructor(name, prefix, baseEncode, baseDecode){\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nconst from = ({ name, prefix, encode, decode })=>new Codec(name, prefix, encode, decode);\nconst baseX = ({ prefix, name, alphabet })=>{\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(decode(text))\n    });\n};\nconst decode = (string, alphabet, bitsPerChar, name)=>{\n    const codes = {};\n    for(let i = 0; i < alphabet.length; ++i){\n        codes[alphabet[i]] = i;\n    }\n    let end = string.length;\n    while(string[end - 1] === \"=\"){\n        --end;\n    }\n    const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n    let bits = 0;\n    let buffer = 0;\n    let written = 0;\n    for(let i = 0; i < end; ++i){\n        const value = codes[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        buffer = buffer << bitsPerChar | value;\n        bits += bitsPerChar;\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 255 & buffer >> bits;\n        }\n    }\n    if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n        throw new SyntaxError(\"Unexpected end of data\");\n    }\n    return out;\n};\nconst encode = (data, alphabet, bitsPerChar)=>{\n    const pad = alphabet[alphabet.length - 1] === \"=\";\n    const mask = (1 << bitsPerChar) - 1;\n    let out = \"\";\n    let bits = 0;\n    let buffer = 0;\n    for(let i = 0; i < data.length; ++i){\n        buffer = buffer << 8 | data[i];\n        bits += 8;\n        while(bits > bitsPerChar){\n            bits -= bitsPerChar;\n            out += alphabet[mask & buffer >> bits];\n        }\n    }\n    if (bits) {\n        out += alphabet[mask & buffer << bitsPerChar - bits];\n    }\n    if (pad) {\n        while(out.length * bitsPerChar & 7){\n            out += \"=\";\n        }\n    }\n    return out;\n};\nconst rfc4648 = ({ name, prefix, bitsPerChar, alphabet })=>{\n    return from({\n        prefix,\n        name,\n        encode (input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode (input) {\n            return decode(input, alphabet, bitsPerChar, name);\n        }\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base10.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base10.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base10: () => (/* binding */ base10)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base10 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"9\",\n    name: \"base10\",\n    alphabet: \"0123456789\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTEwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQzNCLE1BQU1DLFNBQVNELCtDQUFLQSxDQUFDO0lBQzFCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtBQUNaLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UxMC5qcz8zYTE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMTAgPSBiYXNlWCh7XG4gIHByZWZpeDogJzknLFxuICBuYW1lOiAnYmFzZTEwJyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5J1xufSk7Il0sIm5hbWVzIjpbImJhc2VYIiwiYmFzZTEwIiwicHJlZml4IiwibmFtZSIsImFscGhhYmV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base10.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base16.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base16.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base16: () => (/* binding */ base16),\n/* harmony export */   base16upper: () => (/* binding */ base16upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base16 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"f\",\n    name: \"base16\",\n    alphabet: \"0123456789abcdef\",\n    bitsPerChar: 4\n});\nconst base16upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"F\",\n    name: \"base16upper\",\n    alphabet: \"0123456789ABCDEF\",\n    bitsPerChar: 4\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTE2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvQztBQUM3QixNQUFNQyxTQUFTRCxpREFBT0EsQ0FBQztJQUM1QkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNQyxjQUFjTixpREFBT0EsQ0FBQztJQUNqQ0UsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UxNi5qcz82MDQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UxNiA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdmJyxcbiAgbmFtZTogJ2Jhc2UxNicsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OWFiY2RlZicsXG4gIGJpdHNQZXJDaGFyOiA0XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMTZ1cHBlciA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdGJyxcbiAgbmFtZTogJ2Jhc2UxNnVwcGVyJyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGJyxcbiAgYml0c1BlckNoYXI6IDRcbn0pOyJdLCJuYW1lcyI6WyJyZmM0NjQ4IiwiYmFzZTE2IiwicHJlZml4IiwibmFtZSIsImFscGhhYmV0IiwiYml0c1BlckNoYXIiLCJiYXNlMTZ1cHBlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base16.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base2.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base2.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base2: () => (/* binding */ base2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base2 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"0\",\n    name: \"base2\",\n    alphabet: \"01\",\n    bitsPerChar: 1\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsTUFBTUMsUUFBUUQsaURBQU9BLENBQUM7SUFDM0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNlcy9iYXNlMi5qcz9kNTcyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJzAnLFxuICBuYW1lOiAnYmFzZTInLFxuICBhbHBoYWJldDogJzAxJyxcbiAgYml0c1BlckNoYXI6IDFcbn0pOyJdLCJuYW1lcyI6WyJyZmM0NjQ4IiwiYmFzZTIiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base256emoji.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base256emoji.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base256emoji: () => (/* binding */ base256emoji)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst alphabet = Array.from(\"\\uD83D\\uDE80\\uD83E\\uDE90☄\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09☀\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02❤\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09☺\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E✌✨\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D❣\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33✋\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13⭐✅\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6✔\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90☹\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20☝\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B⚽\\uD83E\\uDD19☕\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81⚡\\uD83C\\uDF1E\\uD83C\\uDF88❌✊\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C✈\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74▶➡❓\\uD83D\\uDC8E\\uD83D\\uDCB8⬇\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A⚠\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37☎\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51❄\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42\");\nconst alphabetBytesToChars = alphabet.reduce((p, c, i)=>{\n    p[i] = c;\n    return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i)=>{\n    p[c.codePointAt(0)] = i;\n    return p;\n}, []);\nfunction encode(data) {\n    return data.reduce((p, c)=>{\n        p += alphabetBytesToChars[c];\n        return p;\n    }, \"\");\n}\nfunction decode(str) {\n    const byts = [];\n    for (const char of str){\n        const byt = alphabetCharsToBytes[char.codePointAt(0)];\n        if (byt === undefined) {\n            throw new Error(`Non-base256emoji character: ${char}`);\n        }\n        byts.push(byt);\n    }\n    return new Uint8Array(byts);\n}\nconst base256emoji = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n    prefix: \"\\uD83D\\uDE80\",\n    name: \"base256emoji\",\n    encode,\n    decode\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTI1NmVtb2ppLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlDO0FBQ2pDLE1BQU1DLFdBQVdDLE1BQU1GLElBQUksQ0FBQztBQUM1QixNQUFNRyx1QkFBdUJGLFNBQVNHLE1BQU0sQ0FBQyxDQUFDQyxHQUFHQyxHQUFHQztJQUNsREYsQ0FBQyxDQUFDRSxFQUFFLEdBQUdEO0lBQ1AsT0FBT0Q7QUFDVCxHQUFHLEVBQUU7QUFDTCxNQUFNRyx1QkFBdUJQLFNBQVNHLE1BQU0sQ0FBQyxDQUFDQyxHQUFHQyxHQUFHQztJQUNsREYsQ0FBQyxDQUFDQyxFQUFFRyxXQUFXLENBQUMsR0FBRyxHQUFHRjtJQUN0QixPQUFPRjtBQUNULEdBQUcsRUFBRTtBQUNMLFNBQVNLLE9BQU9DLElBQUk7SUFDbEIsT0FBT0EsS0FBS1AsTUFBTSxDQUFDLENBQUNDLEdBQUdDO1FBQ3JCRCxLQUFLRixvQkFBb0IsQ0FBQ0csRUFBRTtRQUM1QixPQUFPRDtJQUNULEdBQUc7QUFDTDtBQUNBLFNBQVNPLE9BQU9DLEdBQUc7SUFDakIsTUFBTUMsT0FBTyxFQUFFO0lBQ2YsS0FBSyxNQUFNQyxRQUFRRixJQUFLO1FBQ3RCLE1BQU1HLE1BQU1SLG9CQUFvQixDQUFDTyxLQUFLTixXQUFXLENBQUMsR0FBRztRQUNyRCxJQUFJTyxRQUFRQyxXQUFXO1lBQ3JCLE1BQU0sSUFBSUMsTUFBTSxDQUFDLDRCQUE0QixFQUFHSCxLQUFNLENBQUM7UUFDekQ7UUFDQUQsS0FBS0ssSUFBSSxDQUFDSDtJQUNaO0lBQ0EsT0FBTyxJQUFJSSxXQUFXTjtBQUN4QjtBQUNPLE1BQU1PLGVBQWVyQiw4Q0FBSUEsQ0FBQztJQUMvQnNCLFFBQVE7SUFDUkMsTUFBTTtJQUNOYjtJQUNBRTtBQUNGLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UyNTZlbW9qaS5qcz8yMTA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb20gfSBmcm9tICcuL2Jhc2UuanMnO1xuY29uc3QgYWxwaGFiZXQgPSBBcnJheS5mcm9tKCdcXHVEODNEXFx1REU4MFxcdUQ4M0VcXHVERTkwXFx1MjYwNFxcdUQ4M0RcXHVERUYwXFx1RDgzQ1xcdURGMENcXHVEODNDXFx1REYxMVxcdUQ4M0NcXHVERjEyXFx1RDgzQ1xcdURGMTNcXHVEODNDXFx1REYxNFxcdUQ4M0NcXHVERjE1XFx1RDgzQ1xcdURGMTZcXHVEODNDXFx1REYxN1xcdUQ4M0NcXHVERjE4XFx1RDgzQ1xcdURGMERcXHVEODNDXFx1REYwRlxcdUQ4M0NcXHVERjBFXFx1RDgzRFxcdURDMDlcXHUyNjAwXFx1RDgzRFxcdURDQkJcXHVEODNEXFx1RERBNVxcdUQ4M0RcXHVEQ0JFXFx1RDgzRFxcdURDQkZcXHVEODNEXFx1REUwMlxcdTI3NjRcXHVEODNEXFx1REUwRFxcdUQ4M0VcXHVERDIzXFx1RDgzRFxcdURFMEFcXHVEODNEXFx1REU0RlxcdUQ4M0RcXHVEQzk1XFx1RDgzRFxcdURFMkRcXHVEODNEXFx1REUxOFxcdUQ4M0RcXHVEQzREXFx1RDgzRFxcdURFMDVcXHVEODNEXFx1REM0RlxcdUQ4M0RcXHVERTAxXFx1RDgzRFxcdUREMjVcXHVEODNFXFx1REQ3MFxcdUQ4M0RcXHVEQzk0XFx1RDgzRFxcdURDOTZcXHVEODNEXFx1REM5OVxcdUQ4M0RcXHVERTIyXFx1RDgzRVxcdUREMTRcXHVEODNEXFx1REUwNlxcdUQ4M0RcXHVERTQ0XFx1RDgzRFxcdURDQUFcXHVEODNEXFx1REUwOVxcdTI2M0FcXHVEODNEXFx1REM0Q1xcdUQ4M0VcXHVERDE3XFx1RDgzRFxcdURDOUNcXHVEODNEXFx1REUxNFxcdUQ4M0RcXHVERTBFXFx1RDgzRFxcdURFMDdcXHVEODNDXFx1REYzOVxcdUQ4M0VcXHVERDI2XFx1RDgzQ1xcdURGODlcXHVEODNEXFx1REM5RVxcdTI3MENcXHUyNzI4XFx1RDgzRVxcdUREMzdcXHVEODNEXFx1REUzMVxcdUQ4M0RcXHVERTBDXFx1RDgzQ1xcdURGMzhcXHVEODNEXFx1REU0Q1xcdUQ4M0RcXHVERTBCXFx1RDgzRFxcdURDOTdcXHVEODNEXFx1REM5QVxcdUQ4M0RcXHVERTBGXFx1RDgzRFxcdURDOUJcXHVEODNEXFx1REU0MlxcdUQ4M0RcXHVEQzkzXFx1RDgzRVxcdUREMjlcXHVEODNEXFx1REUwNFxcdUQ4M0RcXHVERTAwXFx1RDgzRFxcdUREQTRcXHVEODNEXFx1REUwM1xcdUQ4M0RcXHVEQ0FGXFx1RDgzRFxcdURFNDhcXHVEODNEXFx1REM0N1xcdUQ4M0NcXHVERkI2XFx1RDgzRFxcdURFMTJcXHVEODNFXFx1REQyRFxcdTI3NjNcXHVEODNEXFx1REUxQ1xcdUQ4M0RcXHVEQzhCXFx1RDgzRFxcdURDNDBcXHVEODNEXFx1REUyQVxcdUQ4M0RcXHVERTExXFx1RDgzRFxcdURDQTVcXHVEODNEXFx1REU0QlxcdUQ4M0RcXHVERTFFXFx1RDgzRFxcdURFMjlcXHVEODNEXFx1REUyMVxcdUQ4M0VcXHVERDJBXFx1RDgzRFxcdURDNEFcXHVEODNFXFx1REQ3M1xcdUQ4M0RcXHVERTI1XFx1RDgzRVxcdUREMjRcXHVEODNEXFx1REM0OVxcdUQ4M0RcXHVEQzgzXFx1RDgzRFxcdURFMzNcXHUyNzBCXFx1RDgzRFxcdURFMUFcXHVEODNEXFx1REUxRFxcdUQ4M0RcXHVERTM0XFx1RDgzQ1xcdURGMUZcXHVEODNEXFx1REUyQ1xcdUQ4M0RcXHVERTQzXFx1RDgzQ1xcdURGNDBcXHVEODNDXFx1REYzN1xcdUQ4M0RcXHVERTNCXFx1RDgzRFxcdURFMTNcXHUyQjUwXFx1MjcwNVxcdUQ4M0VcXHVERDdBXFx1RDgzQ1xcdURGMDhcXHVEODNEXFx1REUwOFxcdUQ4M0VcXHVERDE4XFx1RDgzRFxcdURDQTZcXHUyNzE0XFx1RDgzRFxcdURFMjNcXHVEODNDXFx1REZDM1xcdUQ4M0RcXHVEQzkwXFx1MjYzOVxcdUQ4M0NcXHVERjhBXFx1RDgzRFxcdURDOThcXHVEODNEXFx1REUyMFxcdTI2MURcXHVEODNEXFx1REUxNVxcdUQ4M0NcXHVERjNBXFx1RDgzQ1xcdURGODJcXHVEODNDXFx1REYzQlxcdUQ4M0RcXHVERTEwXFx1RDgzRFxcdUREOTVcXHVEODNEXFx1REM5RFxcdUQ4M0RcXHVERTRBXFx1RDgzRFxcdURFMzlcXHVEODNEXFx1RERFM1xcdUQ4M0RcXHVEQ0FCXFx1RDgzRFxcdURDODBcXHVEODNEXFx1REM1MVxcdUQ4M0NcXHVERkI1XFx1RDgzRVxcdUREMUVcXHVEODNEXFx1REUxQlxcdUQ4M0RcXHVERDM0XFx1RDgzRFxcdURFMjRcXHVEODNDXFx1REYzQ1xcdUQ4M0RcXHVERTJCXFx1MjZCRFxcdUQ4M0VcXHVERDE5XFx1MjYxNVxcdUQ4M0NcXHVERkM2XFx1RDgzRVxcdUREMkJcXHVEODNEXFx1REM0OFxcdUQ4M0RcXHVERTJFXFx1RDgzRFxcdURFNDZcXHVEODNDXFx1REY3QlxcdUQ4M0NcXHVERjQzXFx1RDgzRFxcdURDMzZcXHVEODNEXFx1REM4MVxcdUQ4M0RcXHVERTMyXFx1RDgzQ1xcdURGM0ZcXHVEODNFXFx1RERFMVxcdUQ4M0NcXHVERjgxXFx1MjZBMVxcdUQ4M0NcXHVERjFFXFx1RDgzQ1xcdURGODhcXHUyNzRDXFx1MjcwQVxcdUQ4M0RcXHVEQzRCXFx1RDgzRFxcdURFMzBcXHVEODNFXFx1REQyOFxcdUQ4M0RcXHVERTM2XFx1RDgzRVxcdUREMURcXHVEODNEXFx1REVCNlxcdUQ4M0RcXHVEQ0IwXFx1RDgzQ1xcdURGNTNcXHVEODNEXFx1RENBMlxcdUQ4M0VcXHVERDFGXFx1RDgzRFxcdURFNDFcXHVEODNEXFx1REVBOFxcdUQ4M0RcXHVEQ0E4XFx1RDgzRVxcdUREMkNcXHUyNzA4XFx1RDgzQ1xcdURGODBcXHVEODNDXFx1REY3QVxcdUQ4M0VcXHVERDEzXFx1RDgzRFxcdURFMTlcXHVEODNEXFx1REM5RlxcdUQ4M0NcXHVERjMxXFx1RDgzRFxcdURFMTZcXHVEODNEXFx1REM3NlxcdUQ4M0VcXHVERDc0XFx1MjVCNlxcdTI3QTFcXHUyNzUzXFx1RDgzRFxcdURDOEVcXHVEODNEXFx1RENCOFxcdTJCMDdcXHVEODNEXFx1REUyOFxcdUQ4M0NcXHVERjFBXFx1RDgzRVxcdUREOEJcXHVEODNEXFx1REUzN1xcdUQ4M0RcXHVERDdBXFx1MjZBMFxcdUQ4M0RcXHVERTQ1XFx1RDgzRFxcdURFMUZcXHVEODNEXFx1REUzNVxcdUQ4M0RcXHVEQzRFXFx1RDgzRVxcdUREMzJcXHVEODNFXFx1REQyMFxcdUQ4M0VcXHVERDI3XFx1RDgzRFxcdURDQ0NcXHVEODNEXFx1REQzNVxcdUQ4M0RcXHVEQzg1XFx1RDgzRVxcdURERDBcXHVEODNEXFx1REMzRVxcdUQ4M0NcXHVERjUyXFx1RDgzRFxcdURFMTdcXHVEODNFXFx1REQxMVxcdUQ4M0NcXHVERjBBXFx1RDgzRVxcdUREMkZcXHVEODNEXFx1REMzN1xcdTI2MEVcXHVEODNEXFx1RENBN1xcdUQ4M0RcXHVERTJGXFx1RDgzRFxcdURDODZcXHVEODNEXFx1REM0NlxcdUQ4M0NcXHVERkE0XFx1RDgzRFxcdURFNDdcXHVEODNDXFx1REY1MVxcdTI3NDRcXHVEODNDXFx1REYzNFxcdUQ4M0RcXHVEQ0EzXFx1RDgzRFxcdURDMzhcXHVEODNEXFx1REM4Q1xcdUQ4M0RcXHVEQ0NEXFx1RDgzRVxcdURENDBcXHVEODNFXFx1REQyMlxcdUQ4M0RcXHVEQzQ1XFx1RDgzRFxcdURDQTFcXHVEODNEXFx1RENBOVxcdUQ4M0RcXHVEQzUwXFx1RDgzRFxcdURDRjhcXHVEODNEXFx1REM3QlxcdUQ4M0VcXHVERDEwXFx1RDgzRVxcdUREMkVcXHVEODNDXFx1REZCQ1xcdUQ4M0VcXHVERDc1XFx1RDgzRFxcdURFQTlcXHVEODNDXFx1REY0RVxcdUQ4M0NcXHVERjRBXFx1RDgzRFxcdURDN0NcXHVEODNEXFx1REM4RFxcdUQ4M0RcXHVEQ0UzXFx1RDgzRVxcdURENDInKTtcbmNvbnN0IGFscGhhYmV0Qnl0ZXNUb0NoYXJzID0gYWxwaGFiZXQucmVkdWNlKChwLCBjLCBpKSA9PiB7XG4gIHBbaV0gPSBjO1xuICByZXR1cm4gcDtcbn0sIFtdKTtcbmNvbnN0IGFscGhhYmV0Q2hhcnNUb0J5dGVzID0gYWxwaGFiZXQucmVkdWNlKChwLCBjLCBpKSA9PiB7XG4gIHBbYy5jb2RlUG9pbnRBdCgwKV0gPSBpO1xuICByZXR1cm4gcDtcbn0sIFtdKTtcbmZ1bmN0aW9uIGVuY29kZShkYXRhKSB7XG4gIHJldHVybiBkYXRhLnJlZHVjZSgocCwgYykgPT4ge1xuICAgIHAgKz0gYWxwaGFiZXRCeXRlc1RvQ2hhcnNbY107XG4gICAgcmV0dXJuIHA7XG4gIH0sICcnKTtcbn1cbmZ1bmN0aW9uIGRlY29kZShzdHIpIHtcbiAgY29uc3QgYnl0cyA9IFtdO1xuICBmb3IgKGNvbnN0IGNoYXIgb2Ygc3RyKSB7XG4gICAgY29uc3QgYnl0ID0gYWxwaGFiZXRDaGFyc1RvQnl0ZXNbY2hhci5jb2RlUG9pbnRBdCgwKV07XG4gICAgaWYgKGJ5dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vbi1iYXNlMjU2ZW1vamkgY2hhcmFjdGVyOiAkeyBjaGFyIH1gKTtcbiAgICB9XG4gICAgYnl0cy5wdXNoKGJ5dCk7XG4gIH1cbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ5dHMpO1xufVxuZXhwb3J0IGNvbnN0IGJhc2UyNTZlbW9qaSA9IGZyb20oe1xuICBwcmVmaXg6ICdcXHVEODNEXFx1REU4MCcsXG4gIG5hbWU6ICdiYXNlMjU2ZW1vamknLFxuICBlbmNvZGUsXG4gIGRlY29kZVxufSk7Il0sIm5hbWVzIjpbImZyb20iLCJhbHBoYWJldCIsIkFycmF5IiwiYWxwaGFiZXRCeXRlc1RvQ2hhcnMiLCJyZWR1Y2UiLCJwIiwiYyIsImkiLCJhbHBoYWJldENoYXJzVG9CeXRlcyIsImNvZGVQb2ludEF0IiwiZW5jb2RlIiwiZGF0YSIsImRlY29kZSIsInN0ciIsImJ5dHMiLCJjaGFyIiwiYnl0IiwidW5kZWZpbmVkIiwiRXJyb3IiLCJwdXNoIiwiVWludDhBcnJheSIsImJhc2UyNTZlbW9qaSIsInByZWZpeCIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base256emoji.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base32.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base32.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"b\",\n    name: \"base32\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"B\",\n    name: \"base32upper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"c\",\n    name: \"base32pad\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"C\",\n    name: \"base32padupper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"v\",\n    name: \"base32hex\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"V\",\n    name: \"base32hexupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"t\",\n    name: \"base32hexpad\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"T\",\n    name: \"base32hexpadupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"h\",\n    name: \"base32z\",\n    alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n    bitsPerChar: 5\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTMyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDN0IsTUFBTUMsU0FBU0QsaURBQU9BLENBQUM7SUFDNUJFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTUMsY0FBY04saURBQU9BLENBQUM7SUFDakNFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTUUsWUFBWVAsaURBQU9BLENBQUM7SUFDL0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTUcsaUJBQWlCUixpREFBT0EsQ0FBQztJQUNwQ0UsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNSSxZQUFZVCxpREFBT0EsQ0FBQztJQUMvQkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNSyxpQkFBaUJWLGlEQUFPQSxDQUFDO0lBQ3BDRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1NLGVBQWVYLGlEQUFPQSxDQUFDO0lBQ2xDRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1PLG9CQUFvQlosaURBQU9BLENBQUM7SUFDdkNFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTVEsVUFBVWIsaURBQU9BLENBQUM7SUFDN0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNlcy9iYXNlMzIuanM/ZWRlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlMzIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnYicsXG4gIG5hbWU6ICdiYXNlMzInLFxuICBhbHBoYWJldDogJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MjM0NTY3JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ0InLFxuICBuYW1lOiAnYmFzZTMydXBwZXInLFxuICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdjJyxcbiAgbmFtZTogJ2Jhc2UzMnBhZCcsXG4gIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1Njc9JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnBhZHVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ0MnLFxuICBuYW1lOiAnYmFzZTMycGFkdXBwZXInLFxuICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3PScsXG4gIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJoZXggPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAndicsXG4gIG5hbWU6ICdiYXNlMzJoZXgnLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ1YnLFxuICBuYW1lOiAnYmFzZTMyaGV4dXBwZXInLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWJyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHBhZCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICd0JyxcbiAgbmFtZTogJ2Jhc2UzMmhleHBhZCcsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXY9JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHBhZHVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ1QnLFxuICBuYW1lOiAnYmFzZTMyaGV4cGFkdXBwZXInLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWPScsXG4gIGJpdHNQZXJDaGFyOiA1XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlMzJ6ID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ2gnLFxuICBuYW1lOiAnYmFzZTMyeicsXG4gIGFscGhhYmV0OiAneWJuZHJmZzhlamttY3BxeG90MXV3aXN6YTM0NWg3NjknLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7Il0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlMzIiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciIsImJhc2UzMnVwcGVyIiwiYmFzZTMycGFkIiwiYmFzZTMycGFkdXBwZXIiLCJiYXNlMzJoZXgiLCJiYXNlMzJoZXh1cHBlciIsImJhc2UzMmhleHBhZCIsImJhc2UzMmhleHBhZHVwcGVyIiwiYmFzZTMyeiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base36.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base36.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"k\",\n    name: \"base36\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\"\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"K\",\n    name: \"base36upper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTM2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixNQUFNQyxTQUFTRCwrQ0FBS0EsQ0FBQztJQUMxQkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7QUFDWixHQUFHO0FBQ0ksTUFBTUMsY0FBY0wsK0NBQUtBLENBQUM7SUFDL0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0FBQ1osR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTM2LmpzPzM3YWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzNiA9IGJhc2VYKHtcbiAgcHJlZml4OiAnaycsXG4gIG5hbWU6ICdiYXNlMzYnLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzNnVwcGVyID0gYmFzZVgoe1xuICBwcmVmaXg6ICdLJyxcbiAgbmFtZTogJ2Jhc2UzNnVwcGVyJyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVonXG59KTsiXSwibmFtZXMiOlsiYmFzZVgiLCJiYXNlMzYiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiYXNlMzZ1cHBlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base58.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base58.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: \"base58btc\",\n    prefix: \"z\",\n    alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: \"base58flickr\",\n    prefix: \"Z\",\n    alphabet: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTU4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUMzQixNQUFNQyxZQUFZRCwrQ0FBS0EsQ0FBQztJQUM3QkUsTUFBTTtJQUNOQyxRQUFRO0lBQ1JDLFVBQVU7QUFDWixHQUFHO0FBQ0ksTUFBTUMsZUFBZUwsK0NBQUtBLENBQUM7SUFDaENFLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxVQUFVO0FBQ1osR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTU4LmpzPzc1MTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGJ0YyA9IGJhc2VYKHtcbiAgbmFtZTogJ2Jhc2U1OGJ0YycsXG4gIHByZWZpeDogJ3onLFxuICBhbHBoYWJldDogJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNThmbGlja3IgPSBiYXNlWCh7XG4gIG5hbWU6ICdiYXNlNThmbGlja3InLFxuICBwcmVmaXg6ICdaJyxcbiAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ1xufSk7Il0sIm5hbWVzIjpbImJhc2VYIiwiYmFzZTU4YnRjIiwibmFtZSIsInByZWZpeCIsImFscGhhYmV0IiwiYmFzZTU4ZmxpY2tyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base64.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base64.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"m\",\n    name: \"base64\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    bitsPerChar: 6\n});\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"M\",\n    name: \"base64pad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n    bitsPerChar: 6\n});\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"u\",\n    name: \"base64url\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bitsPerChar: 6\n});\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"U\",\n    name: \"base64urlpad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n    bitsPerChar: 6\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLFNBQVNELGlEQUFPQSxDQUFDO0lBQzVCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1DLFlBQVlOLGlEQUFPQSxDQUFDO0lBQy9CRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1FLFlBQVlQLGlEQUFPQSxDQUFDO0lBQy9CRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1HLGVBQWVSLGlEQUFPQSxDQUFDO0lBQ2xDRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTY0LmpzPzFjYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTY0ID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ20nLFxuICBuYW1lOiAnYmFzZTY0JyxcbiAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJyxcbiAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHBhZCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdNJyxcbiAgbmFtZTogJ2Jhc2U2NHBhZCcsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0nLFxuICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0dXJsID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ3UnLFxuICBuYW1lOiAnYmFzZTY0dXJsJyxcbiAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OS1fJyxcbiAgYml0c1BlckNoYXI6IDZcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U2NHVybHBhZCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdVJyxcbiAgbmFtZTogJ2Jhc2U2NHVybHBhZCcsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXz0nLFxuICBiaXRzUGVyQ2hhcjogNlxufSk7Il0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlNjQiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciIsImJhc2U2NHBhZCIsImJhc2U2NHVybCIsImJhc2U2NHVybHBhZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base8.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base8.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base8: () => (/* binding */ base8)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base8 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"7\",\n    name: \"base8\",\n    alphabet: \"01234567\",\n    bitsPerChar: 3\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsTUFBTUMsUUFBUUQsaURBQU9BLENBQUM7SUFDM0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNlcy9iYXNlOC5qcz8xOTc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2U4ID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJzcnLFxuICBuYW1lOiAnYmFzZTgnLFxuICBhbHBoYWJldDogJzAxMjM0NTY3JyxcbiAgYml0c1BlckNoYXI6IDNcbn0pOyJdLCJuYW1lcyI6WyJyZmM0NjQ4IiwiYmFzZTgiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/identity.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/identity.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js\");\n\n\nconst identity = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n    prefix: \"\\x00\",\n    name: \"identity\",\n    encode: (buf)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.toString)(buf),\n    decode: (str)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.fromString)(str)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvaWRlbnRpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBSVo7QUFDZCxNQUFNRyxXQUFXSCw4Q0FBSUEsQ0FBQztJQUMzQkksUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFFBQVFDLENBQUFBLE1BQU9MLG1EQUFRQSxDQUFDSztJQUN4QkMsUUFBUUMsQ0FBQUEsTUFBT1IscURBQVVBLENBQUNRO0FBQzVCLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2lkZW50aXR5LmpzPzUwNTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vYmFzZS5qcyc7XG5pbXBvcnQge1xuICBmcm9tU3RyaW5nLFxuICB0b1N0cmluZ1xufSBmcm9tICcuLi9ieXRlcy5qcyc7XG5leHBvcnQgY29uc3QgaWRlbnRpdHkgPSBmcm9tKHtcbiAgcHJlZml4OiAnXFwwJyxcbiAgbmFtZTogJ2lkZW50aXR5JyxcbiAgZW5jb2RlOiBidWYgPT4gdG9TdHJpbmcoYnVmKSxcbiAgZGVjb2RlOiBzdHIgPT4gZnJvbVN0cmluZyhzdHIpXG59KTsiXSwibmFtZXMiOlsiZnJvbSIsImZyb21TdHJpbmciLCJ0b1N0cmluZyIsImlkZW50aXR5IiwicHJlZml4IiwibmFtZSIsImVuY29kZSIsImJ1ZiIsImRlY29kZSIsInN0ciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/basics.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/basics.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.CID),\n/* harmony export */   bases: () => (/* binding */ bases),\n/* harmony export */   bytes: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.bytes),\n/* harmony export */   codecs: () => (/* binding */ codecs),\n/* harmony export */   digest: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.digest),\n/* harmony export */   hasher: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.hasher),\n/* harmony export */   hashes: () => (/* binding */ hashes),\n/* harmony export */   varint: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.varint)\n/* harmony export */ });\n/* harmony import */ var _bases_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/identity.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/identity.js\");\n/* harmony import */ var _bases_base2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base2.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base2.js\");\n/* harmony import */ var _bases_base8_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base8.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base8.js\");\n/* harmony import */ var _bases_base10_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base10.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base10.js\");\n/* harmony import */ var _bases_base16_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bases/base16.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base16.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base58.js\");\n/* harmony import */ var _bases_base64_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bases/base64.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base64.js\");\n/* harmony import */ var _bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bases/base256emoji.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base256emoji.js\");\n/* harmony import */ var _hashes_sha2_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./hashes/sha2.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/sha2.js\");\n/* harmony import */ var _hashes_identity_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./hashes/identity.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/identity.js\");\n/* harmony import */ var _codecs_raw_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./codecs/raw.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/codecs/raw.js\");\n/* harmony import */ var _codecs_json_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./codecs/json.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/codecs/json.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst bases = {\n    ..._bases_identity_js__WEBPACK_IMPORTED_MODULE_0__,\n    ..._bases_base2_js__WEBPACK_IMPORTED_MODULE_1__,\n    ..._bases_base8_js__WEBPACK_IMPORTED_MODULE_2__,\n    ..._bases_base10_js__WEBPACK_IMPORTED_MODULE_3__,\n    ..._bases_base16_js__WEBPACK_IMPORTED_MODULE_4__,\n    ..._bases_base32_js__WEBPACK_IMPORTED_MODULE_5__,\n    ..._bases_base36_js__WEBPACK_IMPORTED_MODULE_6__,\n    ..._bases_base58_js__WEBPACK_IMPORTED_MODULE_7__,\n    ..._bases_base64_js__WEBPACK_IMPORTED_MODULE_8__,\n    ..._bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_9__\n};\nconst hashes = {\n    ..._hashes_sha2_js__WEBPACK_IMPORTED_MODULE_10__,\n    ..._hashes_identity_js__WEBPACK_IMPORTED_MODULE_11__\n};\nconst codecs = {\n    raw: _codecs_raw_js__WEBPACK_IMPORTED_MODULE_12__,\n    json: _codecs_json_js__WEBPACK_IMPORTED_MODULE_13__\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzaWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW9EO0FBQ1Y7QUFDQTtBQUNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNZO0FBQ2Y7QUFDUTtBQUNWO0FBQ0U7QUFPckI7QUFDcEIsTUFBTW1CLFFBQVE7SUFDWixHQUFHbkIsK0NBQVk7SUFDZixHQUFHQyw0Q0FBSztJQUNSLEdBQUdDLDRDQUFLO0lBQ1IsR0FBR0MsNkNBQU07SUFDVCxHQUFHQyw2Q0FBTTtJQUNULEdBQUdDLDZDQUFNO0lBQ1QsR0FBR0MsNkNBQU07SUFDVCxHQUFHQyw2Q0FBTTtJQUNULEdBQUdDLDZDQUFNO0lBQ1QsR0FBR0MsbURBQVk7QUFDakI7QUFDQSxNQUFNVyxTQUFTO0lBQ2IsR0FBR1YsNkNBQUk7SUFDUCxHQUFHQyxpREFBUTtBQUNiO0FBQ0EsTUFBTVUsU0FBUztJQUNiVCxHQUFHQSw4Q0FBQUE7SUFDSEMsSUFBSUEsK0NBQUFBO0FBQ047QUFVRSIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzaWNzLmpzPzQ3NTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgaWRlbnRpdHlCYXNlIGZyb20gJy4vYmFzZXMvaWRlbnRpdHkuanMnO1xuaW1wb3J0ICogYXMgYmFzZTIgZnJvbSAnLi9iYXNlcy9iYXNlMi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlOCBmcm9tICcuL2Jhc2VzL2Jhc2U4LmpzJztcbmltcG9ydCAqIGFzIGJhc2UxMCBmcm9tICcuL2Jhc2VzL2Jhc2UxMC5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMTYgZnJvbSAnLi9iYXNlcy9iYXNlMTYuanMnO1xuaW1wb3J0ICogYXMgYmFzZTMyIGZyb20gJy4vYmFzZXMvYmFzZTMyLmpzJztcbmltcG9ydCAqIGFzIGJhc2UzNiBmcm9tICcuL2Jhc2VzL2Jhc2UzNi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlNTggZnJvbSAnLi9iYXNlcy9iYXNlNTguanMnO1xuaW1wb3J0ICogYXMgYmFzZTY0IGZyb20gJy4vYmFzZXMvYmFzZTY0LmpzJztcbmltcG9ydCAqIGFzIGJhc2UyNTZlbW9qaSBmcm9tICcuL2Jhc2VzL2Jhc2UyNTZlbW9qaS5qcyc7XG5pbXBvcnQgKiBhcyBzaGEyIGZyb20gJy4vaGFzaGVzL3NoYTIuanMnO1xuaW1wb3J0ICogYXMgaWRlbnRpdHkgZnJvbSAnLi9oYXNoZXMvaWRlbnRpdHkuanMnO1xuaW1wb3J0ICogYXMgcmF3IGZyb20gJy4vY29kZWNzL3Jhdy5qcyc7XG5pbXBvcnQgKiBhcyBqc29uIGZyb20gJy4vY29kZWNzL2pzb24uanMnO1xuaW1wb3J0IHtcbiAgQ0lELFxuICBoYXNoZXIsXG4gIGRpZ2VzdCxcbiAgdmFyaW50LFxuICBieXRlc1xufSBmcm9tICcuL2luZGV4LmpzJztcbmNvbnN0IGJhc2VzID0ge1xuICAuLi5pZGVudGl0eUJhc2UsXG4gIC4uLmJhc2UyLFxuICAuLi5iYXNlOCxcbiAgLi4uYmFzZTEwLFxuICAuLi5iYXNlMTYsXG4gIC4uLmJhc2UzMixcbiAgLi4uYmFzZTM2LFxuICAuLi5iYXNlNTgsXG4gIC4uLmJhc2U2NCxcbiAgLi4uYmFzZTI1NmVtb2ppXG59O1xuY29uc3QgaGFzaGVzID0ge1xuICAuLi5zaGEyLFxuICAuLi5pZGVudGl0eVxufTtcbmNvbnN0IGNvZGVjcyA9IHtcbiAgcmF3LFxuICBqc29uXG59O1xuZXhwb3J0IHtcbiAgQ0lELFxuICBoYXNoZXIsXG4gIGRpZ2VzdCxcbiAgdmFyaW50LFxuICBieXRlcyxcbiAgaGFzaGVzLFxuICBiYXNlcyxcbiAgY29kZWNzXG59OyJdLCJuYW1lcyI6WyJpZGVudGl0eUJhc2UiLCJiYXNlMiIsImJhc2U4IiwiYmFzZTEwIiwiYmFzZTE2IiwiYmFzZTMyIiwiYmFzZTM2IiwiYmFzZTU4IiwiYmFzZTY0IiwiYmFzZTI1NmVtb2ppIiwic2hhMiIsImlkZW50aXR5IiwicmF3IiwianNvbiIsIkNJRCIsImhhc2hlciIsImRpZ2VzdCIsInZhcmludCIsImJ5dGVzIiwiYmFzZXMiLCJoYXNoZXMiLCJjb2RlY3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/basics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nconst toHex = (d)=>d.reduce((hex, byte)=>hex + byte.toString(16).padStart(2, \"0\"), \"\");\nconst fromHex = (hex)=>{\n    const hexes = hex.match(/../g);\n    return hexes ? new Uint8Array(hexes.map((b)=>parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb)=>{\n    if (aa === bb) return true;\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for(let ii = 0; ii < aa.byteLength; ii++){\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n};\nconst coerce = (o)=>{\n    if (o instanceof Uint8Array && o.constructor.name === \"Uint8Array\") return o;\n    if (o instanceof ArrayBuffer) return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error(\"Unknown type, must be binary type\");\n};\nconst isBinary = (o)=>o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = (str)=>new TextEncoder().encode(str);\nconst toString = (b)=>new TextDecoder().decode(b);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxNQUFNQSxRQUFRLElBQUlDLFdBQVc7QUFDN0IsTUFBTUMsUUFBUUMsQ0FBQUEsSUFBS0EsRUFBRUMsTUFBTSxDQUFDLENBQUNDLEtBQUtDLE9BQVNELE1BQU1DLEtBQUtDLFFBQVEsQ0FBQyxJQUFJQyxRQUFRLENBQUMsR0FBRyxNQUFNO0FBQ3JGLE1BQU1DLFVBQVVKLENBQUFBO0lBQ2QsTUFBTUssUUFBUUwsSUFBSU0sS0FBSyxDQUFDO0lBQ3hCLE9BQU9ELFFBQVEsSUFBSVQsV0FBV1MsTUFBTUUsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQyxTQUFTRCxHQUFHLFFBQVFiO0FBQ25FO0FBQ0EsTUFBTWUsU0FBUyxDQUFDQyxJQUFJQztJQUNsQixJQUFJRCxPQUFPQyxJQUNULE9BQU87SUFDVCxJQUFJRCxHQUFHRSxVQUFVLEtBQUtELEdBQUdDLFVBQVUsRUFBRTtRQUNuQyxPQUFPO0lBQ1Q7SUFDQSxJQUFLLElBQUlDLEtBQUssR0FBR0EsS0FBS0gsR0FBR0UsVUFBVSxFQUFFQyxLQUFNO1FBQ3pDLElBQUlILEVBQUUsQ0FBQ0csR0FBRyxLQUFLRixFQUFFLENBQUNFLEdBQUcsRUFBRTtZQUNyQixPQUFPO1FBQ1Q7SUFDRjtJQUNBLE9BQU87QUFDVDtBQUNBLE1BQU1DLFNBQVNDLENBQUFBO0lBQ2IsSUFBSUEsYUFBYXBCLGNBQWNvQixFQUFFQyxXQUFXLENBQUNDLElBQUksS0FBSyxjQUNwRCxPQUFPRjtJQUNULElBQUlBLGFBQWFHLGFBQ2YsT0FBTyxJQUFJdkIsV0FBV29CO0lBQ3hCLElBQUlHLFlBQVlDLE1BQU0sQ0FBQ0osSUFBSTtRQUN6QixPQUFPLElBQUlwQixXQUFXb0IsRUFBRUssTUFBTSxFQUFFTCxFQUFFTSxVQUFVLEVBQUVOLEVBQUVILFVBQVU7SUFDNUQ7SUFDQSxNQUFNLElBQUlVLE1BQU07QUFDbEI7QUFDQSxNQUFNQyxXQUFXUixDQUFBQSxJQUFLQSxhQUFhRyxlQUFlQSxZQUFZQyxNQUFNLENBQUNKO0FBQ3JFLE1BQU1TLGFBQWFDLENBQUFBLE1BQU8sSUFBSUMsY0FBY0MsTUFBTSxDQUFDRjtBQUNuRCxNQUFNeEIsV0FBV00sQ0FBQUEsSUFBSyxJQUFJcUIsY0FBY0MsTUFBTSxDQUFDdEI7QUFVN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2J5dGVzLmpzPzFlNTQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZW1wdHkgPSBuZXcgVWludDhBcnJheSgwKTtcbmNvbnN0IHRvSGV4ID0gZCA9PiBkLnJlZHVjZSgoaGV4LCBieXRlKSA9PiBoZXggKyBieXRlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpLCAnJyk7XG5jb25zdCBmcm9tSGV4ID0gaGV4ID0+IHtcbiAgY29uc3QgaGV4ZXMgPSBoZXgubWF0Y2goLy4uL2cpO1xuICByZXR1cm4gaGV4ZXMgPyBuZXcgVWludDhBcnJheShoZXhlcy5tYXAoYiA9PiBwYXJzZUludChiLCAxNikpKSA6IGVtcHR5O1xufTtcbmNvbnN0IGVxdWFscyA9IChhYSwgYmIpID0+IHtcbiAgaWYgKGFhID09PSBiYilcbiAgICByZXR1cm4gdHJ1ZTtcbiAgaWYgKGFhLmJ5dGVMZW5ndGggIT09IGJiLmJ5dGVMZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IGFhLmJ5dGVMZW5ndGg7IGlpKyspIHtcbiAgICBpZiAoYWFbaWldICE9PSBiYltpaV0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59O1xuY29uc3QgY29lcmNlID0gbyA9PiB7XG4gIGlmIChvIGluc3RhbmNlb2YgVWludDhBcnJheSAmJiBvLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdVaW50OEFycmF5JylcbiAgICByZXR1cm4gbztcbiAgaWYgKG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcilcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkobyk7XG4gIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcobykpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoby5idWZmZXIsIG8uYnl0ZU9mZnNldCwgby5ieXRlTGVuZ3RoKTtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xufTtcbmNvbnN0IGlzQmluYXJ5ID0gbyA9PiBvIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgfHwgQXJyYXlCdWZmZXIuaXNWaWV3KG8pO1xuY29uc3QgZnJvbVN0cmluZyA9IHN0ciA9PiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyKTtcbmNvbnN0IHRvU3RyaW5nID0gYiA9PiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYik7XG5leHBvcnQge1xuICBlcXVhbHMsXG4gIGNvZXJjZSxcbiAgaXNCaW5hcnksXG4gIGZyb21IZXgsXG4gIHRvSGV4LFxuICBmcm9tU3RyaW5nLFxuICB0b1N0cmluZyxcbiAgZW1wdHlcbn07Il0sIm5hbWVzIjpbImVtcHR5IiwiVWludDhBcnJheSIsInRvSGV4IiwiZCIsInJlZHVjZSIsImhleCIsImJ5dGUiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwiZnJvbUhleCIsImhleGVzIiwibWF0Y2giLCJtYXAiLCJiIiwicGFyc2VJbnQiLCJlcXVhbHMiLCJhYSIsImJiIiwiYnl0ZUxlbmd0aCIsImlpIiwiY29lcmNlIiwibyIsImNvbnN0cnVjdG9yIiwibmFtZSIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiYnVmZmVyIiwiYnl0ZU9mZnNldCIsIkVycm9yIiwiaXNCaW5hcnkiLCJmcm9tU3RyaW5nIiwic3RyIiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJUZXh0RGVjb2RlciIsImRlY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/cid.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/cid.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID)\n/* harmony export */ });\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/varint.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/digest.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base58.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bases/base32.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js\");\n\n\n\n\n\nclass CID {\n    constructor(version, code, multihash, bytes){\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        this.byteOffset = bytes.byteOffset;\n        this.byteLength = bytes.byteLength;\n        this.asCID = this;\n        this._baseCache = new Map();\n        Object.defineProperties(this, {\n            byteOffset: hidden,\n            byteLength: hidden,\n            code: readonly,\n            version: readonly,\n            multihash: readonly,\n            bytes: readonly,\n            _baseCache: hidden,\n            asCID: hidden\n        });\n    }\n    toV0() {\n        switch(this.version){\n            case 0:\n                {\n                    return this;\n                }\n            default:\n                {\n                    const { code, multihash } = this;\n                    if (code !== DAG_PB_CODE) {\n                        throw new Error(\"Cannot convert a non dag-pb CID to CIDv0\");\n                    }\n                    if (multihash.code !== SHA_256_CODE) {\n                        throw new Error(\"Cannot convert non sha2-256 multihash CID to CIDv0\");\n                    }\n                    return CID.createV0(multihash);\n                }\n        }\n    }\n    toV1() {\n        switch(this.version){\n            case 0:\n                {\n                    const { code, digest } = this.multihash;\n                    const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, digest);\n                    return CID.createV1(this.code, multihash);\n                }\n            case 1:\n                {\n                    return this;\n                }\n            default:\n                {\n                    throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n                }\n        }\n    }\n    equals(other) {\n        return other && this.code === other.code && this.version === other.version && _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.equals(this.multihash, other.multihash);\n    }\n    toString(base) {\n        const { bytes, version, _baseCache } = this;\n        switch(version){\n            case 0:\n                return toStringV0(bytes, _baseCache, base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n            default:\n                return toStringV1(bytes, _baseCache, base || _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.encoder);\n        }\n    }\n    toJSON() {\n        return {\n            code: this.code,\n            version: this.version,\n            hash: this.multihash.bytes\n        };\n    }\n    get [Symbol.toStringTag]() {\n        return \"CID\";\n    }\n    [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n        return \"CID(\" + this.toString() + \")\";\n    }\n    static isCID(value) {\n        deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n        return !!(value && (value[cidSymbol] || value.asCID === value));\n    }\n    get toBaseEncodedString() {\n        throw new Error(\"Deprecated, use .toString()\");\n    }\n    get codec() {\n        throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n    }\n    get buffer() {\n        throw new Error(\"Deprecated .buffer property, use .bytes to get Uint8Array instead\");\n    }\n    get multibaseName() {\n        throw new Error('\"multibaseName\" property is deprecated');\n    }\n    get prefix() {\n        throw new Error('\"prefix\" property is deprecated');\n    }\n    static asCID(value) {\n        if (value instanceof CID) {\n            return value;\n        } else if (value != null && value.asCID === value) {\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n        } else if (value != null && value[cidSymbol] === true) {\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.decode(multihash);\n            return CID.create(version, code, digest);\n        } else {\n            return null;\n        }\n    }\n    static create(version, code, digest) {\n        if (typeof code !== \"number\") {\n            throw new Error(\"String codecs are no longer supported\");\n        }\n        switch(version){\n            case 0:\n                {\n                    if (code !== DAG_PB_CODE) {\n                        throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                    } else {\n                        return new CID(version, code, digest, digest.bytes);\n                    }\n                }\n            case 1:\n                {\n                    const bytes = encodeCID(version, code, digest.bytes);\n                    return new CID(version, code, digest, bytes);\n                }\n            default:\n                {\n                    throw new Error(\"Invalid version\");\n                }\n        }\n    }\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length) {\n            throw new Error(\"Incorrect length\");\n        }\n        return cid;\n    }\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_4__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error(\"Incorrect length\");\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n        return [\n            cid,\n            bytes.subarray(specs.size)\n        ];\n    }\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = ()=>{\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_0__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            version = 0;\n            offset = 0;\n        } else if (version === 1) {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next();\n        const digestSize = next();\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return {\n            version,\n            codec,\n            multihashCode,\n            digestSize,\n            multihashSize,\n            size\n        };\n    }\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        cid._baseCache.set(prefix, source);\n        return cid;\n    }\n}\nconst parseCIDtoBytes = (source, base)=>{\n    switch(source[0]){\n        case \"Q\":\n            {\n                const decoder = base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n                return [\n                    _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                    decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n                ];\n            }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix:\n            {\n                const decoder = base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n                return [\n                    _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                    decoder.decode(source)\n                ];\n            }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.prefix:\n            {\n                const decoder = base || _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32;\n                return [\n                    _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.prefix,\n                    decoder.decode(source)\n                ];\n            }\n        default:\n            {\n                if (base == null) {\n                    throw Error(\"To parse non base32 or base58btc encoded CID multibase decoder must be provided\");\n                }\n                return [\n                    source[0],\n                    base.decode(source)\n                ];\n            }\n    }\n};\nconst toStringV0 = (bytes, cache, base)=>{\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    } else {\n        return cid;\n    }\n};\nconst toStringV1 = (bytes, cache, base)=>{\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    } else {\n        return cid;\n    }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash)=>{\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n};\nconst cidSymbol = Symbol.for(\"@ipld/js-cid/CID\");\nconst readonly = {\n    writable: false,\n    configurable: false,\n    enumerable: true\n};\nconst hidden = {\n    writable: false,\n    enumerable: false,\n    configurable: false\n};\nconst version = \"0.0.0-dev\";\nconst deprecate = (range, message)=>{\n    if (range.test(version)) {\n        console.warn(message);\n    } else {\n        throw new Error(message);\n    }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/codecs/json.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/codecs/json.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst name = \"json\";\nconst code = 512;\nconst encode = (node)=>textEncoder.encode(JSON.stringify(node));\nconst decode = (data)=>JSON.parse(textDecoder.decode(data));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvY29kZWNzL2pzb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE1BQU1BLGNBQWMsSUFBSUM7QUFDeEIsTUFBTUMsY0FBYyxJQUFJQztBQUNqQixNQUFNQyxPQUFPLE9BQU87QUFDcEIsTUFBTUMsT0FBTyxJQUFJO0FBQ2pCLE1BQU1DLFNBQVNDLENBQUFBLE9BQVFQLFlBQVlNLE1BQU0sQ0FBQ0UsS0FBS0MsU0FBUyxDQUFDRixPQUFPO0FBQ2hFLE1BQU1HLFNBQVNDLENBQUFBLE9BQVFILEtBQUtJLEtBQUssQ0FBQ1YsWUFBWVEsTUFBTSxDQUFDQyxPQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9jb2RlY3MvanNvbi5qcz82OTBiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHRleHRFbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5jb25zdCB0ZXh0RGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuZXhwb3J0IGNvbnN0IG5hbWUgPSAnanNvbic7XG5leHBvcnQgY29uc3QgY29kZSA9IDUxMjtcbmV4cG9ydCBjb25zdCBlbmNvZGUgPSBub2RlID0+IHRleHRFbmNvZGVyLmVuY29kZShKU09OLnN0cmluZ2lmeShub2RlKSk7XG5leHBvcnQgY29uc3QgZGVjb2RlID0gZGF0YSA9PiBKU09OLnBhcnNlKHRleHREZWNvZGVyLmRlY29kZShkYXRhKSk7Il0sIm5hbWVzIjpbInRleHRFbmNvZGVyIiwiVGV4dEVuY29kZXIiLCJ0ZXh0RGVjb2RlciIsIlRleHREZWNvZGVyIiwibmFtZSIsImNvZGUiLCJlbmNvZGUiLCJub2RlIiwiSlNPTiIsInN0cmluZ2lmeSIsImRlY29kZSIsImRhdGEiLCJwYXJzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/codecs/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/codecs/raw.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/codecs/raw.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js\");\n\nconst name = \"raw\";\nconst code = 85;\nconst encode = (node)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node);\nconst decode = (data)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvY29kZWNzL3Jhdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxQztBQUM5QixNQUFNQyxPQUFPLE1BQU07QUFDbkIsTUFBTUMsT0FBTyxHQUFHO0FBQ2hCLE1BQU1DLFNBQVNDLENBQUFBLE9BQVFKLGlEQUFNQSxDQUFDSSxNQUFNO0FBQ3BDLE1BQU1DLFNBQVNDLENBQUFBLE9BQVFOLGlEQUFNQSxDQUFDTSxNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9jb2RlY3MvcmF3LmpzPzkzYWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuZXhwb3J0IGNvbnN0IG5hbWUgPSAncmF3JztcbmV4cG9ydCBjb25zdCBjb2RlID0gODU7XG5leHBvcnQgY29uc3QgZW5jb2RlID0gbm9kZSA9PiBjb2VyY2Uobm9kZSk7XG5leHBvcnQgY29uc3QgZGVjb2RlID0gZGF0YSA9PiBjb2VyY2UoZGF0YSk7Il0sIm5hbWVzIjpbImNvZXJjZSIsIm5hbWUiLCJjb2RlIiwiZW5jb2RlIiwibm9kZSIsImRlY29kZSIsImRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/codecs/raw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/digest.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/digest.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/varint.js\");\n\n\nconst create = (code, digest)=>{\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n};\nconst decode = (multihash)=>{\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error(\"Incorrect length\");\n    }\n    return new Digest(code, size, digest, bytes);\n};\nconst equals = (a, b)=>{\n    if (a === b) {\n        return true;\n    } else {\n        return a.code === b.code && a.size === b.size && (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, b.bytes);\n    }\n};\nclass Digest {\n    constructor(code, size, digest, bytes){\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFHcUI7QUFDa0I7QUFDaEMsTUFBTUksU0FBUyxDQUFDQyxNQUFNQztJQUMzQixNQUFNQyxPQUFPRCxPQUFPRSxVQUFVO0lBQzlCLE1BQU1DLGFBQWFOLHNEQUFxQixDQUFDRTtJQUN6QyxNQUFNTSxlQUFlRixhQUFhTixzREFBcUIsQ0FBQ0k7SUFDeEQsTUFBTUssUUFBUSxJQUFJQyxXQUFXRixlQUFlSjtJQUM1Q0osZ0RBQWUsQ0FBQ0UsTUFBTU8sT0FBTztJQUM3QlQsZ0RBQWUsQ0FBQ0ksTUFBTUssT0FBT0g7SUFDN0JHLE1BQU1HLEdBQUcsQ0FBQ1QsUUFBUUs7SUFDbEIsT0FBTyxJQUFJSyxPQUFPWCxNQUFNRSxNQUFNRCxRQUFRTTtBQUN4QyxFQUFFO0FBQ0ssTUFBTUssU0FBU0MsQ0FBQUE7SUFDcEIsTUFBTU4sUUFBUVosaURBQU1BLENBQUNrQjtJQUNyQixNQUFNLENBQUNiLE1BQU1JLFdBQVcsR0FBR04sOENBQWEsQ0FBQ1M7SUFDekMsTUFBTSxDQUFDTCxNQUFNSSxhQUFhLEdBQUdSLDhDQUFhLENBQUNTLE1BQU1PLFFBQVEsQ0FBQ1Y7SUFDMUQsTUFBTUgsU0FBU00sTUFBTU8sUUFBUSxDQUFDVixhQUFhRTtJQUMzQyxJQUFJTCxPQUFPRSxVQUFVLEtBQUtELE1BQU07UUFDOUIsTUFBTSxJQUFJYSxNQUFNO0lBQ2xCO0lBQ0EsT0FBTyxJQUFJSixPQUFPWCxNQUFNRSxNQUFNRCxRQUFRTTtBQUN4QyxFQUFFO0FBQ0ssTUFBTVgsU0FBUyxDQUFDb0IsR0FBR0M7SUFDeEIsSUFBSUQsTUFBTUMsR0FBRztRQUNYLE9BQU87SUFDVCxPQUFPO1FBQ0wsT0FBT0QsRUFBRWhCLElBQUksS0FBS2lCLEVBQUVqQixJQUFJLElBQUlnQixFQUFFZCxJQUFJLEtBQUtlLEVBQUVmLElBQUksSUFBSUwsaURBQVVBLENBQUNtQixFQUFFVCxLQUFLLEVBQUVVLEVBQUVWLEtBQUs7SUFDOUU7QUFDRixFQUFFO0FBQ0ssTUFBTUk7SUFDWE8sWUFBWWxCLElBQUksRUFBRUUsSUFBSSxFQUFFRCxNQUFNLEVBQUVNLEtBQUssQ0FBRTtRQUNyQyxJQUFJLENBQUNQLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNFLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNELE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUNNLEtBQUssR0FBR0E7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9oYXNoZXMvZGlnZXN0LmpzPzdkNWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY29lcmNlLFxuICBlcXVhbHMgYXMgZXF1YWxCeXRlc1xufSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi4vdmFyaW50LmpzJztcbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAoY29kZSwgZGlnZXN0KSA9PiB7XG4gIGNvbnN0IHNpemUgPSBkaWdlc3QuYnl0ZUxlbmd0aDtcbiAgY29uc3Qgc2l6ZU9mZnNldCA9IHZhcmludC5lbmNvZGluZ0xlbmd0aChjb2RlKTtcbiAgY29uc3QgZGlnZXN0T2Zmc2V0ID0gc2l6ZU9mZnNldCArIHZhcmludC5lbmNvZGluZ0xlbmd0aChzaXplKTtcbiAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShkaWdlc3RPZmZzZXQgKyBzaXplKTtcbiAgdmFyaW50LmVuY29kZVRvKGNvZGUsIGJ5dGVzLCAwKTtcbiAgdmFyaW50LmVuY29kZVRvKHNpemUsIGJ5dGVzLCBzaXplT2Zmc2V0KTtcbiAgYnl0ZXMuc2V0KGRpZ2VzdCwgZGlnZXN0T2Zmc2V0KTtcbiAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59O1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IG11bHRpaGFzaCA9PiB7XG4gIGNvbnN0IGJ5dGVzID0gY29lcmNlKG11bHRpaGFzaCk7XG4gIGNvbnN0IFtjb2RlLCBzaXplT2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMpO1xuICBjb25zdCBbc2l6ZSwgZGlnZXN0T2Zmc2V0XSA9IHZhcmludC5kZWNvZGUoYnl0ZXMuc3ViYXJyYXkoc2l6ZU9mZnNldCkpO1xuICBjb25zdCBkaWdlc3QgPSBieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0ICsgZGlnZXN0T2Zmc2V0KTtcbiAgaWYgKGRpZ2VzdC5ieXRlTGVuZ3RoICE9PSBzaXplKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgbGVuZ3RoJyk7XG4gIH1cbiAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcyk7XG59O1xuZXhwb3J0IGNvbnN0IGVxdWFscyA9IChhLCBiKSA9PiB7XG4gIGlmIChhID09PSBiKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGEuY29kZSA9PT0gYi5jb2RlICYmIGEuc2l6ZSA9PT0gYi5zaXplICYmIGVxdWFsQnl0ZXMoYS5ieXRlcywgYi5ieXRlcyk7XG4gIH1cbn07XG5leHBvcnQgY2xhc3MgRGlnZXN0IHtcbiAgY29uc3RydWN0b3IoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcykge1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICB0aGlzLmRpZ2VzdCA9IGRpZ2VzdDtcbiAgICB0aGlzLmJ5dGVzID0gYnl0ZXM7XG4gIH1cbn0iXSwibmFtZXMiOlsiY29lcmNlIiwiZXF1YWxzIiwiZXF1YWxCeXRlcyIsInZhcmludCIsImNyZWF0ZSIsImNvZGUiLCJkaWdlc3QiLCJzaXplIiwiYnl0ZUxlbmd0aCIsInNpemVPZmZzZXQiLCJlbmNvZGluZ0xlbmd0aCIsImRpZ2VzdE9mZnNldCIsImJ5dGVzIiwiVWludDhBcnJheSIsImVuY29kZVRvIiwic2V0IiwiRGlnZXN0IiwiZGVjb2RlIiwibXVsdGloYXNoIiwic3ViYXJyYXkiLCJFcnJvciIsImEiLCJiIiwiY29uc3RydWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/hasher.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/hasher.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/digest.js\");\n\nconst from = ({ name, code, encode })=>new Hasher(name, code, encode);\nclass Hasher {\n    constructor(name, code, encode){\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n    }\n    digest(input) {\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            return result instanceof Uint8Array ? _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, result) : result.then((digest)=>_digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, digest));\n        } else {\n            throw Error(\"Unknown type, must be binary type\");\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL2hhc2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDL0IsTUFBTUMsT0FBTyxDQUFDLEVBQUNDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUMsR0FBSyxJQUFJQyxPQUFPSCxNQUFNQyxNQUFNQyxRQUFRO0FBQ3RFLE1BQU1DO0lBQ1hDLFlBQVlKLElBQUksRUFBRUMsSUFBSSxFQUFFQyxNQUFNLENBQUU7UUFDOUIsSUFBSSxDQUFDRixJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxNQUFNLEdBQUdBO0lBQ2hCO0lBQ0FHLE9BQU9DLEtBQUssRUFBRTtRQUNaLElBQUlBLGlCQUFpQkMsWUFBWTtZQUMvQixNQUFNQyxTQUFTLElBQUksQ0FBQ04sTUFBTSxDQUFDSTtZQUMzQixPQUFPRSxrQkFBa0JELGFBQWFULDhDQUFhLENBQUMsSUFBSSxDQUFDRyxJQUFJLEVBQUVPLFVBQVVBLE9BQU9FLElBQUksQ0FBQ0wsQ0FBQUEsU0FBVVAsOENBQWEsQ0FBQyxJQUFJLENBQUNHLElBQUksRUFBRUk7UUFDMUgsT0FBTztZQUNMLE1BQU1NLE1BQU07UUFDZDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9oYXNoZXIuanM/NmFiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuZXhwb3J0IGNvbnN0IGZyb20gPSAoe25hbWUsIGNvZGUsIGVuY29kZX0pID0+IG5ldyBIYXNoZXIobmFtZSwgY29kZSwgZW5jb2RlKTtcbmV4cG9ydCBjbGFzcyBIYXNoZXIge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBjb2RlLCBlbmNvZGUpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy5lbmNvZGUgPSBlbmNvZGU7XG4gIH1cbiAgZGlnZXN0KGlucHV0KSB7XG4gICAgaWYgKGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5lbmNvZGUoaW5wdXQpO1xuICAgICAgcmV0dXJuIHJlc3VsdCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgPyBEaWdlc3QuY3JlYXRlKHRoaXMuY29kZSwgcmVzdWx0KSA6IHJlc3VsdC50aGVuKGRpZ2VzdCA9PiBEaWdlc3QuY3JlYXRlKHRoaXMuY29kZSwgZGlnZXN0KSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKTtcbiAgICB9XG4gIH1cbn0iXSwibmFtZXMiOlsiRGlnZXN0IiwiZnJvbSIsIm5hbWUiLCJjb2RlIiwiZW5jb2RlIiwiSGFzaGVyIiwiY29uc3RydWN0b3IiLCJkaWdlc3QiLCJpbnB1dCIsIlVpbnQ4QXJyYXkiLCJyZXN1bHQiLCJjcmVhdGUiLCJ0aGVuIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/identity.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/identity.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/digest.js\");\n\n\nconst code = 0;\nconst name = \"identity\";\nconst encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce;\nconst digest = (input)=>_digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input));\nconst identity = {\n    code,\n    name,\n    encode,\n    digest\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL2lkZW50aXR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBQ3RDLE1BQU1FLE9BQU87QUFDYixNQUFNQyxPQUFPO0FBQ2IsTUFBTUMsU0FBU0osNkNBQU1BO0FBQ3JCLE1BQU1LLFNBQVNDLENBQUFBLFFBQVNMLDhDQUFhLENBQUNDLE1BQU1FLE9BQU9FO0FBQzVDLE1BQU1FLFdBQVc7SUFDdEJOO0lBQ0FDO0lBQ0FDO0lBQ0FDO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL2lkZW50aXR5LmpzPzBlYWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuaW1wb3J0ICogYXMgRGlnZXN0IGZyb20gJy4vZGlnZXN0LmpzJztcbmNvbnN0IGNvZGUgPSAwO1xuY29uc3QgbmFtZSA9ICdpZGVudGl0eSc7XG5jb25zdCBlbmNvZGUgPSBjb2VyY2U7XG5jb25zdCBkaWdlc3QgPSBpbnB1dCA9PiBEaWdlc3QuY3JlYXRlKGNvZGUsIGVuY29kZShpbnB1dCkpO1xuZXhwb3J0IGNvbnN0IGlkZW50aXR5ID0ge1xuICBjb2RlLFxuICBuYW1lLFxuICBlbmNvZGUsXG4gIGRpZ2VzdFxufTsiXSwibmFtZXMiOlsiY29lcmNlIiwiRGlnZXN0IiwiY29kZSIsIm5hbWUiLCJlbmNvZGUiLCJkaWdlc3QiLCJpbnB1dCIsImNyZWF0ZSIsImlkZW50aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/sha2.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/sha2.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/hasher.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n    name: \"sha2-256\",\n    code: 18,\n    encode: (input)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash(\"sha256\").update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n    name: \"sha2-512\",\n    code: 19,\n    encode: (input)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash(\"sha512\").update(input).digest())\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL3NoYTIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEI7QUFDTztBQUNFO0FBQzlCLE1BQU1HLFNBQVNGLGdEQUFJQSxDQUFDO0lBQ3pCRyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsUUFBUUMsQ0FBQUEsUUFBU0wsaURBQU1BLENBQUNGLDhDQUFpQixDQUFDLFVBQVVTLE1BQU0sQ0FBQ0YsT0FBT0csTUFBTTtBQUMxRSxHQUFHO0FBQ0ksTUFBTUMsU0FBU1YsZ0RBQUlBLENBQUM7SUFDekJHLE1BQU07SUFDTkMsTUFBTTtJQUNOQyxRQUFRQyxDQUFBQSxRQUFTTCxpREFBTUEsQ0FBQ0YsOENBQWlCLENBQUMsVUFBVVMsTUFBTSxDQUFDRixPQUFPRyxNQUFNO0FBQzFFLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9zaGEyLmpzPzE1ZjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vaGFzaGVyLmpzJztcbmltcG9ydCB7IGNvZXJjZSB9IGZyb20gJy4uL2J5dGVzLmpzJztcbmV4cG9ydCBjb25zdCBzaGEyNTYgPSBmcm9tKHtcbiAgbmFtZTogJ3NoYTItMjU2JyxcbiAgY29kZTogMTgsXG4gIGVuY29kZTogaW5wdXQgPT4gY29lcmNlKGNyeXB0by5jcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUoaW5wdXQpLmRpZ2VzdCgpKVxufSk7XG5leHBvcnQgY29uc3Qgc2hhNTEyID0gZnJvbSh7XG4gIG5hbWU6ICdzaGEyLTUxMicsXG4gIGNvZGU6IDE5LFxuICBlbmNvZGU6IGlucHV0ID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhNTEyJykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pOyJdLCJuYW1lcyI6WyJjcnlwdG8iLCJmcm9tIiwiY29lcmNlIiwic2hhMjU2IiwibmFtZSIsImNvZGUiLCJlbmNvZGUiLCJpbnB1dCIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJkaWdlc3QiLCJzaGE1MTIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_1__)\n/* harmony export */ });\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/cid.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/varint.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/bytes.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/hasher.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/hashes/digest.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUErQjtBQUNPO0FBQ0Y7QUFDUztBQUNBO0FBTzNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9pbmRleC5qcz83MDlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENJRCB9IGZyb20gJy4vY2lkLmpzJztcbmltcG9ydCAqIGFzIHZhcmludCBmcm9tICcuL3ZhcmludC5qcyc7XG5pbXBvcnQgKiBhcyBieXRlcyBmcm9tICcuL2J5dGVzLmpzJztcbmltcG9ydCAqIGFzIGhhc2hlciBmcm9tICcuL2hhc2hlcy9oYXNoZXIuanMnO1xuaW1wb3J0ICogYXMgZGlnZXN0IGZyb20gJy4vaGFzaGVzL2RpZ2VzdC5qcyc7XG5leHBvcnQge1xuICBDSUQsXG4gIGhhc2hlcixcbiAgZGlnZXN0LFxuICB2YXJpbnQsXG4gIGJ5dGVzXG59OyJdLCJuYW1lcyI6WyJDSUQiLCJ2YXJpbnQiLCJieXRlcyIsImhhc2hlciIsImRpZ2VzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/varint.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/varint.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/varint.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/vendor/varint.js\");\n\nconst decode = (data, offset = 0)=>{\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [\n        code,\n        _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes\n    ];\n};\nconst encodeTo = (int, target, offset = 0)=>{\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n};\nconst encodingLength = (int)=>{\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUM7QUFDbEMsTUFBTUMsU0FBUyxDQUFDQyxNQUFNQyxTQUFTLENBQUM7SUFDckMsTUFBTUMsT0FBT0oseURBQU1BLENBQUNDLE1BQU0sQ0FBQ0MsTUFBTUM7SUFDakMsT0FBTztRQUNMQztRQUNBSix5REFBTUEsQ0FBQ0MsTUFBTSxDQUFDSSxLQUFLO0tBQ3BCO0FBQ0gsRUFBRTtBQUNLLE1BQU1DLFdBQVcsQ0FBQ0MsS0FBS0MsUUFBUUwsU0FBUyxDQUFDO0lBQzlDSCx5REFBTUEsQ0FBQ1MsTUFBTSxDQUFDRixLQUFLQyxRQUFRTDtJQUMzQixPQUFPSztBQUNULEVBQUU7QUFDSyxNQUFNRSxpQkFBaUJILENBQUFBO0lBQzVCLE9BQU9QLHlEQUFNQSxDQUFDVSxjQUFjLENBQUNIO0FBQy9CLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL3ZhcmludC5qcz8zNGUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YXJpbnQgZnJvbSAnLi4vdmVuZG9yL3ZhcmludC5qcyc7XG5leHBvcnQgY29uc3QgZGVjb2RlID0gKGRhdGEsIG9mZnNldCA9IDApID0+IHtcbiAgY29uc3QgY29kZSA9IHZhcmludC5kZWNvZGUoZGF0YSwgb2Zmc2V0KTtcbiAgcmV0dXJuIFtcbiAgICBjb2RlLFxuICAgIHZhcmludC5kZWNvZGUuYnl0ZXNcbiAgXTtcbn07XG5leHBvcnQgY29uc3QgZW5jb2RlVG8gPSAoaW50LCB0YXJnZXQsIG9mZnNldCA9IDApID0+IHtcbiAgdmFyaW50LmVuY29kZShpbnQsIHRhcmdldCwgb2Zmc2V0KTtcbiAgcmV0dXJuIHRhcmdldDtcbn07XG5leHBvcnQgY29uc3QgZW5jb2RpbmdMZW5ndGggPSBpbnQgPT4ge1xuICByZXR1cm4gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGludCk7XG59OyJdLCJuYW1lcyI6WyJ2YXJpbnQiLCJkZWNvZGUiLCJkYXRhIiwib2Zmc2V0IiwiY29kZSIsImJ5dGVzIiwiZW5jb2RlVG8iLCJpbnQiLCJ0YXJnZXQiLCJlbmNvZGUiLCJlbmNvZGluZ0xlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/vendor/base-x.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/vendor/base-x.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError(\"Alphabet too long\");\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for(var j = 0; j < BASE_MAP.length; j++){\n        BASE_MAP[j] = 255;\n    }\n    for(var i = 0; i < ALPHABET.length; i++){\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + \" is ambiguous\");\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256);\n    var iFACTOR = Math.log(256) / Math.log(BASE);\n    function encode(source) {\n        if (source instanceof Uint8Array) ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        } else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError(\"Expected Uint8Array\");\n        }\n        if (source.length === 0) {\n            return \"\";\n        }\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while(pbegin !== pend && source[pbegin] === 0){\n            pbegin++;\n            zeroes++;\n        }\n        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n        var b58 = new Uint8Array(size);\n        while(pbegin !== pend){\n            var carry = source[pbegin];\n            var i = 0;\n            for(var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++){\n                carry += 256 * b58[it1] >>> 0;\n                b58[it1] = carry % BASE >>> 0;\n                carry = carry / BASE >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            pbegin++;\n        }\n        var it2 = size - length;\n        while(it2 !== size && b58[it2] === 0){\n            it2++;\n        }\n        var str = LEADER.repeat(zeroes);\n        for(; it2 < size; ++it2){\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    function decodeUnsafe(source) {\n        if (typeof source !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        if (source[psz] === \" \") {\n            return;\n        }\n        var zeroes = 0;\n        var length = 0;\n        while(source[psz] === LEADER){\n            zeroes++;\n            psz++;\n        }\n        var size = (source.length - psz) * FACTOR + 1 >>> 0;\n        var b256 = new Uint8Array(size);\n        while(source[psz]){\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for(var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++){\n                carry += BASE * b256[it3] >>> 0;\n                b256[it3] = carry % 256 >>> 0;\n                carry = carry / 256 >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            psz++;\n        }\n        if (source[psz] === \" \") {\n            return;\n        }\n        var it4 = size - length;\n        while(it4 !== size && b256[it4] === 0){\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while(it4 !== size){\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/vendor/varint.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/vendor/varint.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while(num >= INT){\n        out[offset++] = num & 255 | MSB;\n        num /= 128;\n    }\n    while(num & MSBALL){\n        out[offset++] = num & 255 | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            read.bytes = 0;\n            throw new RangeError(\"Could not decode varint\");\n        }\n        b = buf[counter++];\n        res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    }while (b >= MSB$1);\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function(value) {\n    return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS92ZW5kb3IvdmFyaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFJQSxXQUFXQztBQUNmLElBQUlDLE1BQU0sS0FBS0MsT0FBTyxLQUFLQyxTQUFTLENBQUNELE1BQU1FLE1BQU1DLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQzdELFNBQVNOLE9BQU9PLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxNQUFNO0lBQzlCRCxNQUFNQSxPQUFPLEVBQUU7SUFDZkMsU0FBU0EsVUFBVTtJQUNuQixJQUFJQyxZQUFZRDtJQUNoQixNQUFPRixPQUFPSCxJQUFLO1FBQ2pCSSxHQUFHLENBQUNDLFNBQVMsR0FBR0YsTUFBTSxNQUFNTjtRQUM1Qk0sT0FBTztJQUNUO0lBQ0EsTUFBT0EsTUFBTUosT0FBUTtRQUNuQkssR0FBRyxDQUFDQyxTQUFTLEdBQUdGLE1BQU0sTUFBTU47UUFDNUJNLFNBQVM7SUFDWDtJQUNBQyxHQUFHLENBQUNDLE9BQU8sR0FBR0YsTUFBTTtJQUNwQlAsT0FBT1csS0FBSyxHQUFHRixTQUFTQyxZQUFZO0lBQ3BDLE9BQU9GO0FBQ1Q7QUFDQSxJQUFJSSxTQUFTQztBQUNiLElBQUlDLFFBQVEsS0FBS0MsU0FBUztBQUMxQixTQUFTRixLQUFLRyxHQUFHLEVBQUVQLE1BQU07SUFDdkIsSUFBSVEsTUFBTSxHQUFHUixTQUFTQSxVQUFVLEdBQUdTLFFBQVEsR0FBR0MsVUFBVVYsUUFBUVcsR0FBR0MsSUFBSUwsSUFBSU0sTUFBTTtJQUNqRixHQUFHO1FBQ0QsSUFBSUgsV0FBV0UsR0FBRztZQUNoQlIsS0FBS0YsS0FBSyxHQUFHO1lBQ2IsTUFBTSxJQUFJWSxXQUFXO1FBQ3ZCO1FBQ0FILElBQUlKLEdBQUcsQ0FBQ0csVUFBVTtRQUNsQkYsT0FBT0MsUUFBUSxLQUFLLENBQUNFLElBQUlMLE1BQUssS0FBTUcsUUFBUSxDQUFDRSxJQUFJTCxNQUFLLElBQUtWLEtBQUtDLEdBQUcsQ0FBQyxHQUFHWTtRQUN2RUEsU0FBUztJQUNYLFFBQVNFLEtBQUtOLE9BQU87SUFDckJELEtBQUtGLEtBQUssR0FBR1EsVUFBVVY7SUFDdkIsT0FBT1E7QUFDVDtBQUNBLElBQUlPLEtBQUtuQixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJbUIsS0FBS3BCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUlvQixLQUFLckIsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSXFCLEtBQUt0QixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJc0IsS0FBS3ZCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUl1QixLQUFLeEIsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSXdCLEtBQUt6QixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJeUIsS0FBSzFCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUkwQixLQUFLM0IsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSWdCLFNBQVMsU0FBVVcsS0FBSztJQUMxQixPQUFPQSxRQUFRVCxLQUFLLElBQUlTLFFBQVFSLEtBQUssSUFBSVEsUUFBUVAsS0FBSyxJQUFJTyxRQUFRTixLQUFLLElBQUlNLFFBQVFMLEtBQUssSUFBSUssUUFBUUosS0FBSyxJQUFJSSxRQUFRSCxLQUFLLElBQUlHLFFBQVFGLEtBQUssSUFBSUUsUUFBUUQsS0FBSyxJQUFJO0FBQ2xLO0FBQ0EsSUFBSUUsU0FBUztJQUNYbEMsUUFBUUQ7SUFDUmEsUUFBUUE7SUFDUnVCLGdCQUFnQmI7QUFDbEI7QUFDQSxJQUFJYyxlQUFlRjtBQUNuQixpRUFBZUUsWUFBWUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS92ZW5kb3IvdmFyaW50LmpzPzZiNjIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGVuY29kZV8xID0gZW5jb2RlO1xudmFyIE1TQiA9IDEyOCwgUkVTVCA9IDEyNywgTVNCQUxMID0gflJFU1QsIElOVCA9IE1hdGgucG93KDIsIDMxKTtcbmZ1bmN0aW9uIGVuY29kZShudW0sIG91dCwgb2Zmc2V0KSB7XG4gIG91dCA9IG91dCB8fCBbXTtcbiAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG4gIHZhciBvbGRPZmZzZXQgPSBvZmZzZXQ7XG4gIHdoaWxlIChudW0gPj0gSU5UKSB7XG4gICAgb3V0W29mZnNldCsrXSA9IG51bSAmIDI1NSB8IE1TQjtcbiAgICBudW0gLz0gMTI4O1xuICB9XG4gIHdoaWxlIChudW0gJiBNU0JBTEwpIHtcbiAgICBvdXRbb2Zmc2V0KytdID0gbnVtICYgMjU1IHwgTVNCO1xuICAgIG51bSA+Pj49IDc7XG4gIH1cbiAgb3V0W29mZnNldF0gPSBudW0gfCAwO1xuICBlbmNvZGUuYnl0ZXMgPSBvZmZzZXQgLSBvbGRPZmZzZXQgKyAxO1xuICByZXR1cm4gb3V0O1xufVxudmFyIGRlY29kZSA9IHJlYWQ7XG52YXIgTVNCJDEgPSAxMjgsIFJFU1QkMSA9IDEyNztcbmZ1bmN0aW9uIHJlYWQoYnVmLCBvZmZzZXQpIHtcbiAgdmFyIHJlcyA9IDAsIG9mZnNldCA9IG9mZnNldCB8fCAwLCBzaGlmdCA9IDAsIGNvdW50ZXIgPSBvZmZzZXQsIGIsIGwgPSBidWYubGVuZ3RoO1xuICBkbyB7XG4gICAgaWYgKGNvdW50ZXIgPj0gbCkge1xuICAgICAgcmVhZC5ieXRlcyA9IDA7XG4gICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQ291bGQgbm90IGRlY29kZSB2YXJpbnQnKTtcbiAgICB9XG4gICAgYiA9IGJ1Zltjb3VudGVyKytdO1xuICAgIHJlcyArPSBzaGlmdCA8IDI4ID8gKGIgJiBSRVNUJDEpIDw8IHNoaWZ0IDogKGIgJiBSRVNUJDEpICogTWF0aC5wb3coMiwgc2hpZnQpO1xuICAgIHNoaWZ0ICs9IDc7XG4gIH0gd2hpbGUgKGIgPj0gTVNCJDEpO1xuICByZWFkLmJ5dGVzID0gY291bnRlciAtIG9mZnNldDtcbiAgcmV0dXJuIHJlcztcbn1cbnZhciBOMSA9IE1hdGgucG93KDIsIDcpO1xudmFyIE4yID0gTWF0aC5wb3coMiwgMTQpO1xudmFyIE4zID0gTWF0aC5wb3coMiwgMjEpO1xudmFyIE40ID0gTWF0aC5wb3coMiwgMjgpO1xudmFyIE41ID0gTWF0aC5wb3coMiwgMzUpO1xudmFyIE42ID0gTWF0aC5wb3coMiwgNDIpO1xudmFyIE43ID0gTWF0aC5wb3coMiwgNDkpO1xudmFyIE44ID0gTWF0aC5wb3coMiwgNTYpO1xudmFyIE45ID0gTWF0aC5wb3coMiwgNjMpO1xudmFyIGxlbmd0aCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPCBOMSA/IDEgOiB2YWx1ZSA8IE4yID8gMiA6IHZhbHVlIDwgTjMgPyAzIDogdmFsdWUgPCBONCA/IDQgOiB2YWx1ZSA8IE41ID8gNSA6IHZhbHVlIDwgTjYgPyA2IDogdmFsdWUgPCBONyA/IDcgOiB2YWx1ZSA8IE44ID8gOCA6IHZhbHVlIDwgTjkgPyA5IDogMTA7XG59O1xudmFyIHZhcmludCA9IHtcbiAgZW5jb2RlOiBlbmNvZGVfMSxcbiAgZGVjb2RlOiBkZWNvZGUsXG4gIGVuY29kaW5nTGVuZ3RoOiBsZW5ndGhcbn07XG52YXIgX2JycnBfdmFyaW50ID0gdmFyaW50O1xuZXhwb3J0IGRlZmF1bHQgX2JycnBfdmFyaW50OyJdLCJuYW1lcyI6WyJlbmNvZGVfMSIsImVuY29kZSIsIk1TQiIsIlJFU1QiLCJNU0JBTEwiLCJJTlQiLCJNYXRoIiwicG93IiwibnVtIiwib3V0Iiwib2Zmc2V0Iiwib2xkT2Zmc2V0IiwiYnl0ZXMiLCJkZWNvZGUiLCJyZWFkIiwiTVNCJDEiLCJSRVNUJDEiLCJidWYiLCJyZXMiLCJzaGlmdCIsImNvdW50ZXIiLCJiIiwibCIsImxlbmd0aCIsIlJhbmdlRXJyb3IiLCJOMSIsIk4yIiwiTjMiLCJONCIsIk41IiwiTjYiLCJONyIsIk44IiwiTjkiLCJ2YWx1ZSIsInZhcmludCIsImVuY29kaW5nTGVuZ3RoIiwiX2JycnBfdmFyaW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/alloc.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/alloc.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe)\n/* harmony export */ });\n/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/as-uint8array.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/as-uint8array.js\");\n\nfunction alloc(size = 0) {\n    if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n        return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.alloc(size));\n    }\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n        return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.allocUnsafe(size));\n    }\n    return new Uint8Array(size);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9hbGxvYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUQ7QUFDaEQsU0FBU0MsTUFBTUMsT0FBTyxDQUFDO0lBQzVCLElBQUlDLFdBQVdDLE1BQU0sSUFBSSxRQUFRRCxXQUFXQyxNQUFNLENBQUNILEtBQUssSUFBSSxNQUFNO1FBQ2hFLE9BQU9ELG9FQUFZQSxDQUFDRyxXQUFXQyxNQUFNLENBQUNILEtBQUssQ0FBQ0M7SUFDOUM7SUFDQSxPQUFPLElBQUlHLFdBQVdIO0FBQ3hCO0FBQ08sU0FBU0ksWUFBWUosT0FBTyxDQUFDO0lBQ2xDLElBQUlDLFdBQVdDLE1BQU0sSUFBSSxRQUFRRCxXQUFXQyxNQUFNLENBQUNFLFdBQVcsSUFBSSxNQUFNO1FBQ3RFLE9BQU9OLG9FQUFZQSxDQUFDRyxXQUFXQyxNQUFNLENBQUNFLFdBQVcsQ0FBQ0o7SUFDcEQ7SUFDQSxPQUFPLElBQUlHLFdBQVdIO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9lc20vc3JjL2FsbG9jLmpzP2JhNDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNVaW50OEFycmF5IH0gZnJvbSAnLi91dGlsL2FzLXVpbnQ4YXJyYXkuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGFsbG9jKHNpemUgPSAwKSB7XG4gIGlmIChnbG9iYWxUaGlzLkJ1ZmZlciAhPSBudWxsICYmIGdsb2JhbFRoaXMuQnVmZmVyLmFsbG9jICE9IG51bGwpIHtcbiAgICByZXR1cm4gYXNVaW50OEFycmF5KGdsb2JhbFRoaXMuQnVmZmVyLmFsbG9jKHNpemUpKTtcbiAgfVxuICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYWxsb2NVbnNhZmUoc2l6ZSA9IDApIHtcbiAgaWYgKGdsb2JhbFRoaXMuQnVmZmVyICE9IG51bGwgJiYgZ2xvYmFsVGhpcy5CdWZmZXIuYWxsb2NVbnNhZmUgIT0gbnVsbCkge1xuICAgIHJldHVybiBhc1VpbnQ4QXJyYXkoZ2xvYmFsVGhpcy5CdWZmZXIuYWxsb2NVbnNhZmUoc2l6ZSkpO1xuICB9XG4gIHJldHVybiBuZXcgVWludDhBcnJheShzaXplKTtcbn0iXSwibmFtZXMiOlsiYXNVaW50OEFycmF5IiwiYWxsb2MiLCJzaXplIiwiZ2xvYmFsVGhpcyIsIkJ1ZmZlciIsIlVpbnQ4QXJyYXkiLCJhbGxvY1Vuc2FmZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/alloc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/concat.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/concat.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/alloc.js\");\n/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/as-uint8array.js\");\n\n\nfunction concat(arrays, length) {\n    if (!length) {\n        length = arrays.reduce((acc, curr)=>acc + curr.length, 0);\n    }\n    const output = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(length);\n    let offset = 0;\n    for (const arr of arrays){\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(output);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9jb25jYXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlDO0FBQ2M7QUFDaEQsU0FBU0UsT0FBT0MsTUFBTSxFQUFFQyxNQUFNO0lBQ25DLElBQUksQ0FBQ0EsUUFBUTtRQUNYQSxTQUFTRCxPQUFPRSxNQUFNLENBQUMsQ0FBQ0MsS0FBS0MsT0FBU0QsTUFBTUMsS0FBS0gsTUFBTSxFQUFFO0lBQzNEO0lBQ0EsTUFBTUksU0FBU1Isc0RBQVdBLENBQUNJO0lBQzNCLElBQUlLLFNBQVM7SUFDYixLQUFLLE1BQU1DLE9BQU9QLE9BQVE7UUFDeEJLLE9BQU9HLEdBQUcsQ0FBQ0QsS0FBS0Q7UUFDaEJBLFVBQVVDLElBQUlOLE1BQU07SUFDdEI7SUFDQSxPQUFPSCxvRUFBWUEsQ0FBQ087QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvY29uY2F0LmpzPzBmMmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWxsb2NVbnNhZmUgfSBmcm9tICcuL2FsbG9jLmpzJztcbmltcG9ydCB7IGFzVWludDhBcnJheSB9IGZyb20gJy4vdXRpbC9hcy11aW50OGFycmF5LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBjb25jYXQoYXJyYXlzLCBsZW5ndGgpIHtcbiAgaWYgKCFsZW5ndGgpIHtcbiAgICBsZW5ndGggPSBhcnJheXMucmVkdWNlKChhY2MsIGN1cnIpID0+IGFjYyArIGN1cnIubGVuZ3RoLCAwKTtcbiAgfVxuICBjb25zdCBvdXRwdXQgPSBhbGxvY1Vuc2FmZShsZW5ndGgpO1xuICBsZXQgb2Zmc2V0ID0gMDtcbiAgZm9yIChjb25zdCBhcnIgb2YgYXJyYXlzKSB7XG4gICAgb3V0cHV0LnNldChhcnIsIG9mZnNldCk7XG4gICAgb2Zmc2V0ICs9IGFyci5sZW5ndGg7XG4gIH1cbiAgcmV0dXJuIGFzVWludDhBcnJheShvdXRwdXQpO1xufSJdLCJuYW1lcyI6WyJhbGxvY1Vuc2FmZSIsImFzVWludDhBcnJheSIsImNvbmNhdCIsImFycmF5cyIsImxlbmd0aCIsInJlZHVjZSIsImFjYyIsImN1cnIiLCJvdXRwdXQiLCJvZmZzZXQiLCJhcnIiLCJzZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/concat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/from-string.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/from-string.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromString: () => (/* binding */ fromString)\n/* harmony export */ });\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/bases.js\");\n/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/as-uint8array.js\");\n\n\nfunction fromString(string, encoding = \"utf8\") {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][encoding];\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === \"utf8\" || encoding === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(globalThis.Buffer.from(string, \"utf-8\"));\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9mcm9tLXN0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0M7QUFDbUI7QUFDaEQsU0FBU0UsV0FBV0MsTUFBTSxFQUFFQyxXQUFXLE1BQU07SUFDbEQsTUFBTUMsT0FBT0wsc0RBQUssQ0FBQ0ksU0FBUztJQUM1QixJQUFJLENBQUNDLE1BQU07UUFDVCxNQUFNLElBQUlDLE1BQU0sQ0FBQyxzQkFBc0IsRUFBR0YsU0FBVSxDQUFDLENBQUM7SUFDeEQ7SUFDQSxJQUFJLENBQUNBLGFBQWEsVUFBVUEsYUFBYSxPQUFNLEtBQU1HLFdBQVdDLE1BQU0sSUFBSSxRQUFRRCxXQUFXQyxNQUFNLENBQUNDLElBQUksSUFBSSxNQUFNO1FBQ2hILE9BQU9SLG9FQUFZQSxDQUFDTSxXQUFXQyxNQUFNLENBQUNDLElBQUksQ0FBQ04sUUFBUTtJQUNyRDtJQUNBLE9BQU9FLEtBQUtLLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDLENBQUMsRUFBR04sS0FBS08sTUFBTSxDQUFFLEVBQUdULE9BQVEsQ0FBQztBQUMxRCIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9mcm9tLXN0cmluZy5qcz8yNWE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlcyBmcm9tICcuL3V0aWwvYmFzZXMuanMnO1xuaW1wb3J0IHsgYXNVaW50OEFycmF5IH0gZnJvbSAnLi91dGlsL2FzLXVpbnQ4YXJyYXkuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21TdHJpbmcoc3RyaW5nLCBlbmNvZGluZyA9ICd1dGY4Jykge1xuICBjb25zdCBiYXNlID0gYmFzZXNbZW5jb2RpbmddO1xuICBpZiAoIWJhc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY29kaW5nIFwiJHsgZW5jb2RpbmcgfVwiYCk7XG4gIH1cbiAgaWYgKChlbmNvZGluZyA9PT0gJ3V0ZjgnIHx8IGVuY29kaW5nID09PSAndXRmLTgnKSAmJiBnbG9iYWxUaGlzLkJ1ZmZlciAhPSBudWxsICYmIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20gIT0gbnVsbCkge1xuICAgIHJldHVybiBhc1VpbnQ4QXJyYXkoZ2xvYmFsVGhpcy5CdWZmZXIuZnJvbShzdHJpbmcsICd1dGYtOCcpKTtcbiAgfVxuICByZXR1cm4gYmFzZS5kZWNvZGVyLmRlY29kZShgJHsgYmFzZS5wcmVmaXggfSR7IHN0cmluZyB9YCk7XG59Il0sIm5hbWVzIjpbImJhc2VzIiwiYXNVaW50OEFycmF5IiwiZnJvbVN0cmluZyIsInN0cmluZyIsImVuY29kaW5nIiwiYmFzZSIsIkVycm9yIiwiZ2xvYmFsVGhpcyIsIkJ1ZmZlciIsImZyb20iLCJkZWNvZGVyIiwiZGVjb2RlIiwicHJlZml4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/from-string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/to-string.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/to-string.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/bases.js\");\n\nfunction toString(array, encoding = \"utf8\") {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][encoding];\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === \"utf8\" || encoding === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString(\"utf8\");\n    }\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy90by1zdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsU0FBU0MsU0FBU0MsS0FBSyxFQUFFQyxXQUFXLE1BQU07SUFDL0MsTUFBTUMsT0FBT0osc0RBQUssQ0FBQ0csU0FBUztJQUM1QixJQUFJLENBQUNDLE1BQU07UUFDVCxNQUFNLElBQUlDLE1BQU0sQ0FBQyxzQkFBc0IsRUFBR0YsU0FBVSxDQUFDLENBQUM7SUFDeEQ7SUFDQSxJQUFJLENBQUNBLGFBQWEsVUFBVUEsYUFBYSxPQUFNLEtBQU1HLFdBQVdDLE1BQU0sSUFBSSxRQUFRRCxXQUFXQyxNQUFNLENBQUNDLElBQUksSUFBSSxNQUFNO1FBQ2hILE9BQU9GLFdBQVdDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDTixNQUFNTyxNQUFNLEVBQUVQLE1BQU1RLFVBQVUsRUFBRVIsTUFBTVMsVUFBVSxFQUFFVixRQUFRLENBQUM7SUFDM0Y7SUFDQSxPQUFPRyxLQUFLUSxPQUFPLENBQUNDLE1BQU0sQ0FBQ1gsT0FBT1ksU0FBUyxDQUFDO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9lc20vc3JjL3RvLXN0cmluZy5qcz82OTg4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlcyBmcm9tICcuL3V0aWwvYmFzZXMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHRvU3RyaW5nKGFycmF5LCBlbmNvZGluZyA9ICd1dGY4Jykge1xuICBjb25zdCBiYXNlID0gYmFzZXNbZW5jb2RpbmddO1xuICBpZiAoIWJhc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY29kaW5nIFwiJHsgZW5jb2RpbmcgfVwiYCk7XG4gIH1cbiAgaWYgKChlbmNvZGluZyA9PT0gJ3V0ZjgnIHx8IGVuY29kaW5nID09PSAndXRmLTgnKSAmJiBnbG9iYWxUaGlzLkJ1ZmZlciAhPSBudWxsICYmIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20gIT0gbnVsbCkge1xuICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tKGFycmF5LmJ1ZmZlciwgYXJyYXkuYnl0ZU9mZnNldCwgYXJyYXkuYnl0ZUxlbmd0aCkudG9TdHJpbmcoJ3V0ZjgnKTtcbiAgfVxuICByZXR1cm4gYmFzZS5lbmNvZGVyLmVuY29kZShhcnJheSkuc3Vic3RyaW5nKDEpO1xufSJdLCJuYW1lcyI6WyJiYXNlcyIsInRvU3RyaW5nIiwiYXJyYXkiLCJlbmNvZGluZyIsImJhc2UiLCJFcnJvciIsImdsb2JhbFRoaXMiLCJCdWZmZXIiLCJmcm9tIiwiYnVmZmVyIiwiYnl0ZU9mZnNldCIsImJ5dGVMZW5ndGgiLCJlbmNvZGVyIiwiZW5jb2RlIiwic3Vic3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/to-string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/as-uint8array.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/as-uint8array.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asUint8Array: () => (/* binding */ asUint8Array)\n/* harmony export */ });\nfunction asUint8Array(buf) {\n    if (globalThis.Buffer != null) {\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return buf;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy91dGlsL2FzLXVpbnQ4YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLGFBQWFDLEdBQUc7SUFDOUIsSUFBSUMsV0FBV0MsTUFBTSxJQUFJLE1BQU07UUFDN0IsT0FBTyxJQUFJQyxXQUFXSCxJQUFJSSxNQUFNLEVBQUVKLElBQUlLLFVBQVUsRUFBRUwsSUFBSU0sVUFBVTtJQUNsRTtJQUNBLE9BQU9OO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvdXRpbC9hcy11aW50OGFycmF5LmpzPzg0MzAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGFzVWludDhBcnJheShidWYpIHtcbiAgaWYgKGdsb2JhbFRoaXMuQnVmZmVyICE9IG51bGwpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnVmLmJ1ZmZlciwgYnVmLmJ5dGVPZmZzZXQsIGJ1Zi5ieXRlTGVuZ3RoKTtcbiAgfVxuICByZXR1cm4gYnVmO1xufSJdLCJuYW1lcyI6WyJhc1VpbnQ4QXJyYXkiLCJidWYiLCJnbG9iYWxUaGlzIiwiQnVmZmVyIiwiVWludDhBcnJheSIsImJ1ZmZlciIsImJ5dGVPZmZzZXQiLCJieXRlTGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/as-uint8array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/bases.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/bases.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/basics */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/multiformats/esm/src/basics.js\");\n/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../alloc.js */ \"(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/alloc.js\");\n\n\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec(\"utf8\", \"u\", (buf)=>{\n    const decoder = new TextDecoder(\"utf8\");\n    return \"u\" + decoder.decode(buf);\n}, (str)=>{\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec(\"ascii\", \"a\", (buf)=>{\n    let string = \"a\";\n    for(let i = 0; i < buf.length; i++){\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str)=>{\n    str = str.substring(1);\n    const buf = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_1__.allocUnsafe)(str.length);\n    for(let i = 0; i < str.length; i++){\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    \"utf-8\": string,\n    hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,\n    latin1: ascii,\n    ascii: ascii,\n    binary: ascii,\n    ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy91dGlsL2Jhc2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUNGO0FBQzFDLFNBQVNFLFlBQVlDLElBQUksRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE1BQU07SUFDL0MsT0FBTztRQUNMSDtRQUNBQztRQUNBRyxTQUFTO1lBQ1BKO1lBQ0FDO1lBQ0FDO1FBQ0Y7UUFDQUcsU0FBUztZQUFFRjtRQUFPO0lBQ3BCO0FBQ0Y7QUFDQSxNQUFNRyxTQUFTUCxZQUFZLFFBQVEsS0FBS1EsQ0FBQUE7SUFDdEMsTUFBTUYsVUFBVSxJQUFJRyxZQUFZO0lBQ2hDLE9BQU8sTUFBTUgsUUFBUUYsTUFBTSxDQUFDSTtBQUM5QixHQUFHRSxDQUFBQTtJQUNELE1BQU1MLFVBQVUsSUFBSU07SUFDcEIsT0FBT04sUUFBUUYsTUFBTSxDQUFDTyxJQUFJRSxTQUFTLENBQUM7QUFDdEM7QUFDQSxNQUFNQyxRQUFRYixZQUFZLFNBQVMsS0FBS1EsQ0FBQUE7SUFDdEMsSUFBSUQsU0FBUztJQUNiLElBQUssSUFBSU8sSUFBSSxHQUFHQSxJQUFJTixJQUFJTyxNQUFNLEVBQUVELElBQUs7UUFDbkNQLFVBQVVTLE9BQU9DLFlBQVksQ0FBQ1QsR0FBRyxDQUFDTSxFQUFFO0lBQ3RDO0lBQ0EsT0FBT1A7QUFDVCxHQUFHRyxDQUFBQTtJQUNEQSxNQUFNQSxJQUFJRSxTQUFTLENBQUM7SUFDcEIsTUFBTUosTUFBTVQsc0RBQVdBLENBQUNXLElBQUlLLE1BQU07SUFDbEMsSUFBSyxJQUFJRCxJQUFJLEdBQUdBLElBQUlKLElBQUlLLE1BQU0sRUFBRUQsSUFBSztRQUNuQ04sR0FBRyxDQUFDTSxFQUFFLEdBQUdKLElBQUlRLFVBQVUsQ0FBQ0o7SUFDMUI7SUFDQSxPQUFPTjtBQUNUO0FBQ0EsTUFBTVcsUUFBUTtJQUNaQyxNQUFNYjtJQUNOLFNBQVNBO0lBQ1RjLEtBQUt2QixzREFBS0EsQ0FBQ3dCLE1BQU07SUFDakJDLFFBQVFWO0lBQ1JBLE9BQU9BO0lBQ1BXLFFBQVFYO0lBQ1IsR0FBR2Ysc0RBQUs7QUFDVjtBQUNBLGlFQUFlcUIsS0FBS0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy91dGlsL2Jhc2VzLmpzP2MwZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZXMgfSBmcm9tICdtdWx0aWZvcm1hdHMvYmFzaWNzJztcbmltcG9ydCB7IGFsbG9jVW5zYWZlIH0gZnJvbSAnLi4vYWxsb2MuanMnO1xuZnVuY3Rpb24gY3JlYXRlQ29kZWMobmFtZSwgcHJlZml4LCBlbmNvZGUsIGRlY29kZSkge1xuICByZXR1cm4ge1xuICAgIG5hbWUsXG4gICAgcHJlZml4LFxuICAgIGVuY29kZXI6IHtcbiAgICAgIG5hbWUsXG4gICAgICBwcmVmaXgsXG4gICAgICBlbmNvZGVcbiAgICB9LFxuICAgIGRlY29kZXI6IHsgZGVjb2RlIH1cbiAgfTtcbn1cbmNvbnN0IHN0cmluZyA9IGNyZWF0ZUNvZGVjKCd1dGY4JywgJ3UnLCBidWYgPT4ge1xuICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCd1dGY4Jyk7XG4gIHJldHVybiAndScgKyBkZWNvZGVyLmRlY29kZShidWYpO1xufSwgc3RyID0+IHtcbiAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICByZXR1cm4gZW5jb2Rlci5lbmNvZGUoc3RyLnN1YnN0cmluZygxKSk7XG59KTtcbmNvbnN0IGFzY2lpID0gY3JlYXRlQ29kZWMoJ2FzY2lpJywgJ2EnLCBidWYgPT4ge1xuICBsZXQgc3RyaW5nID0gJ2EnO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGJ1Zi5sZW5ndGg7IGkrKykge1xuICAgIHN0cmluZyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ1ZltpXSk7XG4gIH1cbiAgcmV0dXJuIHN0cmluZztcbn0sIHN0ciA9PiB7XG4gIHN0ciA9IHN0ci5zdWJzdHJpbmcoMSk7XG4gIGNvbnN0IGJ1ZiA9IGFsbG9jVW5zYWZlKHN0ci5sZW5ndGgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgIGJ1ZltpXSA9IHN0ci5jaGFyQ29kZUF0KGkpO1xuICB9XG4gIHJldHVybiBidWY7XG59KTtcbmNvbnN0IEJBU0VTID0ge1xuICB1dGY4OiBzdHJpbmcsXG4gICd1dGYtOCc6IHN0cmluZyxcbiAgaGV4OiBiYXNlcy5iYXNlMTYsXG4gIGxhdGluMTogYXNjaWksXG4gIGFzY2lpOiBhc2NpaSxcbiAgYmluYXJ5OiBhc2NpaSxcbiAgLi4uYmFzZXNcbn07XG5leHBvcnQgZGVmYXVsdCBCQVNFUzsiXSwibmFtZXMiOlsiYmFzZXMiLCJhbGxvY1Vuc2FmZSIsImNyZWF0ZUNvZGVjIiwibmFtZSIsInByZWZpeCIsImVuY29kZSIsImRlY29kZSIsImVuY29kZXIiLCJkZWNvZGVyIiwic3RyaW5nIiwiYnVmIiwiVGV4dERlY29kZXIiLCJzdHIiLCJUZXh0RW5jb2RlciIsInN1YnN0cmluZyIsImFzY2lpIiwiaSIsImxlbmd0aCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImNoYXJDb2RlQXQiLCJCQVNFUyIsInV0ZjgiLCJoZXgiLCJiYXNlMTYiLCJsYXRpbjEiLCJiaW5hcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/bases.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vendor/base-x.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/vendor/base-x.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js\");\n\n\nclass Encoder {\n    constructor(name, prefix, baseEncode){\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        } else {\n            throw Error(\"Unknown type, must be binary type\");\n        }\n    }\n}\nclass Decoder {\n    constructor(name, prefix, baseDecode){\n        this.name = name;\n        this.prefix = prefix;\n        if (prefix.codePointAt(0) === undefined) {\n            throw new Error(\"Invalid prefix character\");\n        }\n        this.prefixCodePoint = prefix.codePointAt(0);\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === \"string\") {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        } else {\n            throw Error(\"Can only multibase decode strings\");\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    constructor(decoders){\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder) {\n            return decoder.decode(input);\n        } else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nconst or = (left, right)=>new ComposedDecoder({\n        ...left.decoders || {\n            [left.prefix]: left\n        },\n        ...right.decoders || {\n            [right.prefix]: right\n        }\n    });\nclass Codec {\n    constructor(name, prefix, baseEncode, baseDecode){\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nconst from = ({ name, prefix, encode, decode })=>new Codec(name, prefix, encode, decode);\nconst baseX = ({ prefix, name, alphabet })=>{\n    const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(decode(text))\n    });\n};\nconst decode = (string, alphabet, bitsPerChar, name)=>{\n    const codes = {};\n    for(let i = 0; i < alphabet.length; ++i){\n        codes[alphabet[i]] = i;\n    }\n    let end = string.length;\n    while(string[end - 1] === \"=\"){\n        --end;\n    }\n    const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n    let bits = 0;\n    let buffer = 0;\n    let written = 0;\n    for(let i = 0; i < end; ++i){\n        const value = codes[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        buffer = buffer << bitsPerChar | value;\n        bits += bitsPerChar;\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 255 & buffer >> bits;\n        }\n    }\n    if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n        throw new SyntaxError(\"Unexpected end of data\");\n    }\n    return out;\n};\nconst encode = (data, alphabet, bitsPerChar)=>{\n    const pad = alphabet[alphabet.length - 1] === \"=\";\n    const mask = (1 << bitsPerChar) - 1;\n    let out = \"\";\n    let bits = 0;\n    let buffer = 0;\n    for(let i = 0; i < data.length; ++i){\n        buffer = buffer << 8 | data[i];\n        bits += 8;\n        while(bits > bitsPerChar){\n            bits -= bitsPerChar;\n            out += alphabet[mask & buffer >> bits];\n        }\n    }\n    if (bits) {\n        out += alphabet[mask & buffer << bitsPerChar - bits];\n    }\n    if (pad) {\n        while(out.length * bitsPerChar & 7){\n            out += \"=\";\n        }\n    }\n    return out;\n};\nconst rfc4648 = ({ name, prefix, bitsPerChar, alphabet })=>{\n    return from({\n        prefix,\n        name,\n        encode (input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode (input) {\n            return decode(input, alphabet, bitsPerChar, name);\n        }\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base10.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base10.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base10: () => (/* binding */ base10)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base10 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"9\",\n    name: \"base10\",\n    alphabet: \"0123456789\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UxMC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrQztBQUMzQixNQUFNQyxTQUFTRCwrQ0FBS0EsQ0FBQztJQUMxQkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7QUFDWixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTEwLmpzPzYyOGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UxMCA9IGJhc2VYKHtcbiAgcHJlZml4OiAnOScsXG4gIG5hbWU6ICdiYXNlMTAnLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODknXG59KTsiXSwibmFtZXMiOlsiYmFzZVgiLCJiYXNlMTAiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base10.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base16.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base16.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base16: () => (/* binding */ base16),\n/* harmony export */   base16upper: () => (/* binding */ base16upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base16 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"f\",\n    name: \"base16\",\n    alphabet: \"0123456789abcdef\",\n    bitsPerChar: 4\n});\nconst base16upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"F\",\n    name: \"base16upper\",\n    alphabet: \"0123456789ABCDEF\",\n    bitsPerChar: 4\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UxNi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0M7QUFDN0IsTUFBTUMsU0FBU0QsaURBQU9BLENBQUM7SUFDNUJFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTUMsY0FBY04saURBQU9BLENBQUM7SUFDakNFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTE2LmpzP2VjODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTE2ID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ2YnLFxuICBuYW1lOiAnYmFzZTE2JyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmJyxcbiAgYml0c1BlckNoYXI6IDRcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UxNnVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ0YnLFxuICBuYW1lOiAnYmFzZTE2dXBwZXInLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUYnLFxuICBiaXRzUGVyQ2hhcjogNFxufSk7Il0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlMTYiLCJwcmVmaXgiLCJuYW1lIiwiYWxwaGFiZXQiLCJiaXRzUGVyQ2hhciIsImJhc2UxNnVwcGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base16.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base2.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base2.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base2: () => (/* binding */ base2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base2 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"0\",\n    name: \"base2\",\n    alphabet: \"01\",\n    bitsPerChar: 1\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLFFBQVFELGlEQUFPQSxDQUFDO0lBQzNCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UyLmpzP2FkODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnMCcsXG4gIG5hbWU6ICdiYXNlMicsXG4gIGFscGhhYmV0OiAnMDEnLFxuICBiaXRzUGVyQ2hhcjogMVxufSk7Il0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlMiIsInByZWZpeCIsIm5hbWUiLCJhbHBoYWJldCIsImJpdHNQZXJDaGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base256emoji.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base256emoji.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base256emoji: () => (/* binding */ base256emoji)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst alphabet = Array.from(\"\\uD83D\\uDE80\\uD83E\\uDE90☄\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09☀\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02❤\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09☺\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E✌✨\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D❣\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33✋\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13⭐✅\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6✔\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90☹\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20☝\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B⚽\\uD83E\\uDD19☕\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81⚡\\uD83C\\uDF1E\\uD83C\\uDF88❌✊\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C✈\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74▶➡❓\\uD83D\\uDC8E\\uD83D\\uDCB8⬇\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A⚠\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37☎\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51❄\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42\");\nconst alphabetBytesToChars = alphabet.reduce((p, c, i)=>{\n    p[i] = c;\n    return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i)=>{\n    p[c.codePointAt(0)] = i;\n    return p;\n}, []);\nfunction encode(data) {\n    return data.reduce((p, c)=>{\n        p += alphabetBytesToChars[c];\n        return p;\n    }, \"\");\n}\nfunction decode(str) {\n    const byts = [];\n    for (const char of str){\n        const byt = alphabetCharsToBytes[char.codePointAt(0)];\n        if (byt === undefined) {\n            throw new Error(`Non-base256emoji character: ${char}`);\n        }\n        byts.push(byt);\n    }\n    return new Uint8Array(byts);\n}\nconst base256emoji = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n    prefix: \"\\uD83D\\uDE80\",\n    name: \"base256emoji\",\n    encode,\n    decode\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UyNTZlbW9qaS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpQztBQUNqQyxNQUFNQyxXQUFXQyxNQUFNRixJQUFJLENBQUM7QUFDNUIsTUFBTUcsdUJBQXVCRixTQUFTRyxNQUFNLENBQUMsQ0FBQ0MsR0FBR0MsR0FBR0M7SUFDbERGLENBQUMsQ0FBQ0UsRUFBRSxHQUFHRDtJQUNQLE9BQU9EO0FBQ1QsR0FBRyxFQUFFO0FBQ0wsTUFBTUcsdUJBQXVCUCxTQUFTRyxNQUFNLENBQUMsQ0FBQ0MsR0FBR0MsR0FBR0M7SUFDbERGLENBQUMsQ0FBQ0MsRUFBRUcsV0FBVyxDQUFDLEdBQUcsR0FBR0Y7SUFDdEIsT0FBT0Y7QUFDVCxHQUFHLEVBQUU7QUFDTCxTQUFTSyxPQUFPQyxJQUFJO0lBQ2xCLE9BQU9BLEtBQUtQLE1BQU0sQ0FBQyxDQUFDQyxHQUFHQztRQUNyQkQsS0FBS0Ysb0JBQW9CLENBQUNHLEVBQUU7UUFDNUIsT0FBT0Q7SUFDVCxHQUFHO0FBQ0w7QUFDQSxTQUFTTyxPQUFPQyxHQUFHO0lBQ2pCLE1BQU1DLE9BQU8sRUFBRTtJQUNmLEtBQUssTUFBTUMsUUFBUUYsSUFBSztRQUN0QixNQUFNRyxNQUFNUixvQkFBb0IsQ0FBQ08sS0FBS04sV0FBVyxDQUFDLEdBQUc7UUFDckQsSUFBSU8sUUFBUUMsV0FBVztZQUNyQixNQUFNLElBQUlDLE1BQU0sQ0FBQyw0QkFBNEIsRUFBR0gsS0FBTSxDQUFDO1FBQ3pEO1FBQ0FELEtBQUtLLElBQUksQ0FBQ0g7SUFDWjtJQUNBLE9BQU8sSUFBSUksV0FBV047QUFDeEI7QUFDTyxNQUFNTyxlQUFlckIsOENBQUlBLENBQUM7SUFDL0JzQixRQUFRO0lBQ1JDLE1BQU07SUFDTmI7SUFDQUU7QUFDRixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvYmFzZTI1NmVtb2ppLmpzPzAzMzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vYmFzZS5qcyc7XG5jb25zdCBhbHBoYWJldCA9IEFycmF5LmZyb20oJ1xcdUQ4M0RcXHVERTgwXFx1RDgzRVxcdURFOTBcXHUyNjA0XFx1RDgzRFxcdURFRjBcXHVEODNDXFx1REYwQ1xcdUQ4M0NcXHVERjExXFx1RDgzQ1xcdURGMTJcXHVEODNDXFx1REYxM1xcdUQ4M0NcXHVERjE0XFx1RDgzQ1xcdURGMTVcXHVEODNDXFx1REYxNlxcdUQ4M0NcXHVERjE3XFx1RDgzQ1xcdURGMThcXHVEODNDXFx1REYwRFxcdUQ4M0NcXHVERjBGXFx1RDgzQ1xcdURGMEVcXHVEODNEXFx1REMwOVxcdTI2MDBcXHVEODNEXFx1RENCQlxcdUQ4M0RcXHVEREE1XFx1RDgzRFxcdURDQkVcXHVEODNEXFx1RENCRlxcdUQ4M0RcXHVERTAyXFx1Mjc2NFxcdUQ4M0RcXHVERTBEXFx1RDgzRVxcdUREMjNcXHVEODNEXFx1REUwQVxcdUQ4M0RcXHVERTRGXFx1RDgzRFxcdURDOTVcXHVEODNEXFx1REUyRFxcdUQ4M0RcXHVERTE4XFx1RDgzRFxcdURDNERcXHVEODNEXFx1REUwNVxcdUQ4M0RcXHVEQzRGXFx1RDgzRFxcdURFMDFcXHVEODNEXFx1REQyNVxcdUQ4M0VcXHVERDcwXFx1RDgzRFxcdURDOTRcXHVEODNEXFx1REM5NlxcdUQ4M0RcXHVEQzk5XFx1RDgzRFxcdURFMjJcXHVEODNFXFx1REQxNFxcdUQ4M0RcXHVERTA2XFx1RDgzRFxcdURFNDRcXHVEODNEXFx1RENBQVxcdUQ4M0RcXHVERTA5XFx1MjYzQVxcdUQ4M0RcXHVEQzRDXFx1RDgzRVxcdUREMTdcXHVEODNEXFx1REM5Q1xcdUQ4M0RcXHVERTE0XFx1RDgzRFxcdURFMEVcXHVEODNEXFx1REUwN1xcdUQ4M0NcXHVERjM5XFx1RDgzRVxcdUREMjZcXHVEODNDXFx1REY4OVxcdUQ4M0RcXHVEQzlFXFx1MjcwQ1xcdTI3MjhcXHVEODNFXFx1REQzN1xcdUQ4M0RcXHVERTMxXFx1RDgzRFxcdURFMENcXHVEODNDXFx1REYzOFxcdUQ4M0RcXHVERTRDXFx1RDgzRFxcdURFMEJcXHVEODNEXFx1REM5N1xcdUQ4M0RcXHVEQzlBXFx1RDgzRFxcdURFMEZcXHVEODNEXFx1REM5QlxcdUQ4M0RcXHVERTQyXFx1RDgzRFxcdURDOTNcXHVEODNFXFx1REQyOVxcdUQ4M0RcXHVERTA0XFx1RDgzRFxcdURFMDBcXHVEODNEXFx1RERBNFxcdUQ4M0RcXHVERTAzXFx1RDgzRFxcdURDQUZcXHVEODNEXFx1REU0OFxcdUQ4M0RcXHVEQzQ3XFx1RDgzQ1xcdURGQjZcXHVEODNEXFx1REUxMlxcdUQ4M0VcXHVERDJEXFx1Mjc2M1xcdUQ4M0RcXHVERTFDXFx1RDgzRFxcdURDOEJcXHVEODNEXFx1REM0MFxcdUQ4M0RcXHVERTJBXFx1RDgzRFxcdURFMTFcXHVEODNEXFx1RENBNVxcdUQ4M0RcXHVERTRCXFx1RDgzRFxcdURFMUVcXHVEODNEXFx1REUyOVxcdUQ4M0RcXHVERTIxXFx1RDgzRVxcdUREMkFcXHVEODNEXFx1REM0QVxcdUQ4M0VcXHVERDczXFx1RDgzRFxcdURFMjVcXHVEODNFXFx1REQyNFxcdUQ4M0RcXHVEQzQ5XFx1RDgzRFxcdURDODNcXHVEODNEXFx1REUzM1xcdTI3MEJcXHVEODNEXFx1REUxQVxcdUQ4M0RcXHVERTFEXFx1RDgzRFxcdURFMzRcXHVEODNDXFx1REYxRlxcdUQ4M0RcXHVERTJDXFx1RDgzRFxcdURFNDNcXHVEODNDXFx1REY0MFxcdUQ4M0NcXHVERjM3XFx1RDgzRFxcdURFM0JcXHVEODNEXFx1REUxM1xcdTJCNTBcXHUyNzA1XFx1RDgzRVxcdUREN0FcXHVEODNDXFx1REYwOFxcdUQ4M0RcXHVERTA4XFx1RDgzRVxcdUREMThcXHVEODNEXFx1RENBNlxcdTI3MTRcXHVEODNEXFx1REUyM1xcdUQ4M0NcXHVERkMzXFx1RDgzRFxcdURDOTBcXHUyNjM5XFx1RDgzQ1xcdURGOEFcXHVEODNEXFx1REM5OFxcdUQ4M0RcXHVERTIwXFx1MjYxRFxcdUQ4M0RcXHVERTE1XFx1RDgzQ1xcdURGM0FcXHVEODNDXFx1REY4MlxcdUQ4M0NcXHVERjNCXFx1RDgzRFxcdURFMTBcXHVEODNEXFx1REQ5NVxcdUQ4M0RcXHVEQzlEXFx1RDgzRFxcdURFNEFcXHVEODNEXFx1REUzOVxcdUQ4M0RcXHVEREUzXFx1RDgzRFxcdURDQUJcXHVEODNEXFx1REM4MFxcdUQ4M0RcXHVEQzUxXFx1RDgzQ1xcdURGQjVcXHVEODNFXFx1REQxRVxcdUQ4M0RcXHVERTFCXFx1RDgzRFxcdUREMzRcXHVEODNEXFx1REUyNFxcdUQ4M0NcXHVERjNDXFx1RDgzRFxcdURFMkJcXHUyNkJEXFx1RDgzRVxcdUREMTlcXHUyNjE1XFx1RDgzQ1xcdURGQzZcXHVEODNFXFx1REQyQlxcdUQ4M0RcXHVEQzQ4XFx1RDgzRFxcdURFMkVcXHVEODNEXFx1REU0NlxcdUQ4M0NcXHVERjdCXFx1RDgzQ1xcdURGNDNcXHVEODNEXFx1REMzNlxcdUQ4M0RcXHVEQzgxXFx1RDgzRFxcdURFMzJcXHVEODNDXFx1REYzRlxcdUQ4M0VcXHVEREUxXFx1RDgzQ1xcdURGODFcXHUyNkExXFx1RDgzQ1xcdURGMUVcXHVEODNDXFx1REY4OFxcdTI3NENcXHUyNzBBXFx1RDgzRFxcdURDNEJcXHVEODNEXFx1REUzMFxcdUQ4M0VcXHVERDI4XFx1RDgzRFxcdURFMzZcXHVEODNFXFx1REQxRFxcdUQ4M0RcXHVERUI2XFx1RDgzRFxcdURDQjBcXHVEODNDXFx1REY1M1xcdUQ4M0RcXHVEQ0EyXFx1RDgzRVxcdUREMUZcXHVEODNEXFx1REU0MVxcdUQ4M0RcXHVERUE4XFx1RDgzRFxcdURDQThcXHVEODNFXFx1REQyQ1xcdTI3MDhcXHVEODNDXFx1REY4MFxcdUQ4M0NcXHVERjdBXFx1RDgzRVxcdUREMTNcXHVEODNEXFx1REUxOVxcdUQ4M0RcXHVEQzlGXFx1RDgzQ1xcdURGMzFcXHVEODNEXFx1REUxNlxcdUQ4M0RcXHVEQzc2XFx1RDgzRVxcdURENzRcXHUyNUI2XFx1MjdBMVxcdTI3NTNcXHVEODNEXFx1REM4RVxcdUQ4M0RcXHVEQ0I4XFx1MkIwN1xcdUQ4M0RcXHVERTI4XFx1RDgzQ1xcdURGMUFcXHVEODNFXFx1REQ4QlxcdUQ4M0RcXHVERTM3XFx1RDgzRFxcdUREN0FcXHUyNkEwXFx1RDgzRFxcdURFNDVcXHVEODNEXFx1REUxRlxcdUQ4M0RcXHVERTM1XFx1RDgzRFxcdURDNEVcXHVEODNFXFx1REQzMlxcdUQ4M0VcXHVERDIwXFx1RDgzRVxcdUREMjdcXHVEODNEXFx1RENDQ1xcdUQ4M0RcXHVERDM1XFx1RDgzRFxcdURDODVcXHVEODNFXFx1REREMFxcdUQ4M0RcXHVEQzNFXFx1RDgzQ1xcdURGNTJcXHVEODNEXFx1REUxN1xcdUQ4M0VcXHVERDExXFx1RDgzQ1xcdURGMEFcXHVEODNFXFx1REQyRlxcdUQ4M0RcXHVEQzM3XFx1MjYwRVxcdUQ4M0RcXHVEQ0E3XFx1RDgzRFxcdURFMkZcXHVEODNEXFx1REM4NlxcdUQ4M0RcXHVEQzQ2XFx1RDgzQ1xcdURGQTRcXHVEODNEXFx1REU0N1xcdUQ4M0NcXHVERjUxXFx1Mjc0NFxcdUQ4M0NcXHVERjM0XFx1RDgzRFxcdURDQTNcXHVEODNEXFx1REMzOFxcdUQ4M0RcXHVEQzhDXFx1RDgzRFxcdURDQ0RcXHVEODNFXFx1REQ0MFxcdUQ4M0VcXHVERDIyXFx1RDgzRFxcdURDNDVcXHVEODNEXFx1RENBMVxcdUQ4M0RcXHVEQ0E5XFx1RDgzRFxcdURDNTBcXHVEODNEXFx1RENGOFxcdUQ4M0RcXHVEQzdCXFx1RDgzRVxcdUREMTBcXHVEODNFXFx1REQyRVxcdUQ4M0NcXHVERkJDXFx1RDgzRVxcdURENzVcXHVEODNEXFx1REVBOVxcdUQ4M0NcXHVERjRFXFx1RDgzQ1xcdURGNEFcXHVEODNEXFx1REM3Q1xcdUQ4M0RcXHVEQzhEXFx1RDgzRFxcdURDRTNcXHVEODNFXFx1REQ0MicpO1xuY29uc3QgYWxwaGFiZXRCeXRlc1RvQ2hhcnMgPSBhbHBoYWJldC5yZWR1Y2UoKHAsIGMsIGkpID0+IHtcbiAgcFtpXSA9IGM7XG4gIHJldHVybiBwO1xufSwgW10pO1xuY29uc3QgYWxwaGFiZXRDaGFyc1RvQnl0ZXMgPSBhbHBoYWJldC5yZWR1Y2UoKHAsIGMsIGkpID0+IHtcbiAgcFtjLmNvZGVQb2ludEF0KDApXSA9IGk7XG4gIHJldHVybiBwO1xufSwgW10pO1xuZnVuY3Rpb24gZW5jb2RlKGRhdGEpIHtcbiAgcmV0dXJuIGRhdGEucmVkdWNlKChwLCBjKSA9PiB7XG4gICAgcCArPSBhbHBoYWJldEJ5dGVzVG9DaGFyc1tjXTtcbiAgICByZXR1cm4gcDtcbiAgfSwgJycpO1xufVxuZnVuY3Rpb24gZGVjb2RlKHN0cikge1xuICBjb25zdCBieXRzID0gW107XG4gIGZvciAoY29uc3QgY2hhciBvZiBzdHIpIHtcbiAgICBjb25zdCBieXQgPSBhbHBoYWJldENoYXJzVG9CeXRlc1tjaGFyLmNvZGVQb2ludEF0KDApXTtcbiAgICBpZiAoYnl0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgTm9uLWJhc2UyNTZlbW9qaSBjaGFyYWN0ZXI6ICR7IGNoYXIgfWApO1xuICAgIH1cbiAgICBieXRzLnB1c2goYnl0KTtcbiAgfVxuICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnl0cyk7XG59XG5leHBvcnQgY29uc3QgYmFzZTI1NmVtb2ppID0gZnJvbSh7XG4gIHByZWZpeDogJ1xcdUQ4M0RcXHVERTgwJyxcbiAgbmFtZTogJ2Jhc2UyNTZlbW9qaScsXG4gIGVuY29kZSxcbiAgZGVjb2RlXG59KTsiXSwibmFtZXMiOlsiZnJvbSIsImFscGhhYmV0IiwiQXJyYXkiLCJhbHBoYWJldEJ5dGVzVG9DaGFycyIsInJlZHVjZSIsInAiLCJjIiwiaSIsImFscGhhYmV0Q2hhcnNUb0J5dGVzIiwiY29kZVBvaW50QXQiLCJlbmNvZGUiLCJkYXRhIiwiZGVjb2RlIiwic3RyIiwiYnl0cyIsImNoYXIiLCJieXQiLCJ1bmRlZmluZWQiLCJFcnJvciIsInB1c2giLCJVaW50OEFycmF5IiwiYmFzZTI1NmVtb2ppIiwicHJlZml4IiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base256emoji.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base32.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base32.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"b\",\n    name: \"base32\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n    bitsPerChar: 5\n});\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"B\",\n    name: \"base32upper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n    bitsPerChar: 5\n});\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"c\",\n    name: \"base32pad\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n    bitsPerChar: 5\n});\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"C\",\n    name: \"base32padupper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n    bitsPerChar: 5\n});\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"v\",\n    name: \"base32hex\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n    bitsPerChar: 5\n});\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"V\",\n    name: \"base32hexupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n    bitsPerChar: 5\n});\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"t\",\n    name: \"base32hexpad\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n    bitsPerChar: 5\n});\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"T\",\n    name: \"base32hexpadupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n    bitsPerChar: 5\n});\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"h\",\n    name: \"base32z\",\n    alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n    bitsPerChar: 5\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UzMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLFNBQVNELGlEQUFPQSxDQUFDO0lBQzVCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1DLGNBQWNOLGlEQUFPQSxDQUFDO0lBQ2pDRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1FLFlBQVlQLGlEQUFPQSxDQUFDO0lBQy9CRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1HLGlCQUFpQlIsaURBQU9BLENBQUM7SUFDcENFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTUksWUFBWVQsaURBQU9BLENBQUM7SUFDL0JFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLGFBQWE7QUFDZixHQUFHO0FBQ0ksTUFBTUssaUJBQWlCVixpREFBT0EsQ0FBQztJQUNwQ0UsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNTSxlQUFlWCxpREFBT0EsQ0FBQztJQUNsQ0UsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNTyxvQkFBb0JaLGlEQUFPQSxDQUFDO0lBQ3ZDRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRztBQUNJLE1BQU1RLFVBQVViLGlEQUFPQSxDQUFDO0lBQzdCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UzMi5qcz81NGE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGJhc2UzMiA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdiJyxcbiAgbmFtZTogJ2Jhc2UzMicsXG4gIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1NjcnLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMydXBwZXIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnQicsXG4gIG5hbWU6ICdiYXNlMzJ1cHBlcicsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1NjcnLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ2MnLFxuICBuYW1lOiAnYmFzZTMycGFkJyxcbiAgYWxwaGFiZXQ6ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2Nz0nLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMycGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnQycsXG4gIG5hbWU6ICdiYXNlMzJwYWR1cHBlcicsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1Njc9JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMmhleCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICd2JyxcbiAgbmFtZTogJ2Jhc2UzMmhleCcsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXYnLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4dXBwZXIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnVicsXG4gIG5hbWU6ICdiYXNlMzJoZXh1cHBlcicsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVYnLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ3QnLFxuICBuYW1lOiAnYmFzZTMyaGV4cGFkJyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj0nLFxuICBiaXRzUGVyQ2hhcjogNVxufSk7XG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnVCcsXG4gIG5hbWU6ICdiYXNlMzJoZXhwYWR1cHBlcicsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVY9JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2UzMnogPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnaCcsXG4gIG5hbWU6ICdiYXNlMzJ6JyxcbiAgYWxwaGFiZXQ6ICd5Ym5kcmZnOGVqa21jcHF4b3QxdXdpc3phMzQ1aDc2OScsXG4gIGJpdHNQZXJDaGFyOiA1XG59KTsiXSwibmFtZXMiOlsicmZjNDY0OCIsImJhc2UzMiIsInByZWZpeCIsIm5hbWUiLCJhbHBoYWJldCIsImJpdHNQZXJDaGFyIiwiYmFzZTMydXBwZXIiLCJiYXNlMzJwYWQiLCJiYXNlMzJwYWR1cHBlciIsImJhc2UzMmhleCIsImJhc2UzMmhleHVwcGVyIiwiYmFzZTMyaGV4cGFkIiwiYmFzZTMyaGV4cGFkdXBwZXIiLCJiYXNlMzJ6Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base36.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base36.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"k\",\n    name: \"base36\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\"\n});\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    prefix: \"K\",\n    name: \"base36upper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2UzNi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDM0IsTUFBTUMsU0FBU0QsK0NBQUtBLENBQUM7SUFDMUJFLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxVQUFVO0FBQ1osR0FBRztBQUNJLE1BQU1DLGNBQWNMLCtDQUFLQSxDQUFDO0lBQy9CRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtBQUNaLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNlcy9iYXNlMzYuanM/ZDRhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlWCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTM2ID0gYmFzZVgoe1xuICBwcmVmaXg6ICdrJyxcbiAgbmFtZTogJ2Jhc2UzNicsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6J1xufSk7XG5leHBvcnQgY29uc3QgYmFzZTM2dXBwZXIgPSBiYXNlWCh7XG4gIHByZWZpeDogJ0snLFxuICBuYW1lOiAnYmFzZTM2dXBwZXInLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWidcbn0pOyJdLCJuYW1lcyI6WyJiYXNlWCIsImJhc2UzNiIsInByZWZpeCIsIm5hbWUiLCJhbHBoYWJldCIsImJhc2UzNnVwcGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base36.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base58.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base58.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: \"base58btc\",\n    prefix: \"z\",\n    alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n});\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n    name: \"base58flickr\",\n    prefix: \"Z\",\n    alphabet: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2U1OC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0M7QUFDM0IsTUFBTUMsWUFBWUQsK0NBQUtBLENBQUM7SUFDN0JFLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxVQUFVO0FBQ1osR0FBRztBQUNJLE1BQU1DLGVBQWVMLCtDQUFLQSxDQUFDO0lBQ2hDRSxNQUFNO0lBQ05DLFFBQVE7SUFDUkMsVUFBVTtBQUNaLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNlcy9iYXNlNTguanM/MzJmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlWCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTU4YnRjID0gYmFzZVgoe1xuICBuYW1lOiAnYmFzZTU4YnRjJyxcbiAgcHJlZml4OiAneicsXG4gIGFscGhhYmV0OiAnMTIzNDU2Nzg5QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaYWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5eidcbn0pO1xuZXhwb3J0IGNvbnN0IGJhc2U1OGZsaWNrciA9IGJhc2VYKHtcbiAgbmFtZTogJ2Jhc2U1OGZsaWNrcicsXG4gIHByZWZpeDogJ1onLFxuICBhbHBoYWJldDogJzEyMzQ1Njc4OWFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXpBQkNERUZHSEpLTE1OUFFSU1RVVldYWVonXG59KTsiXSwibmFtZXMiOlsiYmFzZVgiLCJiYXNlNThidGMiLCJuYW1lIiwicHJlZml4IiwiYWxwaGFiZXQiLCJiYXNlNThmbGlja3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base58.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base64.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base64.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"m\",\n    name: \"base64\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    bitsPerChar: 6\n});\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"M\",\n    name: \"base64pad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n    bitsPerChar: 6\n});\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"u\",\n    name: \"base64url\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bitsPerChar: 6\n});\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"U\",\n    name: \"base64urlpad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n    bitsPerChar: 6\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvQztBQUM3QixNQUFNQyxTQUFTRCxpREFBT0EsQ0FBQztJQUM1QkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNQyxZQUFZTixpREFBT0EsQ0FBQztJQUMvQkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNRSxZQUFZUCxpREFBT0EsQ0FBQztJQUMvQkUsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUc7QUFDSSxNQUFNRyxlQUFlUixpREFBT0EsQ0FBQztJQUNsQ0UsUUFBUTtJQUNSQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsYUFBYTtBQUNmLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNlcy9iYXNlNjQuanM/NDcyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjb25zdCBiYXNlNjQgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnbScsXG4gIG5hbWU6ICdiYXNlNjQnLFxuICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nLFxuICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0cGFkID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ00nLFxuICBuYW1lOiAnYmFzZTY0cGFkJyxcbiAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPScsXG4gIGJpdHNQZXJDaGFyOiA2XG59KTtcbmV4cG9ydCBjb25zdCBiYXNlNjR1cmwgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAndScsXG4gIG5hbWU6ICdiYXNlNjR1cmwnLFxuICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5LV8nLFxuICBiaXRzUGVyQ2hhcjogNlxufSk7XG5leHBvcnQgY29uc3QgYmFzZTY0dXJscGFkID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ1UnLFxuICBuYW1lOiAnYmFzZTY0dXJscGFkJyxcbiAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OS1fPScsXG4gIGJpdHNQZXJDaGFyOiA2XG59KTsiXSwibmFtZXMiOlsicmZjNDY0OCIsImJhc2U2NCIsInByZWZpeCIsIm5hbWUiLCJhbHBoYWJldCIsImJpdHNQZXJDaGFyIiwiYmFzZTY0cGFkIiwiYmFzZTY0dXJsIiwiYmFzZTY0dXJscGFkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base8.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base8.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base8: () => (/* binding */ base8)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\");\n\nconst base8 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n    prefix: \"7\",\n    name: \"base8\",\n    alphabet: \"01234567\",\n    bitsPerChar: 3\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2U4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLFFBQVFELGlEQUFPQSxDQUFDO0lBQzNCRSxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxhQUFhO0FBQ2YsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2Jhc2U4LmpzPzBhYWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY29uc3QgYmFzZTggPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnNycsXG4gIG5hbWU6ICdiYXNlOCcsXG4gIGFscGhhYmV0OiAnMDEyMzQ1NjcnLFxuICBiaXRzUGVyQ2hhcjogM1xufSk7Il0sIm5hbWVzIjpbInJmYzQ2NDgiLCJiYXNlOCIsInByZWZpeCIsIm5hbWUiLCJhbHBoYWJldCIsImJpdHNQZXJDaGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/identity.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/identity.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js\");\n\n\nconst identity = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n    prefix: \"\\x00\",\n    name: \"identity\",\n    encode: (buf)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.toString)(buf),\n    decode: (str)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.fromString)(str)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2VzL2lkZW50aXR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpQztBQUlaO0FBQ2QsTUFBTUcsV0FBV0gsOENBQUlBLENBQUM7SUFDM0JJLFFBQVE7SUFDUkMsTUFBTTtJQUNOQyxRQUFRQyxDQUFBQSxNQUFPTCxtREFBUUEsQ0FBQ0s7SUFDeEJDLFFBQVFDLENBQUFBLE1BQU9SLHFEQUFVQSxDQUFDUTtBQUM1QixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYmFzZXMvaWRlbnRpdHkuanM/NzE0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tIH0gZnJvbSAnLi9iYXNlLmpzJztcbmltcG9ydCB7XG4gIGZyb21TdHJpbmcsXG4gIHRvU3RyaW5nXG59IGZyb20gJy4uL2J5dGVzLmpzJztcbmV4cG9ydCBjb25zdCBpZGVudGl0eSA9IGZyb20oe1xuICBwcmVmaXg6ICdcXDAnLFxuICBuYW1lOiAnaWRlbnRpdHknLFxuICBlbmNvZGU6IGJ1ZiA9PiB0b1N0cmluZyhidWYpLFxuICBkZWNvZGU6IHN0ciA9PiBmcm9tU3RyaW5nKHN0cilcbn0pOyJdLCJuYW1lcyI6WyJmcm9tIiwiZnJvbVN0cmluZyIsInRvU3RyaW5nIiwiaWRlbnRpdHkiLCJwcmVmaXgiLCJuYW1lIiwiZW5jb2RlIiwiYnVmIiwiZGVjb2RlIiwic3RyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/basics.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/basics.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.CID),\n/* harmony export */   bases: () => (/* binding */ bases),\n/* harmony export */   bytes: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.bytes),\n/* harmony export */   codecs: () => (/* binding */ codecs),\n/* harmony export */   digest: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.digest),\n/* harmony export */   hasher: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.hasher),\n/* harmony export */   hashes: () => (/* binding */ hashes),\n/* harmony export */   varint: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.varint)\n/* harmony export */ });\n/* harmony import */ var _bases_identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/identity.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/identity.js\");\n/* harmony import */ var _bases_base2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base2.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base2.js\");\n/* harmony import */ var _bases_base8_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base8.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base8.js\");\n/* harmony import */ var _bases_base10_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base10.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base10.js\");\n/* harmony import */ var _bases_base16_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bases/base16.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base16.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bases/base36.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base58.js\");\n/* harmony import */ var _bases_base64_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bases/base64.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base64.js\");\n/* harmony import */ var _bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bases/base256emoji.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base256emoji.js\");\n/* harmony import */ var _hashes_sha2_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./hashes/sha2.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/sha2.js\");\n/* harmony import */ var _hashes_identity_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./hashes/identity.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/identity.js\");\n/* harmony import */ var _codecs_raw_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./codecs/raw.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/codecs/raw.js\");\n/* harmony import */ var _codecs_json_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./codecs/json.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/codecs/json.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst bases = {\n    ..._bases_identity_js__WEBPACK_IMPORTED_MODULE_0__,\n    ..._bases_base2_js__WEBPACK_IMPORTED_MODULE_1__,\n    ..._bases_base8_js__WEBPACK_IMPORTED_MODULE_2__,\n    ..._bases_base10_js__WEBPACK_IMPORTED_MODULE_3__,\n    ..._bases_base16_js__WEBPACK_IMPORTED_MODULE_4__,\n    ..._bases_base32_js__WEBPACK_IMPORTED_MODULE_5__,\n    ..._bases_base36_js__WEBPACK_IMPORTED_MODULE_6__,\n    ..._bases_base58_js__WEBPACK_IMPORTED_MODULE_7__,\n    ..._bases_base64_js__WEBPACK_IMPORTED_MODULE_8__,\n    ..._bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_9__\n};\nconst hashes = {\n    ..._hashes_sha2_js__WEBPACK_IMPORTED_MODULE_10__,\n    ..._hashes_identity_js__WEBPACK_IMPORTED_MODULE_11__\n};\nconst codecs = {\n    raw: _codecs_raw_js__WEBPACK_IMPORTED_MODULE_12__,\n    json: _codecs_json_js__WEBPACK_IMPORTED_MODULE_13__\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2Jhc2ljcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFvRDtBQUNWO0FBQ0E7QUFDRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDWTtBQUNmO0FBQ1E7QUFDVjtBQUNFO0FBT3JCO0FBQ3BCLE1BQU1tQixRQUFRO0lBQ1osR0FBR25CLCtDQUFZO0lBQ2YsR0FBR0MsNENBQUs7SUFDUixHQUFHQyw0Q0FBSztJQUNSLEdBQUdDLDZDQUFNO0lBQ1QsR0FBR0MsNkNBQU07SUFDVCxHQUFHQyw2Q0FBTTtJQUNULEdBQUdDLDZDQUFNO0lBQ1QsR0FBR0MsNkNBQU07SUFDVCxHQUFHQyw2Q0FBTTtJQUNULEdBQUdDLG1EQUFZO0FBQ2pCO0FBQ0EsTUFBTVcsU0FBUztJQUNiLEdBQUdWLDZDQUFJO0lBQ1AsR0FBR0MsaURBQVE7QUFDYjtBQUNBLE1BQU1VLFNBQVM7SUFDYlQsR0FBR0EsOENBQUFBO0lBQ0hDLElBQUlBLCtDQUFBQTtBQUNOO0FBVUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9iYXNpY3MuanM/OTVmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBpZGVudGl0eUJhc2UgZnJvbSAnLi9iYXNlcy9pZGVudGl0eS5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMiBmcm9tICcuL2Jhc2VzL2Jhc2UyLmpzJztcbmltcG9ydCAqIGFzIGJhc2U4IGZyb20gJy4vYmFzZXMvYmFzZTguanMnO1xuaW1wb3J0ICogYXMgYmFzZTEwIGZyb20gJy4vYmFzZXMvYmFzZTEwLmpzJztcbmltcG9ydCAqIGFzIGJhc2UxNiBmcm9tICcuL2Jhc2VzL2Jhc2UxNi5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlMzIgZnJvbSAnLi9iYXNlcy9iYXNlMzIuanMnO1xuaW1wb3J0ICogYXMgYmFzZTM2IGZyb20gJy4vYmFzZXMvYmFzZTM2LmpzJztcbmltcG9ydCAqIGFzIGJhc2U1OCBmcm9tICcuL2Jhc2VzL2Jhc2U1OC5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlNjQgZnJvbSAnLi9iYXNlcy9iYXNlNjQuanMnO1xuaW1wb3J0ICogYXMgYmFzZTI1NmVtb2ppIGZyb20gJy4vYmFzZXMvYmFzZTI1NmVtb2ppLmpzJztcbmltcG9ydCAqIGFzIHNoYTIgZnJvbSAnLi9oYXNoZXMvc2hhMi5qcyc7XG5pbXBvcnQgKiBhcyBpZGVudGl0eSBmcm9tICcuL2hhc2hlcy9pZGVudGl0eS5qcyc7XG5pbXBvcnQgKiBhcyByYXcgZnJvbSAnLi9jb2RlY3MvcmF3LmpzJztcbmltcG9ydCAqIGFzIGpzb24gZnJvbSAnLi9jb2RlY3MvanNvbi5qcyc7XG5pbXBvcnQge1xuICBDSUQsXG4gIGhhc2hlcixcbiAgZGlnZXN0LFxuICB2YXJpbnQsXG4gIGJ5dGVzXG59IGZyb20gJy4vaW5kZXguanMnO1xuY29uc3QgYmFzZXMgPSB7XG4gIC4uLmlkZW50aXR5QmFzZSxcbiAgLi4uYmFzZTIsXG4gIC4uLmJhc2U4LFxuICAuLi5iYXNlMTAsXG4gIC4uLmJhc2UxNixcbiAgLi4uYmFzZTMyLFxuICAuLi5iYXNlMzYsXG4gIC4uLmJhc2U1OCxcbiAgLi4uYmFzZTY0LFxuICAuLi5iYXNlMjU2ZW1vamlcbn07XG5jb25zdCBoYXNoZXMgPSB7XG4gIC4uLnNoYTIsXG4gIC4uLmlkZW50aXR5XG59O1xuY29uc3QgY29kZWNzID0ge1xuICByYXcsXG4gIGpzb25cbn07XG5leHBvcnQge1xuICBDSUQsXG4gIGhhc2hlcixcbiAgZGlnZXN0LFxuICB2YXJpbnQsXG4gIGJ5dGVzLFxuICBoYXNoZXMsXG4gIGJhc2VzLFxuICBjb2RlY3Ncbn07Il0sIm5hbWVzIjpbImlkZW50aXR5QmFzZSIsImJhc2UyIiwiYmFzZTgiLCJiYXNlMTAiLCJiYXNlMTYiLCJiYXNlMzIiLCJiYXNlMzYiLCJiYXNlNTgiLCJiYXNlNjQiLCJiYXNlMjU2ZW1vamkiLCJzaGEyIiwiaWRlbnRpdHkiLCJyYXciLCJqc29uIiwiQ0lEIiwiaGFzaGVyIiwiZGlnZXN0IiwidmFyaW50IiwiYnl0ZXMiLCJiYXNlcyIsImhhc2hlcyIsImNvZGVjcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/basics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0);\nconst toHex = (d)=>d.reduce((hex, byte)=>hex + byte.toString(16).padStart(2, \"0\"), \"\");\nconst fromHex = (hex)=>{\n    const hexes = hex.match(/../g);\n    return hexes ? new Uint8Array(hexes.map((b)=>parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb)=>{\n    if (aa === bb) return true;\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for(let ii = 0; ii < aa.byteLength; ii++){\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n};\nconst coerce = (o)=>{\n    if (o instanceof Uint8Array && o.constructor.name === \"Uint8Array\") return o;\n    if (o instanceof ArrayBuffer) return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error(\"Unknown type, must be binary type\");\n};\nconst isBinary = (o)=>o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = (str)=>new TextEncoder().encode(str);\nconst toString = (b)=>new TextDecoder().decode(b);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2J5dGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsTUFBTUEsUUFBUSxJQUFJQyxXQUFXO0FBQzdCLE1BQU1DLFFBQVFDLENBQUFBLElBQUtBLEVBQUVDLE1BQU0sQ0FBQyxDQUFDQyxLQUFLQyxPQUFTRCxNQUFNQyxLQUFLQyxRQUFRLENBQUMsSUFBSUMsUUFBUSxDQUFDLEdBQUcsTUFBTTtBQUNyRixNQUFNQyxVQUFVSixDQUFBQTtJQUNkLE1BQU1LLFFBQVFMLElBQUlNLEtBQUssQ0FBQztJQUN4QixPQUFPRCxRQUFRLElBQUlULFdBQVdTLE1BQU1FLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBS0MsU0FBU0QsR0FBRyxRQUFRYjtBQUNuRTtBQUNBLE1BQU1lLFNBQVMsQ0FBQ0MsSUFBSUM7SUFDbEIsSUFBSUQsT0FBT0MsSUFDVCxPQUFPO0lBQ1QsSUFBSUQsR0FBR0UsVUFBVSxLQUFLRCxHQUFHQyxVQUFVLEVBQUU7UUFDbkMsT0FBTztJQUNUO0lBQ0EsSUFBSyxJQUFJQyxLQUFLLEdBQUdBLEtBQUtILEdBQUdFLFVBQVUsRUFBRUMsS0FBTTtRQUN6QyxJQUFJSCxFQUFFLENBQUNHLEdBQUcsS0FBS0YsRUFBRSxDQUFDRSxHQUFHLEVBQUU7WUFDckIsT0FBTztRQUNUO0lBQ0Y7SUFDQSxPQUFPO0FBQ1Q7QUFDQSxNQUFNQyxTQUFTQyxDQUFBQTtJQUNiLElBQUlBLGFBQWFwQixjQUFjb0IsRUFBRUMsV0FBVyxDQUFDQyxJQUFJLEtBQUssY0FDcEQsT0FBT0Y7SUFDVCxJQUFJQSxhQUFhRyxhQUNmLE9BQU8sSUFBSXZCLFdBQVdvQjtJQUN4QixJQUFJRyxZQUFZQyxNQUFNLENBQUNKLElBQUk7UUFDekIsT0FBTyxJQUFJcEIsV0FBV29CLEVBQUVLLE1BQU0sRUFBRUwsRUFBRU0sVUFBVSxFQUFFTixFQUFFSCxVQUFVO0lBQzVEO0lBQ0EsTUFBTSxJQUFJVSxNQUFNO0FBQ2xCO0FBQ0EsTUFBTUMsV0FBV1IsQ0FBQUEsSUFBS0EsYUFBYUcsZUFBZUEsWUFBWUMsTUFBTSxDQUFDSjtBQUNyRSxNQUFNUyxhQUFhQyxDQUFBQSxNQUFPLElBQUlDLGNBQWNDLE1BQU0sQ0FBQ0Y7QUFDbkQsTUFBTXhCLFdBQVdNLENBQUFBLElBQUssSUFBSXFCLGNBQWNDLE1BQU0sQ0FBQ3RCO0FBVTdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvYnl0ZXMuanM/ZDAzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlbXB0eSA9IG5ldyBVaW50OEFycmF5KDApO1xuY29uc3QgdG9IZXggPSBkID0+IGQucmVkdWNlKChoZXgsIGJ5dGUpID0+IGhleCArIGJ5dGUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJyksICcnKTtcbmNvbnN0IGZyb21IZXggPSBoZXggPT4ge1xuICBjb25zdCBoZXhlcyA9IGhleC5tYXRjaCgvLi4vZyk7XG4gIHJldHVybiBoZXhlcyA/IG5ldyBVaW50OEFycmF5KGhleGVzLm1hcChiID0+IHBhcnNlSW50KGIsIDE2KSkpIDogZW1wdHk7XG59O1xuY29uc3QgZXF1YWxzID0gKGFhLCBiYikgPT4ge1xuICBpZiAoYWEgPT09IGJiKVxuICAgIHJldHVybiB0cnVlO1xuICBpZiAoYWEuYnl0ZUxlbmd0aCAhPT0gYmIuYnl0ZUxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBmb3IgKGxldCBpaSA9IDA7IGlpIDwgYWEuYnl0ZUxlbmd0aDsgaWkrKykge1xuICAgIGlmIChhYVtpaV0gIT09IGJiW2lpXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn07XG5jb25zdCBjb2VyY2UgPSBvID0+IHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmIG8uY29uc3RydWN0b3IubmFtZSA9PT0gJ1VpbnQ4QXJyYXknKVxuICAgIHJldHVybiBvO1xuICBpZiAobyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKVxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShvKTtcbiAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhvKSkge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShvLmJ1ZmZlciwgby5ieXRlT2Zmc2V0LCBvLmJ5dGVMZW5ndGgpO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcignVW5rbm93biB0eXBlLCBtdXN0IGJlIGJpbmFyeSB0eXBlJyk7XG59O1xuY29uc3QgaXNCaW5hcnkgPSBvID0+IG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcobyk7XG5jb25zdCBmcm9tU3RyaW5nID0gc3RyID0+IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShzdHIpO1xuY29uc3QgdG9TdHJpbmcgPSBiID0+IG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShiKTtcbmV4cG9ydCB7XG4gIGVxdWFscyxcbiAgY29lcmNlLFxuICBpc0JpbmFyeSxcbiAgZnJvbUhleCxcbiAgdG9IZXgsXG4gIGZyb21TdHJpbmcsXG4gIHRvU3RyaW5nLFxuICBlbXB0eVxufTsiXSwibmFtZXMiOlsiZW1wdHkiLCJVaW50OEFycmF5IiwidG9IZXgiLCJkIiwicmVkdWNlIiwiaGV4IiwiYnl0ZSIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJmcm9tSGV4IiwiaGV4ZXMiLCJtYXRjaCIsIm1hcCIsImIiLCJwYXJzZUludCIsImVxdWFscyIsImFhIiwiYmIiLCJieXRlTGVuZ3RoIiwiaWkiLCJjb2VyY2UiLCJvIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJidWZmZXIiLCJieXRlT2Zmc2V0IiwiRXJyb3IiLCJpc0JpbmFyeSIsImZyb21TdHJpbmciLCJzdHIiLCJUZXh0RW5jb2RlciIsImVuY29kZSIsIlRleHREZWNvZGVyIiwiZGVjb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/cid.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/cid.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID)\n/* harmony export */ });\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/varint.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/digest.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base58.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base58.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base32.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bases/base32.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js\");\n\n\n\n\n\nclass CID {\n    constructor(version, code, multihash, bytes){\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        this.byteOffset = bytes.byteOffset;\n        this.byteLength = bytes.byteLength;\n        this.asCID = this;\n        this._baseCache = new Map();\n        Object.defineProperties(this, {\n            byteOffset: hidden,\n            byteLength: hidden,\n            code: readonly,\n            version: readonly,\n            multihash: readonly,\n            bytes: readonly,\n            _baseCache: hidden,\n            asCID: hidden\n        });\n    }\n    toV0() {\n        switch(this.version){\n            case 0:\n                {\n                    return this;\n                }\n            default:\n                {\n                    const { code, multihash } = this;\n                    if (code !== DAG_PB_CODE) {\n                        throw new Error(\"Cannot convert a non dag-pb CID to CIDv0\");\n                    }\n                    if (multihash.code !== SHA_256_CODE) {\n                        throw new Error(\"Cannot convert non sha2-256 multihash CID to CIDv0\");\n                    }\n                    return CID.createV0(multihash);\n                }\n        }\n    }\n    toV1() {\n        switch(this.version){\n            case 0:\n                {\n                    const { code, digest } = this.multihash;\n                    const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, digest);\n                    return CID.createV1(this.code, multihash);\n                }\n            case 1:\n                {\n                    return this;\n                }\n            default:\n                {\n                    throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n                }\n        }\n    }\n    equals(other) {\n        return other && this.code === other.code && this.version === other.version && _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.equals(this.multihash, other.multihash);\n    }\n    toString(base) {\n        const { bytes, version, _baseCache } = this;\n        switch(version){\n            case 0:\n                return toStringV0(bytes, _baseCache, base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.encoder);\n            default:\n                return toStringV1(bytes, _baseCache, base || _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.encoder);\n        }\n    }\n    toJSON() {\n        return {\n            code: this.code,\n            version: this.version,\n            hash: this.multihash.bytes\n        };\n    }\n    get [Symbol.toStringTag]() {\n        return \"CID\";\n    }\n    [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n        return \"CID(\" + this.toString() + \")\";\n    }\n    static isCID(value) {\n        deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n        return !!(value && (value[cidSymbol] || value.asCID === value));\n    }\n    get toBaseEncodedString() {\n        throw new Error(\"Deprecated, use .toString()\");\n    }\n    get codec() {\n        throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n    }\n    get buffer() {\n        throw new Error(\"Deprecated .buffer property, use .bytes to get Uint8Array instead\");\n    }\n    get multibaseName() {\n        throw new Error('\"multibaseName\" property is deprecated');\n    }\n    get prefix() {\n        throw new Error('\"prefix\" property is deprecated');\n    }\n    static asCID(value) {\n        if (value instanceof CID) {\n            return value;\n        } else if (value != null && value.asCID === value) {\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n        } else if (value != null && value[cidSymbol] === true) {\n            const { version, multihash, code } = value;\n            const digest = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.decode(multihash);\n            return CID.create(version, code, digest);\n        } else {\n            return null;\n        }\n    }\n    static create(version, code, digest) {\n        if (typeof code !== \"number\") {\n            throw new Error(\"String codecs are no longer supported\");\n        }\n        switch(version){\n            case 0:\n                {\n                    if (code !== DAG_PB_CODE) {\n                        throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                    } else {\n                        return new CID(version, code, digest, digest.bytes);\n                    }\n                }\n            case 1:\n                {\n                    const bytes = encodeCID(version, code, digest.bytes);\n                    return new CID(version, code, digest, bytes);\n                }\n            default:\n                {\n                    throw new Error(\"Invalid version\");\n                }\n        }\n    }\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length) {\n            throw new Error(\"Incorrect length\");\n        }\n        return cid;\n    }\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_4__.coerce)(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error(\"Incorrect length\");\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_1__.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n        return [\n            cid,\n            bytes.subarray(specs.size)\n        ];\n    }\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = ()=>{\n            const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_0__.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            version = 0;\n            offset = 0;\n        } else if (version === 1) {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next();\n        const digestSize = next();\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return {\n            version,\n            codec,\n            multihashCode,\n            digestSize,\n            multihashSize,\n            size\n        };\n    }\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        cid._baseCache.set(prefix, source);\n        return cid;\n    }\n}\nconst parseCIDtoBytes = (source, base)=>{\n    switch(source[0]){\n        case \"Q\":\n            {\n                const decoder = base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n                return [\n                    _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                    decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix}${source}`)\n                ];\n            }\n        case _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix:\n            {\n                const decoder = base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc;\n                return [\n                    _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix,\n                    decoder.decode(source)\n                ];\n            }\n        case _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.prefix:\n            {\n                const decoder = base || _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32;\n                return [\n                    _bases_base32_js__WEBPACK_IMPORTED_MODULE_3__.base32.prefix,\n                    decoder.decode(source)\n                ];\n            }\n        default:\n            {\n                if (base == null) {\n                    throw Error(\"To parse non base32 or base58btc encoded CID multibase decoder must be provided\");\n                }\n                return [\n                    source[0],\n                    base.decode(source)\n                ];\n            }\n    }\n};\nconst toStringV0 = (bytes, cache, base)=>{\n    const { prefix } = base;\n    if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_2__.base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    } else {\n        return cid;\n    }\n};\nconst toStringV1 = (bytes, cache, base)=>{\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    } else {\n        return cid;\n    }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash)=>{\n    const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodingLength(version);\n    const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodeTo(version, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_0__.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n};\nconst cidSymbol = Symbol.for(\"@ipld/js-cid/CID\");\nconst readonly = {\n    writable: false,\n    configurable: false,\n    enumerable: true\n};\nconst hidden = {\n    writable: false,\n    enumerable: false,\n    configurable: false\n};\nconst version = \"0.0.0-dev\";\nconst deprecate = (range, message)=>{\n    if (range.test(version)) {\n        console.warn(message);\n    } else {\n        throw new Error(message);\n    }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/cid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/codecs/json.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/codecs/json.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst name = \"json\";\nconst code = 512;\nconst encode = (node)=>textEncoder.encode(JSON.stringify(node));\nconst decode = (data)=>JSON.parse(textDecoder.decode(data));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2NvZGVjcy9qc29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxNQUFNQSxjQUFjLElBQUlDO0FBQ3hCLE1BQU1DLGNBQWMsSUFBSUM7QUFDakIsTUFBTUMsT0FBTyxPQUFPO0FBQ3BCLE1BQU1DLE9BQU8sSUFBSTtBQUNqQixNQUFNQyxTQUFTQyxDQUFBQSxPQUFRUCxZQUFZTSxNQUFNLENBQUNFLEtBQUtDLFNBQVMsQ0FBQ0YsT0FBTztBQUNoRSxNQUFNRyxTQUFTQyxDQUFBQSxPQUFRSCxLQUFLSSxLQUFLLENBQUNWLFlBQVlRLE1BQU0sQ0FBQ0MsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2NvZGVjcy9qc29uLmpzP2RlNmUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdGV4dEVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbmNvbnN0IHRleHREZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG5leHBvcnQgY29uc3QgbmFtZSA9ICdqc29uJztcbmV4cG9ydCBjb25zdCBjb2RlID0gNTEyO1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IG5vZGUgPT4gdGV4dEVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KG5vZGUpKTtcbmV4cG9ydCBjb25zdCBkZWNvZGUgPSBkYXRhID0+IEpTT04ucGFyc2UodGV4dERlY29kZXIuZGVjb2RlKGRhdGEpKTsiXSwibmFtZXMiOlsidGV4dEVuY29kZXIiLCJUZXh0RW5jb2RlciIsInRleHREZWNvZGVyIiwiVGV4dERlY29kZXIiLCJuYW1lIiwiY29kZSIsImVuY29kZSIsIm5vZGUiLCJKU09OIiwic3RyaW5naWZ5IiwiZGVjb2RlIiwiZGF0YSIsInBhcnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/codecs/json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/codecs/raw.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/codecs/raw.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js\");\n\nconst name = \"raw\";\nconst code = 85;\nconst encode = (node)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node);\nconst decode = (data)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2NvZGVjcy9yYXcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUM7QUFDOUIsTUFBTUMsT0FBTyxNQUFNO0FBQ25CLE1BQU1DLE9BQU8sR0FBRztBQUNoQixNQUFNQyxTQUFTQyxDQUFBQSxPQUFRSixpREFBTUEsQ0FBQ0ksTUFBTTtBQUNwQyxNQUFNQyxTQUFTQyxDQUFBQSxPQUFRTixpREFBTUEsQ0FBQ00sTUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2NvZGVjcy9yYXcuanM/YmQxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5leHBvcnQgY29uc3QgbmFtZSA9ICdyYXcnO1xuZXhwb3J0IGNvbnN0IGNvZGUgPSA4NTtcbmV4cG9ydCBjb25zdCBlbmNvZGUgPSBub2RlID0+IGNvZXJjZShub2RlKTtcbmV4cG9ydCBjb25zdCBkZWNvZGUgPSBkYXRhID0+IGNvZXJjZShkYXRhKTsiXSwibmFtZXMiOlsiY29lcmNlIiwibmFtZSIsImNvZGUiLCJlbmNvZGUiLCJub2RlIiwiZGVjb2RlIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/codecs/raw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/digest.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/digest.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/varint.js\");\n\n\nconst create = (code, digest)=>{\n    const size = digest.byteLength;\n    const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code);\n    const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0);\n    _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n};\nconst decode = (multihash)=>{\n    const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash);\n    const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes);\n    const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error(\"Incorrect length\");\n    }\n    return new Digest(code, size, digest, bytes);\n};\nconst equals = (a, b)=>{\n    if (a === b) {\n        return true;\n    } else {\n        return a.code === b.code && a.size === b.size && (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, b.bytes);\n    }\n};\nclass Digest {\n    constructor(code, size, digest, bytes){\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9kaWdlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR3FCO0FBQ2tCO0FBQ2hDLE1BQU1JLFNBQVMsQ0FBQ0MsTUFBTUM7SUFDM0IsTUFBTUMsT0FBT0QsT0FBT0UsVUFBVTtJQUM5QixNQUFNQyxhQUFhTixzREFBcUIsQ0FBQ0U7SUFDekMsTUFBTU0sZUFBZUYsYUFBYU4sc0RBQXFCLENBQUNJO0lBQ3hELE1BQU1LLFFBQVEsSUFBSUMsV0FBV0YsZUFBZUo7SUFDNUNKLGdEQUFlLENBQUNFLE1BQU1PLE9BQU87SUFDN0JULGdEQUFlLENBQUNJLE1BQU1LLE9BQU9IO0lBQzdCRyxNQUFNRyxHQUFHLENBQUNULFFBQVFLO0lBQ2xCLE9BQU8sSUFBSUssT0FBT1gsTUFBTUUsTUFBTUQsUUFBUU07QUFDeEMsRUFBRTtBQUNLLE1BQU1LLFNBQVNDLENBQUFBO0lBQ3BCLE1BQU1OLFFBQVFaLGlEQUFNQSxDQUFDa0I7SUFDckIsTUFBTSxDQUFDYixNQUFNSSxXQUFXLEdBQUdOLDhDQUFhLENBQUNTO0lBQ3pDLE1BQU0sQ0FBQ0wsTUFBTUksYUFBYSxHQUFHUiw4Q0FBYSxDQUFDUyxNQUFNTyxRQUFRLENBQUNWO0lBQzFELE1BQU1ILFNBQVNNLE1BQU1PLFFBQVEsQ0FBQ1YsYUFBYUU7SUFDM0MsSUFBSUwsT0FBT0UsVUFBVSxLQUFLRCxNQUFNO1FBQzlCLE1BQU0sSUFBSWEsTUFBTTtJQUNsQjtJQUNBLE9BQU8sSUFBSUosT0FBT1gsTUFBTUUsTUFBTUQsUUFBUU07QUFDeEMsRUFBRTtBQUNLLE1BQU1YLFNBQVMsQ0FBQ29CLEdBQUdDO0lBQ3hCLElBQUlELE1BQU1DLEdBQUc7UUFDWCxPQUFPO0lBQ1QsT0FBTztRQUNMLE9BQU9ELEVBQUVoQixJQUFJLEtBQUtpQixFQUFFakIsSUFBSSxJQUFJZ0IsRUFBRWQsSUFBSSxLQUFLZSxFQUFFZixJQUFJLElBQUlMLGlEQUFVQSxDQUFDbUIsRUFBRVQsS0FBSyxFQUFFVSxFQUFFVixLQUFLO0lBQzlFO0FBQ0YsRUFBRTtBQUNLLE1BQU1JO0lBQ1hPLFlBQVlsQixJQUFJLEVBQUVFLElBQUksRUFBRUQsTUFBTSxFQUFFTSxLQUFLLENBQUU7UUFDckMsSUFBSSxDQUFDUCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDRSxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDRCxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDTSxLQUFLLEdBQUdBO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9kaWdlc3QuanM/MzVmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjb2VyY2UsXG4gIGVxdWFscyBhcyBlcXVhbEJ5dGVzXG59IGZyb20gJy4uL2J5dGVzLmpzJztcbmltcG9ydCAqIGFzIHZhcmludCBmcm9tICcuLi92YXJpbnQuanMnO1xuZXhwb3J0IGNvbnN0IGNyZWF0ZSA9IChjb2RlLCBkaWdlc3QpID0+IHtcbiAgY29uc3Qgc2l6ZSA9IGRpZ2VzdC5ieXRlTGVuZ3RoO1xuICBjb25zdCBzaXplT2Zmc2V0ID0gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGNvZGUpO1xuICBjb25zdCBkaWdlc3RPZmZzZXQgPSBzaXplT2Zmc2V0ICsgdmFyaW50LmVuY29kaW5nTGVuZ3RoKHNpemUpO1xuICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGRpZ2VzdE9mZnNldCArIHNpemUpO1xuICB2YXJpbnQuZW5jb2RlVG8oY29kZSwgYnl0ZXMsIDApO1xuICB2YXJpbnQuZW5jb2RlVG8oc2l6ZSwgYnl0ZXMsIHNpemVPZmZzZXQpO1xuICBieXRlcy5zZXQoZGlnZXN0LCBkaWdlc3RPZmZzZXQpO1xuICByZXR1cm4gbmV3IERpZ2VzdChjb2RlLCBzaXplLCBkaWdlc3QsIGJ5dGVzKTtcbn07XG5leHBvcnQgY29uc3QgZGVjb2RlID0gbXVsdGloYXNoID0+IHtcbiAgY29uc3QgYnl0ZXMgPSBjb2VyY2UobXVsdGloYXNoKTtcbiAgY29uc3QgW2NvZGUsIHNpemVPZmZzZXRdID0gdmFyaW50LmRlY29kZShieXRlcyk7XG4gIGNvbnN0IFtzaXplLCBkaWdlc3RPZmZzZXRdID0gdmFyaW50LmRlY29kZShieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0KSk7XG4gIGNvbnN0IGRpZ2VzdCA9IGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQgKyBkaWdlc3RPZmZzZXQpO1xuICBpZiAoZGlnZXN0LmJ5dGVMZW5ndGggIT09IHNpemUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0luY29ycmVjdCBsZW5ndGgnKTtcbiAgfVxuICByZXR1cm4gbmV3IERpZ2VzdChjb2RlLCBzaXplLCBkaWdlc3QsIGJ5dGVzKTtcbn07XG5leHBvcnQgY29uc3QgZXF1YWxzID0gKGEsIGIpID0+IHtcbiAgaWYgKGEgPT09IGIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gYS5jb2RlID09PSBiLmNvZGUgJiYgYS5zaXplID09PSBiLnNpemUgJiYgZXF1YWxCeXRlcyhhLmJ5dGVzLCBiLmJ5dGVzKTtcbiAgfVxufTtcbmV4cG9ydCBjbGFzcyBEaWdlc3Qge1xuICBjb25zdHJ1Y3Rvcihjb2RlLCBzaXplLCBkaWdlc3QsIGJ5dGVzKSB7XG4gICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgIHRoaXMuZGlnZXN0ID0gZGlnZXN0O1xuICAgIHRoaXMuYnl0ZXMgPSBieXRlcztcbiAgfVxufSJdLCJuYW1lcyI6WyJjb2VyY2UiLCJlcXVhbHMiLCJlcXVhbEJ5dGVzIiwidmFyaW50IiwiY3JlYXRlIiwiY29kZSIsImRpZ2VzdCIsInNpemUiLCJieXRlTGVuZ3RoIiwic2l6ZU9mZnNldCIsImVuY29kaW5nTGVuZ3RoIiwiZGlnZXN0T2Zmc2V0IiwiYnl0ZXMiLCJVaW50OEFycmF5IiwiZW5jb2RlVG8iLCJzZXQiLCJEaWdlc3QiLCJkZWNvZGUiLCJtdWx0aWhhc2giLCJzdWJhcnJheSIsIkVycm9yIiwiYSIsImIiLCJjb25zdHJ1Y3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/digest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/hasher.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/hasher.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/digest.js\");\n\nconst from = ({ name, code, encode })=>new Hasher(name, code, encode);\nclass Hasher {\n    constructor(name, code, encode){\n        this.name = name;\n        this.code = code;\n        this.encode = encode;\n    }\n    digest(input) {\n        if (input instanceof Uint8Array) {\n            const result = this.encode(input);\n            return result instanceof Uint8Array ? _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, result) : result.then((digest)=>_digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, digest));\n        } else {\n            throw Error(\"Unknown type, must be binary type\");\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9oYXNoZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNDO0FBQy9CLE1BQU1DLE9BQU8sQ0FBQyxFQUFDQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFDLEdBQUssSUFBSUMsT0FBT0gsTUFBTUMsTUFBTUMsUUFBUTtBQUN0RSxNQUFNQztJQUNYQyxZQUFZSixJQUFJLEVBQUVDLElBQUksRUFBRUMsTUFBTSxDQUFFO1FBQzlCLElBQUksQ0FBQ0YsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsTUFBTSxHQUFHQTtJQUNoQjtJQUNBRyxPQUFPQyxLQUFLLEVBQUU7UUFDWixJQUFJQSxpQkFBaUJDLFlBQVk7WUFDL0IsTUFBTUMsU0FBUyxJQUFJLENBQUNOLE1BQU0sQ0FBQ0k7WUFDM0IsT0FBT0Usa0JBQWtCRCxhQUFhVCw4Q0FBYSxDQUFDLElBQUksQ0FBQ0csSUFBSSxFQUFFTyxVQUFVQSxPQUFPRSxJQUFJLENBQUNMLENBQUFBLFNBQVVQLDhDQUFhLENBQUMsSUFBSSxDQUFDRyxJQUFJLEVBQUVJO1FBQzFILE9BQU87WUFDTCxNQUFNTSxNQUFNO1FBQ2Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL2hhc2hlci5qcz83NGM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICcuL2RpZ2VzdC5qcyc7XG5leHBvcnQgY29uc3QgZnJvbSA9ICh7bmFtZSwgY29kZSwgZW5jb2RlfSkgPT4gbmV3IEhhc2hlcihuYW1lLCBjb2RlLCBlbmNvZGUpO1xuZXhwb3J0IGNsYXNzIEhhc2hlciB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIGNvZGUsIGVuY29kZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICB0aGlzLmVuY29kZSA9IGVuY29kZTtcbiAgfVxuICBkaWdlc3QoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmVuY29kZShpbnB1dCk7XG4gICAgICByZXR1cm4gcmVzdWx0IGluc3RhbmNlb2YgVWludDhBcnJheSA/IERpZ2VzdC5jcmVhdGUodGhpcy5jb2RlLCByZXN1bHQpIDogcmVzdWx0LnRoZW4oZGlnZXN0ID0+IERpZ2VzdC5jcmVhdGUodGhpcy5jb2RlLCBkaWdlc3QpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpO1xuICAgIH1cbiAgfVxufSJdLCJuYW1lcyI6WyJEaWdlc3QiLCJmcm9tIiwibmFtZSIsImNvZGUiLCJlbmNvZGUiLCJIYXNoZXIiLCJjb25zdHJ1Y3RvciIsImRpZ2VzdCIsImlucHV0IiwiVWludDhBcnJheSIsInJlc3VsdCIsImNyZWF0ZSIsInRoZW4iLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/identity.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/identity.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/digest.js\");\n\n\nconst code = 0;\nconst name = \"identity\";\nconst encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce;\nconst digest = (input)=>_digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input));\nconst identity = {\n    code,\n    name,\n    encode,\n    digest\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9pZGVudGl0eS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDQztBQUN0QyxNQUFNRSxPQUFPO0FBQ2IsTUFBTUMsT0FBTztBQUNiLE1BQU1DLFNBQVNKLDZDQUFNQTtBQUNyQixNQUFNSyxTQUFTQyxDQUFBQSxRQUFTTCw4Q0FBYSxDQUFDQyxNQUFNRSxPQUFPRTtBQUM1QyxNQUFNRSxXQUFXO0lBQ3RCTjtJQUNBQztJQUNBQztJQUNBQztBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3NyYy9oYXNoZXMvaWRlbnRpdHkuanM/NDM1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcyc7XG5pbXBvcnQgKiBhcyBEaWdlc3QgZnJvbSAnLi9kaWdlc3QuanMnO1xuY29uc3QgY29kZSA9IDA7XG5jb25zdCBuYW1lID0gJ2lkZW50aXR5JztcbmNvbnN0IGVuY29kZSA9IGNvZXJjZTtcbmNvbnN0IGRpZ2VzdCA9IGlucHV0ID0+IERpZ2VzdC5jcmVhdGUoY29kZSwgZW5jb2RlKGlucHV0KSk7XG5leHBvcnQgY29uc3QgaWRlbnRpdHkgPSB7XG4gIGNvZGUsXG4gIG5hbWUsXG4gIGVuY29kZSxcbiAgZGlnZXN0XG59OyJdLCJuYW1lcyI6WyJjb2VyY2UiLCJEaWdlc3QiLCJjb2RlIiwibmFtZSIsImVuY29kZSIsImRpZ2VzdCIsImlucHV0IiwiY3JlYXRlIiwiaWRlbnRpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/identity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/sha2.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/sha2.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hasher.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/hasher.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bytes.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js\");\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n    name: \"sha2-256\",\n    code: 18,\n    encode: (input)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash(\"sha256\").update(input).digest())\n});\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n    name: \"sha2-512\",\n    code: 19,\n    encode: (input)=>(0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash(\"sha512\").update(input).digest())\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2hhc2hlcy9zaGEyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTRCO0FBQ087QUFDRTtBQUM5QixNQUFNRyxTQUFTRixnREFBSUEsQ0FBQztJQUN6QkcsTUFBTTtJQUNOQyxNQUFNO0lBQ05DLFFBQVFDLENBQUFBLFFBQVNMLGlEQUFNQSxDQUFDRiw4Q0FBaUIsQ0FBQyxVQUFVUyxNQUFNLENBQUNGLE9BQU9HLE1BQU07QUFDMUUsR0FBRztBQUNJLE1BQU1DLFNBQVNWLGdEQUFJQSxDQUFDO0lBQ3pCRyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsUUFBUUMsQ0FBQUEsUUFBU0wsaURBQU1BLENBQUNGLDhDQUFpQixDQUFDLFVBQVVTLE1BQU0sQ0FBQ0YsT0FBT0csTUFBTTtBQUMxRSxHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvaGFzaGVzL3NoYTIuanM/MDhjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3J5cHRvIGZyb20gJ2NyeXB0byc7XG5pbXBvcnQgeyBmcm9tIH0gZnJvbSAnLi9oYXNoZXIuanMnO1xuaW1wb3J0IHsgY29lcmNlIH0gZnJvbSAnLi4vYnl0ZXMuanMnO1xuZXhwb3J0IGNvbnN0IHNoYTI1NiA9IGZyb20oe1xuICBuYW1lOiAnc2hhMi0yNTYnLFxuICBjb2RlOiAxOCxcbiAgZW5jb2RlOiBpbnB1dCA9PiBjb2VyY2UoY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShpbnB1dCkuZGlnZXN0KCkpXG59KTtcbmV4cG9ydCBjb25zdCBzaGE1MTIgPSBmcm9tKHtcbiAgbmFtZTogJ3NoYTItNTEyJyxcbiAgY29kZTogMTksXG4gIGVuY29kZTogaW5wdXQgPT4gY29lcmNlKGNyeXB0by5jcmVhdGVIYXNoKCdzaGE1MTInKS51cGRhdGUoaW5wdXQpLmRpZ2VzdCgpKVxufSk7Il0sIm5hbWVzIjpbImNyeXB0byIsImZyb20iLCJjb2VyY2UiLCJzaGEyNTYiLCJuYW1lIiwiY29kZSIsImVuY29kZSIsImlucHV0IiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRpZ2VzdCIsInNoYTUxMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/sha2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_0__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_1__)\n/* harmony export */ });\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cid.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/cid.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./varint.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/varint.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/bytes.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/hasher.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hashes/digest.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/hashes/digest.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBK0I7QUFDTztBQUNGO0FBQ1M7QUFDQTtBQU8zQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL2luZGV4LmpzPzJhZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ0lEIH0gZnJvbSAnLi9jaWQuanMnO1xuaW1wb3J0ICogYXMgdmFyaW50IGZyb20gJy4vdmFyaW50LmpzJztcbmltcG9ydCAqIGFzIGJ5dGVzIGZyb20gJy4vYnl0ZXMuanMnO1xuaW1wb3J0ICogYXMgaGFzaGVyIGZyb20gJy4vaGFzaGVzL2hhc2hlci5qcyc7XG5pbXBvcnQgKiBhcyBkaWdlc3QgZnJvbSAnLi9oYXNoZXMvZGlnZXN0LmpzJztcbmV4cG9ydCB7XG4gIENJRCxcbiAgaGFzaGVyLFxuICBkaWdlc3QsXG4gIHZhcmludCxcbiAgYnl0ZXNcbn07Il0sIm5hbWVzIjpbIkNJRCIsInZhcmludCIsImJ5dGVzIiwiaGFzaGVyIiwiZGlnZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/varint.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/varint.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/varint.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/vendor/varint.js\");\n\nconst decode = (data, offset = 0)=>{\n    const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset);\n    return [\n        code,\n        _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes\n    ];\n};\nconst encodeTo = (int, target, offset = 0)=>{\n    _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset);\n    return target;\n};\nconst encodingLength = (int)=>{\n    return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vc3JjL3ZhcmludC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlDO0FBQ2xDLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTUMsU0FBUyxDQUFDO0lBQ3JDLE1BQU1DLE9BQU9KLHlEQUFNQSxDQUFDQyxNQUFNLENBQUNDLE1BQU1DO0lBQ2pDLE9BQU87UUFDTEM7UUFDQUoseURBQU1BLENBQUNDLE1BQU0sQ0FBQ0ksS0FBSztLQUNwQjtBQUNILEVBQUU7QUFDSyxNQUFNQyxXQUFXLENBQUNDLEtBQUtDLFFBQVFMLFNBQVMsQ0FBQztJQUM5Q0gseURBQU1BLENBQUNTLE1BQU0sQ0FBQ0YsS0FBS0MsUUFBUUw7SUFDM0IsT0FBT0s7QUFDVCxFQUFFO0FBQ0ssTUFBTUUsaUJBQWlCSCxDQUFBQTtJQUM1QixPQUFPUCx5REFBTUEsQ0FBQ1UsY0FBYyxDQUFDSDtBQUMvQixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL2VzbS9zcmMvdmFyaW50LmpzPzA1MzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhcmludCBmcm9tICcuLi92ZW5kb3IvdmFyaW50LmpzJztcbmV4cG9ydCBjb25zdCBkZWNvZGUgPSAoZGF0YSwgb2Zmc2V0ID0gMCkgPT4ge1xuICBjb25zdCBjb2RlID0gdmFyaW50LmRlY29kZShkYXRhLCBvZmZzZXQpO1xuICByZXR1cm4gW1xuICAgIGNvZGUsXG4gICAgdmFyaW50LmRlY29kZS5ieXRlc1xuICBdO1xufTtcbmV4cG9ydCBjb25zdCBlbmNvZGVUbyA9IChpbnQsIHRhcmdldCwgb2Zmc2V0ID0gMCkgPT4ge1xuICB2YXJpbnQuZW5jb2RlKGludCwgdGFyZ2V0LCBvZmZzZXQpO1xuICByZXR1cm4gdGFyZ2V0O1xufTtcbmV4cG9ydCBjb25zdCBlbmNvZGluZ0xlbmd0aCA9IGludCA9PiB7XG4gIHJldHVybiB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoaW50KTtcbn07Il0sIm5hbWVzIjpbInZhcmludCIsImRlY29kZSIsImRhdGEiLCJvZmZzZXQiLCJjb2RlIiwiYnl0ZXMiLCJlbmNvZGVUbyIsImludCIsInRhcmdldCIsImVuY29kZSIsImVuY29kaW5nTGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/vendor/base-x.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/vendor/base-x.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError(\"Alphabet too long\");\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for(var j = 0; j < BASE_MAP.length; j++){\n        BASE_MAP[j] = 255;\n    }\n    for(var i = 0; i < ALPHABET.length; i++){\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + \" is ambiguous\");\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256);\n    var iFACTOR = Math.log(256) / Math.log(BASE);\n    function encode(source) {\n        if (source instanceof Uint8Array) ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        } else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError(\"Expected Uint8Array\");\n        }\n        if (source.length === 0) {\n            return \"\";\n        }\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while(pbegin !== pend && source[pbegin] === 0){\n            pbegin++;\n            zeroes++;\n        }\n        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n        var b58 = new Uint8Array(size);\n        while(pbegin !== pend){\n            var carry = source[pbegin];\n            var i = 0;\n            for(var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++){\n                carry += 256 * b58[it1] >>> 0;\n                b58[it1] = carry % BASE >>> 0;\n                carry = carry / BASE >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            pbegin++;\n        }\n        var it2 = size - length;\n        while(it2 !== size && b58[it2] === 0){\n            it2++;\n        }\n        var str = LEADER.repeat(zeroes);\n        for(; it2 < size; ++it2){\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    function decodeUnsafe(source) {\n        if (typeof source !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        if (source[psz] === \" \") {\n            return;\n        }\n        var zeroes = 0;\n        var length = 0;\n        while(source[psz] === LEADER){\n            zeroes++;\n            psz++;\n        }\n        var size = (source.length - psz) * FACTOR + 1 >>> 0;\n        var b256 = new Uint8Array(size);\n        while(source[psz]){\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for(var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++){\n                carry += BASE * b256[it3] >>> 0;\n                b256[it3] = carry % 256 >>> 0;\n                carry = carry / 256 >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            psz++;\n        }\n        if (source[psz] === \" \") {\n            return;\n        }\n        var it4 = size - length;\n        while(it4 !== size && b256[it4] === 0){\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while(it4 !== size){\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/vendor/base-x.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/vendor/varint.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/multiformats/esm/vendor/varint.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while(num >= INT){\n        out[offset++] = num & 255 | MSB;\n        num /= 128;\n    }\n    while(num & MSBALL){\n        out[offset++] = num & 255 | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            read.bytes = 0;\n            throw new RangeError(\"Could not decode varint\");\n        }\n        b = buf[counter++];\n        res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    }while (b >= MSB$1);\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function(value) {\n    return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9lc20vdmVuZG9yL3ZhcmludC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBSUEsV0FBV0M7QUFDZixJQUFJQyxNQUFNLEtBQUtDLE9BQU8sS0FBS0MsU0FBUyxDQUFDRCxNQUFNRSxNQUFNQyxLQUFLQyxHQUFHLENBQUMsR0FBRztBQUM3RCxTQUFTTixPQUFPTyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsTUFBTTtJQUM5QkQsTUFBTUEsT0FBTyxFQUFFO0lBQ2ZDLFNBQVNBLFVBQVU7SUFDbkIsSUFBSUMsWUFBWUQ7SUFDaEIsTUFBT0YsT0FBT0gsSUFBSztRQUNqQkksR0FBRyxDQUFDQyxTQUFTLEdBQUdGLE1BQU0sTUFBTU47UUFDNUJNLE9BQU87SUFDVDtJQUNBLE1BQU9BLE1BQU1KLE9BQVE7UUFDbkJLLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHRixNQUFNLE1BQU1OO1FBQzVCTSxTQUFTO0lBQ1g7SUFDQUMsR0FBRyxDQUFDQyxPQUFPLEdBQUdGLE1BQU07SUFDcEJQLE9BQU9XLEtBQUssR0FBR0YsU0FBU0MsWUFBWTtJQUNwQyxPQUFPRjtBQUNUO0FBQ0EsSUFBSUksU0FBU0M7QUFDYixJQUFJQyxRQUFRLEtBQUtDLFNBQVM7QUFDMUIsU0FBU0YsS0FBS0csR0FBRyxFQUFFUCxNQUFNO0lBQ3ZCLElBQUlRLE1BQU0sR0FBR1IsU0FBU0EsVUFBVSxHQUFHUyxRQUFRLEdBQUdDLFVBQVVWLFFBQVFXLEdBQUdDLElBQUlMLElBQUlNLE1BQU07SUFDakYsR0FBRztRQUNELElBQUlILFdBQVdFLEdBQUc7WUFDaEJSLEtBQUtGLEtBQUssR0FBRztZQUNiLE1BQU0sSUFBSVksV0FBVztRQUN2QjtRQUNBSCxJQUFJSixHQUFHLENBQUNHLFVBQVU7UUFDbEJGLE9BQU9DLFFBQVEsS0FBSyxDQUFDRSxJQUFJTCxNQUFLLEtBQU1HLFFBQVEsQ0FBQ0UsSUFBSUwsTUFBSyxJQUFLVixLQUFLQyxHQUFHLENBQUMsR0FBR1k7UUFDdkVBLFNBQVM7SUFDWCxRQUFTRSxLQUFLTixPQUFPO0lBQ3JCRCxLQUFLRixLQUFLLEdBQUdRLFVBQVVWO0lBQ3ZCLE9BQU9RO0FBQ1Q7QUFDQSxJQUFJTyxLQUFLbkIsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSW1CLEtBQUtwQixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJb0IsS0FBS3JCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUlxQixLQUFLdEIsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSXNCLEtBQUt2QixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJdUIsS0FBS3hCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUl3QixLQUFLekIsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFDckIsSUFBSXlCLEtBQUsxQixLQUFLQyxHQUFHLENBQUMsR0FBRztBQUNyQixJQUFJMEIsS0FBSzNCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHO0FBQ3JCLElBQUlnQixTQUFTLFNBQVVXLEtBQUs7SUFDMUIsT0FBT0EsUUFBUVQsS0FBSyxJQUFJUyxRQUFRUixLQUFLLElBQUlRLFFBQVFQLEtBQUssSUFBSU8sUUFBUU4sS0FBSyxJQUFJTSxRQUFRTCxLQUFLLElBQUlLLFFBQVFKLEtBQUssSUFBSUksUUFBUUgsS0FBSyxJQUFJRyxRQUFRRixLQUFLLElBQUlFLFFBQVFELEtBQUssSUFBSTtBQUNsSztBQUNBLElBQUlFLFNBQVM7SUFDWGxDLFFBQVFEO0lBQ1JhLFFBQVFBO0lBQ1J1QixnQkFBZ0JiO0FBQ2xCO0FBQ0EsSUFBSWMsZUFBZUY7QUFDbkIsaUVBQWVFLFlBQVlBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvZXNtL3ZlbmRvci92YXJpbnQuanM/NzI2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZW5jb2RlXzEgPSBlbmNvZGU7XG52YXIgTVNCID0gMTI4LCBSRVNUID0gMTI3LCBNU0JBTEwgPSB+UkVTVCwgSU5UID0gTWF0aC5wb3coMiwgMzEpO1xuZnVuY3Rpb24gZW5jb2RlKG51bSwgb3V0LCBvZmZzZXQpIHtcbiAgb3V0ID0gb3V0IHx8IFtdO1xuICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcbiAgdmFyIG9sZE9mZnNldCA9IG9mZnNldDtcbiAgd2hpbGUgKG51bSA+PSBJTlQpIHtcbiAgICBvdXRbb2Zmc2V0KytdID0gbnVtICYgMjU1IHwgTVNCO1xuICAgIG51bSAvPSAxMjg7XG4gIH1cbiAgd2hpbGUgKG51bSAmIE1TQkFMTCkge1xuICAgIG91dFtvZmZzZXQrK10gPSBudW0gJiAyNTUgfCBNU0I7XG4gICAgbnVtID4+Pj0gNztcbiAgfVxuICBvdXRbb2Zmc2V0XSA9IG51bSB8IDA7XG4gIGVuY29kZS5ieXRlcyA9IG9mZnNldCAtIG9sZE9mZnNldCArIDE7XG4gIHJldHVybiBvdXQ7XG59XG52YXIgZGVjb2RlID0gcmVhZDtcbnZhciBNU0IkMSA9IDEyOCwgUkVTVCQxID0gMTI3O1xuZnVuY3Rpb24gcmVhZChidWYsIG9mZnNldCkge1xuICB2YXIgcmVzID0gMCwgb2Zmc2V0ID0gb2Zmc2V0IHx8IDAsIHNoaWZ0ID0gMCwgY291bnRlciA9IG9mZnNldCwgYiwgbCA9IGJ1Zi5sZW5ndGg7XG4gIGRvIHtcbiAgICBpZiAoY291bnRlciA+PSBsKSB7XG4gICAgICByZWFkLmJ5dGVzID0gMDtcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdDb3VsZCBub3QgZGVjb2RlIHZhcmludCcpO1xuICAgIH1cbiAgICBiID0gYnVmW2NvdW50ZXIrK107XG4gICAgcmVzICs9IHNoaWZ0IDwgMjggPyAoYiAmIFJFU1QkMSkgPDwgc2hpZnQgOiAoYiAmIFJFU1QkMSkgKiBNYXRoLnBvdygyLCBzaGlmdCk7XG4gICAgc2hpZnQgKz0gNztcbiAgfSB3aGlsZSAoYiA+PSBNU0IkMSk7XG4gIHJlYWQuYnl0ZXMgPSBjb3VudGVyIC0gb2Zmc2V0O1xuICByZXR1cm4gcmVzO1xufVxudmFyIE4xID0gTWF0aC5wb3coMiwgNyk7XG52YXIgTjIgPSBNYXRoLnBvdygyLCAxNCk7XG52YXIgTjMgPSBNYXRoLnBvdygyLCAyMSk7XG52YXIgTjQgPSBNYXRoLnBvdygyLCAyOCk7XG52YXIgTjUgPSBNYXRoLnBvdygyLCAzNSk7XG52YXIgTjYgPSBNYXRoLnBvdygyLCA0Mik7XG52YXIgTjcgPSBNYXRoLnBvdygyLCA0OSk7XG52YXIgTjggPSBNYXRoLnBvdygyLCA1Nik7XG52YXIgTjkgPSBNYXRoLnBvdygyLCA2Myk7XG52YXIgbGVuZ3RoID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA8IE4xID8gMSA6IHZhbHVlIDwgTjIgPyAyIDogdmFsdWUgPCBOMyA/IDMgOiB2YWx1ZSA8IE40ID8gNCA6IHZhbHVlIDwgTjUgPyA1IDogdmFsdWUgPCBONiA/IDYgOiB2YWx1ZSA8IE43ID8gNyA6IHZhbHVlIDwgTjggPyA4IDogdmFsdWUgPCBOOSA/IDkgOiAxMDtcbn07XG52YXIgdmFyaW50ID0ge1xuICBlbmNvZGU6IGVuY29kZV8xLFxuICBkZWNvZGU6IGRlY29kZSxcbiAgZW5jb2RpbmdMZW5ndGg6IGxlbmd0aFxufTtcbnZhciBfYnJycF92YXJpbnQgPSB2YXJpbnQ7XG5leHBvcnQgZGVmYXVsdCBfYnJycF92YXJpbnQ7Il0sIm5hbWVzIjpbImVuY29kZV8xIiwiZW5jb2RlIiwiTVNCIiwiUkVTVCIsIk1TQkFMTCIsIklOVCIsIk1hdGgiLCJwb3ciLCJudW0iLCJvdXQiLCJvZmZzZXQiLCJvbGRPZmZzZXQiLCJieXRlcyIsImRlY29kZSIsInJlYWQiLCJNU0IkMSIsIlJFU1QkMSIsImJ1ZiIsInJlcyIsInNoaWZ0IiwiY291bnRlciIsImIiLCJsIiwibGVuZ3RoIiwiUmFuZ2VFcnJvciIsIk4xIiwiTjIiLCJOMyIsIk40IiwiTjUiLCJONiIsIk43IiwiTjgiLCJOOSIsInZhbHVlIiwidmFyaW50IiwiZW5jb2RpbmdMZW5ndGgiLCJfYnJycF92YXJpbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/vendor/varint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/alloc.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/alloc.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe)\n/* harmony export */ });\nfunction alloc(size = 0) {\n    if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n        return globalThis.Buffer.alloc(size);\n    }\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n        return globalThis.Buffer.allocUnsafe(size);\n    }\n    return new Uint8Array(size);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvYWxsb2MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTQSxNQUFNQyxPQUFPLENBQUM7SUFDNUIsSUFBSUMsV0FBV0MsTUFBTSxJQUFJLFFBQVFELFdBQVdDLE1BQU0sQ0FBQ0gsS0FBSyxJQUFJLE1BQU07UUFDaEUsT0FBT0UsV0FBV0MsTUFBTSxDQUFDSCxLQUFLLENBQUNDO0lBQ2pDO0lBQ0EsT0FBTyxJQUFJRyxXQUFXSDtBQUN4QjtBQUNPLFNBQVNJLFlBQVlKLE9BQU8sQ0FBQztJQUNsQyxJQUFJQyxXQUFXQyxNQUFNLElBQUksUUFBUUQsV0FBV0MsTUFBTSxDQUFDRSxXQUFXLElBQUksTUFBTTtRQUN0RSxPQUFPSCxXQUFXQyxNQUFNLENBQUNFLFdBQVcsQ0FBQ0o7SUFDdkM7SUFDQSxPQUFPLElBQUlHLFdBQVdIO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9hbGxvYy5qcz9jMGRkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBhbGxvYyhzaXplID0gMCkge1xuICBpZiAoZ2xvYmFsVGhpcy5CdWZmZXIgIT0gbnVsbCAmJiBnbG9iYWxUaGlzLkJ1ZmZlci5hbGxvYyAhPSBudWxsKSB7XG4gICAgcmV0dXJuIGdsb2JhbFRoaXMuQnVmZmVyLmFsbG9jKHNpemUpO1xuICB9XG4gIHJldHVybiBuZXcgVWludDhBcnJheShzaXplKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhbGxvY1Vuc2FmZShzaXplID0gMCkge1xuICBpZiAoZ2xvYmFsVGhpcy5CdWZmZXIgIT0gbnVsbCAmJiBnbG9iYWxUaGlzLkJ1ZmZlci5hbGxvY1Vuc2FmZSAhPSBudWxsKSB7XG4gICAgcmV0dXJuIGdsb2JhbFRoaXMuQnVmZmVyLmFsbG9jVW5zYWZlKHNpemUpO1xuICB9XG4gIHJldHVybiBuZXcgVWludDhBcnJheShzaXplKTtcbn0iXSwibmFtZXMiOlsiYWxsb2MiLCJzaXplIiwiZ2xvYmFsVGhpcyIsIkJ1ZmZlciIsIlVpbnQ4QXJyYXkiLCJhbGxvY1Vuc2FmZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/alloc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/compare.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/compare.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* binding */ compare)\n/* harmony export */ });\nfunction compare(a, b) {\n    for(let i = 0; i < a.byteLength; i++){\n        if (a[i] < b[i]) {\n            return -1;\n        }\n        if (a[i] > b[i]) {\n            return 1;\n        }\n    }\n    if (a.byteLength > b.byteLength) {\n        return 1;\n    }\n    if (a.byteLength < b.byteLength) {\n        return -1;\n    }\n    return 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvY29tcGFyZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsUUFBUUMsQ0FBQyxFQUFFQyxDQUFDO0lBQzFCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJRixFQUFFRyxVQUFVLEVBQUVELElBQUs7UUFDckMsSUFBSUYsQ0FBQyxDQUFDRSxFQUFFLEdBQUdELENBQUMsQ0FBQ0MsRUFBRSxFQUFFO1lBQ2YsT0FBTyxDQUFDO1FBQ1Y7UUFDQSxJQUFJRixDQUFDLENBQUNFLEVBQUUsR0FBR0QsQ0FBQyxDQUFDQyxFQUFFLEVBQUU7WUFDZixPQUFPO1FBQ1Q7SUFDRjtJQUNBLElBQUlGLEVBQUVHLFVBQVUsR0FBR0YsRUFBRUUsVUFBVSxFQUFFO1FBQy9CLE9BQU87SUFDVDtJQUNBLElBQUlILEVBQUVHLFVBQVUsR0FBR0YsRUFBRUUsVUFBVSxFQUFFO1FBQy9CLE9BQU8sQ0FBQztJQUNWO0lBQ0EsT0FBTztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9jb21wYXJlLmpzP2FiN2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmUoYSwgYikge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGEuYnl0ZUxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGFbaV0gPCBiW2ldKSB7XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIGlmIChhW2ldID4gYltpXSkge1xuICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICB9XG4gIGlmIChhLmJ5dGVMZW5ndGggPiBiLmJ5dGVMZW5ndGgpIHtcbiAgICByZXR1cm4gMTtcbiAgfVxuICBpZiAoYS5ieXRlTGVuZ3RoIDwgYi5ieXRlTGVuZ3RoKSB7XG4gICAgcmV0dXJuIC0xO1xuICB9XG4gIHJldHVybiAwO1xufSJdLCJuYW1lcyI6WyJjb21wYXJlIiwiYSIsImIiLCJpIiwiYnl0ZUxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/compare.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/concat.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/concat.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/alloc.js\");\n\nfunction concat(arrays, length) {\n    if (!length) {\n        length = arrays.reduce((acc, curr)=>acc + curr.length, 0);\n    }\n    const output = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(length);\n    let offset = 0;\n    for (const arr of arrays){\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvY29uY2F0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ2xDLFNBQVNDLE9BQU9DLE1BQU0sRUFBRUMsTUFBTTtJQUNuQyxJQUFJLENBQUNBLFFBQVE7UUFDWEEsU0FBU0QsT0FBT0UsTUFBTSxDQUFDLENBQUNDLEtBQUtDLE9BQVNELE1BQU1DLEtBQUtILE1BQU0sRUFBRTtJQUMzRDtJQUNBLE1BQU1JLFNBQVNQLHNEQUFXQSxDQUFDRztJQUMzQixJQUFJSyxTQUFTO0lBQ2IsS0FBSyxNQUFNQyxPQUFPUCxPQUFRO1FBQ3hCSyxPQUFPRyxHQUFHLENBQUNELEtBQUtEO1FBQ2hCQSxVQUFVQyxJQUFJTixNQUFNO0lBQ3RCO0lBQ0EsT0FBT0k7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvY29uY2F0LmpzP2M0YmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWxsb2NVbnNhZmUgfSBmcm9tICcuL2FsbG9jLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBjb25jYXQoYXJyYXlzLCBsZW5ndGgpIHtcbiAgaWYgKCFsZW5ndGgpIHtcbiAgICBsZW5ndGggPSBhcnJheXMucmVkdWNlKChhY2MsIGN1cnIpID0+IGFjYyArIGN1cnIubGVuZ3RoLCAwKTtcbiAgfVxuICBjb25zdCBvdXRwdXQgPSBhbGxvY1Vuc2FmZShsZW5ndGgpO1xuICBsZXQgb2Zmc2V0ID0gMDtcbiAgZm9yIChjb25zdCBhcnIgb2YgYXJyYXlzKSB7XG4gICAgb3V0cHV0LnNldChhcnIsIG9mZnNldCk7XG4gICAgb2Zmc2V0ICs9IGFyci5sZW5ndGg7XG4gIH1cbiAgcmV0dXJuIG91dHB1dDtcbn0iXSwibmFtZXMiOlsiYWxsb2NVbnNhZmUiLCJjb25jYXQiLCJhcnJheXMiLCJsZW5ndGgiLCJyZWR1Y2UiLCJhY2MiLCJjdXJyIiwib3V0cHV0Iiwib2Zmc2V0IiwiYXJyIiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/concat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/equals.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/equals.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for(let i = 0; i < a.byteLength; i++){\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvZXF1YWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxPQUFPQyxDQUFDLEVBQUVDLENBQUM7SUFDekIsSUFBSUQsTUFBTUMsR0FBRztRQUNYLE9BQU87SUFDVDtJQUNBLElBQUlELEVBQUVFLFVBQVUsS0FBS0QsRUFBRUMsVUFBVSxFQUFFO1FBQ2pDLE9BQU87SUFDVDtJQUNBLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSCxFQUFFRSxVQUFVLEVBQUVDLElBQUs7UUFDckMsSUFBSUgsQ0FBQyxDQUFDRyxFQUFFLEtBQUtGLENBQUMsQ0FBQ0UsRUFBRSxFQUFFO1lBQ2pCLE9BQU87UUFDVDtJQUNGO0lBQ0EsT0FBTztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9lcXVhbHMuanM/MTlhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAoYS5ieXRlTGVuZ3RoICE9PSBiLmJ5dGVMZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgIGlmIChhW2ldICE9PSBiW2ldKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufSJdLCJuYW1lcyI6WyJlcXVhbHMiLCJhIiwiYiIsImJ5dGVMZW5ndGgiLCJpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/equals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/from-string.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/from-string.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromString: () => (/* binding */ fromString)\n/* harmony export */ });\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/util/bases.js\");\n\nfunction fromString(string, encoding = \"utf8\") {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][encoding];\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === \"utf8\" || encoding === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(string, \"utf8\");\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvZnJvbS1zdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsU0FBU0MsV0FBV0MsTUFBTSxFQUFFQyxXQUFXLE1BQU07SUFDbEQsTUFBTUMsT0FBT0osc0RBQUssQ0FBQ0csU0FBUztJQUM1QixJQUFJLENBQUNDLE1BQU07UUFDVCxNQUFNLElBQUlDLE1BQU0sQ0FBQyxzQkFBc0IsRUFBR0YsU0FBVSxDQUFDLENBQUM7SUFDeEQ7SUFDQSxJQUFJLENBQUNBLGFBQWEsVUFBVUEsYUFBYSxPQUFNLEtBQU1HLFdBQVdDLE1BQU0sSUFBSSxRQUFRRCxXQUFXQyxNQUFNLENBQUNDLElBQUksSUFBSSxNQUFNO1FBQ2hILE9BQU9GLFdBQVdDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDTixRQUFRO0lBQ3hDO0lBQ0EsT0FBT0UsS0FBS0ssT0FBTyxDQUFDQyxNQUFNLENBQUMsQ0FBQyxFQUFHTixLQUFLTyxNQUFNLENBQUUsRUFBR1QsT0FBUSxDQUFDO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvb2Ytb2Ytd29yay1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC91dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZXNtL3NyYy9mcm9tLXN0cmluZy5qcz80NTlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiYXNlcyBmcm9tICcuL3V0aWwvYmFzZXMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21TdHJpbmcoc3RyaW5nLCBlbmNvZGluZyA9ICd1dGY4Jykge1xuICBjb25zdCBiYXNlID0gYmFzZXNbZW5jb2RpbmddO1xuICBpZiAoIWJhc2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY29kaW5nIFwiJHsgZW5jb2RpbmcgfVwiYCk7XG4gIH1cbiAgaWYgKChlbmNvZGluZyA9PT0gJ3V0ZjgnIHx8IGVuY29kaW5nID09PSAndXRmLTgnKSAmJiBnbG9iYWxUaGlzLkJ1ZmZlciAhPSBudWxsICYmIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20gIT0gbnVsbCkge1xuICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tKHN0cmluZywgJ3V0ZjgnKTtcbiAgfVxuICByZXR1cm4gYmFzZS5kZWNvZGVyLmRlY29kZShgJHsgYmFzZS5wcmVmaXggfSR7IHN0cmluZyB9YCk7XG59Il0sIm5hbWVzIjpbImJhc2VzIiwiZnJvbVN0cmluZyIsInN0cmluZyIsImVuY29kaW5nIiwiYmFzZSIsIkVycm9yIiwiZ2xvYmFsVGhpcyIsIkJ1ZmZlciIsImZyb20iLCJkZWNvZGVyIiwiZGVjb2RlIiwicHJlZml4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/from-string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* reexport safe */ _compare_js__WEBPACK_IMPORTED_MODULE_0__.compare),\n/* harmony export */   concat: () => (/* reexport safe */ _concat_js__WEBPACK_IMPORTED_MODULE_1__.concat),\n/* harmony export */   equals: () => (/* reexport safe */ _equals_js__WEBPACK_IMPORTED_MODULE_2__.equals),\n/* harmony export */   fromString: () => (/* reexport safe */ _from_string_js__WEBPACK_IMPORTED_MODULE_3__.fromString),\n/* harmony export */   toString: () => (/* reexport safe */ _to_string_js__WEBPACK_IMPORTED_MODULE_4__.toString),\n/* harmony export */   xor: () => (/* reexport safe */ _xor_js__WEBPACK_IMPORTED_MODULE_5__.xor)\n/* harmony export */ });\n/* harmony import */ var _compare_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compare.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/compare.js\");\n/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./concat.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/concat.js\");\n/* harmony import */ var _equals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./equals.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/equals.js\");\n/* harmony import */ var _from_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./from-string.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/from-string.js\");\n/* harmony import */ var _to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./to-string.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/to-string.js\");\n/* harmony import */ var _xor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./xor.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/xor.js\");\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ0Y7QUFDQTtBQUNTO0FBQ0o7QUFDWDtBQVE3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvaW5kZXguanM/MGE4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21wYXJlIH0gZnJvbSAnLi9jb21wYXJlLmpzJztcbmltcG9ydCB7IGNvbmNhdCB9IGZyb20gJy4vY29uY2F0LmpzJztcbmltcG9ydCB7IGVxdWFscyB9IGZyb20gJy4vZXF1YWxzLmpzJztcbmltcG9ydCB7IGZyb21TdHJpbmcgfSBmcm9tICcuL2Zyb20tc3RyaW5nLmpzJztcbmltcG9ydCB7IHRvU3RyaW5nIH0gZnJvbSAnLi90by1zdHJpbmcuanMnO1xuaW1wb3J0IHsgeG9yIH0gZnJvbSAnLi94b3IuanMnO1xuZXhwb3J0IHtcbiAgY29tcGFyZSxcbiAgY29uY2F0LFxuICBlcXVhbHMsXG4gIGZyb21TdHJpbmcsXG4gIHRvU3RyaW5nLFxuICB4b3Jcbn07Il0sIm5hbWVzIjpbImNvbXBhcmUiLCJjb25jYXQiLCJlcXVhbHMiLCJmcm9tU3RyaW5nIiwidG9TdHJpbmciLCJ4b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/to-string.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/to-string.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/util/bases.js\");\n\nfunction toString(array, encoding = \"utf8\") {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][encoding];\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === \"utf8\" || encoding === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString(\"utf8\");\n    }\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvdG8tc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQzdCLFNBQVNDLFNBQVNDLEtBQUssRUFBRUMsV0FBVyxNQUFNO0lBQy9DLE1BQU1DLE9BQU9KLHNEQUFLLENBQUNHLFNBQVM7SUFDNUIsSUFBSSxDQUFDQyxNQUFNO1FBQ1QsTUFBTSxJQUFJQyxNQUFNLENBQUMsc0JBQXNCLEVBQUdGLFNBQVUsQ0FBQyxDQUFDO0lBQ3hEO0lBQ0EsSUFBSSxDQUFDQSxhQUFhLFVBQVVBLGFBQWEsT0FBTSxLQUFNRyxXQUFXQyxNQUFNLElBQUksUUFBUUQsV0FBV0MsTUFBTSxDQUFDQyxJQUFJLElBQUksTUFBTTtRQUNoSCxPQUFPRixXQUFXQyxNQUFNLENBQUNDLElBQUksQ0FBQ04sTUFBTU8sTUFBTSxFQUFFUCxNQUFNUSxVQUFVLEVBQUVSLE1BQU1TLFVBQVUsRUFBRVYsUUFBUSxDQUFDO0lBQzNGO0lBQ0EsT0FBT0csS0FBS1EsT0FBTyxDQUFDQyxNQUFNLENBQUNYLE9BQU9ZLFNBQVMsQ0FBQztBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb29mLW9mLXdvcmstcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvdG8tc3RyaW5nLmpzP2I5OTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhc2VzIGZyb20gJy4vdXRpbC9iYXNlcy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcoYXJyYXksIGVuY29kaW5nID0gJ3V0ZjgnKSB7XG4gIGNvbnN0IGJhc2UgPSBiYXNlc1tlbmNvZGluZ107XG4gIGlmICghYmFzZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZW5jb2RpbmcgXCIkeyBlbmNvZGluZyB9XCJgKTtcbiAgfVxuICBpZiAoKGVuY29kaW5nID09PSAndXRmOCcgfHwgZW5jb2RpbmcgPT09ICd1dGYtOCcpICYmIGdsb2JhbFRoaXMuQnVmZmVyICE9IG51bGwgJiYgZ2xvYmFsVGhpcy5CdWZmZXIuZnJvbSAhPSBudWxsKSB7XG4gICAgcmV0dXJuIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oYXJyYXkuYnVmZmVyLCBhcnJheS5ieXRlT2Zmc2V0LCBhcnJheS5ieXRlTGVuZ3RoKS50b1N0cmluZygndXRmOCcpO1xuICB9XG4gIHJldHVybiBiYXNlLmVuY29kZXIuZW5jb2RlKGFycmF5KS5zdWJzdHJpbmcoMSk7XG59Il0sIm5hbWVzIjpbImJhc2VzIiwidG9TdHJpbmciLCJhcnJheSIsImVuY29kaW5nIiwiYmFzZSIsIkVycm9yIiwiZ2xvYmFsVGhpcyIsIkJ1ZmZlciIsImZyb20iLCJidWZmZXIiLCJieXRlT2Zmc2V0IiwiYnl0ZUxlbmd0aCIsImVuY29kZXIiLCJlbmNvZGUiLCJzdWJzdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/to-string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/util/bases.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/util/bases.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/basics */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/multiformats/esm/src/basics.js\");\n/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../alloc.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/alloc.js\");\n\n\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec(\"utf8\", \"u\", (buf)=>{\n    const decoder = new TextDecoder(\"utf8\");\n    return \"u\" + decoder.decode(buf);\n}, (str)=>{\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec(\"ascii\", \"a\", (buf)=>{\n    let string = \"a\";\n    for(let i = 0; i < buf.length; i++){\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str)=>{\n    str = str.substring(1);\n    const buf = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_1__.allocUnsafe)(str.length);\n    for(let i = 0; i < str.length; i++){\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    \"utf-8\": string,\n    hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,\n    latin1: ascii,\n    ascii: ascii,\n    binary: ascii,\n    ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMvdXRpbC9iYXNlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFDRjtBQUMxQyxTQUFTRSxZQUFZQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxNQUFNO0lBQy9DLE9BQU87UUFDTEg7UUFDQUM7UUFDQUcsU0FBUztZQUNQSjtZQUNBQztZQUNBQztRQUNGO1FBQ0FHLFNBQVM7WUFBRUY7UUFBTztJQUNwQjtBQUNGO0FBQ0EsTUFBTUcsU0FBU1AsWUFBWSxRQUFRLEtBQUtRLENBQUFBO0lBQ3RDLE1BQU1GLFVBQVUsSUFBSUcsWUFBWTtJQUNoQyxPQUFPLE1BQU1ILFFBQVFGLE1BQU0sQ0FBQ0k7QUFDOUIsR0FBR0UsQ0FBQUE7SUFDRCxNQUFNTCxVQUFVLElBQUlNO0lBQ3BCLE9BQU9OLFFBQVFGLE1BQU0sQ0FBQ08sSUFBSUUsU0FBUyxDQUFDO0FBQ3RDO0FBQ0EsTUFBTUMsUUFBUWIsWUFBWSxTQUFTLEtBQUtRLENBQUFBO0lBQ3RDLElBQUlELFNBQVM7SUFDYixJQUFLLElBQUlPLElBQUksR0FBR0EsSUFBSU4sSUFBSU8sTUFBTSxFQUFFRCxJQUFLO1FBQ25DUCxVQUFVUyxPQUFPQyxZQUFZLENBQUNULEdBQUcsQ0FBQ00sRUFBRTtJQUN0QztJQUNBLE9BQU9QO0FBQ1QsR0FBR0csQ0FBQUE7SUFDREEsTUFBTUEsSUFBSUUsU0FBUyxDQUFDO0lBQ3BCLE1BQU1KLE1BQU1ULHNEQUFXQSxDQUFDVyxJQUFJSyxNQUFNO0lBQ2xDLElBQUssSUFBSUQsSUFBSSxHQUFHQSxJQUFJSixJQUFJSyxNQUFNLEVBQUVELElBQUs7UUFDbkNOLEdBQUcsQ0FBQ00sRUFBRSxHQUFHSixJQUFJUSxVQUFVLENBQUNKO0lBQzFCO0lBQ0EsT0FBT047QUFDVDtBQUNBLE1BQU1XLFFBQVE7SUFDWkMsTUFBTWI7SUFDTixTQUFTQTtJQUNUYyxLQUFLdkIsc0RBQUtBLENBQUN3QixNQUFNO0lBQ2pCQyxRQUFRVjtJQUNSQSxPQUFPQTtJQUNQVyxRQUFRWDtJQUNSLEdBQUdmLHNEQUFLO0FBQ1Y7QUFDQSxpRUFBZXFCLEtBQUtBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9lc20vc3JjL3V0aWwvYmFzZXMuanM/YTM3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlcyB9IGZyb20gJ211bHRpZm9ybWF0cy9iYXNpY3MnO1xuaW1wb3J0IHsgYWxsb2NVbnNhZmUgfSBmcm9tICcuLi9hbGxvYy5qcyc7XG5mdW5jdGlvbiBjcmVhdGVDb2RlYyhuYW1lLCBwcmVmaXgsIGVuY29kZSwgZGVjb2RlKSB7XG4gIHJldHVybiB7XG4gICAgbmFtZSxcbiAgICBwcmVmaXgsXG4gICAgZW5jb2Rlcjoge1xuICAgICAgbmFtZSxcbiAgICAgIHByZWZpeCxcbiAgICAgIGVuY29kZVxuICAgIH0sXG4gICAgZGVjb2RlcjogeyBkZWNvZGUgfVxuICB9O1xufVxuY29uc3Qgc3RyaW5nID0gY3JlYXRlQ29kZWMoJ3V0ZjgnLCAndScsIGJ1ZiA9PiB7XG4gIGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoJ3V0ZjgnKTtcbiAgcmV0dXJuICd1JyArIGRlY29kZXIuZGVjb2RlKGJ1Zik7XG59LCBzdHIgPT4ge1xuICBjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gIHJldHVybiBlbmNvZGVyLmVuY29kZShzdHIuc3Vic3RyaW5nKDEpKTtcbn0pO1xuY29uc3QgYXNjaWkgPSBjcmVhdGVDb2RlYygnYXNjaWknLCAnYScsIGJ1ZiA9PiB7XG4gIGxldCBzdHJpbmcgPSAnYSc7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYnVmLmxlbmd0aDsgaSsrKSB7XG4gICAgc3RyaW5nICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnVmW2ldKTtcbiAgfVxuICByZXR1cm4gc3RyaW5nO1xufSwgc3RyID0+IHtcbiAgc3RyID0gc3RyLnN1YnN0cmluZygxKTtcbiAgY29uc3QgYnVmID0gYWxsb2NVbnNhZmUoc3RyLmxlbmd0aCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgYnVmW2ldID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gIH1cbiAgcmV0dXJuIGJ1Zjtcbn0pO1xuY29uc3QgQkFTRVMgPSB7XG4gIHV0Zjg6IHN0cmluZyxcbiAgJ3V0Zi04Jzogc3RyaW5nLFxuICBoZXg6IGJhc2VzLmJhc2UxNixcbiAgbGF0aW4xOiBhc2NpaSxcbiAgYXNjaWk6IGFzY2lpLFxuICBiaW5hcnk6IGFzY2lpLFxuICAuLi5iYXNlc1xufTtcbmV4cG9ydCBkZWZhdWx0IEJBU0VTOyJdLCJuYW1lcyI6WyJiYXNlcyIsImFsbG9jVW5zYWZlIiwiY3JlYXRlQ29kZWMiLCJuYW1lIiwicHJlZml4IiwiZW5jb2RlIiwiZGVjb2RlIiwiZW5jb2RlciIsImRlY29kZXIiLCJzdHJpbmciLCJidWYiLCJUZXh0RGVjb2RlciIsInN0ciIsIlRleHRFbmNvZGVyIiwic3Vic3RyaW5nIiwiYXNjaWkiLCJpIiwibGVuZ3RoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiY2hhckNvZGVBdCIsIkJBU0VTIiwidXRmOCIsImhleCIsImJhc2UxNiIsImxhdGluMSIsImJpbmFyeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/util/bases.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/xor.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/xor.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   xor: () => (/* binding */ xor)\n/* harmony export */ });\n/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ \"(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/alloc.js\");\n\nfunction xor(a, b) {\n    if (a.length !== b.length) {\n        throw new Error(\"Inputs should have the same length\");\n    }\n    const result = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(a.length);\n    for(let i = 0; i < a.length; i++){\n        result[i] = a[i] ^ b[i];\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2VzbS9zcmMveG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ2xDLFNBQVNDLElBQUlDLENBQUMsRUFBRUMsQ0FBQztJQUN0QixJQUFJRCxFQUFFRSxNQUFNLEtBQUtELEVBQUVDLE1BQU0sRUFBRTtRQUN6QixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFDQSxNQUFNQyxTQUFTTixzREFBV0EsQ0FBQ0UsRUFBRUUsTUFBTTtJQUNuQyxJQUFLLElBQUlHLElBQUksR0FBR0EsSUFBSUwsRUFBRUUsTUFBTSxFQUFFRyxJQUFLO1FBQ2pDRCxNQUFNLENBQUNDLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFLEdBQUdKLENBQUMsQ0FBQ0ksRUFBRTtJQUN6QjtJQUNBLE9BQU9EO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9vZi1vZi13b3JrLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9lc20vc3JjL3hvci5qcz8xMTYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFsbG9jVW5zYWZlIH0gZnJvbSAnLi9hbGxvYy5qcyc7XG5leHBvcnQgZnVuY3Rpb24geG9yKGEsIGIpIHtcbiAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW5wdXRzIHNob3VsZCBoYXZlIHRoZSBzYW1lIGxlbmd0aCcpO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IGFsbG9jVW5zYWZlKGEubGVuZ3RoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzdWx0W2ldID0gYVtpXSBeIGJbaV07XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn0iXSwibmFtZXMiOlsiYWxsb2NVbnNhZmUiLCJ4b3IiLCJhIiwiYiIsImxlbmd0aCIsIkVycm9yIiwicmVzdWx0IiwiaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/node_modules/uint8arrays/esm/src/xor.js\n");

/***/ })

};
;